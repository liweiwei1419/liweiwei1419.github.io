(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{575:function(e,t,r){"use strict";r.r(t);var n=r(1),l=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("动态规划的两个重要思想：")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("穷举")]),e._v("：动态规划没有为问题设计专门的算法，它考虑了完成一件事情所有的情况；")]),e._v(" "),t("li",[t("strong",[e._v("空间换时间")]),e._v("：记住了每一步求解的结果。")])]),e._v(" "),t("p",[e._v("动态规划的两个思考方向：")]),e._v(" "),t("ul",[t("li",[e._v("「自顶向下」记忆化递归：")]),e._v(" "),t("li",[e._v("「自底向上」递推。")])]),e._v(" "),t("p",[e._v("可以使用动态规划的解决问题需要具备的三个条件：")]),e._v(" "),t("ul",[t("li",[e._v("重复子问题：在计算的过程中，有一些问题会重复计算，必须记住结果。没有重复子问题的话，可以「分而治之」求解；")]),e._v(" "),t("li",[e._v("最优子结构：广义上说是「大规模问题的解与小规模问题的解的关系」，不一定需要在求最优解的场景下；")]),e._v(" "),t("li",[t("strong",[e._v("无后效性")]),e._v("：特别重要，无后效性是设计状态非常重要的思考角度。「无后效性」即当前阶段一旦计算出结果，后面阶段的计算不会修改前面阶段计算出的状态值。整个求解的过程构成「有向无环图」。")])]),e._v(" "),t("p",[e._v("动态规划的两个重要概念：")]),e._v(" "),t("ul",[t("li",[e._v("状态：记录了解决问题到了哪一步，通常用若干个变量表示；")]),e._v(" "),t("li",[e._v("状态转移方程：表达了大规模问题的解与小规模问题的解的关系。")])]),e._v(" "),t("p",[e._v("问题分类参考：")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/u/feeenedumplings/",target:"_blank",rel:"noopener noreferrer"}},[e._v("FennelDumplings"),t("OutboundLink")],1),e._v("："),t("a",{attrs:{href:"https://leetcode-cn.com/circle/article/NfHhXD/",target:"_blank",rel:"noopener noreferrer"}},[e._v("力扣上的 DP 问题分类汇总"),t("OutboundLink")],1),e._v("；")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/u/richenyunqi/",target:"_blank",rel:"noopener noreferrer"}},[e._v("日沉云起!"),t("OutboundLink")],1),e._v("："),t("a",{attrs:{href:"http://leetcode-cn.com/circle/article/2Xxlw3/",target:"_blank",rel:"noopener noreferrer"}},[e._v("leetcode 动态规划题目总结"),t("OutboundLink")],1),e._v("。")])])])}),[],!1,null,null,null);t.default=l.exports}}]);