(window.webpackJsonp=window.webpackJsonp||[]).push([[582],{634:function(t,v,_){"use strict";_.r(v);var s=_(1),o=Object(s.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("div",{staticClass:"custom-block info"},[v("p",{staticClass:"custom-block-title"},[t._v("温馨提示")]),t._v(" "),v("p",[t._v("本节的重点内容是：把区间分成两个部分，去掉一定不存在目标元素的区间，只在有可能存在目标元素的区间里查找。这样当 "),v("code",[t._v("left")]),t._v(" 与 "),v("code",[t._v("right")]),t._v(" 重合的时候，我们才可以确定找到了目标元素（或者确定搜索区间里不存在目标元素）。")])]),t._v(" "),v("p",[t._v("上一节我们讲解了「力扣」上一类二分查找问题的共同特点，这一节我们讲解针对这一类问题的解法。第 3 节和第 4 节是重点，但 "),v("strong",[t._v("绝对不是难点")]),t._v("，刚开始可能会不习惯，题目做多了，就慢慢理解了。")]),t._v(" "),v("p",[t._v("我们再复习一下：")]),t._v(" "),v("div",{staticClass:"custom-block info"},[v("p",{staticClass:"custom-block-title"},[t._v("这些问题的共同特点（十分重要，请阅读 10 遍）")]),t._v(" "),v("p",[t._v("如果当前猜的数 "),v("code",[t._v("nums[mid]")]),t._v(" 符合某个性质，我们还不能确定它一定就是我们要找的元素，必须向左边（或者向右边）继续看下去，才能确定 "),v("code",[t._v("nums[mid]")]),t._v(" 是不是我们要找的元素。")])]),t._v(" "),v("p",[t._v("解决这一类问题可以「把区间分成两个部分」。这样的「二分查找」叫做「两边夹」或者叫「排除法」，思路其实很简单：")]),t._v(" "),v("div",{staticClass:"custom-block info"},[v("p",{staticClass:"custom-block-title"},[t._v("重点")]),t._v(" "),v("p",[t._v("每一次排除掉一定不存在问题答案的区间，把 "),v("code",[t._v("left")]),t._v(" 和 "),v("code",[t._v("right")]),t._v(" 根据 "),v("code",[t._v("mid")]),t._v(" 看到的值逐渐向中间靠拢，直到它们重合。")])]),t._v(" "),v("p",[t._v("如下图所示：")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gxavzkufbmg30u00gwwjo.gif",alt:"二分查找动画",loading:"lazy"}})]),t._v(" "),v("p",[t._v("根据这种思路，我们就可以肯定：")]),t._v(" "),v("ul",[v("li",[t._v("找到了问题的答案（"),v("code",[t._v("left")]),t._v(" 和 "),v("code",[t._v("right")]),t._v(" 重合的位置就是问题的答案）；")]),t._v(" "),v("li",[t._v("或者搜索范围里不存在问题的答案。")])]),t._v(" "),v("p",[t._v("大家常见的「二分查找」法的两个模板（其实是一个模板）就是这种思想的体现。")])])}),[],!1,null,null,null);v.default=o.exports}}]);