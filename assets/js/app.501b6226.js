(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function t(t){for(var r,i,l=t[0],s=t[1],c=t[2],p=0,u=[];p<l.length;p++)i=l[p],Object.prototype.hasOwnProperty.call(n,i)&&n[i]&&u.push(n[i][0]),n[i]=0;for(r in s)Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r]);for(m&&m(t);u.length;)u.shift()();return o.push.apply(o,c||[]),a()}function a(){for(var e,t=0;t<o.length;t++){for(var a=o[t],r=!0,l=1;l<a.length;l++){var s=a[l];0!==n[s]&&(r=!1)}r&&(o.splice(t--,1),e=i(i.s=a[0]))}return e}var r={},n={3:0},o=[];function i(t){if(r[t])return r[t].exports;var a=r[t]={i:t,l:!1,exports:{}};return e[t].call(a.exports,a,a.exports,i),a.l=!0,a.exports}i.e=function(e){var t=[],a=n[e];if(0!==a)if(a)t.push(a[2]);else{var r=new Promise((function(t,r){a=n[e]=[t,r]}));t.push(a[2]=r);var o,l=document.createElement("script");l.charset="utf-8",l.timeout=120,i.nc&&l.setAttribute("nonce",i.nc),l.src=function(e){return i.p+"assets/js/"+({1:"vendors~layout-Blog~layout-Layout~layout-NotFound",2:"vendors~layout-Blog~layout-Layout",4:"layout-Blog",5:"layout-Layout",6:"layout-NotFound",7:"layout-Slide",8:"page--1a80215b",9:"page--1fc74288",10:"page--50505c44",11:"page--54b14006",12:"page--770626e8",13:"page--7e744542",14:"page--b0421f28",15:"page--c954eb04",16:"page--e477b492",17:"page-1079活字印刷",18:"page-1080根到叶路径上的不足节点",19:"page-11参考资料与网站",20:"page-12如何看待《算法导论》",21:"page-13书籍下载",22:"page-14如何提问",23:"page-15递归",24:"page-16时间复杂度",25:"page-17循环不变量",26:"page-1并查集视频讲解（请先看这里）",27:"page-1归并排序简介",28:"page-1循环不变量简介",29:"page-210快速排序（重点）",30:"page-21排序算法简介",31:"page-225非比较排序算法简介",32:"page-226计数排序（不重要，不用仔细看）",33:"page-227基数排序（不重要，不用仔细看）",34:"page-228桶排序（不重要，不用仔细看）",35:"page-22选择排序",36:"page-23冒泡排序",37:"page-24冒泡排序的优化",38:"page-25插入排序",39:"page-26插入排序的意义",40:"page-27插入排序的优化",41:"page-28希尔排序",42:"page-29归并排序（重点）",43:"page-2并查集的设计思想",44:"page-2归并排序的基本实现",45:"page-2循环不变量有什么用",46:"page-31二分查找习题分类",47:"page-32滑动窗口是什么",48:"page-33滑动窗口的练习",49:"page-34双指针简介与练习",50:"page-38排序算法练习",51:"page-3归并排序的优化",52:"page-3快速排序的优化（理解随机选择pivot）",53:"page-3明确循环不变量写出「快速排序」",54:"page-3第1版基于quick-find实现",55:"page-410树的练习",56:"page-411哈希表简介",57:"page-412哈希表练习",58:"page-41链表简介",59:"page-42链表的练习",60:"page-43栈的简介",61:"page-44栈的练习",62:"page-45队列简介",63:"page-46队列的问题",64:"page-47优先队列是什么",65:"page-48优先队列的练习",66:"page-49树的简介",67:"page-4总结",68:"page-4第2版基于quick-union实现（非最终版本）",69:"page-4自底向上的归并排序（选学）",70:"page-510动态规划是什么",71:"page-511动态规划练习",72:"page-512贪心算法简介",73:"page-513贪心算法练习",74:"page-51回溯算法简介",75:"page-52树形问题",76:"page-53理解回溯",77:"page-54回溯算法的几点说明",78:"page-55剪枝",79:"page-56回溯算法总结",80:"page-57回溯算法视频讲解以及练习列表",81:"page-58广度优先遍历简介",82:"page-59广度优先遍历练习",83:"page-5归并排序练习",84:"page-5第3版quick-union基于size的优化",85:"page-610创建线段树与区间查询",86:"page-611区间更新（单点更新）",87:"page-612树状数组概述（视频讲解）",88:"page-613预备知识：前缀和数组",89:"page-614「树状数组」如何组织原始输入数据的结构",90:"page-615详解lowbit函数",91:"page-616「单点更新」与「前缀和查询」",92:"page-617例1：计算逆序数",93:"page-618例2：「力扣」第315题：计算右侧小于当前元素的个数（困难）",94:"page-61Trie的思想与基本结构",95:"page-62Trie的添加与查询",96:"page-63Trie的前缀查询操作",97:"page-64简单的模式匹配",98:"page-65使用Trie实现字符串映射",99:"page-65练习",100:"page-66并查集基础问题",101:"page-67并查集进阶问题",102:"page-68线段树是原始数组的一个预处理数组",103:"page-69写出预处理数组的结构",104:"page-6第4版quick-union基于rank的优化",105:"page-710Kruskal算法",106:"page-711Prim算法",107:"page-712最小生成树算法总结与练习",108:"page-71单源最短路径简介与参考资料",109:"page-72Dijkstra算法要解决的问题与几何直观",110:"page-73松弛操作",111:"page-74通过一个例子理解Dijkstra算法的执行步骤",112:"page-75代码实现",113:"page-76单源最短路径算法总结",114:"page-77最小生成树简介与参考资料",115:"page-78最小生成树的应用",116:"page-79切分定理",117:"page-7第5版quick-union基于路径压缩的非递归实现",118:"page-8第6版quick-union基于路径压缩的递归实现",119:"page-9并查集总结",120:"page-TopK问题：「力扣」第215题：数组第k大的元素（中等）",121:"page-partition几种写法比较",122:"page-《剑指Offer》（第2版）第51题：计算数组的逆序对（困难）",123:"page-《剑指Offer》（第2版）面试题56-I数组中数字出现的次数",124:"page-《算法与数据结构》学习笔记8：二分搜索树",125:"page-「剑指Offer」第40题：最小的k个数（中等）",126:"page-「力扣」2020年春季团体赛第3题：LCP12小张刷题计划",127:"page-「力扣」上一些有意义的讨论",128:"page-「力扣」第1004题：最大连续1的个数III（中等）",129:"page-「力扣」第1008题：前序遍历构造二叉搜索树（中等）",130:"page-「力扣」第100题：相同的树（简单）",131:"page-「力扣」第1010题：总持续时间可被60整除的歌曲（中等）",132:"page-「力扣」第1011题：在D天内送达包裹的能力（中等）",133:"page-「力扣」第101题：判断两棵二叉树是否左右对称",134:"page-「力扣」第1020题：飞地的数量（中等）",135:"page-「力扣」第1025题：除数博弈（简单）",136:"page-「力扣」第102题：二叉树的层次遍历",137:"page-「力扣」第1034题：边界着色（中等）",138:"page-「力扣」第103题：二叉树的锯齿形层次遍历（中等）",139:"page-「力扣」第1046题：最后一块石头的重量（中等）",140:"page-「力扣」第104题：求一棵二叉树的最大深度（简单）",141:"page-「力扣」第1052题：爱生气的书店老板（中等）",142:"page-「力扣」第105题：从前序与中序遍历序列构造二叉树（中等）",143:"page-「力扣」第106题：从中序与后序遍历序列构造二叉树（中等）",144:"page-「力扣」第1079题：活字印刷（中等）",145:"page-「力扣」第107题：二叉树的层次遍历II（中等）",146:"page-「力扣」第108题：将有序数组转换为二叉搜索树（简单）",147:"page-「力扣」第1095题：山脉数组中查找目标值（中等）",148:"page-「力扣」第109题：有序链表转换二叉搜索树（中等）",149:"page-「力扣」第10题：正则表达式（困难）",150:"page-「力扣」第1109题：航班预订统计（中等）",151:"page-「力扣」第110题：平衡二叉树（简单）",152:"page-「力扣」第1111题：有效括号的嵌套深度（中等）",153:"page-「力扣」第1128题：等价多米诺骨牌对的数量（简单）",154:"page-「力扣」第113题：路径总和II（中等）",155:"page-「力扣」第1140题：石子游戏II（中等）",156:"page-「力扣」第1143题：最长公共子序列（中等）",157:"page-「力扣」第1162题：地图分析（中等）",158:"page-「力扣」第11题：盛最多水的容器（中等）",159:"page-「力扣」第1202题：交换字符串中的元素（中等）",160:"page-「力扣」第1203题：项目管理（困难）",161:"page-「力扣」第1206题：设计跳表（困难）",162:"page-「力扣」第1208题：尽可能使字符串相等（中等）",163:"page-「力扣」第120题：三角形最小路径和（中等）",164:"page-「力扣」第121题：买卖股票的最佳时机（简单）",165:"page-「力扣」第122题：买卖股票的最佳时机II（简单）",166:"page-「力扣」第123题：买卖股票的最佳时机III（困难）",167:"page-「力扣」第1248题：统计「优美子数组」（中等）",168:"page-「力扣」第124题：二叉树中的最大路径和（困难）",169:"page-「力扣」第1254题：统计封闭岛屿的数目（中等）",170:"page-「力扣」第125题：验证回文串（简单）",171:"page-「力扣」第1267题：统计参与通信的服务器（中等）",172:"page-「力扣」第126题：单词接龙II（困难）",173:"page-「力扣」第1276题：不浪费原料的汉堡制作方案（简单）",174:"page-「力扣」第127题：单词接龙（困难）",175:"page-「力扣」第1282题：用户分组（中等）",176:"page-「力扣」第1283题：使结果不超过阈值的最小除数（中等）",177:"page-「力扣」第128题：最长连续序列（困难）",178:"page-「力扣」第1296题：划分数组为连续数字的集合（中等）",179:"page-「力扣」第129题：求根到叶子结点数字之和",180:"page-「力扣」第12题：整数转罗马数字（中等）",181:"page-「力扣」第1300题：转变数组后最接近目标值的数组和（中等）",182:"page-「力扣」第1306题：跳跃游戏III（中等）",183:"page-「力扣」第130题：被围绕的区域",184:"page-「力扣」第130题：被围绕的区域（中等）",185:"page-「力扣」第1314题：矩阵区域和（简单）",186:"page-「力扣」第1315题：祖父节点值为偶数的节点和（中等）",187:"page-「力扣」第1319题：连通网络的操作次数（中等）",188:"page-「力扣」第131题：分割回文串（中等）",189:"page-「力扣」第1329题：将矩阵按对角线排序（中等）",190:"page-「力扣」第132题：分割回文串II（困难）",191:"page-「力扣」第136题：只出现一次的数字",192:"page-「力扣」第136题：只出现一次的数字（简单）",193:"page-「力扣」第1371题：每个元音包含偶数次的最长子字符串（中等）",194:"page-「力扣」第1372题：二叉树中的最长交错路径（中等）",195:"page-「力扣」第137题：只出现一次的数字II（中等）",196:"page-「力扣」第1391题：检查网格中是否存在有效路径（中等）",197:"page-「力扣」第139题：单词拆分（中等）",198:"page-「力扣」第13题：罗马数字转整数（简单）",199:"page-「力扣」第1400题：构造K个回文字符串（中等）",200:"page-「力扣」第140题：单词拆分II（困难）",201:"page-「力扣」第141题：环形链表（简单）",202:"page-「力扣」第1423题：可获得的最大点数（中等）",203:"page-「力扣」第142题：环形链表II（中等）",204:"page-「力扣」第1438题：绝对差不超过限制的最长连续子数组（中等）",205:"page-「力扣」第143题：重排链表（中等）",206:"page-「力扣」第1449题：数位成本和为目标值的最大数字",207:"page-「力扣」第144题：二叉树的前序遍历（中等）",208:"page-「力扣」第1456题：定长子串中元音的最大数目（中等）",209:"page-「力扣」第1457题：二叉树中的伪回文路径（中等）",210:"page-「力扣」第145题：二叉树的后序遍历（困难）",211:"page-「力扣」第146题：LRU缓存机制（中等）",212:"page-「力扣」第147题：对链表进行插入排序（中等）",213:"page-「力扣」第1482题：制作m束花所需的最少天数（中等）",214:"page-「力扣」第148题：排序链表",215:"page-「力扣」第1493题：删掉一个元素以后全为1的最长子数组（中等）",216:"page-「力扣」第150题：逆波兰表达式求值（中等）",217:"page-「力扣」第152题：乘积最大子序列（中等）",218:"page-「力扣」第153题：旋转排序数组的最小值（中等）",219:"page-「力扣」第154题：旋转排序数组的最小值II（困难）",220:"page-「力扣」第1552题：两球之间的磁力（中等）",221:"page-「力扣」第1559题：二维网格图中探测环（中等）",222:"page-「力扣」第155题：最小栈（简单）",223:"page-「力扣」第1593题：拆分字符串使唯一子字符串的数目最大（中等）",224:"page-「力扣」第15题：三数之和（中等）",225:"page-「力扣」第160题：相交链表（简单）",226:"page-「力扣」第162题：寻找峰值（中等）",227:"page-「力扣」第1631题：最小体力消耗路径（中等）",228:"page-「力扣」第1658题：将x减到0的最小操作数（中等）",229:"page-「力扣」第1673题：找出最具竞争力的子序列（中等）",230:"page-「力扣」第167题：两数之和II-输入有序数组（简单）",231:"page-「力扣」第16题：最接近的三数之和（中等）",232:"page-「力扣」第173题：二叉搜索树迭代器（中等）",233:"page-「力扣」第17题：电话号码的字母组合（中等）",234:"page-「力扣」第188题：买卖股票的最佳时机IV（困难）",235:"page-「力扣」第189题：生成旋转数组（中等）",236:"page-「力扣」第18题：四数之和（中等）",237:"page-「力扣」第198题：打家劫舍（简单）",238:"page-「力扣」第199题：二叉树的右视图（中等）",239:"page-「力扣」第19题：删除链表的倒数第N个节点（中等）",240:"page-「力扣」第1题：两数之和（简单）",241:"page-「力扣」第200题：岛屿数量（中等）",242:"page-「力扣」第200题：岛屿的个数（中等）",243:"page-「力扣」第201题：数字范围按位与",244:"page-「力扣」第202题：同构字符串（简单）",245:"page-「力扣」第202题：快乐数（简单）",246:"page-「力扣」第203题：移除链表元素（简单）",247:"page-「力扣」第206题：反转链表（简单）",248:"page-「力扣」第207题：课程表（中等）",249:"page-「力扣」第208题：实现Trie(前缀树)（中等）",250:"page-「力扣」第209题：长度最小的子数组（中等）",251:"page-「力扣」第20题：有效的括号（简单）",252:"page-「力扣」第210题：课程表II（中等）",253:"page-「力扣」第211题：添加与搜索单词-数据结构设计（中等）",254:"page-「力扣」第212题：单词搜索II（困难）",255:"page-「力扣」第215题：数组第k大的元素（中等）",256:"page-「力扣」第216题：组合总和III（中等）",257:"page-「力扣」第217题：存在重复元素（简单）",258:"page-「力扣」第218题：天际线问题（困难）",259:"page-「力扣」第219题：存在重复元素II（中等）",260:"page-「力扣」第21题：合并两个有序链表（简单）",261:"page-「力扣」第220题：存在重复元素III（中等）",262:"page-「力扣」第221题：最大正方形（中等）",263:"page-「力扣」第222题：求完全二叉树的节点数、满二叉树",264:"page-「力扣」第225题：用队列实现栈（简单）",265:"page-「力扣」第226题：反转一棵二叉树",266:"page-「力扣」第22题：括号生成（中等）",267:"page-「力扣」第230题：二叉搜索树中第K小的元素（中等）",268:"page-「力扣」第232题：用栈实现队列（简单）",269:"page-「力扣」第233题：数字1的个数（困难）",270:"page-「力扣」第234题：回文链表（简单）",271:"page-「力扣」第235题：二叉搜索树的最近公共祖先（中等）",272:"page-「力扣」第236题：二叉树的最近公共祖先（中等）",273:"page-「力扣」第236题：二叉树的最近公共祖先（后序遍历、分治思想）",274:"page-「力扣」第237题：删除链表中的节点（简单）",275:"page-「力扣」第238题：除自身以外数组的乘积（中等）",276:"page-「力扣」第239题：滑动窗口的最大值（困难）",277:"page-「力扣」第23题：合并K个排序链表",278:"page-「力扣」第23题：合并K个排序链表（困难）",279:"page-「力扣」第240题：搜索二维矩阵II（中等）",280:"page-「力扣」第242题：有效的字母异位词（简单）",281:"page-「力扣」第24题：两两交换链表中的结点（中等）",282:"page-「力扣」第257题：二叉树的所有路径（简单）",283:"page-「力扣」第25题：K个一组翻转链表（困难）",284:"page-「力扣」第275题：H指数II（中等）",285:"page-「力扣」第279题：完全平方式（中等）",286:"page-「力扣」第279题：完全平方数（中等）",287:"page-「力扣」第287题：数组中的重复数字（中等）",288:"page-「力扣」第290题：单词规律（简单）",289:"page-「力扣」第292题：Nim游戏（简单）",290:"page-「力扣」第295题：数据流的中位数（困难）",291:"page-「力扣」第297题：二叉树的序列化与反序列化（困难）",292:"page-「力扣」第2题：两个数相加（中等）",293:"page-「力扣」第300题：最长上升子序列（中等）",294:"page-「力扣」第306题：累加数（中等）",295:"page-「力扣」第309题：最佳买卖股票时机含冷冻期（中等）",296:"page-「力扣」第310题：最小高度树（中等）",297:"page-「力扣」第313题：超级丑数（中等）",298:"page-「力扣」第315题：计算右侧小于当前元素的个数（困难）",299:"page-「力扣」第316题：去除重复字母（中等）",300:"page-「力扣」第322题：零钱兑换（中等）",301:"page-「力扣」第328题：奇偶链表（中等）",302:"page-「力扣」第331题：验证二叉树的前序序列化（中等）",303:"page-「力扣」第336题：回文对（困难）",304:"page-「力扣」第337题：打家劫舍III（中等）",305:"page-「力扣」第33题：搜索旋转排序数组（中等）",306:"page-「力扣」第341题：扁平化嵌套列表迭代器（中等）",307:"page-「力扣」第342题：4的幂",308:"page-「力扣」第343题：整数拆分（中等）",309:"page-「力扣」第344题：反转字符串（简单）",310:"page-「力扣」第345题：反转字符串中的元音字母（简单）",311:"page-「力扣」第347题：前K个高频元素（中等）",312:"page-「力扣」第349题：计算两个数组的交集（简单）",313:"page-「力扣」第34题：在排序数组中查找元素的第一个和最后一个位置（中等）",314:"page-「力扣」第350题：两个数组的交集II（中等）",315:"page-「力扣」第354题：俄罗斯套娃信封问题（困难）",316:"page-「力扣」第355题：设计推特（中等）",317:"page-「力扣」第35题：搜索插入位置（简单）",318:"page-「力扣」第365题：水壶问题（中等）",319:"page-「力扣」第367题：有效的完全平方数（中等）",320:"page-「力扣」第368题：最大整除子集（中等）",321:"page-「力扣」第36题：有效的数独（中等）",322:"page-「力扣」第374题：猜数字大小（简单）",323:"page-「力扣」第376题：摆动序列（中等）",324:"page-「力扣」第377题：组合总和Ⅳ（中等）",325:"page-「力扣」第378题：有序矩阵中第K小的元素（中等）",326:"page-「力扣」第37题：求解数独（困难）",327:"page-「力扣」第387题：字符串中的第一个唯一字符（简单）",328:"page-「力扣」第399题：除法求值（中等）",329:"page-「力扣」第39题：组合总和（中等）",330:"page-「力扣」第3题：无重复字符的最长子串（中等）",331:"page-「力扣」第401题：二进制手表问题",332:"page-「力扣」第404题：左叶子之和（简单）",333:"page-「力扣」第40题：组合总和II（中等）",334:"page-「力扣」第410题：分割数组的最大值（困难）",335:"page-「力扣」第413题：等差数列划分（中等）",336:"page-「力扣」第416题：分割等和子集（中等）",337:"page-「力扣」第417题：太平洋大西洋水流问题（中等）",338:"page-「力扣」第41题：缺失的第一个正数（困难）",339:"page-「力扣」第421题：数组中两个数的最大异或值（中等）",340:"page-「力扣」第424题以及同类问题",341:"page-「力扣」第424题：替换后的最长重复字符（中等）",342:"page-「力扣」第42题：接雨水（困难）",343:"page-「力扣」第433题：最小基因变化（中等）",344:"page-「力扣」第436题：寻找右区间（中等）",345:"page-「力扣」第437题：路径总和III（中等）",346:"page-「力扣」第438题：找到字符串中所有字母异位词（中等）",347:"page-「力扣」第442题：数组中重复的数据",348:"page-「力扣」第445题：两数相加II（中等）",349:"page-「力扣」第447题：回旋镖的数量（中等）",350:"page-「力扣」第448题：找到所有数组中消失的数字（简单）",351:"page-「力扣」第449题：序列化和反序列化二叉搜索树（中等）",352:"page-「力扣」第450题：删除二叉搜索树中的节点（中等）",353:"page-「力扣」第451题：根据字符出现频率排序（中等）",354:"page-「力扣」第452题：用最少数量的箭引爆气球（中等）",355:"page-「力扣」第454题：四数相加II（中等）",356:"page-「力扣」第455题：分发饼干（中等）",357:"page-「力扣」第456题：132模式（中等）",358:"page-「力扣」第45题：整数转罗马数字（困难）",359:"page-「力扣」第460题：LFU缓存（困难）",360:"page-「力扣」第461题：汉明距离（简单）",361:"page-「力扣」第46题：全排列（中等）",362:"page-「力扣」第474题：一和零（中等）",363:"page-「力扣」第477题：汉明距离总和（中等）",364:"page-「力扣」第47题：全排列II（中等）",365:"page-「力扣」第486题：预测赢家（中等）",366:"page-「力扣」第491题：递增子序列（中等）",367:"page-「力扣」第493题：计算翻转对（困难）",368:"page-「力扣」第494题：目标和（中等）",369:"page-「力扣」第496题：下一个更大元素I（简单）",370:"page-「力扣」第49题：字母异位词分组（哈希表）",371:"page-「力扣」第4题：寻找两个有序数组的中位数（困难）",372:"page-「力扣」第503题：下一个更大元素II（中等）",373:"page-「力扣」第507题：完美数（简单）",374:"page-「力扣」第508题：出现次数最多的子树元素和（中等）",375:"page-「力扣」第509题：斐波拉契数列（简单）",376:"page-「力扣」第50题：Pow(x,n)",377:"page-「力扣」第50题：Pow(x,n)（中等）",378:"page-「力扣」第516题：最长回文子序列（中等）",379:"page-「力扣」第518题：零钱兑换II（中等）",380:"page-「力扣」第51题：N皇后（困难）",381:"page-「力扣」第523题：连续的子数组（中等）",382:"page-「力扣」第525题：连续数组（中等）",383:"page-「力扣」第529题：扫雷问题（中等）",384:"page-「力扣」第52题：N-QueensII（困难）",385:"page-「力扣」第53题：最大子序和（中等）",386:"page-「力扣」第542题：01矩阵（中等）",387:"page-「力扣」第543题：二叉树的直径（简单）",388:"page-「力扣」第547题：朋友圈（中等）",389:"page-「力扣」第560题：和为K的子数组（中等）",390:"page-「力扣」第567题：字符串的排列（中等、滑动窗口）",391:"page-「力扣」第56题：合并区间（中等）",392:"page-「力扣」第572题：另一个树的子树（简单）",393:"page-「力扣」第57题：插入区间（中等）",394:"page-「力扣」第581题：最短无序连续子数组（中等）",395:"page-「力扣」第5题：最长回文子串（中等）",396:"page-「力扣」第60题：第k个排列（困难）",397:"page-「力扣」第611题：有效三角形的个数（中等）",398:"page-「力扣」第61题：旋转链表（中等）",399:"page-「力扣」第621题：任务调度器（中等）",400:"page-「力扣」第622题：设计循环队列（中等）",401:"page-「力扣」第62题：不同路径（中等）",402:"page-「力扣」第630题：课程表III（困难）",403:"page-「力扣」第633题：平方数之和（简单）",404:"page-「力扣」第63题：不同路径II（中等）",405:"page-「力扣」第641题：设计循环双端队列（中等）",406:"page-「力扣」第643题：子数组最大平均数I（简单）",407:"page-「力扣」第648题：单词替换（中等）",408:"page-「力扣」第64题：最小路径和（中等）",409:"page-「力扣」第658题：找到K个最接近的元素（中等）",410:"page-「力扣」第664题：奇怪的打印机（困难）",411:"page-「力扣」第66题：加1（简单）",412:"page-「力扣」第674题：最长连续递增序列（简单）",413:"page-「力扣」第677题：键值映射（中等）",414:"page-「力扣」第67题：二进制求和（简单）",415:"page-「力扣」第684题：冗余连接（中等）",416:"page-「力扣」第685题：冗余连接II（困难）",417:"page-「力扣」第687题：最长同值路径（中等）",418:"page-「力扣」第690题：员工的重要性（中等）",419:"page-「力扣」第69题：x的平方根（简单）",420:"page-「力扣」第703题：数据流中的第K大元素（简单）",421:"page-「力扣」第70题：爬楼梯（简单）",422:"page-「力扣」第713题：乘积小于K的子数组（中等）",423:"page-「力扣」第714题：买卖股票的最佳时机含手续费（中等）",424:"page-「力扣」第719题：找出第k小的距离对（困难）",425:"page-「力扣」第71题：简化路径（中等）",426:"page-「力扣」第720题：词典中最长的单词（简单）",427:"page-「力扣」第721题：账户合并（中等）",428:"page-「力扣」第72题：编辑距离（困难）",429:"page-「力扣」第733题：图像渲染（简单）",430:"page-「力扣」第739题：每日温度（中等）",431:"page-「力扣」第744题：寻找比目标字母大的最小字母（简单）",432:"page-「力扣」第745题：前缀和后缀搜索（困难）",433:"page-「力扣」第746题：使用最小花费爬楼梯（简单）",434:"page-「力扣」第752题：打开转盘锁（中等）",435:"page-「力扣」第75题：颜色分类（中等）",436:"page-「力扣」第765题：情侣牵手（中等）",437:"page-「力扣」第76题以及同类问题",438:"page-「力扣」第76题：最小覆盖子串（困难）",439:"page-「力扣」第773题：滑动谜题（困难）",440:"page-「力扣」第778题：水位上升的泳池中游泳（困难）",441:"page-「力扣」第77题：组合（中等）",442:"page-「力扣」第784题：字母大小写全排列（中等）",443:"page-「力扣」第78题：子集（中等）",444:"page-「力扣」第79题：单词搜索（中等）",445:"page-「力扣」第802题：找到最终的安全状态（中等）",446:"page-「力扣」第803题：打砖块（困难）",447:"page-「力扣」第81题：搜索旋转排序数组II（中等）",448:"page-「力扣」第82题：删除排序链表中的重复元素II（中等）",449:"page-「力扣」第836题：矩形重叠（简单）",450:"page-「力扣」第83题：删除排序链表中的重复元素（简单）",451:"page-「力扣」第842题：将数组拆分成斐波那契序列（中等）",452:"page-「力扣」第84题：柱状图中最大的矩形（困难）",453:"page-「力扣」第852题：山脉数组的峰顶索引（简单）",454:"page-「力扣」第860题：柠檬水找零（简单）",455:"page-「力扣」第861题：翻转矩阵后的得分（中等）",456:"page-「力扣」第863题：二叉树中所有距离为K的结点（中等）",457:"page-「力扣」第865题：具有所有最深节点的最小子树（中等）",458:"page-「力扣」第868题：二进制间距（简单）",459:"page-「力扣」第86题：分隔链表（中等）",460:"page-「力扣」第875题：爱吃香蕉的珂珂（中等）",461:"page-「力扣」第876题：链表的中间结点（简单）",462:"page-「力扣」第877题：石子游戏（中等）",463:"page-「力扣」第881题：救生艇（中等）",464:"page-「力扣」第88题：合并两个有序数组（简单）",465:"page-「力扣」第897题：递增顺序查找树（中等）",466:"page-「力扣」第8题：字符串转换整数(atoi)（中等）",467:"page-「力扣」第904题：水果成篮（中等）",468:"page-「力扣」第907题：子数组的最小值之和（中等）",469:"page-「力扣」第90题：子集II（中等）",470:"page-「力扣」第918题：环形子数组的最大和（中等）",471:"page-「力扣」第91题：解码方法（中等）",472:"page-「力扣」第921题：使括号有效的最少添加（中等）",473:"page-「力扣」第92题：反转链表II（中等）",474:"page-「力扣」第933题：最近的请求次数（简单）",475:"page-「力扣」第93题：复原IP地址（中等）",476:"page-「力扣」第945题：使数组唯一的最小增量（中等）",477:"page-「力扣」第946题：验证栈序列（中等）",478:"page-「力扣」第947题：移除最多的同行或同列石头（中等）",479:"page-「力扣」第94题：二叉树的中序遍历（中等）",480:"page-「力扣」第94题：二叉树的中序遍历（简单）",481:"page-「力扣」第951题：翻转等价二叉树（中等）",482:"page-「力扣」第952题：按公因数计算最大组件大小（困难）",483:"page-「力扣」第959题：由斜杠划分区域（中等）",484:"page-「力扣」第95题：不同的二叉搜索树II（中等）",485:"page-「力扣」第962题：最大宽度坡（中等）",486:"page-「力扣」第968题：监控二叉树（困难）",487:"page-「力扣」第96题：不同的二叉搜索树（中等）",488:"page-「力扣」第973题：最接近原点的K个点（中等）",489:"page-「力扣」第974题：和可被K整除的子数组（中等）",490:"page-「力扣」第977题：有序数组的平方（简单）",491:"page-「力扣」第978题：最长湍流子数组（中等）",492:"page-「力扣」第983题：最低票价（中等）",493:"page-「力扣」第98题：验证二叉搜索树（中等）",494:"page-「力扣」第990题：等式方程的可满足性（中等）",495:"page-「力扣」第993题：二叉树的堂兄弟节点",496:"page-「力扣」第993题：二叉树的堂兄弟节点（简单）",497:"page-「力扣」第994题：腐烂的橘子（中等）",498:"page-「力扣」问题回答",499:"page-「双指针」简介",500:"page-「程序员面试金典」1714最小K个数（中等）",501:"page-「闲谈」板块简介",502:"page-「闲谈」简介",503:"page-一些无处安放的链接",504:"page-专题：前缀和与哈希表",505:"page-二分查找",506:"page-二分查找习题列表",507:"page-二叉树",508:"page-优先队列的应用",509:"page-优先队列精讲",510:"page-位运算",511:"page-使用数据结构的滑动窗口问题",512:"page-例1：「力扣」第26题：删除排序数组中的重复项（简单）",513:"page-例2：「力扣」第283题：移动零（简单）",514:"page-例3：「力扣」第27题：移除元素（简单）",515:"page-例4：「力扣」第80题：删除排序数组中的重复项II（中等）",516:"page-关于我在「力扣」上回答问题的点点滴滴",517:"page-关于这部分视频的说明",518:"page-前缀和",519:"page-前缀树",520:"page-剑指Offer38字符串的排列",521:"page-剑指Offer（第2版）与「力扣」问题的对应关系",522:"page-动态规划（语雀的笔记）",523:"page-单调栈",524:"page-历史的天空（电视剧《三国演义》片尾曲，演唱：毛阿敏）",525:"page-双指针习题分类",526:"page-变更日志",527:"page-哈希表",528:"page-回溯算法重点概括",529:"page-固定长度的滑动窗口问题",530:"page-图论算法概述",531:"page-学习算法没有捷径",532:"page-完全背包公式推导",533:"page-差分",534:"page-广度优先遍历直观",535:"page-归并排序简介",536:"page-循环不变量重点概括",537:"page-快来算法吧",538:"page-快速排序",539:"page-总结",540:"page-懂你（演唱：满文军）",541:"page-我对算法「题」的偏见",542:"page-拓扑排序简介",543:"page-数学",544:"page-数组",545:"page-最大值最小化简介",546:"page-本章内容介绍（请先看这里）",547:"page-栈",548:"page-树形DP简介",549:"page-梦想破碎的2021年",550:"page-模板不重要（转载）",551:"page-滑动窗口",552:"page-滚滚长江东逝水（电视剧《三国演义》片尾曲，演唱：杨洪基）",553:"page-第0章参考资料",554:"page-第10章链表",555:"page-第10节「快速排序」总结",556:"page-第10节从学习「二分查找」窥见算法学习的一般方法",557:"page-第11章栈",558:"page-第12章队列",559:"page-第13章二叉树",560:"page-第13章优先队列（堆）",561:"page-第15章二分搜索树",562:"page-第15章二叉搜索树",563:"page-第16章哈希表",564:"page-第17章回溯算法",565:"page-第18章前缀和与哈希表",566:"page-第18章广度优先遍历",567:"page-第19章动态规划",568:"page-第1节二分查找的基本思想",569:"page-第1节什么是动态规划",570:"page-第1节优先队列简介",571:"page-第1节快速排序的基本思想",572:"page-第2章二分查找、滑动窗口、双指针",573:"page-第2章练习题精讲简介（先看这里）",574:"page-第2节partition",575:"page-第2节「力扣」上一类问题的特点（极其重要）",576:"page-第2节为什么取中间",577:"page-第2节优先队列的实现",578:"page-第2节动态规划用于解决怎样的问题",579:"page-第3章基础排序算法",580:"page-第3节「动态规划」的算法设计思想",581:"page-第3节快速排序（第1版代码）",582:"page-第3节把区间分成两个部分",583:"page-第3节把区间分成两个部分（重要）",584:"page-第3节最大堆的第1个重要操作：SiftUp",585:"page-第4节SiftDown",586:"page-第4节为什么需要上取整",587:"page-第4节二分查找万能模板",588:"page-第4节自顶向下与自底向上",589:"page-第4节随机选择切分元素",590:"page-第5节写分支逻辑的经验",591:"page-第5节双路快排",592:"page-第5节堆排序、heapify、原地堆排序",593:"page-第5节死循环（什么时候取mid+1）",594:"page-第5节状态与状态转移方程",595:"page-第6章非比较排序",596:"page-第6节三路快排",597:"page-第6节二分查找的应用",598:"page-第6节关于mid=(left+right)2的说明",599:"page-第6节最优子结构、重复子问题、无后效性",600:"page-第6节索引堆",601:"page-第7节while(leftright)一定表示左闭右开吗？",602:"page-第7节三种划分方式总结",603:"page-第7节几种二分查找的写法比较",604:"page-第7节阶段、状态、选择",605:"page-第8节三种二分查找模板对比",606:"page-第8节再次理解「循环不变量」",607:"page-第8节超级重要的动态规划问题",608:"page-第9节再次理解「递归」",609:"page-第9节写对「二分查找」的经验",610:"page-第9节总结",611:"page-简介",612:"page-精选题解",613:"page-线段树北美讲题大纲",614:"page-练习",615:"page-给本站留言",616:"page-视频题解合集",617:"page-请见专栏「二分查找精讲」",618:"page-谋生的路上不抛弃良知",619:"page-贪心算法",620:"page-软件工程师和算法竞赛（转载）",621:"page-这一拜（电视剧《三国演义》插曲，演唱：刘欢）",622:"page-链表问题",623:"page-链表问题简介",624:"page-队列",625:"page-音乐欣赏",626:"page-高级程序员不是追求的目标（雷军）",627:"page-（会员题）「力扣」第159题：至多包含两个不同字符的最长子串（中等）",628:"page-（会员题）「力扣」第340题：至多包含K个不同字符的最长子串（中等）",629:"page-（公众号文章）「动态规划」为什么叫「动态规划」",630:"page-（公众号文章）从「最大子段和」问题谈如何设计状态（定义子问题）",631:"page-（公众号文章）再讲「树形DP」是个什么玩意儿",632:"page-（公众号文章）树形DP是个什么玩意儿",633:"vendors~chart",634:"vendors~flowchart",635:"vendors~layout-Layout",636:"vendors~mermaid",637:"vendors~photo-swipe",638:"vendors~reveal",639:"vendors~valine"}[e]||e)+"."+{1:"142c3b04",2:"51e2ddcf",4:"e1272ca6",5:"28347db1",6:"640d0bfa",7:"b40b02df",8:"2fbc75c9",9:"5a2b3e91",10:"5706361e",11:"7f715879",12:"85abb6f0",13:"6b084d25",14:"b1a378bd",15:"0af42c21",16:"2bcb0337",17:"a1ee8206",18:"8566a671",19:"0e3a1f5b",20:"dbf2241b",21:"afb6f1b8",22:"7d211dda",23:"6028d8c6",24:"562793fe",25:"a847d4aa",26:"f9aaddb2",27:"2a4b961d",28:"049d6ef9",29:"c21d652a",30:"13dbe3c8",31:"706d43f5",32:"0c60f5c6",33:"26080242",34:"c974dde5",35:"f1497bc9",36:"11d0f80b",37:"14dbe5ec",38:"89256a92",39:"65f44c2b",40:"6c848222",41:"71ed7385",42:"1bb9f7ea",43:"35a4dae9",44:"8fe68e66",45:"74bd6e9c",46:"25bb0cf8",47:"61d2f7b2",48:"f934989d",49:"36fa0e02",50:"e84b288b",51:"4477c19a",52:"df12653a",53:"135485c8",54:"3fd9a475",55:"0a3a698a",56:"d669571b",57:"01f9f6bd",58:"c1835ac8",59:"2a181162",60:"9d138743",61:"658f9cbd",62:"efc3f187",63:"d2149377",64:"d4a0476f",65:"9500331c",66:"3163bc9a",67:"790e66b8",68:"05b760c7",69:"1688580a",70:"c2e3786d",71:"95dce2ae",72:"7b639a49",73:"e887524d",74:"453ead18",75:"7ebf0d52",76:"5e661854",77:"7e845058",78:"4c611729",79:"c43c1ca6",80:"5a7d0756",81:"3608b999",82:"182deb51",83:"20aa7f4f",84:"6ea3078e",85:"a76e878c",86:"f4994e3b",87:"f3be725d",88:"74ce4922",89:"8977c3f1",90:"2e3b2e1f",91:"9f6630ba",92:"e18cd343",93:"437875f5",94:"64cbba9a",95:"bef95695",96:"7d67b54a",97:"a251249e",98:"f00cef74",99:"aa699038",100:"7f80e994",101:"7d145449",102:"dfd50c07",103:"05f98668",104:"5749eff1",105:"fdac4860",106:"2794201d",107:"41a17d68",108:"2abae30b",109:"1418f30d",110:"7f60e731",111:"0f7db702",112:"5214a761",113:"26003085",114:"d8bb8a0a",115:"13c69e96",116:"f6b3ec50",117:"e9d8773f",118:"f1ff074a",119:"e9007e56",120:"befb9766",121:"1bba822d",122:"37e487b2",123:"143d3d0a",124:"f6ee7432",125:"35667746",126:"f5fe1d79",127:"cb38a49a",128:"b4ca46b0",129:"addc595d",130:"333a7ebf",131:"2cabea54",132:"89d796fd",133:"0b778026",134:"3e569780",135:"a515959a",136:"d00803d6",137:"25da0e3e",138:"e8a60742",139:"6ad31aa8",140:"be3e988c",141:"2c655d36",142:"7631cb21",143:"11b0c316",144:"ca44d979",145:"fd1226f0",146:"9c3cd3dd",147:"ae07fbc1",148:"4a574837",149:"3cb4fc29",150:"ae1ab06c",151:"e17b390b",152:"606edaac",153:"f760be7c",154:"9c8e4405",155:"e13b90c9",156:"cb31aa69",157:"4ea86b18",158:"cf3435b3",159:"65631fbc",160:"9cd64aa1",161:"66352a13",162:"cccf0274",163:"79861019",164:"f49e39dd",165:"db92c4e5",166:"f45d3497",167:"24685209",168:"c3c806ca",169:"a0ff68c7",170:"6ed9e87f",171:"dfcfdd92",172:"fae61125",173:"20b06751",174:"d4bd17d1",175:"eefdb8d0",176:"cee94f0a",177:"74a3a4d6",178:"4ee00aae",179:"d54f7b6c",180:"170c2645",181:"53a7082b",182:"4f39fb59",183:"768583a9",184:"d4f97688",185:"1266dabb",186:"71e46541",187:"5a9b986a",188:"618fcc53",189:"cc1daf51",190:"f771c5a3",191:"ebbb2a6b",192:"f9596355",193:"34668abb",194:"3df77c0c",195:"bcd25bb8",196:"22082425",197:"1a6e1207",198:"7ab1ad99",199:"86bd25e6",200:"9261d2de",201:"b8c482c8",202:"0f1474db",203:"bc2b6ae0",204:"5a3f1781",205:"fb78715f",206:"e2c7af51",207:"4957c82e",208:"d98c5bff",209:"9c66e664",210:"c3a99155",211:"ebb9597b",212:"11fc118d",213:"f0bb087c",214:"ade81d7d",215:"0889ea07",216:"0e1387d7",217:"98e20da9",218:"0afb834f",219:"16790b44",220:"83f12972",221:"86afc992",222:"eccd58aa",223:"09e820cf",224:"2a0c3e08",225:"5f47ebb0",226:"b9df8547",227:"a1782555",228:"f8841845",229:"fa857679",230:"7e09c17a",231:"ef469103",232:"a4aa63a7",233:"afdcc0c8",234:"3ffaf19a",235:"7082a073",236:"4fe386dd",237:"4d45a0ec",238:"a127a277",239:"1f6ce9ca",240:"2927404c",241:"811263f6",242:"2be4e69f",243:"76cc3f9c",244:"9f028261",245:"bc6406cd",246:"86a72c61",247:"edf5169c",248:"67157f7b",249:"741654c2",250:"ef14fbd7",251:"94b36340",252:"6645dbe4",253:"416571b1",254:"7918500b",255:"6746788b",256:"599c2082",257:"b458cbc0",258:"05a750a1",259:"482eb41c",260:"fc5e19ac",261:"57413fa7",262:"10456eff",263:"aab9283a",264:"b2e10e1b",265:"528db39b",266:"780e0e63",267:"e4f32b83",268:"6144fd1f",269:"69127563",270:"cd543c5c",271:"4e46c0b0",272:"aa4eca7e",273:"20986173",274:"5867e5d6",275:"0fa6d125",276:"d1d61183",277:"54ffff1c",278:"d1013ca6",279:"bb9f7f16",280:"45aa04f7",281:"96a92d3e",282:"0eeb2534",283:"1e663041",284:"fbc14357",285:"448355b7",286:"6848b3ce",287:"6cc2d562",288:"63b0f5b4",289:"40e2d575",290:"8c727d5e",291:"7e82db92",292:"1f1f4ba0",293:"47d49632",294:"6c27f043",295:"e5bdc5a2",296:"d3da8dac",297:"72a0db3f",298:"e8497456",299:"9d7a9f89",300:"7e342863",301:"94adb134",302:"0cb08179",303:"2808628b",304:"4736a427",305:"c86d57a2",306:"d92a33f5",307:"bad6b261",308:"20cc8ba8",309:"b42ff17a",310:"bc26bbf4",311:"7d63cfc8",312:"220dc50c",313:"6939603f",314:"f9f2ebf8",315:"0d3a8820",316:"1031e5d7",317:"b9742acf",318:"4c18cc1e",319:"18fb87b4",320:"8bdaab19",321:"b2d1ec35",322:"7abe91fa",323:"6a85928e",324:"ebead2cb",325:"f20fab96",326:"f67d9a13",327:"1d54b047",328:"bd10969f",329:"99a3ab87",330:"9a09b16d",331:"8e63a185",332:"b05b2695",333:"60fbec31",334:"27c879ba",335:"c206301e",336:"9937c8c3",337:"0664540d",338:"0e84095b",339:"105c0258",340:"4d3441ff",341:"00913509",342:"72611114",343:"795dce4a",344:"79ed636b",345:"07de3378",346:"79e86870",347:"868bc48c",348:"28c331b5",349:"a3f22ede",350:"2cbef8bf",351:"3f86ae6b",352:"a77d4017",353:"4ce45420",354:"2988109e",355:"bbdb42cb",356:"6ced14f6",357:"144fc5d6",358:"ede9e515",359:"eaa1fd4d",360:"fa75c0be",361:"a087be86",362:"022274c3",363:"8652d35c",364:"01fc75e3",365:"9d6b60a5",366:"ddbde56e",367:"ae01f67c",368:"243fa1d4",369:"9e9c198a",370:"c00a9aee",371:"89762331",372:"690d0832",373:"adff08a8",374:"985b7752",375:"ad669140",376:"af5a7d9b",377:"470b62ff",378:"5bd6daf8",379:"494fb44e",380:"47e072d0",381:"a1939c5c",382:"fa7eb1ea",383:"3985d69f",384:"937faf57",385:"76face16",386:"5257b8b7",387:"f2b1c426",388:"757657f7",389:"2816ac36",390:"7a743a7c",391:"2a1ea5fc",392:"4b8e000e",393:"f164ac76",394:"77288fe2",395:"4cf8b3d0",396:"267b9277",397:"d3f1a483",398:"a72004a5",399:"4ab870aa",400:"b96d307e",401:"b22774fc",402:"840832bb",403:"6cae8026",404:"1bc21178",405:"652ac4e8",406:"6a8b153b",407:"fe4c7a94",408:"50087227",409:"f72f39b0",410:"582c7c1b",411:"9452476c",412:"9dd4d5d5",413:"0490b0cd",414:"e9fe708b",415:"17ef2e24",416:"bc2acf7e",417:"b1744d8e",418:"0c486537",419:"fa69495e",420:"45e74ffa",421:"ac7086e4",422:"80eb847a",423:"c8fff92c",424:"85d61c81",425:"f0531c74",426:"9b5d3a0d",427:"ad1ac386",428:"97adc995",429:"27e1e3f7",430:"38b19ee5",431:"aa7b6b9b",432:"9f421284",433:"cea20eea",434:"914d15d0",435:"db53e3c2",436:"69fe1613",437:"fb14eb76",438:"fdb7ae50",439:"f08eef7a",440:"dd4c7586",441:"9eb1c0ed",442:"89c01b0f",443:"71065293",444:"88c932ec",445:"09dcdb9c",446:"6d9c906b",447:"7ef8022a",448:"ddccaaf9",449:"abdf21e1",450:"866f029a",451:"cddac8f9",452:"30026b8e",453:"64f81f7b",454:"6cb961e3",455:"bfb762e9",456:"b8f49261",457:"7f724ba3",458:"83a8ddb7",459:"2b62c8aa",460:"d586355e",461:"f1397072",462:"3c9ed662",463:"9f82399c",464:"5e980067",465:"07b26601",466:"a1598ce4",467:"35d92f3c",468:"104e9a92",469:"e0ab5bb4",470:"8a0bdbcd",471:"43e2d23a",472:"057dd60a",473:"071ef37f",474:"3830a25f",475:"2f15c821",476:"140de9fb",477:"8bb08704",478:"f53e29e2",479:"82bf5b7b",480:"ea5816c2",481:"e300adcc",482:"c7d4b795",483:"08f27d00",484:"80bcf189",485:"1ae6ad46",486:"c1cc04b2",487:"ef0bc70e",488:"b04f2ccb",489:"16450ca6",490:"be3d3ee3",491:"5f2fa5da",492:"c38a5087",493:"a5b89726",494:"aec12a90",495:"dab71397",496:"59c8faf4",497:"ab0ad053",498:"99ea6a42",499:"897e0b48",500:"92b01b63",501:"bd113e01",502:"67675769",503:"9280e34a",504:"7f9bab26",505:"e3d0d144",506:"3c60fdc2",507:"37cf5902",508:"ee320b44",509:"4973ce43",510:"f6aaa08c",511:"1ab8fda3",512:"70232089",513:"fb2e7ae9",514:"88601e81",515:"c15d1b45",516:"f39722cd",517:"cc683a9b",518:"06a22bbd",519:"d5afec85",520:"e2aa6a4f",521:"5cb8eb4a",522:"191f97f9",523:"8b400350",524:"a16d7c3a",525:"8b2f0a64",526:"faea4a18",527:"2c07e844",528:"567845df",529:"770c1655",530:"b5b3c9f4",531:"74e8d5cc",532:"14851b95",533:"c51639d5",534:"86fb1a7c",535:"e922057b",536:"cc7cafdf",537:"aeee6df7",538:"bef1de11",539:"70a17986",540:"10433d78",541:"03158b6d",542:"a6632ef8",543:"567a9c53",544:"d5c100c4",545:"f21928c3",546:"3a339a85",547:"e6ea9ad0",548:"f65ec774",549:"ab3a3bb3",550:"b84312d8",551:"24502918",552:"23bf470d",553:"4151ac7e",554:"5fcd23b2",555:"eac56f12",556:"1f26e471",557:"9f32883e",558:"90892024",559:"c05693a9",560:"6adbb06f",561:"e8ab4559",562:"e9b0cc23",563:"86e0ee63",564:"4330b8d4",565:"f67c1e28",566:"2501fd15",567:"38b5d5db",568:"260b2171",569:"a37c7262",570:"be135a84",571:"03047f80",572:"7dbd2e09",573:"8413594e",574:"1e108aae",575:"6967290f",576:"8351df29",577:"141c98eb",578:"cc73adf4",579:"017edceb",580:"74cca739",581:"b3a43d0f",582:"3430723b",583:"5e5bc969",584:"dd769360",585:"65db633b",586:"a3bd0352",587:"6ed17428",588:"e153e0d6",589:"c27311fb",590:"b2f08643",591:"1b0cf6a1",592:"9ceccab4",593:"270cf444",594:"03dc1f5e",595:"f9410f49",596:"c38ce967",597:"84173280",598:"db127628",599:"1d1a81e4",600:"63f7e822",601:"43a18217",602:"781c1f07",603:"f4dddb2c",604:"1814832b",605:"33915dec",606:"0bbe6656",607:"712842db",608:"af614a04",609:"49afb024",610:"53e8a4d9",611:"e5cfcfdf",612:"32197443",613:"c0f408e3",614:"8e2e0ca0",615:"30291bb7",616:"c34109e1",617:"162c0876",618:"e105413f",619:"5fe7cdc9",620:"e9f12927",621:"b31656bb",622:"fba3945e",623:"84be809e",624:"114c7587",625:"040f8f84",626:"ce624fe2",627:"b31ffab1",628:"256d304c",629:"54a821b1",630:"341643ff",631:"55ab3383",632:"6c87f808",633:"a73fd952",634:"b9789e78",635:"b79b4248",636:"2b66d3a7",637:"49a8ad49",638:"91831e04",639:"cfdab08c",640:"8e725f23",641:"e4542c81",642:"272d1601",643:"d98d64a0",644:"77cd202a",645:"cbc8ff7f",646:"8cefaf17"}[e]+".js"}(e);var s=new Error;o=function(t){l.onerror=l.onload=null,clearTimeout(c);var a=n[e];if(0!==a){if(a){var r=t&&("load"===t.type?"missing":t.type),o=t&&t.target&&t.target.src;s.message="Loading chunk "+e+" failed.\n("+r+": "+o+")",s.name="ChunkLoadError",s.type=r,s.request=o,a[1](s)}n[e]=void 0}};var c=setTimeout((function(){o({type:"timeout",target:l})}),12e4);l.onerror=l.onload=o,document.head.appendChild(l)}return Promise.all(t)},i.m=e,i.c=r,i.d=function(e,t,a){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(i.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(a,r,function(t){return e[t]}.bind(null,r));return a},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="/",i.oe=function(e){throw console.error(e),e};var l=window.webpackJsonp=window.webpackJsonp||[],s=l.push.bind(l);l.push=t,l=l.slice();for(var c=0;c<l.length;c++)t(l[c]);var m=s;o.push([74,0]),a()}([function(e,t,a){"use strict";a.d(t,"a",(function(){return Ka}));
/*!
 * Vue.js v2.7.8
 * (c) 2014-2022 Evan You
 * Released under the MIT License.
 */
var r=Object.freeze({}),n=Array.isArray;function o(e){return null==e}function i(e){return null!=e}function l(e){return!0===e}function s(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function c(e){return"function"==typeof e}function m(e){return null!==e&&"object"==typeof e}var p=Object.prototype.toString;function u(e){return"[object Object]"===p.call(e)}function g(e){return"[object RegExp]"===p.call(e)}function d(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function h(e){return i(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function y(e){return null==e?"":Array.isArray(e)||u(e)&&e.toString===p?JSON.stringify(e,null,2):String(e)}function f(e){var t=parseFloat(e);return isNaN(t)?e:t}function b(e,t){for(var a=Object.create(null),r=e.split(","),n=0;n<r.length;n++)a[r[n]]=!0;return t?function(e){return a[e.toLowerCase()]}:function(e){return a[e]}}b("slot,component",!0);var v=b("key,ref,slot,slot-scope,is");function w(e,t){if(e.length){var a=e.indexOf(t);if(a>-1)return e.splice(a,1)}}var k=Object.prototype.hasOwnProperty;function E(e,t){return k.call(e,t)}function T(e){var t=Object.create(null);return function(a){return t[a]||(t[a]=e(a))}}var x=/-(\w)/g,S=T((function(e){return e.replace(x,(function(e,t){return t?t.toUpperCase():""}))})),P=T((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),q=/\B([A-Z])/g,_=T((function(e){return e.replace(q,"-$1").toLowerCase()}));var A=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function a(a){var r=arguments.length;return r?r>1?e.apply(t,arguments):e.call(t,a):e.call(t)}return a._length=e.length,a};function B(e,t){t=t||0;for(var a=e.length-t,r=new Array(a);a--;)r[a]=e[a+t];return r}function D(e,t){for(var a in t)e[a]=t[a];return e}function C(e){for(var t={},a=0;a<e.length;a++)e[a]&&D(t,e[a]);return t}function L(e,t,a){}var U=function(e,t,a){return!1},J=function(e){return e};function I(e,t){if(e===t)return!0;var a=m(e),r=m(t);if(!a||!r)return!a&&!r&&String(e)===String(t);try{var n=Array.isArray(e),o=Array.isArray(t);if(n&&o)return e.length===t.length&&e.every((function(e,a){return I(e,t[a])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(n||o)return!1;var i=Object.keys(e),l=Object.keys(t);return i.length===l.length&&i.every((function(a){return I(e[a],t[a])}))}catch(e){return!1}}function $(e,t){for(var a=0;a<e.length;a++)if(I(e[a],t))return a;return-1}function j(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}function F(e,t){return e===t?0===e&&1/e!=1/t:e==e||t==t}var z=["component","directive","filter"],O=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],M={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:U,isReservedAttr:U,isUnknownElement:U,getTagNamespace:L,parsePlatformTagName:J,mustUseProp:U,async:!0,_lifecycleHooks:O},N=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function K(e){var t=(e+"").charCodeAt(0);return 36===t||95===t}function R(e,t,a,r){Object.defineProperty(e,t,{value:a,enumerable:!!r,writable:!0,configurable:!0})}var H=new RegExp("[^".concat(N.source,".$_\\d]"));var V="__proto__"in{},W="undefined"!=typeof window,Y=W&&window.navigator.userAgent.toLowerCase(),G=Y&&/msie|trident/.test(Y),X=Y&&Y.indexOf("msie 9.0")>0,Q=Y&&Y.indexOf("edge/")>0;Y&&Y.indexOf("android");var Z=Y&&/iphone|ipad|ipod|ios/.test(Y);Y&&/chrome\/\d+/.test(Y),Y&&/phantomjs/.test(Y);var ee,te=Y&&Y.match(/firefox\/(\d+)/),ae={}.watch,re=!1;if(W)try{var ne={};Object.defineProperty(ne,"passive",{get:function(){re=!0}}),window.addEventListener("test-passive",null,ne)}catch(e){}var oe=function(){return void 0===ee&&(ee=!W&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),ee},ie=W&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function le(e){return"function"==typeof e&&/native code/.test(e.toString())}var se,ce="undefined"!=typeof Symbol&&le(Symbol)&&"undefined"!=typeof Reflect&&le(Reflect.ownKeys);se="undefined"!=typeof Set&&le(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var me=null;function pe(e){void 0===e&&(e=null),e||me&&me._scope.off(),me=e,e&&e._scope.on()}var ue=function(){function e(e,t,a,r,n,o,i,l){this.tag=e,this.data=t,this.children=a,this.text=r,this.elm=n,this.ns=void 0,this.context=o,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=i,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=l,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(e.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),e}(),ge=function(e){void 0===e&&(e="");var t=new ue;return t.text=e,t.isComment=!0,t};function de(e){return new ue(void 0,void 0,void 0,String(e))}function he(e){var t=new ue(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var ye=0,fe=function(){function e(){this.id=ye++,this.subs=[]}return e.prototype.addSub=function(e){this.subs.push(e)},e.prototype.removeSub=function(e){w(this.subs,e)},e.prototype.depend=function(t){e.target&&e.target.addDep(this)},e.prototype.notify=function(e){var t=this.subs.slice();for(var a=0,r=t.length;a<r;a++){t[a].update()}},e}();fe.target=null;var be=[];function ve(e){be.push(e),fe.target=e}function we(){be.pop(),fe.target=be[be.length-1]}var ke=Array.prototype,Ee=Object.create(ke);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=ke[e];R(Ee,e,(function(){for(var a=[],r=0;r<arguments.length;r++)a[r]=arguments[r];var n,o=t.apply(this,a),i=this.__ob__;switch(e){case"push":case"unshift":n=a;break;case"splice":n=a.slice(2)}return n&&i.observeArray(n),i.dep.notify(),o}))}));var Te=Object.getOwnPropertyNames(Ee),xe={},Se=!0;function Pe(e){Se=e}var qe={notify:L,depend:L,addSub:L,removeSub:L},_e=function(){function e(e,t,a){if(void 0===t&&(t=!1),void 0===a&&(a=!1),this.value=e,this.shallow=t,this.mock=a,this.dep=a?qe:new fe,this.vmCount=0,R(e,"__ob__",this),n(e)){if(!a)if(V)e.__proto__=Ee;else for(var r=0,o=Te.length;r<o;r++){R(e,l=Te[r],Ee[l])}t||this.observeArray(e)}else{var i=Object.keys(e);for(r=0;r<i.length;r++){var l;Be(e,l=i[r],xe,void 0,t,a)}}}return e.prototype.observeArray=function(e){for(var t=0,a=e.length;t<a;t++)Ae(e[t],!1,this.mock)},e}();function Ae(e,t,a){var r;if(!(!m(e)||$e(e)||e instanceof ue))return E(e,"__ob__")&&e.__ob__ instanceof _e?r=e.__ob__:!Se||!a&&oe()||!n(e)&&!u(e)||!Object.isExtensible(e)||e.__v_skip||(r=new _e(e,t,a)),r}function Be(e,t,a,r,o,i){var l=new fe,s=Object.getOwnPropertyDescriptor(e,t);if(!s||!1!==s.configurable){var c=s&&s.get,m=s&&s.set;c&&!m||a!==xe&&2!==arguments.length||(a=e[t]);var p=!o&&Ae(a,!1,i);return Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=c?c.call(e):a;return fe.target&&(l.depend(),p&&(p.dep.depend(),n(t)&&Le(t))),$e(t)&&!o?t.value:t},set:function(t){var r=c?c.call(e):a;if(F(r,t)){if(m)m.call(e,t);else{if(c)return;if(!o&&$e(r)&&!$e(t))return void(r.value=t);a=t}p=!o&&Ae(t,!1,i),l.notify()}}}),l}}function De(e,t,a){if(!Ie(e)){var r=e.__ob__;return n(e)&&d(t)?(e.length=Math.max(e.length,t),e.splice(t,1,a),r&&!r.shallow&&r.mock&&Ae(a,!1,!0),a):t in e&&!(t in Object.prototype)?(e[t]=a,a):e._isVue||r&&r.vmCount?a:r?(Be(r.value,t,a,void 0,r.shallow,r.mock),r.dep.notify(),a):(e[t]=a,a)}}function Ce(e,t){if(n(e)&&d(t))e.splice(t,1);else{var a=e.__ob__;e._isVue||a&&a.vmCount||Ie(e)||E(e,t)&&(delete e[t],a&&a.dep.notify())}}function Le(e){for(var t=void 0,a=0,r=e.length;a<r;a++)(t=e[a])&&t.__ob__&&t.__ob__.dep.depend(),n(t)&&Le(t)}function Ue(e){return Je(e,!0),R(e,"__v_isShallow",!0),e}function Je(e,t){if(!Ie(e)){Ae(e,t,oe());0}}function Ie(e){return!(!e||!e.__v_isReadonly)}function $e(e){return!(!e||!0!==e.__v_isRef)}function je(e,t,a){Object.defineProperty(e,a,{enumerable:!0,configurable:!0,get:function(){var e=t[a];if($e(e))return e.value;var r=e&&e.__ob__;return r&&r.dep.depend(),e},set:function(e){var r=t[a];$e(r)&&!$e(e)?r.value=e:t[a]=e}})}"".concat("watcher"," callback"),"".concat("watcher"," getter"),"".concat("watcher"," cleanup");var Fe;var ze=function(){function e(e){void 0===e&&(e=!1),this.active=!0,this.effects=[],this.cleanups=[],!e&&Fe&&(this.parent=Fe,this.index=(Fe.scopes||(Fe.scopes=[])).push(this)-1)}return e.prototype.run=function(e){if(this.active){var t=Fe;try{return Fe=this,e()}finally{Fe=t}}else 0},e.prototype.on=function(){Fe=this},e.prototype.off=function(){Fe=this.parent},e.prototype.stop=function(e){if(this.active){var t=void 0,a=void 0;for(t=0,a=this.effects.length;t<a;t++)this.effects[t].teardown();for(t=0,a=this.cleanups.length;t<a;t++)this.cleanups[t]();if(this.scopes)for(t=0,a=this.scopes.length;t<a;t++)this.scopes[t].stop(!0);if(this.parent&&!e){var r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.active=!1}},e}();function Oe(e){var t=e._provided,a=e.$parent&&e.$parent._provided;return a===t?e._provided=Object.create(a):t}var Me=T((function(e){var t="&"===e.charAt(0),a="~"===(e=t?e.slice(1):e).charAt(0),r="!"===(e=a?e.slice(1):e).charAt(0);return{name:e=r?e.slice(1):e,once:a,capture:r,passive:t}}));function Ne(e,t){function a(){var e=a.fns;if(!n(e))return St(e,null,arguments,t,"v-on handler");for(var r=e.slice(),o=0;o<r.length;o++)St(r[o],null,arguments,t,"v-on handler")}return a.fns=e,a}function Ke(e,t,a,r,n,i){var s,c,m,p;for(s in e)c=e[s],m=t[s],p=Me(s),o(c)||(o(m)?(o(c.fns)&&(c=e[s]=Ne(c,i)),l(p.once)&&(c=e[s]=n(p.name,c,p.capture)),a(p.name,c,p.capture,p.passive,p.params)):c!==m&&(m.fns=c,e[s]=m));for(s in t)o(e[s])&&r((p=Me(s)).name,t[s],p.capture)}function Re(e,t,a){var r;e instanceof ue&&(e=e.data.hook||(e.data.hook={}));var n=e[t];function s(){a.apply(this,arguments),w(r.fns,s)}o(n)?r=Ne([s]):i(n.fns)&&l(n.merged)?(r=n).fns.push(s):r=Ne([n,s]),r.merged=!0,e[t]=r}function He(e,t,a,r,n){if(i(t)){if(E(t,a))return e[a]=t[a],n||delete t[a],!0;if(E(t,r))return e[a]=t[r],n||delete t[r],!0}return!1}function Ve(e){return s(e)?[de(e)]:n(e)?function e(t,a){var r,c,m,p,u=[];for(r=0;r<t.length;r++)o(c=t[r])||"boolean"==typeof c||(m=u.length-1,p=u[m],n(c)?c.length>0&&(We((c=e(c,"".concat(a||"","_").concat(r)))[0])&&We(p)&&(u[m]=de(p.text+c[0].text),c.shift()),u.push.apply(u,c)):s(c)?We(p)?u[m]=de(p.text+c):""!==c&&u.push(de(c)):We(c)&&We(p)?u[m]=de(p.text+c.text):(l(t._isVList)&&i(c.tag)&&o(c.key)&&i(a)&&(c.key="__vlist".concat(a,"_").concat(r,"__")),u.push(c)));return u}(e):void 0}function We(e){return i(e)&&i(e.text)&&!1===e.isComment}function Ye(e,t){var a,r,o,l,s=null;if(n(e)||"string"==typeof e)for(s=new Array(e.length),a=0,r=e.length;a<r;a++)s[a]=t(e[a],a);else if("number"==typeof e)for(s=new Array(e),a=0;a<e;a++)s[a]=t(a+1,a);else if(m(e))if(ce&&e[Symbol.iterator]){s=[];for(var c=e[Symbol.iterator](),p=c.next();!p.done;)s.push(t(p.value,s.length)),p=c.next()}else for(o=Object.keys(e),s=new Array(o.length),a=0,r=o.length;a<r;a++)l=o[a],s[a]=t(e[l],l,a);return i(s)||(s=[]),s._isVList=!0,s}function Ge(e,t,a,r){var n,o=this.$scopedSlots[e];o?(a=a||{},r&&(a=D(D({},r),a)),n=o(a)||(c(t)?t():t)):n=this.$slots[e]||(c(t)?t():t);var i=a&&a.slot;return i?this.$createElement("template",{slot:i},n):n}function Xe(e){return _a(this.$options,"filters",e,!0)||J}function Qe(e,t){return n(e)?-1===e.indexOf(t):e!==t}function Ze(e,t,a,r,n){var o=M.keyCodes[t]||a;return n&&r&&!M.keyCodes[t]?Qe(n,r):o?Qe(o,e):r?_(r)!==t:void 0===e}function et(e,t,a,r,o){if(a)if(m(a)){n(a)&&(a=C(a));var i=void 0,l=function(n){if("class"===n||"style"===n||v(n))i=e;else{var l=e.attrs&&e.attrs.type;i=r||M.mustUseProp(t,l,n)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var s=S(n),c=_(n);s in i||c in i||(i[n]=a[n],o&&((e.on||(e.on={}))["update:".concat(n)]=function(e){a[n]=e}))};for(var s in a)l(s)}else;return e}function tt(e,t){var a=this._staticTrees||(this._staticTrees=[]),r=a[e];return r&&!t||rt(r=a[e]=this.$options.staticRenderFns[e].call(this._renderProxy,this._c,this),"__static__".concat(e),!1),r}function at(e,t,a){return rt(e,"__once__".concat(t).concat(a?"_".concat(a):""),!0),e}function rt(e,t,a){if(n(e))for(var r=0;r<e.length;r++)e[r]&&"string"!=typeof e[r]&&nt(e[r],"".concat(t,"_").concat(r),a);else nt(e,t,a)}function nt(e,t,a){e.isStatic=!0,e.key=t,e.isOnce=a}function ot(e,t){if(t)if(u(t)){var a=e.on=e.on?D({},e.on):{};for(var r in t){var n=a[r],o=t[r];a[r]=n?[].concat(n,o):o}}else;return e}function it(e,t,a,r){t=t||{$stable:!a};for(var o=0;o<e.length;o++){var i=e[o];n(i)?it(i,t,a):i&&(i.proxy&&(i.fn.proxy=!0),t[i.key]=i.fn)}return r&&(t.$key=r),t}function lt(e,t){for(var a=0;a<t.length;a+=2){var r=t[a];"string"==typeof r&&r&&(e[t[a]]=t[a+1])}return e}function st(e,t){return"string"==typeof e?t+e:e}function ct(e){e._o=at,e._n=f,e._s=y,e._l=Ye,e._t=Ge,e._q=I,e._i=$,e._m=tt,e._f=Xe,e._k=Ze,e._b=et,e._v=de,e._e=ge,e._u=it,e._g=ot,e._d=lt,e._p=st}function mt(e,t){if(!e||!e.length)return{};for(var a={},r=0,n=e.length;r<n;r++){var o=e[r],i=o.data;if(i&&i.attrs&&i.attrs.slot&&delete i.attrs.slot,o.context!==t&&o.fnContext!==t||!i||null==i.slot)(a.default||(a.default=[])).push(o);else{var l=i.slot,s=a[l]||(a[l]=[]);"template"===o.tag?s.push.apply(s,o.children||[]):s.push(o)}}for(var c in a)a[c].every(pt)&&delete a[c];return a}function pt(e){return e.isComment&&!e.asyncFactory||" "===e.text}function ut(e){return e.isComment&&e.asyncFactory}function gt(e,t,a,n){var o,i=Object.keys(a).length>0,l=t?!!t.$stable:!i,s=t&&t.$key;if(t){if(t._normalized)return t._normalized;if(l&&n&&n!==r&&s===n.$key&&!i&&!n.$hasNormal)return n;for(var c in o={},t)t[c]&&"$"!==c[0]&&(o[c]=dt(e,a,c,t[c]))}else o={};for(var m in a)m in o||(o[m]=ht(a,m));return t&&Object.isExtensible(t)&&(t._normalized=o),R(o,"$stable",l),R(o,"$key",s),R(o,"$hasNormal",i),o}function dt(e,t,a,r){var o=function(){var t=me;pe(e);var a=arguments.length?r.apply(null,arguments):r({}),o=(a=a&&"object"==typeof a&&!n(a)?[a]:Ve(a))&&a[0];return pe(t),a&&(!o||1===a.length&&o.isComment&&!ut(o))?void 0:a};return r.proxy&&Object.defineProperty(t,a,{get:o,enumerable:!0,configurable:!0}),o}function ht(e,t){return function(){return e[t]}}function yt(e){return{get attrs(){if(!e._attrsProxy){var t=e._attrsProxy={};R(t,"_v_attr_proxy",!0),ft(t,e.$attrs,r,e,"$attrs")}return e._attrsProxy},get listeners(){e._listenersProxy||ft(e._listenersProxy={},e.$listeners,r,e,"$listeners");return e._listenersProxy},get slots(){return function(e){e._slotsProxy||vt(e._slotsProxy={},e.$scopedSlots);return e._slotsProxy}(e)},emit:A(e.$emit,e),expose:function(t){t&&Object.keys(t).forEach((function(a){return je(e,t,a)}))}}}function ft(e,t,a,r,n){var o=!1;for(var i in t)i in e?t[i]!==a[i]&&(o=!0):(o=!0,bt(e,i,r,n));for(var i in e)i in t||(o=!0,delete e[i]);return o}function bt(e,t,a,r){Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){return a[r][t]}})}function vt(e,t){for(var a in t)e[a]=t[a];for(var a in e)a in t||delete e[a]}var wt=null;function kt(e,t){return(e.__esModule||ce&&"Module"===e[Symbol.toStringTag])&&(e=e.default),m(e)?t.extend(e):e}function Et(e){if(n(e))for(var t=0;t<e.length;t++){var a=e[t];if(i(a)&&(i(a.componentOptions)||ut(a)))return a}}function Tt(e,t,a,r,p,u){return(n(a)||s(a))&&(p=r,r=a,a=void 0),l(u)&&(p=2),function(e,t,a,r,s){if(i(a)&&i(a.__ob__))return ge();i(a)&&i(a.is)&&(t=a.is);if(!t)return ge();0;n(r)&&c(r[0])&&((a=a||{}).scopedSlots={default:r[0]},r.length=0);2===s?r=Ve(r):1===s&&(r=function(e){for(var t=0;t<e.length;t++)if(n(e[t]))return Array.prototype.concat.apply([],e);return e}(r));var p,u;if("string"==typeof t){var g=void 0;u=e.$vnode&&e.$vnode.ns||M.getTagNamespace(t),p=M.isReservedTag(t)?new ue(M.parsePlatformTagName(t),a,r,void 0,void 0,e):a&&a.pre||!i(g=_a(e.$options,"components",t))?new ue(t,a,r,void 0,void 0,e):ba(g,a,e,r,t)}else p=ba(t,a,e,r);return n(p)?p:i(p)?(i(u)&&function e(t,a,r){t.ns=a,"foreignObject"===t.tag&&(a=void 0,r=!0);if(i(t.children))for(var n=0,s=t.children.length;n<s;n++){var c=t.children[n];i(c.tag)&&(o(c.ns)||l(r)&&"svg"!==c.tag)&&e(c,a,r)}}(p,u),i(a)&&function(e){m(e.style)&&zt(e.style);m(e.class)&&zt(e.class)}(a),p):ge()}(e,t,a,r,p)}function xt(e,t,a){ve();try{if(t)for(var r=t;r=r.$parent;){var n=r.$options.errorCaptured;if(n)for(var o=0;o<n.length;o++)try{if(!1===n[o].call(r,e,t,a))return}catch(e){Pt(e,r,"errorCaptured hook")}}Pt(e,t,a)}finally{we()}}function St(e,t,a,r,n){var o;try{(o=a?e.apply(t,a):e.call(t))&&!o._isVue&&h(o)&&!o._handled&&(o.catch((function(e){return xt(e,r,n+" (Promise/async)")})),o._handled=!0)}catch(e){xt(e,r,n)}return o}function Pt(e,t,a){if(M.errorHandler)try{return M.errorHandler.call(null,e,t,a)}catch(t){t!==e&&qt(t,null,"config.errorHandler")}qt(e,t,a)}function qt(e,t,a){if(!W||"undefined"==typeof console)throw e;console.error(e)}var _t,At=!1,Bt=[],Dt=!1;function Ct(){Dt=!1;var e=Bt.slice(0);Bt.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&le(Promise)){var Lt=Promise.resolve();_t=function(){Lt.then(Ct),Z&&setTimeout(L)},At=!0}else if(G||"undefined"==typeof MutationObserver||!le(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())_t="undefined"!=typeof setImmediate&&le(setImmediate)?function(){setImmediate(Ct)}:function(){setTimeout(Ct,0)};else{var Ut=1,Jt=new MutationObserver(Ct),It=document.createTextNode(String(Ut));Jt.observe(It,{characterData:!0}),_t=function(){Ut=(Ut+1)%2,It.data=String(Ut)},At=!0}function $t(e,t){var a;if(Bt.push((function(){if(e)try{e.call(t)}catch(e){xt(e,t,"nextTick")}else a&&a(t)})),Dt||(Dt=!0,_t()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){a=e}))}function jt(e){return function(t,a){if(void 0===a&&(a=me),a)return function(e,t,a){var r=e.$options;r[t]=xa(r[t],a)}(a,e,t)}}jt("beforeMount"),jt("mounted"),jt("beforeUpdate"),jt("updated"),jt("beforeDestroy"),jt("destroyed"),jt("errorCaptured"),jt("activated"),jt("deactivated"),jt("serverPrefetch"),jt("renderTracked"),jt("renderTriggered");var Ft=new se;function zt(e){return function e(t,a){var r,o,i=n(t);if(!i&&!m(t)||Object.isFrozen(t)||t instanceof ue)return;if(t.__ob__){var l=t.__ob__.dep.id;if(a.has(l))return;a.add(l)}if(i)for(r=t.length;r--;)e(t[r],a);else if($e(t))e(t.value,a);else for(o=Object.keys(t),r=o.length;r--;)e(t[o[r]],a)}(e,Ft),Ft.clear(),e}var Ot,Mt=0,Nt=function(){function e(e,t,a,r,n){var o,i;o=this,void 0===(i=Fe||(e?e._scope:void 0))&&(i=Fe),i&&i.active&&i.effects.push(o),(this.vm=e)&&n&&(e._watcher=this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=a,this.id=++Mt,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new se,this.newDepIds=new se,this.expression="",c(t)?this.getter=t:(this.getter=function(e){if(!H.test(e)){var t=e.split(".");return function(e){for(var a=0;a<t.length;a++){if(!e)return;e=e[t[a]]}return e}}}(t),this.getter||(this.getter=L)),this.value=this.lazy?void 0:this.get()}return e.prototype.get=function(){var e;ve(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;xt(e,t,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&zt(e),we(),this.cleanupDeps()}return e},e.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},e.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var a=this.depIds;this.depIds=this.newDepIds,this.newDepIds=a,this.newDepIds.clear(),a=this.deps,this.deps=this.newDeps,this.newDeps=a,this.newDeps.length=0},e.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():ma(this)},e.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||m(e)||this.deep){var t=this.value;if(this.value=e,this.user){var a='callback for watcher "'.concat(this.expression,'"');St(this.cb,this.vm,[e,t],this.vm,a)}else this.cb.call(this.vm,e,t)}}},e.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},e.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},e.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&w(this.vm._scope.effects,this),this.active){for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},e}();function Kt(e,t){Ot.$on(e,t)}function Rt(e,t){Ot.$off(e,t)}function Ht(e,t){var a=Ot;return function r(){var n=t.apply(null,arguments);null!==n&&a.$off(e,r)}}function Vt(e,t,a){Ot=e,Ke(t,a||{},Kt,Rt,Ht,e),Ot=void 0}var Wt=null;function Yt(e){var t=Wt;return Wt=e,function(){Wt=t}}function Gt(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function Xt(e,t){if(t){if(e._directInactive=!1,Gt(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var a=0;a<e.$children.length;a++)Xt(e.$children[a]);Qt(e,"activated")}}function Qt(e,t,a,r){void 0===r&&(r=!0),ve();var n=me;r&&pe(e);var o=e.$options[t],i="".concat(t," hook");if(o)for(var l=0,s=o.length;l<s;l++)St(o[l],e,a||null,e,i);e._hasHookEvent&&e.$emit("hook:"+t),r&&pe(n),we()}var Zt=[],ea=[],ta={},aa=!1,ra=!1,na=0;var oa=0,ia=Date.now;if(W&&!G){var la=window.performance;la&&"function"==typeof la.now&&ia()>document.createEvent("Event").timeStamp&&(ia=function(){return la.now()})}var sa=function(e,t){if(e.post){if(!t.post)return 1}else if(t.post)return-1;return e.id-t.id};function ca(){var e,t;for(oa=ia(),ra=!0,Zt.sort(sa),na=0;na<Zt.length;na++)(e=Zt[na]).before&&e.before(),t=e.id,ta[t]=null,e.run();var a=ea.slice(),r=Zt.slice();na=Zt.length=ea.length=0,ta={},aa=ra=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,Xt(e[t],!0)}(a),function(e){var t=e.length;for(;t--;){var a=e[t],r=a.vm;r&&r._watcher===a&&r._isMounted&&!r._isDestroyed&&Qt(r,"updated")}}(r),ie&&M.devtools&&ie.emit("flush")}function ma(e){var t=e.id;if(null==ta[t]&&(e!==fe.target||!e.noRecurse)){if(ta[t]=!0,ra){for(var a=Zt.length-1;a>na&&Zt[a].id>e.id;)a--;Zt.splice(a+1,0,e)}else Zt.push(e);aa||(aa=!0,$t(ca))}}function pa(e,t){if(e){for(var a=Object.create(null),r=ce?Reflect.ownKeys(e):Object.keys(e),n=0;n<r.length;n++){var o=r[n];if("__ob__"!==o){var i=e[o].from;if(i in t._provided)a[o]=t._provided[i];else if("default"in e[o]){var l=e[o].default;a[o]=c(l)?l.call(t):l}else 0}}return a}}function ua(e,t,a,o,i){var s,c=this,m=i.options;E(o,"_uid")?(s=Object.create(o))._original=o:(s=o,o=o._original);var p=l(m._compiled),u=!p;this.data=e,this.props=t,this.children=a,this.parent=o,this.listeners=e.on||r,this.injections=pa(m.inject,o),this.slots=function(){return c.$slots||gt(o,e.scopedSlots,c.$slots=mt(a,o)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return gt(o,e.scopedSlots,this.slots())}}),p&&(this.$options=m,this.$slots=this.slots(),this.$scopedSlots=gt(o,e.scopedSlots,this.$slots)),m._scopeId?this._c=function(e,t,a,r){var i=Tt(s,e,t,a,r,u);return i&&!n(i)&&(i.fnScopeId=m._scopeId,i.fnContext=o),i}:this._c=function(e,t,a,r){return Tt(s,e,t,a,r,u)}}function ga(e,t,a,r,n){var o=he(e);return o.fnContext=a,o.fnOptions=r,t.slot&&((o.data||(o.data={})).slot=t.slot),o}function da(e,t){for(var a in t)e[S(a)]=t[a]}function ha(e){return e.name||e.__name||e._componentTag}ct(ua.prototype);var ya={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var a=e;ya.prepatch(a,a)}else{(e.componentInstance=function(e,t){var a={_isComponent:!0,_parentVnode:e,parent:t},r=e.data.inlineTemplate;i(r)&&(a.render=r.render,a.staticRenderFns=r.staticRenderFns);return new e.componentOptions.Ctor(a)}(e,Wt)).$mount(t?e.elm:void 0,t)}},prepatch:function(e,t){var a=t.componentOptions;!function(e,t,a,n,o){var i=n.data.scopedSlots,l=e.$scopedSlots,s=!!(i&&!i.$stable||l!==r&&!l.$stable||i&&e.$scopedSlots.$key!==i.$key||!i&&e.$scopedSlots.$key),c=!!(o||e.$options._renderChildren||s),m=e.$vnode;e.$options._parentVnode=n,e.$vnode=n,e._vnode&&(e._vnode.parent=n),e.$options._renderChildren=o;var p=n.data.attrs||r;e._attrsProxy&&ft(e._attrsProxy,p,m.data&&m.data.attrs||r,e,"$attrs")&&(c=!0),e.$attrs=p,a=a||r;var u=e.$options._parentListeners;if(e._listenersProxy&&ft(e._listenersProxy,a,u||r,e,"$listeners"),e.$listeners=e.$options._parentListeners=a,Vt(e,a,u),t&&e.$options.props){Pe(!1);for(var g=e._props,d=e.$options._propKeys||[],h=0;h<d.length;h++){var y=d[h],f=e.$options.props;g[y]=Aa(y,f,t,e)}Pe(!0),e.$options.propsData=t}c&&(e.$slots=mt(o,n.context),e.$forceUpdate())}(t.componentInstance=e.componentInstance,a.propsData,a.listeners,t,a.children)},insert:function(e){var t,a=e.context,r=e.componentInstance;r._isMounted||(r._isMounted=!0,Qt(r,"mounted")),e.data.keepAlive&&(a._isMounted?((t=r)._inactive=!1,ea.push(t)):Xt(r,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?function e(t,a){if(!(a&&(t._directInactive=!0,Gt(t))||t._inactive)){t._inactive=!0;for(var r=0;r<t.$children.length;r++)e(t.$children[r]);Qt(t,"deactivated")}}(t,!0):t.$destroy())}},fa=Object.keys(ya);function ba(e,t,a,s,c){if(!o(e)){var p=a.$options._base;if(m(e)&&(e=p.extend(e)),"function"==typeof e){var u;if(o(e.cid)&&void 0===(e=function(e,t){if(l(e.error)&&i(e.errorComp))return e.errorComp;if(i(e.resolved))return e.resolved;var a=wt;if(a&&i(e.owners)&&-1===e.owners.indexOf(a)&&e.owners.push(a),l(e.loading)&&i(e.loadingComp))return e.loadingComp;if(a&&!i(e.owners)){var r=e.owners=[a],n=!0,s=null,c=null;a.$on("hook:destroyed",(function(){return w(r,a)}));var p=function(e){for(var t=0,a=r.length;t<a;t++)r[t].$forceUpdate();e&&(r.length=0,null!==s&&(clearTimeout(s),s=null),null!==c&&(clearTimeout(c),c=null))},u=j((function(a){e.resolved=kt(a,t),n?r.length=0:p(!0)})),g=j((function(t){i(e.errorComp)&&(e.error=!0,p(!0))})),d=e(u,g);return m(d)&&(h(d)?o(e.resolved)&&d.then(u,g):h(d.component)&&(d.component.then(u,g),i(d.error)&&(e.errorComp=kt(d.error,t)),i(d.loading)&&(e.loadingComp=kt(d.loading,t),0===d.delay?e.loading=!0:s=setTimeout((function(){s=null,o(e.resolved)&&o(e.error)&&(e.loading=!0,p(!1))}),d.delay||200)),i(d.timeout)&&(c=setTimeout((function(){c=null,o(e.resolved)&&g(null)}),d.timeout)))),n=!1,e.loading?e.loadingComp:e.resolved}}(u=e,p)))return function(e,t,a,r,n){var o=ge();return o.asyncFactory=e,o.asyncMeta={data:t,context:a,children:r,tag:n},o}(u,t,a,s,c);t=t||{},Na(e),i(t.model)&&function(e,t){var a=e.model&&e.model.prop||"value",r=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[a]=t.model.value;var o=t.on||(t.on={}),l=o[r],s=t.model.callback;i(l)?(n(l)?-1===l.indexOf(s):l!==s)&&(o[r]=[s].concat(l)):o[r]=s}(e.options,t);var g=function(e,t,a){var r=t.options.props;if(!o(r)){var n={},l=e.attrs,s=e.props;if(i(l)||i(s))for(var c in r){var m=_(c);He(n,s,c,m,!0)||He(n,l,c,m,!1)}return n}}(t,e);if(l(e.options.functional))return function(e,t,a,o,l){var s=e.options,c={},m=s.props;if(i(m))for(var p in m)c[p]=Aa(p,m,t||r);else i(a.attrs)&&da(c,a.attrs),i(a.props)&&da(c,a.props);var u=new ua(a,c,l,o,e),g=s.render.call(null,u._c,u);if(g instanceof ue)return ga(g,a,u.parent,s,u);if(n(g)){for(var d=Ve(g)||[],h=new Array(d.length),y=0;y<d.length;y++)h[y]=ga(d[y],a,u.parent,s,u);return h}}(e,g,t,a,s);var d=t.on;if(t.on=t.nativeOn,l(e.options.abstract)){var y=t.slot;t={},y&&(t.slot=y)}!function(e){for(var t=e.hook||(e.hook={}),a=0;a<fa.length;a++){var r=fa[a],n=t[r],o=ya[r];n===o||n&&n._merged||(t[r]=n?va(o,n):o)}}(t);var f=ha(e.options)||c;return new ue("vue-component-".concat(e.cid).concat(f?"-".concat(f):""),t,void 0,void 0,void 0,a,{Ctor:e,propsData:g,listeners:d,tag:c,children:s},u)}}}function va(e,t){var a=function(a,r){e(a,r),t(a,r)};return a._merged=!0,a}var wa=L,ka=M.optionMergeStrategies;function Ea(e,t){if(!t)return e;for(var a,r,n,o=ce?Reflect.ownKeys(t):Object.keys(t),i=0;i<o.length;i++)"__ob__"!==(a=o[i])&&(r=e[a],n=t[a],E(e,a)?r!==n&&u(r)&&u(n)&&Ea(r,n):De(e,a,n));return e}function Ta(e,t,a){return a?function(){var r=c(t)?t.call(a,a):t,n=c(e)?e.call(a,a):e;return r?Ea(r,n):n}:t?e?function(){return Ea(c(t)?t.call(this,this):t,c(e)?e.call(this,this):e)}:t:e}function xa(e,t){var a=t?e?e.concat(t):n(t)?t:[t]:e;return a?function(e){for(var t=[],a=0;a<e.length;a++)-1===t.indexOf(e[a])&&t.push(e[a]);return t}(a):a}function Sa(e,t,a,r){var n=Object.create(e||null);return t?D(n,t):n}ka.data=function(e,t,a){return a?Ta(e,t,a):t&&"function"!=typeof t?e:Ta(e,t)},O.forEach((function(e){ka[e]=xa})),z.forEach((function(e){ka[e+"s"]=Sa})),ka.watch=function(e,t,a,r){if(e===ae&&(e=void 0),t===ae&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var o={};for(var i in D(o,e),t){var l=o[i],s=t[i];l&&!n(l)&&(l=[l]),o[i]=l?l.concat(s):n(s)?s:[s]}return o},ka.props=ka.methods=ka.inject=ka.computed=function(e,t,a,r){if(!e)return t;var n=Object.create(null);return D(n,e),t&&D(n,t),n},ka.provide=Ta;var Pa=function(e,t){return void 0===t?e:t};function qa(e,t,a){if(c(t)&&(t=t.options),function(e,t){var a=e.props;if(a){var r,o,i={};if(n(a))for(r=a.length;r--;)"string"==typeof(o=a[r])&&(i[S(o)]={type:null});else if(u(a))for(var l in a)o=a[l],i[S(l)]=u(o)?o:{type:o};else 0;e.props=i}}(t),function(e,t){var a=e.inject;if(a){var r=e.inject={};if(n(a))for(var o=0;o<a.length;o++)r[a[o]]={from:a[o]};else if(u(a))for(var i in a){var l=a[i];r[i]=u(l)?D({from:i},l):{from:l}}else 0}}(t),function(e){var t=e.directives;if(t)for(var a in t){var r=t[a];c(r)&&(t[a]={bind:r,update:r})}}(t),!t._base&&(t.extends&&(e=qa(e,t.extends,a)),t.mixins))for(var r=0,o=t.mixins.length;r<o;r++)e=qa(e,t.mixins[r],a);var i,l={};for(i in e)s(i);for(i in t)E(e,i)||s(i);function s(r){var n=ka[r]||Pa;l[r]=n(e[r],t[r],a,r)}return l}function _a(e,t,a,r){if("string"==typeof a){var n=e[t];if(E(n,a))return n[a];var o=S(a);if(E(n,o))return n[o];var i=P(o);return E(n,i)?n[i]:n[a]||n[o]||n[i]}}function Aa(e,t,a,r){var n=t[e],o=!E(a,e),i=a[e],l=La(Boolean,n.type);if(l>-1)if(o&&!E(n,"default"))i=!1;else if(""===i||i===_(e)){var s=La(String,n.type);(s<0||l<s)&&(i=!0)}if(void 0===i){i=function(e,t,a){if(!E(t,"default"))return;var r=t.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[a]&&void 0!==e._props[a])return e._props[a];return c(r)&&"Function"!==Da(t.type)?r.call(e):r}(r,n,e);var m=Se;Pe(!0),Ae(i),Pe(m)}return i}var Ba=/^\s*function (\w+)/;function Da(e){var t=e&&e.toString().match(Ba);return t?t[1]:""}function Ca(e,t){return Da(e)===Da(t)}function La(e,t){if(!n(t))return Ca(t,e)?0:-1;for(var a=0,r=t.length;a<r;a++)if(Ca(t[a],e))return a;return-1}var Ua={enumerable:!0,configurable:!0,get:L,set:L};function Ja(e,t,a){Ua.get=function(){return this[t][a]},Ua.set=function(e){this[t][a]=e},Object.defineProperty(e,a,Ua)}function Ia(e){var t=e.$options;if(t.props&&function(e,t){var a=e.$options.propsData||{},r=e._props=Ue({}),n=e.$options._propKeys=[];e.$parent&&Pe(!1);var o=function(o){n.push(o);var i=Aa(o,t,a,e);Be(r,o,i),o in e||Ja(e,"_props",o)};for(var i in t)o(i);Pe(!0)}(e,t.props),function(e){var t=e.$options,a=t.setup;if(a){var r=e._setupContext=yt(e);pe(e),ve();var n=St(a,null,[e._props||Ue({}),r],e,"setup");if(we(),pe(),c(n))t.render=n;else if(m(n))if(e._setupState=n,n.__sfc){var o=e._setupProxy={};for(var i in n)"__sfc"!==i&&je(o,n,i)}else for(var i in n)K(i)||je(e,n,i);else 0}}(e),t.methods&&function(e,t){e.$options.props;for(var a in t)e[a]="function"!=typeof t[a]?L:A(t[a],e)}(e,t.methods),t.data)!function(e){var t=e.$options.data;u(t=e._data=c(t)?function(e,t){ve();try{return e.call(t,t)}catch(e){return xt(e,t,"data()"),{}}finally{we()}}(t,e):t||{})||(t={});var a=Object.keys(t),r=e.$options.props,n=(e.$options.methods,a.length);for(;n--;){var o=a[n];0,r&&E(r,o)||K(o)||Ja(e,"_data",o)}var i=Ae(t);i&&i.vmCount++}(e);else{var a=Ae(e._data={});a&&a.vmCount++}t.computed&&function(e,t){var a=e._computedWatchers=Object.create(null),r=oe();for(var n in t){var o=t[n],i=c(o)?o:o.get;0,r||(a[n]=new Nt(e,i||L,L,$a)),n in e||ja(e,n,o)}}(e,t.computed),t.watch&&t.watch!==ae&&function(e,t){for(var a in t){var r=t[a];if(n(r))for(var o=0;o<r.length;o++)Oa(e,a,r[o]);else Oa(e,a,r)}}(e,t.watch)}var $a={lazy:!0};function ja(e,t,a){var r=!oe();c(a)?(Ua.get=r?Fa(t):za(a),Ua.set=L):(Ua.get=a.get?r&&!1!==a.cache?Fa(t):za(a.get):L,Ua.set=a.set||L),Object.defineProperty(e,t,Ua)}function Fa(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),fe.target&&t.depend(),t.value}}function za(e){return function(){return e.call(this,this)}}function Oa(e,t,a,r){return u(a)&&(r=a,a=a.handler),"string"==typeof a&&(a=e[a]),e.$watch(t,a,r)}var Ma=0;function Na(e){var t=e.options;if(e.super){var a=Na(e.super);if(a!==e.superOptions){e.superOptions=a;var r=function(e){var t,a=e.options,r=e.sealedOptions;for(var n in a)a[n]!==r[n]&&(t||(t={}),t[n]=a[n]);return t}(e);r&&D(e.extendOptions,r),(t=e.options=qa(a,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function Ka(e){this._init(e)}function Ra(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var a=this,r=a.cid,n=e._Ctor||(e._Ctor={});if(n[r])return n[r];var o=ha(e)||ha(a.options);var i=function(e){this._init(e)};return(i.prototype=Object.create(a.prototype)).constructor=i,i.cid=t++,i.options=qa(a.options,e),i.super=a,i.options.props&&function(e){var t=e.options.props;for(var a in t)Ja(e.prototype,"_props",a)}(i),i.options.computed&&function(e){var t=e.options.computed;for(var a in t)ja(e.prototype,a,t[a])}(i),i.extend=a.extend,i.mixin=a.mixin,i.use=a.use,z.forEach((function(e){i[e]=a[e]})),o&&(i.options.components[o]=i),i.superOptions=a.options,i.extendOptions=e,i.sealedOptions=D({},i.options),n[r]=i,i}}function Ha(e){return e&&(ha(e.Ctor.options)||e.tag)}function Va(e,t){return n(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:!!g(e)&&e.test(t)}function Wa(e,t){var a=e.cache,r=e.keys,n=e._vnode;for(var o in a){var i=a[o];if(i){var l=i.name;l&&!t(l)&&Ya(a,o,r,n)}}}function Ya(e,t,a,r){var n=e[t];!n||r&&n.tag===r.tag||n.componentInstance.$destroy(),e[t]=null,w(a,t)}!function(e){e.prototype._init=function(e){var t=this;t._uid=Ma++,t._isVue=!0,t.__v_skip=!0,t._scope=new ze(!0),e&&e._isComponent?function(e,t){var a=e.$options=Object.create(e.constructor.options),r=t._parentVnode;a.parent=t.parent,a._parentVnode=r;var n=r.componentOptions;a.propsData=n.propsData,a._parentListeners=n.listeners,a._renderChildren=n.children,a._componentTag=n.tag,t.render&&(a.render=t.render,a.staticRenderFns=t.staticRenderFns)}(t,e):t.$options=qa(Na(t.constructor),e||{},t),t._renderProxy=t,t._self=t,function(e){var t=e.$options,a=t.parent;if(a&&!t.abstract){for(;a.$options.abstract&&a.$parent;)a=a.$parent;a.$children.push(e)}e.$parent=a,e.$root=a?a.$root:e,e.$children=[],e.$refs={},e._provided=a?a._provided:Object.create(null),e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(t),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Vt(e,t)}(t),function(e){e._vnode=null,e._staticTrees=null;var t=e.$options,a=e.$vnode=t._parentVnode,n=a&&a.context;e.$slots=mt(t._renderChildren,n),e.$scopedSlots=a?gt(e.$parent,a.data.scopedSlots,e.$slots):r,e._c=function(t,a,r,n){return Tt(e,t,a,r,n,!1)},e.$createElement=function(t,a,r,n){return Tt(e,t,a,r,n,!0)};var o=a&&a.data;Be(e,"$attrs",o&&o.attrs||r,null,!0),Be(e,"$listeners",t._parentListeners||r,null,!0)}(t),Qt(t,"beforeCreate",void 0,!1),function(e){var t=pa(e.$options.inject,e);t&&(Pe(!1),Object.keys(t).forEach((function(a){Be(e,a,t[a])})),Pe(!0))}(t),Ia(t),function(e){var t=e.$options.provide;if(t){var a=c(t)?t.call(e):t;if(!m(a))return;for(var r=Oe(e),n=ce?Reflect.ownKeys(a):Object.keys(a),o=0;o<n.length;o++){var i=n[o];Object.defineProperty(r,i,Object.getOwnPropertyDescriptor(a,i))}}}(t),Qt(t,"created"),t.$options.el&&t.$mount(t.$options.el)}}(Ka),function(e){var t={get:function(){return this._data}},a={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",t),Object.defineProperty(e.prototype,"$props",a),e.prototype.$set=De,e.prototype.$delete=Ce,e.prototype.$watch=function(e,t,a){if(u(t))return Oa(this,e,t,a);(a=a||{}).user=!0;var r=new Nt(this,e,t,a);if(a.immediate){var n='callback for immediate watcher "'.concat(r.expression,'"');ve(),St(t,this,[r.value],this,n),we()}return function(){r.teardown()}}}(Ka),function(e){var t=/^hook:/;e.prototype.$on=function(e,a){var r=this;if(n(e))for(var o=0,i=e.length;o<i;o++)r.$on(e[o],a);else(r._events[e]||(r._events[e]=[])).push(a),t.test(e)&&(r._hasHookEvent=!0);return r},e.prototype.$once=function(e,t){var a=this;function r(){a.$off(e,r),t.apply(a,arguments)}return r.fn=t,a.$on(e,r),a},e.prototype.$off=function(e,t){var a=this;if(!arguments.length)return a._events=Object.create(null),a;if(n(e)){for(var r=0,o=e.length;r<o;r++)a.$off(e[r],t);return a}var i,l=a._events[e];if(!l)return a;if(!t)return a._events[e]=null,a;for(var s=l.length;s--;)if((i=l[s])===t||i.fn===t){l.splice(s,1);break}return a},e.prototype.$emit=function(e){var t=this,a=t._events[e];if(a){a=a.length>1?B(a):a;for(var r=B(arguments,1),n='event handler for "'.concat(e,'"'),o=0,i=a.length;o<i;o++)St(a[o],t,r,t,n)}return t}}(Ka),function(e){e.prototype._update=function(e,t){var a=this,r=a.$el,n=a._vnode,o=Yt(a);a._vnode=e,a.$el=n?a.__patch__(n,e):a.__patch__(a.$el,e,t,!1),o(),r&&(r.__vue__=null),a.$el&&(a.$el.__vue__=a),a.$vnode&&a.$parent&&a.$vnode===a.$parent._vnode&&(a.$parent.$el=a.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){Qt(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||w(t.$children,e),e._scope.stop(),e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),Qt(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Ka),function(e){ct(e.prototype),e.prototype.$nextTick=function(e){return $t(e,this)},e.prototype._render=function(){var e,t=this,a=t.$options,r=a.render,o=a._parentVnode;o&&t._isMounted&&(t.$scopedSlots=gt(t.$parent,o.data.scopedSlots,t.$slots,t.$scopedSlots),t._slotsProxy&&vt(t._slotsProxy,t.$scopedSlots)),t.$vnode=o;try{pe(t),wt=t,e=r.call(t._renderProxy,t.$createElement)}catch(a){xt(a,t,"render"),e=t._vnode}finally{wt=null,pe()}return n(e)&&1===e.length&&(e=e[0]),e instanceof ue||(e=ge()),e.parent=o,e}}(Ka);var Ga=[String,RegExp,Array],Xa={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Ga,exclude:Ga,max:[String,Number]},methods:{cacheVNode:function(){var e=this.cache,t=this.keys,a=this.vnodeToCache,r=this.keyToCache;if(a){var n=a.tag,o=a.componentInstance,i=a.componentOptions;e[r]={name:Ha(i),tag:n,componentInstance:o},t.push(r),this.max&&t.length>parseInt(this.max)&&Ya(e,t[0],t,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Ya(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(t){Wa(e,(function(e){return Va(t,e)}))})),this.$watch("exclude",(function(t){Wa(e,(function(e){return!Va(t,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,t=Et(e),a=t&&t.componentOptions;if(a){var r=Ha(a),n=this.include,o=this.exclude;if(n&&(!r||!Va(n,r))||o&&r&&Va(o,r))return t;var i=this.cache,l=this.keys,s=null==t.key?a.Ctor.cid+(a.tag?"::".concat(a.tag):""):t.key;i[s]?(t.componentInstance=i[s].componentInstance,w(l,s),l.push(s)):(this.vnodeToCache=t,this.keyToCache=s),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return M}};Object.defineProperty(e,"config",t),e.util={warn:wa,extend:D,mergeOptions:qa,defineReactive:Be},e.set=De,e.delete=Ce,e.nextTick=$t,e.observable=function(e){return Ae(e),e},e.options=Object.create(null),z.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,D(e.options.components,Xa),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var a=B(arguments,1);return a.unshift(this),c(e.install)?e.install.apply(e,a):c(e)&&e.apply(null,a),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=qa(this.options,e),this}}(e),Ra(e),function(e){z.forEach((function(t){e[t]=function(e,a){return a?("component"===t&&u(a)&&(a.name=a.name||e,a=this.options._base.extend(a)),"directive"===t&&c(a)&&(a={bind:a,update:a}),this.options[t+"s"][e]=a,a):this.options[t+"s"][e]}}))}(e)}(Ka),Object.defineProperty(Ka.prototype,"$isServer",{get:oe}),Object.defineProperty(Ka.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Ka,"FunctionalRenderContext",{value:ua}),Ka.version="2.7.8";var Qa=b("style,class"),Za=b("input,textarea,option,select,progress"),er=b("contenteditable,draggable,spellcheck"),tr=b("events,caret,typing,plaintext-only"),ar=b("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),rr="http://www.w3.org/1999/xlink",nr=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},or=function(e){return nr(e)?e.slice(6,e.length):""},ir=function(e){return null==e||!1===e};function lr(e){for(var t=e.data,a=e,r=e;i(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(t=sr(r.data,t));for(;i(a=a.parent);)a&&a.data&&(t=sr(t,a.data));return function(e,t){if(i(e)||i(t))return cr(e,mr(t));return""}(t.staticClass,t.class)}function sr(e,t){return{staticClass:cr(e.staticClass,t.staticClass),class:i(e.class)?[e.class,t.class]:t.class}}function cr(e,t){return e?t?e+" "+t:e:t||""}function mr(e){return Array.isArray(e)?function(e){for(var t,a="",r=0,n=e.length;r<n;r++)i(t=mr(e[r]))&&""!==t&&(a&&(a+=" "),a+=t);return a}(e):m(e)?function(e){var t="";for(var a in e)e[a]&&(t&&(t+=" "),t+=a);return t}(e):"string"==typeof e?e:""}var pr={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},ur=b("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),gr=b("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),dr=function(e){return ur(e)||gr(e)};var hr=Object.create(null);var yr=b("text,number,password,search,email,tel,url");var fr=Object.freeze({__proto__:null,createElement:function(e,t){var a=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&a.setAttribute("multiple","multiple"),a},createElementNS:function(e,t){return document.createElementNS(pr[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,a){e.insertBefore(t,a)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),br={create:function(e,t){vr(t)},update:function(e,t){e.data.ref!==t.data.ref&&(vr(e,!0),vr(t))},destroy:function(e){vr(e,!0)}};function vr(e,t){var a=e.data.ref;if(i(a)){var r=e.context,o=e.componentInstance||e.elm,l=t?null:o,s=t?void 0:o;if(c(a))St(a,r,[l],r,"template ref function");else{var m=e.data.refInFor,p="string"==typeof a||"number"==typeof a,u=$e(a),g=r.$refs;if(p||u)if(m){var d=p?g[a]:a.value;t?n(d)&&w(d,o):n(d)?d.includes(o)||d.push(o):p?(g[a]=[o],wr(r,a,g[a])):a.value=[o]}else if(p){if(t&&g[a]!==o)return;g[a]=s,wr(r,a,l)}else if(u){if(t&&a.value!==o)return;a.value=l}else 0}}}function wr(e,t,a){var r=e._setupState;r&&E(r,t)&&($e(r[t])?r[t].value=a:r[t]=a)}var kr=new ue("",{},[]),Er=["create","activate","update","remove","destroy"];function Tr(e,t){return e.key===t.key&&e.asyncFactory===t.asyncFactory&&(e.tag===t.tag&&e.isComment===t.isComment&&i(e.data)===i(t.data)&&function(e,t){if("input"!==e.tag)return!0;var a,r=i(a=e.data)&&i(a=a.attrs)&&a.type,n=i(a=t.data)&&i(a=a.attrs)&&a.type;return r===n||yr(r)&&yr(n)}(e,t)||l(e.isAsyncPlaceholder)&&o(t.asyncFactory.error))}function xr(e,t,a){var r,n,o={};for(r=t;r<=a;++r)i(n=e[r].key)&&(o[n]=r);return o}var Sr={create:Pr,update:Pr,destroy:function(e){Pr(e,kr)}};function Pr(e,t){(e.data.directives||t.data.directives)&&function(e,t){var a,r,n,o=e===kr,i=t===kr,l=_r(e.data.directives,e.context),s=_r(t.data.directives,t.context),c=[],m=[];for(a in s)r=l[a],n=s[a],r?(n.oldValue=r.value,n.oldArg=r.arg,Br(n,"update",t,e),n.def&&n.def.componentUpdated&&m.push(n)):(Br(n,"bind",t,e),n.def&&n.def.inserted&&c.push(n));if(c.length){var p=function(){for(var a=0;a<c.length;a++)Br(c[a],"inserted",t,e)};o?Re(t,"insert",p):p()}m.length&&Re(t,"postpatch",(function(){for(var a=0;a<m.length;a++)Br(m[a],"componentUpdated",t,e)}));if(!o)for(a in l)s[a]||Br(l[a],"unbind",e,e,i)}(e,t)}var qr=Object.create(null);function _r(e,t){var a,r,n=Object.create(null);if(!e)return n;for(a=0;a<e.length;a++)(r=e[a]).modifiers||(r.modifiers=qr),n[Ar(r)]=r,t._setupState&&t._setupState.__sfc&&(r.def=r.def||_a(t,"_setupState","v-"+r.name)),r.def=r.def||_a(t.$options,"directives",r.name);return n}function Ar(e){return e.rawName||"".concat(e.name,".").concat(Object.keys(e.modifiers||{}).join("."))}function Br(e,t,a,r,n){var o=e.def&&e.def[t];if(o)try{o(a.elm,e,a,r,n)}catch(r){xt(r,a.context,"directive ".concat(e.name," ").concat(t," hook"))}}var Dr=[br,Sr];function Cr(e,t){var a=t.componentOptions;if(!(i(a)&&!1===a.Ctor.options.inheritAttrs||o(e.data.attrs)&&o(t.data.attrs))){var r,n,s=t.elm,c=e.data.attrs||{},m=t.data.attrs||{};for(r in(i(m.__ob__)||l(m._v_attr_proxy))&&(m=t.data.attrs=D({},m)),m)n=m[r],c[r]!==n&&Lr(s,r,n,t.data.pre);for(r in(G||Q)&&m.value!==c.value&&Lr(s,"value",m.value),c)o(m[r])&&(nr(r)?s.removeAttributeNS(rr,or(r)):er(r)||s.removeAttribute(r))}}function Lr(e,t,a,r){r||e.tagName.indexOf("-")>-1?Ur(e,t,a):ar(t)?ir(a)?e.removeAttribute(t):(a="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,a)):er(t)?e.setAttribute(t,function(e,t){return ir(t)||"false"===t?"false":"contenteditable"===e&&tr(t)?t:"true"}(t,a)):nr(t)?ir(a)?e.removeAttributeNS(rr,or(t)):e.setAttributeNS(rr,t,a):Ur(e,t,a)}function Ur(e,t,a){if(ir(a))e.removeAttribute(t);else{if(G&&!X&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==a&&!e.__ieph){var r=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",r)};e.addEventListener("input",r),e.__ieph=!0}e.setAttribute(t,a)}}var Jr={create:Cr,update:Cr};function Ir(e,t){var a=t.elm,r=t.data,n=e.data;if(!(o(r.staticClass)&&o(r.class)&&(o(n)||o(n.staticClass)&&o(n.class)))){var l=lr(t),s=a._transitionClasses;i(s)&&(l=cr(l,mr(s))),l!==a._prevClass&&(a.setAttribute("class",l),a._prevClass=l)}}var $r,jr={create:Ir,update:Ir};function Fr(e,t,a){var r=$r;return function n(){var o=t.apply(null,arguments);null!==o&&Mr(e,n,a,r)}}var zr=At&&!(te&&Number(te[1])<=53);function Or(e,t,a,r){if(zr){var n=oa,o=t;t=o._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=n||e.timeStamp<=0||e.target.ownerDocument!==document)return o.apply(this,arguments)}}$r.addEventListener(e,t,re?{capture:a,passive:r}:a)}function Mr(e,t,a,r){(r||$r).removeEventListener(e,t._wrapper||t,a)}function Nr(e,t){if(!o(e.data.on)||!o(t.data.on)){var a=t.data.on||{},r=e.data.on||{};$r=t.elm||e.elm,function(e){if(i(e.__r)){var t=G?"change":"input";e[t]=[].concat(e.__r,e[t]||[]),delete e.__r}i(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(a),Ke(a,r,Or,Mr,Fr,t.context),$r=void 0}}var Kr,Rr={create:Nr,update:Nr,destroy:function(e){return Nr(e,kr)}};function Hr(e,t){if(!o(e.data.domProps)||!o(t.data.domProps)){var a,r,n=t.elm,s=e.data.domProps||{},c=t.data.domProps||{};for(a in(i(c.__ob__)||l(c._v_attr_proxy))&&(c=t.data.domProps=D({},c)),s)a in c||(n[a]="");for(a in c){if(r=c[a],"textContent"===a||"innerHTML"===a){if(t.children&&(t.children.length=0),r===s[a])continue;1===n.childNodes.length&&n.removeChild(n.childNodes[0])}if("value"===a&&"PROGRESS"!==n.tagName){n._value=r;var m=o(r)?"":String(r);Vr(n,m)&&(n.value=m)}else if("innerHTML"===a&&gr(n.tagName)&&o(n.innerHTML)){(Kr=Kr||document.createElement("div")).innerHTML="<svg>".concat(r,"</svg>");for(var p=Kr.firstChild;n.firstChild;)n.removeChild(n.firstChild);for(;p.firstChild;)n.appendChild(p.firstChild)}else if(r!==s[a])try{n[a]=r}catch(e){}}}}function Vr(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var a=!0;try{a=document.activeElement!==e}catch(e){}return a&&e.value!==t}(e,t)||function(e,t){var a=e.value,r=e._vModifiers;if(i(r)){if(r.number)return f(a)!==f(t);if(r.trim)return a.trim()!==t.trim()}return a!==t}(e,t))}var Wr={create:Hr,update:Hr},Yr=T((function(e){var t={},a=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var r=e.split(a);r.length>1&&(t[r[0].trim()]=r[1].trim())}})),t}));function Gr(e){var t=Xr(e.style);return e.staticStyle?D(e.staticStyle,t):t}function Xr(e){return Array.isArray(e)?C(e):"string"==typeof e?Yr(e):e}var Qr,Zr=/^--/,en=/\s*!important$/,tn=function(e,t,a){if(Zr.test(t))e.style.setProperty(t,a);else if(en.test(a))e.style.setProperty(_(t),a.replace(en,""),"important");else{var r=rn(t);if(Array.isArray(a))for(var n=0,o=a.length;n<o;n++)e.style[r]=a[n];else e.style[r]=a}},an=["Webkit","Moz","ms"],rn=T((function(e){if(Qr=Qr||document.createElement("div").style,"filter"!==(e=S(e))&&e in Qr)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),a=0;a<an.length;a++){var r=an[a]+t;if(r in Qr)return r}}));function nn(e,t){var a=t.data,r=e.data;if(!(o(a.staticStyle)&&o(a.style)&&o(r.staticStyle)&&o(r.style))){var n,l,s=t.elm,c=r.staticStyle,m=r.normalizedStyle||r.style||{},p=c||m,u=Xr(t.data.style)||{};t.data.normalizedStyle=i(u.__ob__)?D({},u):u;var g=function(e,t){var a,r={};if(t)for(var n=e;n.componentInstance;)(n=n.componentInstance._vnode)&&n.data&&(a=Gr(n.data))&&D(r,a);(a=Gr(e.data))&&D(r,a);for(var o=e;o=o.parent;)o.data&&(a=Gr(o.data))&&D(r,a);return r}(t,!0);for(l in p)o(g[l])&&tn(s,l,"");for(l in g)(n=g[l])!==p[l]&&tn(s,l,null==n?"":n)}}var on={create:nn,update:nn},ln=/\s+/;function sn(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(ln).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var a=" ".concat(e.getAttribute("class")||""," ");a.indexOf(" "+t+" ")<0&&e.setAttribute("class",(a+t).trim())}}function cn(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(ln).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var a=" ".concat(e.getAttribute("class")||""," "),r=" "+t+" ";a.indexOf(r)>=0;)a=a.replace(r," ");(a=a.trim())?e.setAttribute("class",a):e.removeAttribute("class")}}function mn(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&D(t,pn(e.name||"v")),D(t,e),t}return"string"==typeof e?pn(e):void 0}}var pn=T((function(e){return{enterClass:"".concat(e,"-enter"),enterToClass:"".concat(e,"-enter-to"),enterActiveClass:"".concat(e,"-enter-active"),leaveClass:"".concat(e,"-leave"),leaveToClass:"".concat(e,"-leave-to"),leaveActiveClass:"".concat(e,"-leave-active")}})),un=W&&!X,gn="transition",dn="transitionend",hn="animation",yn="animationend";un&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(gn="WebkitTransition",dn="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(hn="WebkitAnimation",yn="webkitAnimationEnd"));var fn=W?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function bn(e){fn((function(){fn(e)}))}function vn(e,t){var a=e._transitionClasses||(e._transitionClasses=[]);a.indexOf(t)<0&&(a.push(t),sn(e,t))}function wn(e,t){e._transitionClasses&&w(e._transitionClasses,t),cn(e,t)}function kn(e,t,a){var r=Tn(e,t),n=r.type,o=r.timeout,i=r.propCount;if(!n)return a();var l="transition"===n?dn:yn,s=0,c=function(){e.removeEventListener(l,m),a()},m=function(t){t.target===e&&++s>=i&&c()};setTimeout((function(){s<i&&c()}),o+1),e.addEventListener(l,m)}var En=/\b(transform|all)(,|$)/;function Tn(e,t){var a,r=window.getComputedStyle(e),n=(r[gn+"Delay"]||"").split(", "),o=(r[gn+"Duration"]||"").split(", "),i=xn(n,o),l=(r[hn+"Delay"]||"").split(", "),s=(r[hn+"Duration"]||"").split(", "),c=xn(l,s),m=0,p=0;return"transition"===t?i>0&&(a="transition",m=i,p=o.length):"animation"===t?c>0&&(a="animation",m=c,p=s.length):p=(a=(m=Math.max(i,c))>0?i>c?"transition":"animation":null)?"transition"===a?o.length:s.length:0,{type:a,timeout:m,propCount:p,hasTransform:"transition"===a&&En.test(r[gn+"Property"])}}function xn(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,a){return Sn(t)+Sn(e[a])})))}function Sn(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function Pn(e,t){var a=e.elm;i(a._leaveCb)&&(a._leaveCb.cancelled=!0,a._leaveCb());var r=mn(e.data.transition);if(!o(r)&&!i(a._enterCb)&&1===a.nodeType){for(var n=r.css,l=r.type,s=r.enterClass,p=r.enterToClass,u=r.enterActiveClass,g=r.appearClass,d=r.appearToClass,h=r.appearActiveClass,y=r.beforeEnter,b=r.enter,v=r.afterEnter,w=r.enterCancelled,k=r.beforeAppear,E=r.appear,T=r.afterAppear,x=r.appearCancelled,S=r.duration,P=Wt,q=Wt.$vnode;q&&q.parent;)P=q.context,q=q.parent;var _=!P._isMounted||!e.isRootInsert;if(!_||E||""===E){var A=_&&g?g:s,B=_&&h?h:u,D=_&&d?d:p,C=_&&k||y,L=_&&c(E)?E:b,U=_&&T||v,J=_&&x||w,I=f(m(S)?S.enter:S);0;var $=!1!==n&&!X,F=An(L),z=a._enterCb=j((function(){$&&(wn(a,D),wn(a,B)),z.cancelled?($&&wn(a,A),J&&J(a)):U&&U(a),a._enterCb=null}));e.data.show||Re(e,"insert",(function(){var t=a.parentNode,r=t&&t._pending&&t._pending[e.key];r&&r.tag===e.tag&&r.elm._leaveCb&&r.elm._leaveCb(),L&&L(a,z)})),C&&C(a),$&&(vn(a,A),vn(a,B),bn((function(){wn(a,A),z.cancelled||(vn(a,D),F||(_n(I)?setTimeout(z,I):kn(a,l,z)))}))),e.data.show&&(t&&t(),L&&L(a,z)),$||F||z()}}}function qn(e,t){var a=e.elm;i(a._enterCb)&&(a._enterCb.cancelled=!0,a._enterCb());var r=mn(e.data.transition);if(o(r)||1!==a.nodeType)return t();if(!i(a._leaveCb)){var n=r.css,l=r.type,s=r.leaveClass,c=r.leaveToClass,p=r.leaveActiveClass,u=r.beforeLeave,g=r.leave,d=r.afterLeave,h=r.leaveCancelled,y=r.delayLeave,b=r.duration,v=!1!==n&&!X,w=An(g),k=f(m(b)?b.leave:b);0;var E=a._leaveCb=j((function(){a.parentNode&&a.parentNode._pending&&(a.parentNode._pending[e.key]=null),v&&(wn(a,c),wn(a,p)),E.cancelled?(v&&wn(a,s),h&&h(a)):(t(),d&&d(a)),a._leaveCb=null}));y?y(T):T()}function T(){E.cancelled||(!e.data.show&&a.parentNode&&((a.parentNode._pending||(a.parentNode._pending={}))[e.key]=e),u&&u(a),v&&(vn(a,s),vn(a,p),bn((function(){wn(a,s),E.cancelled||(vn(a,c),w||(_n(k)?setTimeout(E,k):kn(a,l,E)))}))),g&&g(a,E),v||w||E())}}function _n(e){return"number"==typeof e&&!isNaN(e)}function An(e){if(o(e))return!1;var t=e.fns;return i(t)?An(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function Bn(e,t){!0!==t.data.show&&Pn(t)}var Dn=function(e){var t,a,r={},c=e.modules,m=e.nodeOps;for(t=0;t<Er.length;++t)for(r[Er[t]]=[],a=0;a<c.length;++a)i(c[a][Er[t]])&&r[Er[t]].push(c[a][Er[t]]);function p(e){var t=m.parentNode(e);i(t)&&m.removeChild(t,e)}function u(e,t,a,n,o,s,c){if(i(e.elm)&&i(s)&&(e=s[c]=he(e)),e.isRootInsert=!o,!function(e,t,a,n){var o=e.data;if(i(o)){var s=i(e.componentInstance)&&o.keepAlive;if(i(o=o.hook)&&i(o=o.init)&&o(e,!1),i(e.componentInstance))return g(e,t),d(a,e.elm,n),l(s)&&function(e,t,a,n){var o,l=e;for(;l.componentInstance;)if(l=l.componentInstance._vnode,i(o=l.data)&&i(o=o.transition)){for(o=0;o<r.activate.length;++o)r.activate[o](kr,l);t.push(l);break}d(a,e.elm,n)}(e,t,a,n),!0}}(e,t,a,n)){var p=e.data,u=e.children,y=e.tag;i(y)?(e.elm=e.ns?m.createElementNS(e.ns,y):m.createElement(y,e),v(e),h(e,u,t),i(p)&&f(e,t),d(a,e.elm,n)):l(e.isComment)?(e.elm=m.createComment(e.text),d(a,e.elm,n)):(e.elm=m.createTextNode(e.text),d(a,e.elm,n))}}function g(e,t){i(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,y(e)?(f(e,t),v(e)):(vr(e),t.push(e))}function d(e,t,a){i(e)&&(i(a)?m.parentNode(a)===e&&m.insertBefore(e,t,a):m.appendChild(e,t))}function h(e,t,a){if(n(t)){0;for(var r=0;r<t.length;++r)u(t[r],a,e.elm,null,!0,t,r)}else s(e.text)&&m.appendChild(e.elm,m.createTextNode(String(e.text)))}function y(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return i(e.tag)}function f(e,a){for(var n=0;n<r.create.length;++n)r.create[n](kr,e);i(t=e.data.hook)&&(i(t.create)&&t.create(kr,e),i(t.insert)&&a.push(e))}function v(e){var t;if(i(t=e.fnScopeId))m.setStyleScope(e.elm,t);else for(var a=e;a;)i(t=a.context)&&i(t=t.$options._scopeId)&&m.setStyleScope(e.elm,t),a=a.parent;i(t=Wt)&&t!==e.context&&t!==e.fnContext&&i(t=t.$options._scopeId)&&m.setStyleScope(e.elm,t)}function w(e,t,a,r,n,o){for(;r<=n;++r)u(a[r],o,e,t,!1,a,r)}function k(e){var t,a,n=e.data;if(i(n))for(i(t=n.hook)&&i(t=t.destroy)&&t(e),t=0;t<r.destroy.length;++t)r.destroy[t](e);if(i(t=e.children))for(a=0;a<e.children.length;++a)k(e.children[a])}function E(e,t,a){for(;t<=a;++t){var r=e[t];i(r)&&(i(r.tag)?(T(r),k(r)):p(r.elm))}}function T(e,t){if(i(t)||i(e.data)){var a,n=r.remove.length+1;for(i(t)?t.listeners+=n:t=function(e,t){function a(){0==--a.listeners&&p(e)}return a.listeners=t,a}(e.elm,n),i(a=e.componentInstance)&&i(a=a._vnode)&&i(a.data)&&T(a,t),a=0;a<r.remove.length;++a)r.remove[a](e,t);i(a=e.data.hook)&&i(a=a.remove)?a(e,t):t()}else p(e.elm)}function x(e,t,a,r){for(var n=a;n<r;n++){var o=t[n];if(i(o)&&Tr(e,o))return n}}function S(e,t,a,n,s,c){if(e!==t){i(t.elm)&&i(n)&&(t=n[s]=he(t));var p=t.elm=e.elm;if(l(e.isAsyncPlaceholder))i(t.asyncFactory.resolved)?_(e.elm,t,a):t.isAsyncPlaceholder=!0;else if(l(t.isStatic)&&l(e.isStatic)&&t.key===e.key&&(l(t.isCloned)||l(t.isOnce)))t.componentInstance=e.componentInstance;else{var g,d=t.data;i(d)&&i(g=d.hook)&&i(g=g.prepatch)&&g(e,t);var h=e.children,f=t.children;if(i(d)&&y(t)){for(g=0;g<r.update.length;++g)r.update[g](e,t);i(g=d.hook)&&i(g=g.update)&&g(e,t)}o(t.text)?i(h)&&i(f)?h!==f&&function(e,t,a,r,n){var l,s,c,p=0,g=0,d=t.length-1,h=t[0],y=t[d],f=a.length-1,b=a[0],v=a[f],k=!n;for(0;p<=d&&g<=f;)o(h)?h=t[++p]:o(y)?y=t[--d]:Tr(h,b)?(S(h,b,r,a,g),h=t[++p],b=a[++g]):Tr(y,v)?(S(y,v,r,a,f),y=t[--d],v=a[--f]):Tr(h,v)?(S(h,v,r,a,f),k&&m.insertBefore(e,h.elm,m.nextSibling(y.elm)),h=t[++p],v=a[--f]):Tr(y,b)?(S(y,b,r,a,g),k&&m.insertBefore(e,y.elm,h.elm),y=t[--d],b=a[++g]):(o(l)&&(l=xr(t,p,d)),o(s=i(b.key)?l[b.key]:x(b,t,p,d))?u(b,r,e,h.elm,!1,a,g):Tr(c=t[s],b)?(S(c,b,r,a,g),t[s]=void 0,k&&m.insertBefore(e,c.elm,h.elm)):u(b,r,e,h.elm,!1,a,g),b=a[++g]);p>d?w(e,o(a[f+1])?null:a[f+1].elm,a,g,f,r):g>f&&E(t,p,d)}(p,h,f,a,c):i(f)?(i(e.text)&&m.setTextContent(p,""),w(p,null,f,0,f.length-1,a)):i(h)?E(h,0,h.length-1):i(e.text)&&m.setTextContent(p,""):e.text!==t.text&&m.setTextContent(p,t.text),i(d)&&i(g=d.hook)&&i(g=g.postpatch)&&g(e,t)}}}function P(e,t,a){if(l(a)&&i(e.parent))e.parent.data.pendingInsert=t;else for(var r=0;r<t.length;++r)t[r].data.hook.insert(t[r])}var q=b("attrs,class,staticClass,staticStyle,key");function _(e,t,a,r){var n,o=t.tag,s=t.data,c=t.children;if(r=r||s&&s.pre,t.elm=e,l(t.isComment)&&i(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(i(s)&&(i(n=s.hook)&&i(n=n.init)&&n(t,!0),i(n=t.componentInstance)))return g(t,a),!0;if(i(o)){if(i(c))if(e.hasChildNodes())if(i(n=s)&&i(n=n.domProps)&&i(n=n.innerHTML)){if(n!==e.innerHTML)return!1}else{for(var m=!0,p=e.firstChild,u=0;u<c.length;u++){if(!p||!_(p,c[u],a,r)){m=!1;break}p=p.nextSibling}if(!m||p)return!1}else h(t,c,a);if(i(s)){var d=!1;for(var y in s)if(!q(y)){d=!0,f(t,a);break}!d&&s.class&&zt(s.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,a,n){if(!o(t)){var s,c=!1,p=[];if(o(e))c=!0,u(t,p);else{var g=i(e.nodeType);if(!g&&Tr(e,t))S(e,t,p,null,null,n);else{if(g){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),a=!0),l(a)&&_(e,t,p))return P(t,p,!0),e;s=e,e=new ue(m.tagName(s).toLowerCase(),{},[],void 0,s)}var d=e.elm,h=m.parentNode(d);if(u(t,p,d._leaveCb?null:h,m.nextSibling(d)),i(t.parent))for(var f=t.parent,b=y(t);f;){for(var v=0;v<r.destroy.length;++v)r.destroy[v](f);if(f.elm=t.elm,b){for(var w=0;w<r.create.length;++w)r.create[w](kr,f);var T=f.data.hook.insert;if(T.merged)for(var x=1;x<T.fns.length;x++)T.fns[x]()}else vr(f);f=f.parent}i(h)?E([e],0,0):i(e.tag)&&k(e)}}return P(t,p,c),t.elm}i(e)&&k(e)}}({nodeOps:fr,modules:[Jr,jr,Rr,Wr,on,W?{create:Bn,activate:Bn,remove:function(e,t){!0!==e.data.show?qn(e,t):t()}}:{}].concat(Dr)});X&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&Fn(e,"input")}));var Cn={inserted:function(e,t,a,r){"select"===a.tag?(r.elm&&!r.elm._vOptions?Re(a,"postpatch",(function(){Cn.componentUpdated(e,t,a)})):Ln(e,t,a.context),e._vOptions=[].map.call(e.options,In)):("textarea"===a.tag||yr(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",$n),e.addEventListener("compositionend",jn),e.addEventListener("change",jn),X&&(e.vmodel=!0)))},componentUpdated:function(e,t,a){if("select"===a.tag){Ln(e,t,a.context);var r=e._vOptions,n=e._vOptions=[].map.call(e.options,In);if(n.some((function(e,t){return!I(e,r[t])})))(e.multiple?t.value.some((function(e){return Jn(e,n)})):t.value!==t.oldValue&&Jn(t.value,n))&&Fn(e,"change")}}};function Ln(e,t,a){Un(e,t,a),(G||Q)&&setTimeout((function(){Un(e,t,a)}),0)}function Un(e,t,a){var r=t.value,n=e.multiple;if(!n||Array.isArray(r)){for(var o,i,l=0,s=e.options.length;l<s;l++)if(i=e.options[l],n)o=$(r,In(i))>-1,i.selected!==o&&(i.selected=o);else if(I(In(i),r))return void(e.selectedIndex!==l&&(e.selectedIndex=l));n||(e.selectedIndex=-1)}}function Jn(e,t){return t.every((function(t){return!I(t,e)}))}function In(e){return"_value"in e?e._value:e.value}function $n(e){e.target.composing=!0}function jn(e){e.target.composing&&(e.target.composing=!1,Fn(e.target,"input"))}function Fn(e,t){var a=document.createEvent("HTMLEvents");a.initEvent(t,!0,!0),e.dispatchEvent(a)}function zn(e){return!e.componentInstance||e.data&&e.data.transition?e:zn(e.componentInstance._vnode)}var On={model:Cn,show:{bind:function(e,t,a){var r=t.value,n=(a=zn(a)).data&&a.data.transition,o=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;r&&n?(a.data.show=!0,Pn(a,(function(){e.style.display=o}))):e.style.display=r?o:"none"},update:function(e,t,a){var r=t.value;!r!=!t.oldValue&&((a=zn(a)).data&&a.data.transition?(a.data.show=!0,r?Pn(a,(function(){e.style.display=e.__vOriginalDisplay})):qn(a,(function(){e.style.display="none"}))):e.style.display=r?e.__vOriginalDisplay:"none")},unbind:function(e,t,a,r,n){n||(e.style.display=e.__vOriginalDisplay)}}},Mn={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Nn(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?Nn(Et(t.children)):e}function Kn(e){var t={},a=e.$options;for(var r in a.propsData)t[r]=e[r];var n=a._parentListeners;for(var r in n)t[S(r)]=n[r];return t}function Rn(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var Hn=function(e){return e.tag||ut(e)},Vn=function(e){return"show"===e.name},Wn={name:"transition",props:Mn,abstract:!0,render:function(e){var t=this,a=this.$slots.default;if(a&&(a=a.filter(Hn)).length){0;var r=this.mode;0;var n=a[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return n;var o=Nn(n);if(!o)return n;if(this._leaving)return Rn(e,n);var i="__transition-".concat(this._uid,"-");o.key=null==o.key?o.isComment?i+"comment":i+o.tag:s(o.key)?0===String(o.key).indexOf(i)?o.key:i+o.key:o.key;var l=(o.data||(o.data={})).transition=Kn(this),c=this._vnode,m=Nn(c);if(o.data.directives&&o.data.directives.some(Vn)&&(o.data.show=!0),m&&m.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(o,m)&&!ut(m)&&(!m.componentInstance||!m.componentInstance._vnode.isComment)){var p=m.data.transition=D({},l);if("out-in"===r)return this._leaving=!0,Re(p,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),Rn(e,n);if("in-out"===r){if(ut(o))return c;var u,g=function(){u()};Re(l,"afterEnter",g),Re(l,"enterCancelled",g),Re(p,"delayLeave",(function(e){u=e}))}}return n}}},Yn=D({tag:String,moveClass:String},Mn);function Gn(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function Xn(e){e.data.newPos=e.elm.getBoundingClientRect()}function Qn(e){var t=e.data.pos,a=e.data.newPos,r=t.left-a.left,n=t.top-a.top;if(r||n){e.data.moved=!0;var o=e.elm.style;o.transform=o.WebkitTransform="translate(".concat(r,"px,").concat(n,"px)"),o.transitionDuration="0s"}}delete Yn.mode;var Zn={Transition:Wn,TransitionGroup:{props:Yn,beforeMount:function(){var e=this,t=this._update;this._update=function(a,r){var n=Yt(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,n(),t.call(e,a,r)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",a=Object.create(null),r=this.prevChildren=this.children,n=this.$slots.default||[],o=this.children=[],i=Kn(this),l=0;l<n.length;l++){if((m=n[l]).tag)if(null!=m.key&&0!==String(m.key).indexOf("__vlist"))o.push(m),a[m.key]=m,(m.data||(m.data={})).transition=i;else;}if(r){var s=[],c=[];for(l=0;l<r.length;l++){var m;(m=r[l]).data.transition=i,m.data.pos=m.elm.getBoundingClientRect(),a[m.key]?s.push(m):c.push(m)}this.kept=e(t,null,s),this.removed=c}return e(t,null,o)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(Gn),e.forEach(Xn),e.forEach(Qn),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var a=e.elm,r=a.style;vn(a,t),r.transform=r.WebkitTransform=r.transitionDuration="",a.addEventListener(dn,a._moveCb=function e(r){r&&r.target!==a||r&&!/transform$/.test(r.propertyName)||(a.removeEventListener(dn,e),a._moveCb=null,wn(a,t))})}})))},methods:{hasMove:function(e,t){if(!un)return!1;if(this._hasMove)return this._hasMove;var a=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){cn(a,e)})),sn(a,t),a.style.display="none",this.$el.appendChild(a);var r=Tn(a);return this.$el.removeChild(a),this._hasMove=r.hasTransform}}}};Ka.config.mustUseProp=function(e,t,a){return"value"===a&&Za(e)&&"button"!==t||"selected"===a&&"option"===e||"checked"===a&&"input"===e||"muted"===a&&"video"===e},Ka.config.isReservedTag=dr,Ka.config.isReservedAttr=Qa,Ka.config.getTagNamespace=function(e){return gr(e)?"svg":"math"===e?"math":void 0},Ka.config.isUnknownElement=function(e){if(!W)return!0;if(dr(e))return!1;if(e=e.toLowerCase(),null!=hr[e])return hr[e];var t=document.createElement(e);return e.indexOf("-")>-1?hr[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:hr[e]=/HTMLUnknownElement/.test(t.toString())},D(Ka.options.directives,On),D(Ka.options.components,Zn),Ka.prototype.__patch__=W?Dn:L,Ka.prototype.$mount=function(e,t){return function(e,t,a){var r;e.$el=t,e.$options.render||(e.$options.render=ge),Qt(e,"beforeMount"),r=function(){e._update(e._render(),a)},new Nt(e,r,L,{before:function(){e._isMounted&&!e._isDestroyed&&Qt(e,"beforeUpdate")}},!0),a=!1;var n=e._preWatchers;if(n)for(var o=0;o<n.length;o++)n[o].run();return null==e.$vnode&&(e._isMounted=!0,Qt(e,"mounted")),e}(this,e=e&&W?function(e){if("string"==typeof e){var t=document.querySelector(e);return t||document.createElement("div")}return e}(e):void 0,t)},W&&setTimeout((function(){M.devtools&&ie&&ie.emit("init",Ka)}),0)},function(e,t,a){"use strict";function r(e,t,a,r,n,o,i,l){var s,c="function"==typeof e?e.options:e;if(t&&(c.render=t,c.staticRenderFns=a,c._compiled=!0),r&&(c.functional=!0),o&&(c._scopeId="data-v-"+o),i?(s=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),n&&n.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(i)},c._ssrRegister=s):n&&(s=l?function(){n.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:n),s)if(c.functional){c._injectStyles=s;var m=c.render;c.render=function(e,t){return s.call(t),m(e,t)}}else{var p=c.beforeCreate;c.beforeCreate=p?[].concat(p,s):[s]}return{exports:e,options:c}}a.d(t,"a",(function(){return r}))},function(e,t,a){"use strict";var r=a(1),n=Object(r.a)({},(function(){var e=this._self._c;return e("svg",{staticStyle:{background:"0 0",display:"block","shape-rendering":"auto"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"200",height:"200",viewBox:"0 0 100 100",preserveAspectRatio:"xMidYMid"}},[e("circle",{attrs:{cx:"50",cy:"50",r:"0",fill:"none",stroke:"currentColor","stroke-width":"2"}},[e("animate",{attrs:{attributeName:"r",repeatCount:"indefinite",dur:"1s",values:"0;40",keyTimes:"0;1",keySplines:"0 0.2 0.8 1",calcMode:"spline",begin:"0s"}}),this._v(" "),e("animate",{attrs:{attributeName:"opacity",repeatCount:"indefinite",dur:"1s",values:"1;0",keyTimes:"0;1",keySplines:"0.2 0 0.8 1",calcMode:"spline",begin:"0s"}})]),this._v(" "),e("circle",{attrs:{cx:"50",cy:"50",r:"0",fill:"none",stroke:"currentColor","stroke-width":"2"}},[e("animate",{attrs:{attributeName:"r",repeatCount:"indefinite",dur:"1s",values:"0;40",keyTimes:"0;1",keySplines:"0 0.2 0.8 1",calcMode:"spline",begin:"-0.3333333333333333s"}}),this._v(" "),e("animate",{attrs:{attributeName:"opacity",repeatCount:"indefinite",dur:"1s",values:"1;0",keyTimes:"0;1",keySplines:"0.2 0 0.8 1",calcMode:"spline",begin:"-0.3333333333333333s"}})]),this._v(" "),e("circle",{attrs:{cx:"50",cy:"50",r:"0",fill:"none",stroke:"currentColor","stroke-width":"2"}},[e("animate",{attrs:{attributeName:"r",repeatCount:"indefinite",dur:"1s",values:"0;40",keyTimes:"0;1",keySplines:"0 0.2 0.8 1",calcMode:"spline",begin:"-0.6666666666666666s"}}),this._v(" "),e("animate",{attrs:{attributeName:"opacity",repeatCount:"indefinite",dur:"1s",values:"1;0",keyTimes:"0;1",keySplines:"0.2 0 0.8 1",calcMode:"spline",begin:"-0.6666666666666666s"}})])])}),[],!1,null,null,null);t.a=n.exports},function(e,t,a){var r=a(31),n="object"==typeof self&&self&&self.Object===Object&&self,o=r||n||Function("return this")();e.exports=o},function(e,t){var a=Array.isArray;e.exports=a},function(e,t,a){var r=a(93),n=a(96);e.exports=function(e,t){var a=n(e,t);return r(a)?a:void 0}},function(e,t){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,t,a){"use strict";function r(e,t,a){var r,n,o;void 0===t&&(t=50),void 0===a&&(a={});var i=null!=(r=a.isImmediate)&&r,l=null!=(n=a.callback)&&n,s=a.maxWait,c=Date.now(),m=[];function p(){if(void 0!==s){var e=Date.now()-c;if(e+t>=s)return s-e}return t}var u=function(){var t=[].slice.call(arguments),a=this;return new Promise((function(r,n){var s=i&&void 0===o;if(void 0!==o&&clearTimeout(o),o=setTimeout((function(){if(o=void 0,c=Date.now(),!i){var r=e.apply(a,t);l&&l(r),m.forEach((function(e){return(0,e.resolve)(r)})),m=[]}}),p()),s){var u=e.apply(a,t);return l&&l(u),r(u)}m.push({resolve:r,reject:n})}))};return u.cancel=function(e){void 0!==o&&clearTimeout(o),m.forEach((function(t){return(0,t.reject)(e)})),m=[]},u}a.d(t,"a",(function(){return r}))},function(e,t,a){var r=a(3).Symbol;e.exports=r},function(e,t,a){var r=a(8),n=a(78),o=a(79),i=r?r.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":i&&i in Object(e)?n(e):o(e)}},function(e,t,a){
/*!
* screenfull
* v5.2.0 - 2021-11-03
* (c) Sindre Sorhus; MIT License
*/
!function(){"use strict";var t="undefined"!=typeof window&&void 0!==window.document?window.document:{},a=e.exports,r=function(){for(var e,a=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]],r=0,n=a.length,o={};r<n;r++)if((e=a[r])&&e[1]in t){for(r=0;r<e.length;r++)o[a[0][r]]=e[r];return o}return!1}(),n={change:r.fullscreenchange,error:r.fullscreenerror},o={request:function(e,a){return new Promise(function(n,o){var i=function(){this.off("change",i),n()}.bind(this);this.on("change",i);var l=(e=e||t.documentElement)[r.requestFullscreen](a);l instanceof Promise&&l.then(i).catch(o)}.bind(this))},exit:function(){return new Promise(function(e,a){if(this.isFullscreen){var n=function(){this.off("change",n),e()}.bind(this);this.on("change",n);var o=t[r.exitFullscreen]();o instanceof Promise&&o.then(n).catch(a)}else e()}.bind(this))},toggle:function(e,t){return this.isFullscreen?this.exit():this.request(e,t)},onchange:function(e){this.on("change",e)},onerror:function(e){this.on("error",e)},on:function(e,a){var r=n[e];r&&t.addEventListener(r,a,!1)},off:function(e,a){var r=n[e];r&&t.removeEventListener(r,a,!1)},raw:r};r?(Object.defineProperties(o,{isFullscreen:{get:function(){return Boolean(t[r.fullscreenElement])}},element:{enumerable:!0,get:function(){return t[r.fullscreenElement]}},isEnabled:{enumerable:!0,get:function(){return Boolean(t[r.fullscreenEnabled])}}}),a?e.exports=o:window.screenfull=o):a?e.exports={isEnabled:!1}:window.screenfull={isEnabled:!1}}()},function(e,t,a){var r=a(83),n=a(84),o=a(85),i=a(86),l=a(87);function s(e){var t=-1,a=null==e?0:e.length;for(this.clear();++t<a;){var r=e[t];this.set(r[0],r[1])}}s.prototype.clear=r,s.prototype.delete=n,s.prototype.get=o,s.prototype.has=i,s.prototype.set=l,e.exports=s},function(e,t,a){var r=a(33);e.exports=function(e,t){for(var a=e.length;a--;)if(r(e[a][0],t))return a;return-1}},function(e,t,a){var r=a(5)(Object,"create");e.exports=r},function(e,t,a){var r=a(105);e.exports=function(e,t){var a=e.__data__;return r(t)?a["string"==typeof t?"string":"hash"]:a.map}},function(e,t,a){var r=a(25);e.exports=function(e){if("string"==typeof e||r(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(module,__webpack_exports__,__webpack_require__){"use strict";var vue__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_icons_LoadingIcon_vue__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(2);const parseChartConfig=(config,type)=>{if("json"===type)return JSON.parse(config);const exports={},module={exports:exports};return eval(config),module.exports};__webpack_exports__.a=vue__WEBPACK_IMPORTED_MODULE_0__.a.extend({name:"ChartJS",components:{LoadingIcon:_icons_LoadingIcon_vue__WEBPACK_IMPORTED_MODULE_1__.a},props:{config:{type:String,required:!0},id:{type:String,required:!0},title:{type:String,default:""},type:{type:String,default:"json"}},data:()=>({loading:!0}),mounted(){Promise.all([__webpack_require__.e(633).then(__webpack_require__.bind(null,198)),new Promise(e=>setTimeout(e,500))]).then(([{default:e}])=>{var t;e.defaults.maintainAspectRatio=!1;const a=parseChartConfig(decodeURIComponent(this.config),this.type);new e(null===(t=this.$refs.chartCanvasElement)||void 0===t?void 0:t.getContext("2d"),a),this.loading=!1})}})},function(e,t,a){var r,n;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(n="function"==typeof(r=function(){var e,t,a={version:"0.2.0"},r=a.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function n(e,t,a){return e<t?t:e>a?a:e}function o(e){return 100*(-1+e)}a.configure=function(e){var t,a;for(t in e)void 0!==(a=e[t])&&e.hasOwnProperty(t)&&(r[t]=a);return this},a.status=null,a.set=function(e){var t=a.isStarted();e=n(e,r.minimum,1),a.status=1===e?null:e;var s=a.render(!t),c=s.querySelector(r.barSelector),m=r.speed,p=r.easing;return s.offsetWidth,i((function(t){""===r.positionUsing&&(r.positionUsing=a.getPositioningCSS()),l(c,function(e,t,a){var n;return(n="translate3d"===r.positionUsing?{transform:"translate3d("+o(e)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+o(e)+"%,0)"}:{"margin-left":o(e)+"%"}).transition="all "+t+"ms "+a,n}(e,m,p)),1===e?(l(s,{transition:"none",opacity:1}),s.offsetWidth,setTimeout((function(){l(s,{transition:"all "+m+"ms linear",opacity:0}),setTimeout((function(){a.remove(),t()}),m)}),m)):setTimeout(t,m)})),this},a.isStarted=function(){return"number"==typeof a.status},a.start=function(){a.status||a.set(0);var e=function(){setTimeout((function(){a.status&&(a.trickle(),e())}),r.trickleSpeed)};return r.trickle&&e(),this},a.done=function(e){return e||a.status?a.inc(.3+.5*Math.random()).set(1):this},a.inc=function(e){var t=a.status;return t?("number"!=typeof e&&(e=(1-t)*n(Math.random()*t,.1,.95)),t=n(t+e,0,.994),a.set(t)):a.start()},a.trickle=function(){return a.inc(Math.random()*r.trickleRate)},e=0,t=0,a.promise=function(r){return r&&"resolved"!==r.state()?(0===t&&a.start(),e++,t++,r.always((function(){0==--t?(e=0,a.done()):a.set((e-t)/e)})),this):this},a.render=function(e){if(a.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var t=document.createElement("div");t.id="nprogress",t.innerHTML=r.template;var n,i=t.querySelector(r.barSelector),s=e?"-100":o(a.status||0),m=document.querySelector(r.parent);return l(i,{transition:"all 0 linear",transform:"translate3d("+s+"%,0,0)"}),r.showSpinner||(n=t.querySelector(r.spinnerSelector))&&u(n),m!=document.body&&c(m,"nprogress-custom-parent"),m.appendChild(t),t},a.remove=function(){m(document.documentElement,"nprogress-busy"),m(document.querySelector(r.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&u(e)},a.isRendered=function(){return!!document.getElementById("nprogress")},a.getPositioningCSS=function(){var e=document.body.style,t="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return t+"Perspective"in e?"translate3d":t+"Transform"in e?"translate":"margin"};var i=function(){var e=[];function t(){var a=e.shift();a&&a(t)}return function(a){e.push(a),1==e.length&&t()}}(),l=function(){var e=["Webkit","O","Moz","ms"],t={};function a(a){return a=a.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,t){return t.toUpperCase()})),t[a]||(t[a]=function(t){var a=document.body.style;if(t in a)return t;for(var r,n=e.length,o=t.charAt(0).toUpperCase()+t.slice(1);n--;)if((r=e[n]+o)in a)return r;return t}(a))}function r(e,t,r){t=a(t),e.style[t]=r}return function(e,t){var a,n,o=arguments;if(2==o.length)for(a in t)void 0!==(n=t[a])&&t.hasOwnProperty(a)&&r(e,a,n);else r(e,o[1],o[2])}}();function s(e,t){return("string"==typeof e?e:p(e)).indexOf(" "+t+" ")>=0}function c(e,t){var a=p(e),r=a+t;s(a,t)||(e.className=r.substring(1))}function m(e,t){var a,r=p(e);s(e,t)&&(a=r.replace(" "+t+" "," "),e.className=a.substring(1,a.length-1))}function p(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function u(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return a})?r.call(t,a,t,e):r)||(e.exports=n)},function(e,t,a){var r=a(77),n=a(6),o=Object.prototype,i=o.hasOwnProperty,l=o.propertyIsEnumerable,s=r(function(){return arguments}())?r:function(e){return n(e)&&i.call(e,"callee")&&!l.call(e,"callee")};e.exports=s},function(e,t,a){var r=a(5)(a(3),"Map");e.exports=r},function(e,t){e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},function(e,t,a){var r=a(97),n=a(104),o=a(106),i=a(107),l=a(108);function s(e){var t=-1,a=null==e?0:e.length;for(this.clear();++t<a;){var r=e[t];this.set(r[0],r[1])}}s.prototype.clear=r,s.prototype.delete=n,s.prototype.get=o,s.prototype.has=i,s.prototype.set=l,e.exports=s},function(e,t){e.exports=function(e){var t=-1,a=Array(e.size);return e.forEach((function(e){a[++t]=e})),a}},function(e,t){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,t,a){var r=a(4),n=a(25),o=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,i=/^\w*$/;e.exports=function(e,t){if(r(e))return!1;var a=typeof e;return!("number"!=a&&"symbol"!=a&&"boolean"!=a&&null!=e&&!n(e))||(i.test(e)||!o.test(e)||null!=t&&e in Object(t))}},function(e,t,a){var r=a(9),n=a(6);e.exports=function(e){return"symbol"==typeof e||n(e)&&"[object Symbol]"==r(e)}},function(e,t){e.exports=function(e){return e}},function(e,t,a){"use strict";a.d(t,"a",(function(){return r})),a.d(t,"c",(function(){return n})),a.d(t,"b",(function(){return o}));const r={"/":{backToTop:"Back to top",openInNewWindow:"Open in new window"}},n={"/":{word:"About $word words",less1Minute:"Less than 1 minute",time:"About $time min"}},o={"/":{author:"Author🖊",date:"Writing Date📅",origin:"Original💡",views:"Page views🔢",category:"Category🌈",tag:"Tags🏷",readingTime:"Reading Time⌛",words:"Words🔠"}}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,a){e.exports=function(){"use strict";var e=6e4,t=36e5,a="millisecond",r="second",n="minute",o="hour",i="day",l="week",s="month",c="quarter",m="year",p="date",u="Invalid Date",g=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,d=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,h={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},y=function(e,t,a){var r=String(e);return!r||r.length>=t?e:""+Array(t+1-r.length).join(a)+e},f={s:y,z:function(e){var t=-e.utcOffset(),a=Math.abs(t),r=Math.floor(a/60),n=a%60;return(t<=0?"+":"-")+y(r,2,"0")+":"+y(n,2,"0")},m:function e(t,a){if(t.date()<a.date())return-e(a,t);var r=12*(a.year()-t.year())+(a.month()-t.month()),n=t.clone().add(r,s),o=a-n<0,i=t.clone().add(r+(o?-1:1),s);return+(-(r+(a-n)/(o?n-i:i-n))||0)},a:function(e){return e<0?Math.ceil(e)||0:Math.floor(e)},p:function(e){return{M:s,y:m,w:l,d:i,D:p,h:o,m:n,s:r,ms:a,Q:c}[e]||String(e||"").toLowerCase().replace(/s$/,"")},u:function(e){return void 0===e}},b="en",v={};v[b]=h;var w=function(e){return e instanceof x},k=function e(t,a,r){var n;if(!t)return b;if("string"==typeof t){var o=t.toLowerCase();v[o]&&(n=o),a&&(v[o]=a,n=o);var i=t.split("-");if(!n&&i.length>1)return e(i[0])}else{var l=t.name;v[l]=t,n=l}return!r&&n&&(b=n),n||!r&&b},E=function(e,t){if(w(e))return e.clone();var a="object"==typeof t?t:{};return a.date=e,a.args=arguments,new x(a)},T=f;T.l=k,T.i=w,T.w=function(e,t){return E(e,{locale:t.$L,utc:t.$u,x:t.$x,$offset:t.$offset})};var x=function(){function h(e){this.$L=k(e.locale,null,!0),this.parse(e)}var y=h.prototype;return y.parse=function(e){this.$d=function(e){var t=e.date,a=e.utc;if(null===t)return new Date(NaN);if(T.u(t))return new Date;if(t instanceof Date)return new Date(t);if("string"==typeof t&&!/Z$/i.test(t)){var r=t.match(g);if(r){var n=r[2]-1||0,o=(r[7]||"0").substring(0,3);return a?new Date(Date.UTC(r[1],n,r[3]||1,r[4]||0,r[5]||0,r[6]||0,o)):new Date(r[1],n,r[3]||1,r[4]||0,r[5]||0,r[6]||0,o)}}return new Date(t)}(e),this.$x=e.x||{},this.init()},y.init=function(){var e=this.$d;this.$y=e.getFullYear(),this.$M=e.getMonth(),this.$D=e.getDate(),this.$W=e.getDay(),this.$H=e.getHours(),this.$m=e.getMinutes(),this.$s=e.getSeconds(),this.$ms=e.getMilliseconds()},y.$utils=function(){return T},y.isValid=function(){return!(this.$d.toString()===u)},y.isSame=function(e,t){var a=E(e);return this.startOf(t)<=a&&a<=this.endOf(t)},y.isAfter=function(e,t){return E(e)<this.startOf(t)},y.isBefore=function(e,t){return this.endOf(t)<E(e)},y.$g=function(e,t,a){return T.u(e)?this[t]:this.set(a,e)},y.unix=function(){return Math.floor(this.valueOf()/1e3)},y.valueOf=function(){return this.$d.getTime()},y.startOf=function(e,t){var a=this,c=!!T.u(t)||t,u=T.p(e),g=function(e,t){var r=T.w(a.$u?Date.UTC(a.$y,t,e):new Date(a.$y,t,e),a);return c?r:r.endOf(i)},d=function(e,t){return T.w(a.toDate()[e].apply(a.toDate("s"),(c?[0,0,0,0]:[23,59,59,999]).slice(t)),a)},h=this.$W,y=this.$M,f=this.$D,b="set"+(this.$u?"UTC":"");switch(u){case m:return c?g(1,0):g(31,11);case s:return c?g(1,y):g(0,y+1);case l:var v=this.$locale().weekStart||0,w=(h<v?h+7:h)-v;return g(c?f-w:f+(6-w),y);case i:case p:return d(b+"Hours",0);case o:return d(b+"Minutes",1);case n:return d(b+"Seconds",2);case r:return d(b+"Milliseconds",3);default:return this.clone()}},y.endOf=function(e){return this.startOf(e,!1)},y.$set=function(e,t){var l,c=T.p(e),u="set"+(this.$u?"UTC":""),g=(l={},l[i]=u+"Date",l[p]=u+"Date",l[s]=u+"Month",l[m]=u+"FullYear",l[o]=u+"Hours",l[n]=u+"Minutes",l[r]=u+"Seconds",l[a]=u+"Milliseconds",l)[c],d=c===i?this.$D+(t-this.$W):t;if(c===s||c===m){var h=this.clone().set(p,1);h.$d[g](d),h.init(),this.$d=h.set(p,Math.min(this.$D,h.daysInMonth())).$d}else g&&this.$d[g](d);return this.init(),this},y.set=function(e,t){return this.clone().$set(e,t)},y.get=function(e){return this[T.p(e)]()},y.add=function(a,c){var p,u=this;a=Number(a);var g=T.p(c),d=function(e){var t=E(u);return T.w(t.date(t.date()+Math.round(e*a)),u)};if(g===s)return this.set(s,this.$M+a);if(g===m)return this.set(m,this.$y+a);if(g===i)return d(1);if(g===l)return d(7);var h=(p={},p[n]=e,p[o]=t,p[r]=1e3,p)[g]||1,y=this.$d.getTime()+a*h;return T.w(y,this)},y.subtract=function(e,t){return this.add(-1*e,t)},y.format=function(e){var t=this,a=this.$locale();if(!this.isValid())return a.invalidDate||u;var r=e||"YYYY-MM-DDTHH:mm:ssZ",n=T.z(this),o=this.$H,i=this.$m,l=this.$M,s=a.weekdays,c=a.months,m=function(e,a,n,o){return e&&(e[a]||e(t,r))||n[a].slice(0,o)},p=function(e){return T.s(o%12||12,e,"0")},g=a.meridiem||function(e,t,a){var r=e<12?"AM":"PM";return a?r.toLowerCase():r},h={YY:String(this.$y).slice(-2),YYYY:this.$y,M:l+1,MM:T.s(l+1,2,"0"),MMM:m(a.monthsShort,l,c,3),MMMM:m(c,l),D:this.$D,DD:T.s(this.$D,2,"0"),d:String(this.$W),dd:m(a.weekdaysMin,this.$W,s,2),ddd:m(a.weekdaysShort,this.$W,s,3),dddd:s[this.$W],H:String(o),HH:T.s(o,2,"0"),h:p(1),hh:p(2),a:g(o,i,!0),A:g(o,i,!1),m:String(i),mm:T.s(i,2,"0"),s:String(this.$s),ss:T.s(this.$s,2,"0"),SSS:T.s(this.$ms,3,"0"),Z:n};return r.replace(d,(function(e,t){return t||h[e]||n.replace(":","")}))},y.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},y.diff=function(a,p,u){var g,d=T.p(p),h=E(a),y=(h.utcOffset()-this.utcOffset())*e,f=this-h,b=T.m(this,h);return b=(g={},g[m]=b/12,g[s]=b,g[c]=b/3,g[l]=(f-y)/6048e5,g[i]=(f-y)/864e5,g[o]=f/t,g[n]=f/e,g[r]=f/1e3,g)[d]||f,u?b:T.a(b)},y.daysInMonth=function(){return this.endOf(s).$D},y.$locale=function(){return v[this.$L]},y.locale=function(e,t){if(!e)return this.$L;var a=this.clone(),r=k(e,t,!0);return r&&(a.$L=r),a},y.clone=function(){return T.w(this.$d,this)},y.toDate=function(){return new Date(this.valueOf())},y.toJSON=function(){return this.isValid()?this.toISOString():null},y.toISOString=function(){return this.$d.toISOString()},y.toString=function(){return this.$d.toUTCString()},h}(),S=x.prototype;return E.prototype=S,[["$ms",a],["$s",r],["$m",n],["$H",o],["$W",i],["$M",s],["$y",m],["$D",p]].forEach((function(e){S[e[1]]=function(t){return this.$g(t,e[0],e[1])}})),E.extend=function(e,t){return e.$i||(e(t,x,E),e.$i=!0),E},E.locale=k,E.isDayjs=w,E.unix=function(e){return E(1e3*e)},E.en=v[b],E.Ls=v,E.p={},E}()},function(e,t){e.exports=function(e,t){for(var a=-1,r=t.length,n=e.length;++a<r;)e[n+a]=t[a];return e}},function(e,t){var a="object"==typeof global&&global&&global.Object===Object&&global;e.exports=a},function(e,t,a){var r=a(11),n=a(88),o=a(89),i=a(90),l=a(91),s=a(92);function c(e){var t=this.__data__=new r(e);this.size=t.size}c.prototype.clear=n,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=l,c.prototype.set=s,e.exports=c},function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},function(e,t,a){var r=a(9),n=a(20);e.exports=function(e){if(!n(e))return!1;var t=r(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t}},function(e,t){var a=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return a.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,t,a){var r=a(109),n=a(6);e.exports=function e(t,a,o,i,l){return t===a||(null==t||null==a||!n(t)&&!n(a)?t!=t&&a!=a:r(t,a,o,i,e,l))}},function(e,t,a){var r=a(38),n=a(112),o=a(39);e.exports=function(e,t,a,i,l,s){var c=1&a,m=e.length,p=t.length;if(m!=p&&!(c&&p>m))return!1;var u=s.get(e),g=s.get(t);if(u&&g)return u==t&&g==e;var d=-1,h=!0,y=2&a?new r:void 0;for(s.set(e,t),s.set(t,e);++d<m;){var f=e[d],b=t[d];if(i)var v=c?i(b,f,d,t,e,s):i(f,b,d,e,t,s);if(void 0!==v){if(v)continue;h=!1;break}if(y){if(!n(t,(function(e,t){if(!o(y,t)&&(f===e||l(f,e,a,i,s)))return y.push(t)}))){h=!1;break}}else if(f!==b&&!l(f,b,a,i,s)){h=!1;break}}return s.delete(e),s.delete(t),h}},function(e,t,a){var r=a(21),n=a(110),o=a(111);function i(e){var t=-1,a=null==e?0:e.length;for(this.__data__=new r;++t<a;)this.add(e[t])}i.prototype.add=i.prototype.push=n,i.prototype.has=o,e.exports=i},function(e,t){e.exports=function(e,t){return e.has(t)}},function(e,t,a){var r=a(122),n=a(128),o=a(44);e.exports=function(e){return o(e)?r(e):n(e)}},function(e,t,a){(function(e){var r=a(3),n=a(124),o=t&&!t.nodeType&&t,i=o&&"object"==typeof e&&e&&!e.nodeType&&e,l=i&&i.exports===o?r.Buffer:void 0,s=(l?l.isBuffer:void 0)||n;e.exports=s}).call(this,a(28)(e))},function(e,t){var a=/^(?:0|[1-9]\d*)$/;e.exports=function(e,t){var r=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==r||"symbol"!=r&&a.test(e))&&e>-1&&e%1==0&&e<t}},function(e,t,a){var r=a(125),n=a(126),o=a(127),i=o&&o.isTypedArray,l=i?n(i):r;e.exports=l},function(e,t,a){var r=a(34),n=a(23);e.exports=function(e){return null!=e&&n(e.length)&&!r(e)}},function(e,t,a){var r=a(5)(a(3),"Set");e.exports=r},function(e,t,a){var r=a(20);e.exports=function(e){return e==e&&!r(e)}},function(e,t){e.exports=function(e,t){return function(a){return null!=a&&(a[e]===t&&(void 0!==t||e in Object(a)))}}},function(e,t,a){var r=a(49),n=a(15);e.exports=function(e,t){for(var a=0,o=(t=r(t,e)).length;null!=e&&a<o;)e=e[n(t[a++])];return a&&a==o?e:void 0}},function(e,t,a){var r=a(4),n=a(24),o=a(138),i=a(141);e.exports=function(e,t){return r(e)?e:n(e,t)?[e]:o(i(e))}},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){var r=a(75),n=a(80),o=a(150),i=a(158),l=a(167),s=a(168),c=o((function(e){var t=s(e);return l(t)&&(t=void 0),i(r(e,1,l,!0),n(t,2))}));e.exports=c},function(e,t,a){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var r=/["'&<>]/;e.exports=function(e){var t,a=""+e,n=r.exec(a);if(!n)return a;var o="",i=0,l=0;for(i=n.index;i<a.length;i++){switch(a.charCodeAt(i)){case 34:t="&quot;";break;case 38:t="&amp;";break;case 39:t="&#39;";break;case 60:t="&lt;";break;case 62:t="&gt;";break;default:continue}l!==i&&(o+=a.substring(l,i)),l=i+1,o+=t}return l!==i?o+a.substring(l,i):o}},function(e,t,a){function r(){var e;try{e=t.storage.debug}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG),e}(t=e.exports=a(183)).log=function(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},t.formatArgs=function(e){var a=this.useColors;if(e[0]=(a?"%c":"")+this.namespace+(a?" %c":" ")+e[0]+(a?"%c ":" ")+"+"+t.humanize(this.diff),!a)return;var r="color: "+this.color;e.splice(1,0,r,"color: inherit");var n=0,o=0;e[0].replace(/%[a-zA-Z%]/g,(function(e){"%%"!==e&&(n++,"%c"===e&&(o=n))})),e.splice(o,0,r)},t.save=function(e){try{null==e?t.storage.removeItem("debug"):t.storage.debug=e}catch(e){}},t.load=r,t.useColors=function(){if("undefined"!=typeof window&&window.process&&"renderer"===window.process.type)return!0;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage="undefined"!=typeof chrome&&void 0!==chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(e){}}(),t.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],t.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}},t.enable(r())},function(e,t,a){var r=a(48);e.exports=function(e,t,a){var n=null==e?void 0:r(e,t);return void 0===n?a:n}},function(e,t,a){},function(e,t,a){e.exports=a(197)},function(e,t,a){var r=a(30),n=a(76);e.exports=function e(t,a,o,i,l){var s=-1,c=t.length;for(o||(o=n),l||(l=[]);++s<c;){var m=t[s];a>0&&o(m)?a>1?e(m,a-1,o,i,l):r(l,m):i||(l[l.length]=m)}return l}},function(e,t,a){var r=a(8),n=a(18),o=a(4),i=r?r.isConcatSpreadable:void 0;e.exports=function(e){return o(e)||n(e)||!!(i&&e&&e[i])}},function(e,t,a){var r=a(9),n=a(6);e.exports=function(e){return n(e)&&"[object Arguments]"==r(e)}},function(e,t,a){var r=a(8),n=Object.prototype,o=n.hasOwnProperty,i=n.toString,l=r?r.toStringTag:void 0;e.exports=function(e){var t=o.call(e,l),a=e[l];try{e[l]=void 0;var r=!0}catch(e){}var n=i.call(e);return r&&(t?e[l]=a:delete e[l]),n}},function(e,t){var a=Object.prototype.toString;e.exports=function(e){return a.call(e)}},function(e,t,a){var r=a(81),n=a(137),o=a(26),i=a(4),l=a(147);e.exports=function(e){return"function"==typeof e?e:null==e?o:"object"==typeof e?i(e)?n(e[0],e[1]):r(e):l(e)}},function(e,t,a){var r=a(82),n=a(136),o=a(47);e.exports=function(e){var t=n(e);return 1==t.length&&t[0][2]?o(t[0][0],t[0][1]):function(a){return a===e||r(a,e,t)}}},function(e,t,a){var r=a(32),n=a(36);e.exports=function(e,t,a,o){var i=a.length,l=i,s=!o;if(null==e)return!l;for(e=Object(e);i--;){var c=a[i];if(s&&c[2]?c[1]!==e[c[0]]:!(c[0]in e))return!1}for(;++i<l;){var m=(c=a[i])[0],p=e[m],u=c[1];if(s&&c[2]){if(void 0===p&&!(m in e))return!1}else{var g=new r;if(o)var d=o(p,u,m,e,t,g);if(!(void 0===d?n(u,p,3,o,g):d))return!1}}return!0}},function(e,t){e.exports=function(){this.__data__=[],this.size=0}},function(e,t,a){var r=a(12),n=Array.prototype.splice;e.exports=function(e){var t=this.__data__,a=r(t,e);return!(a<0)&&(a==t.length-1?t.pop():n.call(t,a,1),--this.size,!0)}},function(e,t,a){var r=a(12);e.exports=function(e){var t=this.__data__,a=r(t,e);return a<0?void 0:t[a][1]}},function(e,t,a){var r=a(12);e.exports=function(e){return r(this.__data__,e)>-1}},function(e,t,a){var r=a(12);e.exports=function(e,t){var a=this.__data__,n=r(a,e);return n<0?(++this.size,a.push([e,t])):a[n][1]=t,this}},function(e,t,a){var r=a(11);e.exports=function(){this.__data__=new r,this.size=0}},function(e,t){e.exports=function(e){var t=this.__data__,a=t.delete(e);return this.size=t.size,a}},function(e,t){e.exports=function(e){return this.__data__.get(e)}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t,a){var r=a(11),n=a(19),o=a(21);e.exports=function(e,t){var a=this.__data__;if(a instanceof r){var i=a.__data__;if(!n||i.length<199)return i.push([e,t]),this.size=++a.size,this;a=this.__data__=new o(i)}return a.set(e,t),this.size=a.size,this}},function(e,t,a){var r=a(34),n=a(94),o=a(20),i=a(35),l=/^\[object .+?Constructor\]$/,s=Function.prototype,c=Object.prototype,m=s.toString,p=c.hasOwnProperty,u=RegExp("^"+m.call(p).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!o(e)||n(e))&&(r(e)?u:l).test(i(e))}},function(e,t,a){var r,n=a(95),o=(r=/[^.]+$/.exec(n&&n.keys&&n.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";e.exports=function(e){return!!o&&o in e}},function(e,t,a){var r=a(3)["__core-js_shared__"];e.exports=r},function(e,t){e.exports=function(e,t){return null==e?void 0:e[t]}},function(e,t,a){var r=a(98),n=a(11),o=a(19);e.exports=function(){this.size=0,this.__data__={hash:new r,map:new(o||n),string:new r}}},function(e,t,a){var r=a(99),n=a(100),o=a(101),i=a(102),l=a(103);function s(e){var t=-1,a=null==e?0:e.length;for(this.clear();++t<a;){var r=e[t];this.set(r[0],r[1])}}s.prototype.clear=r,s.prototype.delete=n,s.prototype.get=o,s.prototype.has=i,s.prototype.set=l,e.exports=s},function(e,t,a){var r=a(13);e.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(e,t){e.exports=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}},function(e,t,a){var r=a(13),n=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;if(r){var a=t[e];return"__lodash_hash_undefined__"===a?void 0:a}return n.call(t,e)?t[e]:void 0}},function(e,t,a){var r=a(13),n=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;return r?void 0!==t[e]:n.call(t,e)}},function(e,t,a){var r=a(13);e.exports=function(e,t){var a=this.__data__;return this.size+=this.has(e)?0:1,a[e]=r&&void 0===t?"__lodash_hash_undefined__":t,this}},function(e,t,a){var r=a(14);e.exports=function(e){var t=r(this,e).delete(e);return this.size-=t?1:0,t}},function(e,t){e.exports=function(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}},function(e,t,a){var r=a(14);e.exports=function(e){return r(this,e).get(e)}},function(e,t,a){var r=a(14);e.exports=function(e){return r(this,e).has(e)}},function(e,t,a){var r=a(14);e.exports=function(e,t){var a=r(this,e),n=a.size;return a.set(e,t),this.size+=a.size==n?0:1,this}},function(e,t,a){var r=a(32),n=a(37),o=a(113),i=a(116),l=a(132),s=a(4),c=a(41),m=a(43),p="[object Object]",u=Object.prototype.hasOwnProperty;e.exports=function(e,t,a,g,d,h){var y=s(e),f=s(t),b=y?"[object Array]":l(e),v=f?"[object Array]":l(t),w=(b="[object Arguments]"==b?p:b)==p,k=(v="[object Arguments]"==v?p:v)==p,E=b==v;if(E&&c(e)){if(!c(t))return!1;y=!0,w=!1}if(E&&!w)return h||(h=new r),y||m(e)?n(e,t,a,g,d,h):o(e,t,b,a,g,d,h);if(!(1&a)){var T=w&&u.call(e,"__wrapped__"),x=k&&u.call(t,"__wrapped__");if(T||x){var S=T?e.value():e,P=x?t.value():t;return h||(h=new r),d(S,P,a,g,h)}}return!!E&&(h||(h=new r),i(e,t,a,g,d,h))}},function(e,t){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t){e.exports=function(e,t){for(var a=-1,r=null==e?0:e.length;++a<r;)if(t(e[a],a,e))return!0;return!1}},function(e,t,a){var r=a(8),n=a(114),o=a(33),i=a(37),l=a(115),s=a(22),c=r?r.prototype:void 0,m=c?c.valueOf:void 0;e.exports=function(e,t,a,r,c,p,u){switch(a){case"[object DataView]":if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=t.byteLength||!p(new n(e),new n(t)));case"[object Boolean]":case"[object Date]":case"[object Number]":return o(+e,+t);case"[object Error]":return e.name==t.name&&e.message==t.message;case"[object RegExp]":case"[object String]":return e==t+"";case"[object Map]":var g=l;case"[object Set]":var d=1&r;if(g||(g=s),e.size!=t.size&&!d)return!1;var h=u.get(e);if(h)return h==t;r|=2,u.set(e,t);var y=i(g(e),g(t),r,c,p,u);return u.delete(e),y;case"[object Symbol]":if(m)return m.call(e)==m.call(t)}return!1}},function(e,t,a){var r=a(3).Uint8Array;e.exports=r},function(e,t){e.exports=function(e){var t=-1,a=Array(e.size);return e.forEach((function(e,r){a[++t]=[r,e]})),a}},function(e,t,a){var r=a(117),n=Object.prototype.hasOwnProperty;e.exports=function(e,t,a,o,i,l){var s=1&a,c=r(e),m=c.length;if(m!=r(t).length&&!s)return!1;for(var p=m;p--;){var u=c[p];if(!(s?u in t:n.call(t,u)))return!1}var g=l.get(e),d=l.get(t);if(g&&d)return g==t&&d==e;var h=!0;l.set(e,t),l.set(t,e);for(var y=s;++p<m;){var f=e[u=c[p]],b=t[u];if(o)var v=s?o(b,f,u,t,e,l):o(f,b,u,e,t,l);if(!(void 0===v?f===b||i(f,b,a,o,l):v)){h=!1;break}y||(y="constructor"==u)}if(h&&!y){var w=e.constructor,k=t.constructor;w==k||!("constructor"in e)||!("constructor"in t)||"function"==typeof w&&w instanceof w&&"function"==typeof k&&k instanceof k||(h=!1)}return l.delete(e),l.delete(t),h}},function(e,t,a){var r=a(118),n=a(119),o=a(40);e.exports=function(e){return r(e,o,n)}},function(e,t,a){var r=a(30),n=a(4);e.exports=function(e,t,a){var o=t(e);return n(e)?o:r(o,a(e))}},function(e,t,a){var r=a(120),n=a(121),o=Object.prototype.propertyIsEnumerable,i=Object.getOwnPropertySymbols,l=i?function(e){return null==e?[]:(e=Object(e),r(i(e),(function(t){return o.call(e,t)})))}:n;e.exports=l},function(e,t){e.exports=function(e,t){for(var a=-1,r=null==e?0:e.length,n=0,o=[];++a<r;){var i=e[a];t(i,a,e)&&(o[n++]=i)}return o}},function(e,t){e.exports=function(){return[]}},function(e,t,a){var r=a(123),n=a(18),o=a(4),i=a(41),l=a(42),s=a(43),c=Object.prototype.hasOwnProperty;e.exports=function(e,t){var a=o(e),m=!a&&n(e),p=!a&&!m&&i(e),u=!a&&!m&&!p&&s(e),g=a||m||p||u,d=g?r(e.length,String):[],h=d.length;for(var y in e)!t&&!c.call(e,y)||g&&("length"==y||p&&("offset"==y||"parent"==y)||u&&("buffer"==y||"byteLength"==y||"byteOffset"==y)||l(y,h))||d.push(y);return d}},function(e,t){e.exports=function(e,t){for(var a=-1,r=Array(e);++a<e;)r[a]=t(a);return r}},function(e,t){e.exports=function(){return!1}},function(e,t,a){var r=a(9),n=a(23),o=a(6),i={};i["[object Float32Array]"]=i["[object Float64Array]"]=i["[object Int8Array]"]=i["[object Int16Array]"]=i["[object Int32Array]"]=i["[object Uint8Array]"]=i["[object Uint8ClampedArray]"]=i["[object Uint16Array]"]=i["[object Uint32Array]"]=!0,i["[object Arguments]"]=i["[object Array]"]=i["[object ArrayBuffer]"]=i["[object Boolean]"]=i["[object DataView]"]=i["[object Date]"]=i["[object Error]"]=i["[object Function]"]=i["[object Map]"]=i["[object Number]"]=i["[object Object]"]=i["[object RegExp]"]=i["[object Set]"]=i["[object String]"]=i["[object WeakMap]"]=!1,e.exports=function(e){return o(e)&&n(e.length)&&!!i[r(e)]}},function(e,t){e.exports=function(e){return function(t){return e(t)}}},function(e,t,a){(function(e){var r=a(31),n=t&&!t.nodeType&&t,o=n&&"object"==typeof e&&e&&!e.nodeType&&e,i=o&&o.exports===n&&r.process,l=function(){try{var e=o&&o.require&&o.require("util").types;return e||i&&i.binding&&i.binding("util")}catch(e){}}();e.exports=l}).call(this,a(28)(e))},function(e,t,a){var r=a(129),n=a(130),o=Object.prototype.hasOwnProperty;e.exports=function(e){if(!r(e))return n(e);var t=[];for(var a in Object(e))o.call(e,a)&&"constructor"!=a&&t.push(a);return t}},function(e,t){var a=Object.prototype;e.exports=function(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||a)}},function(e,t,a){var r=a(131)(Object.keys,Object);e.exports=r},function(e,t){e.exports=function(e,t){return function(a){return e(t(a))}}},function(e,t,a){var r=a(133),n=a(19),o=a(134),i=a(45),l=a(135),s=a(9),c=a(35),m=c(r),p=c(n),u=c(o),g=c(i),d=c(l),h=s;(r&&"[object DataView]"!=h(new r(new ArrayBuffer(1)))||n&&"[object Map]"!=h(new n)||o&&"[object Promise]"!=h(o.resolve())||i&&"[object Set]"!=h(new i)||l&&"[object WeakMap]"!=h(new l))&&(h=function(e){var t=s(e),a="[object Object]"==t?e.constructor:void 0,r=a?c(a):"";if(r)switch(r){case m:return"[object DataView]";case p:return"[object Map]";case u:return"[object Promise]";case g:return"[object Set]";case d:return"[object WeakMap]"}return t}),e.exports=h},function(e,t,a){var r=a(5)(a(3),"DataView");e.exports=r},function(e,t,a){var r=a(5)(a(3),"Promise");e.exports=r},function(e,t,a){var r=a(5)(a(3),"WeakMap");e.exports=r},function(e,t,a){var r=a(46),n=a(40);e.exports=function(e){for(var t=n(e),a=t.length;a--;){var o=t[a],i=e[o];t[a]=[o,i,r(i)]}return t}},function(e,t,a){var r=a(36),n=a(72),o=a(144),i=a(24),l=a(46),s=a(47),c=a(15);e.exports=function(e,t){return i(e)&&l(t)?s(c(e),t):function(a){var i=n(a,e);return void 0===i&&i===t?o(a,e):r(t,i,3)}}},function(e,t,a){var r=a(139),n=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,o=/\\(\\)?/g,i=r((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(n,(function(e,a,r,n){t.push(r?n.replace(o,"$1"):a||e)})),t}));e.exports=i},function(e,t,a){var r=a(140);e.exports=function(e){var t=r(e,(function(e){return 500===a.size&&a.clear(),e})),a=t.cache;return t}},function(e,t,a){var r=a(21);function n(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError("Expected a function");var a=function(){var r=arguments,n=t?t.apply(this,r):r[0],o=a.cache;if(o.has(n))return o.get(n);var i=e.apply(this,r);return a.cache=o.set(n,i)||o,i};return a.cache=new(n.Cache||r),a}n.Cache=r,e.exports=n},function(e,t,a){var r=a(142);e.exports=function(e){return null==e?"":r(e)}},function(e,t,a){var r=a(8),n=a(143),o=a(4),i=a(25),l=r?r.prototype:void 0,s=l?l.toString:void 0;e.exports=function e(t){if("string"==typeof t)return t;if(o(t))return n(t,e)+"";if(i(t))return s?s.call(t):"";var a=t+"";return"0"==a&&1/t==-1/0?"-0":a}},function(e,t){e.exports=function(e,t){for(var a=-1,r=null==e?0:e.length,n=Array(r);++a<r;)n[a]=t(e[a],a,e);return n}},function(e,t,a){var r=a(145),n=a(146);e.exports=function(e,t){return null!=e&&n(e,t,r)}},function(e,t){e.exports=function(e,t){return null!=e&&t in Object(e)}},function(e,t,a){var r=a(49),n=a(18),o=a(4),i=a(42),l=a(23),s=a(15);e.exports=function(e,t,a){for(var c=-1,m=(t=r(t,e)).length,p=!1;++c<m;){var u=s(t[c]);if(!(p=null!=e&&a(e,u)))break;e=e[u]}return p||++c!=m?p:!!(m=null==e?0:e.length)&&l(m)&&i(u,m)&&(o(e)||n(e))}},function(e,t,a){var r=a(148),n=a(149),o=a(24),i=a(15);e.exports=function(e){return o(e)?r(i(e)):n(e)}},function(e,t){e.exports=function(e){return function(t){return null==t?void 0:t[e]}}},function(e,t,a){var r=a(48);e.exports=function(e){return function(t){return r(t,e)}}},function(e,t,a){var r=a(26),n=a(151),o=a(153);e.exports=function(e,t){return o(n(e,t,r),e+"")}},function(e,t,a){var r=a(152),n=Math.max;e.exports=function(e,t,a){return t=n(void 0===t?e.length-1:t,0),function(){for(var o=arguments,i=-1,l=n(o.length-t,0),s=Array(l);++i<l;)s[i]=o[t+i];i=-1;for(var c=Array(t+1);++i<t;)c[i]=o[i];return c[t]=a(s),r(e,this,c)}}},function(e,t){e.exports=function(e,t,a){switch(a.length){case 0:return e.call(t);case 1:return e.call(t,a[0]);case 2:return e.call(t,a[0],a[1]);case 3:return e.call(t,a[0],a[1],a[2])}return e.apply(t,a)}},function(e,t,a){var r=a(154),n=a(157)(r);e.exports=n},function(e,t,a){var r=a(155),n=a(156),o=a(26),i=n?function(e,t){return n(e,"toString",{configurable:!0,enumerable:!1,value:r(t),writable:!0})}:o;e.exports=i},function(e,t){e.exports=function(e){return function(){return e}}},function(e,t,a){var r=a(5),n=function(){try{var e=r(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=n},function(e,t){var a=Date.now;e.exports=function(e){var t=0,r=0;return function(){var n=a(),o=16-(n-r);if(r=n,o>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}},function(e,t,a){var r=a(38),n=a(159),o=a(164),i=a(39),l=a(165),s=a(22);e.exports=function(e,t,a){var c=-1,m=n,p=e.length,u=!0,g=[],d=g;if(a)u=!1,m=o;else if(p>=200){var h=t?null:l(e);if(h)return s(h);u=!1,m=i,d=new r}else d=t?[]:g;e:for(;++c<p;){var y=e[c],f=t?t(y):y;if(y=a||0!==y?y:0,u&&f==f){for(var b=d.length;b--;)if(d[b]===f)continue e;t&&d.push(f),g.push(y)}else m(d,f,a)||(d!==g&&d.push(f),g.push(y))}return g}},function(e,t,a){var r=a(160);e.exports=function(e,t){return!!(null==e?0:e.length)&&r(e,t,0)>-1}},function(e,t,a){var r=a(161),n=a(162),o=a(163);e.exports=function(e,t,a){return t==t?o(e,t,a):r(e,n,a)}},function(e,t){e.exports=function(e,t,a,r){for(var n=e.length,o=a+(r?1:-1);r?o--:++o<n;)if(t(e[o],o,e))return o;return-1}},function(e,t){e.exports=function(e){return e!=e}},function(e,t){e.exports=function(e,t,a){for(var r=a-1,n=e.length;++r<n;)if(e[r]===t)return r;return-1}},function(e,t){e.exports=function(e,t,a){for(var r=-1,n=null==e?0:e.length;++r<n;)if(a(t,e[r]))return!0;return!1}},function(e,t,a){var r=a(45),n=a(166),o=a(22),i=r&&1/o(new r([,-0]))[1]==1/0?function(e){return new r(e)}:n;e.exports=i},function(e,t){e.exports=function(){}},function(e,t,a){var r=a(44),n=a(6);e.exports=function(e){return n(e)&&r(e)}},function(e,t){e.exports=function(e){var t=null==e?0:e.length;return t?e[t-1]:void 0}},function(e,t,a){},function(e,t,a){},function(e,t,a){},function(e,t,a){"use strict";a(50)},function(e,t,a){"use strict";a(51)},function(e,t,a){"use strict";a(52)},function(e,t,a){"use strict";a(53)},function(e,t,a){"use strict";a(54)},function(e,t,a){"use strict";a(55)},function(e,t,a){"use strict";a(56)},function(e,t,a){"use strict";a(57)},function(e,t,a){"use strict";a(58)},function(e,t,a){"use strict";a(59)},function(e,t,a){},function(e,t,a){var r;function n(e){function a(){if(a.enabled){var e=a,n=+new Date,o=n-(r||n);e.diff=o,e.prev=r,e.curr=n,r=n;for(var i=new Array(arguments.length),l=0;l<i.length;l++)i[l]=arguments[l];i[0]=t.coerce(i[0]),"string"!=typeof i[0]&&i.unshift("%O");var s=0;i[0]=i[0].replace(/%([a-zA-Z%])/g,(function(a,r){if("%%"===a)return a;s++;var n=t.formatters[r];if("function"==typeof n){var o=i[s];a=n.call(e,o),i.splice(s,1),s--}return a})),t.formatArgs.call(e,i);var c=a.log||t.log||console.log.bind(console);c.apply(e,i)}}return a.namespace=e,a.enabled=t.enabled(e),a.useColors=t.useColors(),a.color=function(e){var a,r=0;for(a in e)r=(r<<5)-r+e.charCodeAt(a),r|=0;return t.colors[Math.abs(r)%t.colors.length]}(e),"function"==typeof t.init&&t.init(a),a}(t=e.exports=n.debug=n.default=n).coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){t.enable("")},t.enable=function(e){t.save(e),t.names=[],t.skips=[];for(var a=("string"==typeof e?e:"").split(/[\s,]+/),r=a.length,n=0;n<r;n++)a[n]&&("-"===(e=a[n].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.substr(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){var a,r;for(a=0,r=t.skips.length;a<r;a++)if(t.skips[a].test(e))return!1;for(a=0,r=t.names.length;a<r;a++)if(t.names[a].test(e))return!0;return!1},t.humanize=a(184),t.names=[],t.skips=[],t.formatters={}},function(e,t){var a=1e3,r=6e4,n=60*r,o=24*n;function i(e,t,a){if(!(e<t))return e<1.5*t?Math.floor(e/t)+" "+a:Math.ceil(e/t)+" "+a+"s"}e.exports=function(e,t){t=t||{};var l,s=typeof e;if("string"===s&&e.length>0)return function(e){if((e=String(e)).length>100)return;var t=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(!t)return;var i=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*i;case"days":case"day":case"d":return i*o;case"hours":case"hour":case"hrs":case"hr":case"h":return i*n;case"minutes":case"minute":case"mins":case"min":case"m":return i*r;case"seconds":case"second":case"secs":case"sec":case"s":return i*a;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return i;default:return}}(e);if("number"===s&&!1===isNaN(e))return t.long?i(l=e,o,"day")||i(l,n,"hour")||i(l,r,"minute")||i(l,a,"second")||l+" ms":function(e){if(e>=o)return Math.round(e/o)+"d";if(e>=n)return Math.round(e/n)+"h";if(e>=r)return Math.round(e/r)+"m";if(e>=a)return Math.round(e/a)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},function(e,t,a){},function(e,t,a){"use strict";a(60)},function(e,t,a){},function(e,t,a){"use strict";a(61)},function(e,t,a){"use strict";a(62)},function(e,t,a){"use strict";a(63)},function(e,t,a){"use strict";a(64)},function(e,t,a){},function(e,t,a){"use strict";a(65)},function(e,t,a){"use strict";a(66)},function(e,t,a){"use strict";a(67)},function(e,t,a){"use strict";a(68)},function(e,t,a){"use strict";a.r(t);var r=a(0);
/*!
  * vue-router v3.5.4
  * (c) 2022 Evan You
  * @license MIT
  */function n(e,t){for(var a in t)e[a]=t[a];return e}var o=/[!'()*]/g,i=function(e){return"%"+e.charCodeAt(0).toString(16)},l=/%2C/g,s=function(e){return encodeURIComponent(e).replace(o,i).replace(l,",")};function c(e){try{return decodeURIComponent(e)}catch(e){0}return e}var m=function(e){return null==e||"object"==typeof e?e:String(e)};function p(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var a=e.replace(/\+/g," ").split("="),r=c(a.shift()),n=a.length>0?c(a.join("=")):null;void 0===t[r]?t[r]=n:Array.isArray(t[r])?t[r].push(n):t[r]=[t[r],n]})),t):t}function u(e){var t=e?Object.keys(e).map((function(t){var a=e[t];if(void 0===a)return"";if(null===a)return s(t);if(Array.isArray(a)){var r=[];return a.forEach((function(e){void 0!==e&&(null===e?r.push(s(t)):r.push(s(t)+"="+s(e)))})),r.join("&")}return s(t)+"="+s(a)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var g=/\/?$/;function d(e,t,a,r){var n=r&&r.options.stringifyQuery,o=t.query||{};try{o=h(o)}catch(e){}var i={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:o,params:t.params||{},fullPath:b(t,n),matched:e?f(e):[]};return a&&(i.redirectedFrom=b(a,n)),Object.freeze(i)}function h(e){if(Array.isArray(e))return e.map(h);if(e&&"object"==typeof e){var t={};for(var a in e)t[a]=h(e[a]);return t}return e}var y=d(null,{path:"/"});function f(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function b(e,t){var a=e.path,r=e.query;void 0===r&&(r={});var n=e.hash;return void 0===n&&(n=""),(a||"/")+(t||u)(r)+n}function v(e,t,a){return t===y?e===t:!!t&&(e.path&&t.path?e.path.replace(g,"")===t.path.replace(g,"")&&(a||e.hash===t.hash&&w(e.query,t.query)):!(!e.name||!t.name)&&(e.name===t.name&&(a||e.hash===t.hash&&w(e.query,t.query)&&w(e.params,t.params))))}function w(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var a=Object.keys(e).sort(),r=Object.keys(t).sort();return a.length===r.length&&a.every((function(a,n){var o=e[a];if(r[n]!==a)return!1;var i=t[a];return null==o||null==i?o===i:"object"==typeof o&&"object"==typeof i?w(o,i):String(o)===String(i)}))}function k(e){for(var t=0;t<e.matched.length;t++){var a=e.matched[t];for(var r in a.instances){var n=a.instances[r],o=a.enteredCbs[r];if(n&&o){delete a.enteredCbs[r];for(var i=0;i<o.length;i++)n._isBeingDestroyed||o[i](n)}}}}var E={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var a=t.props,r=t.children,o=t.parent,i=t.data;i.routerView=!0;for(var l=o.$createElement,s=a.name,c=o.$route,m=o._routerViewCache||(o._routerViewCache={}),p=0,u=!1;o&&o._routerRoot!==o;){var g=o.$vnode?o.$vnode.data:{};g.routerView&&p++,g.keepAlive&&o._directInactive&&o._inactive&&(u=!0),o=o.$parent}if(i.routerViewDepth=p,u){var d=m[s],h=d&&d.component;return h?(d.configProps&&T(h,i,d.route,d.configProps),l(h,i,r)):l()}var y=c.matched[p],f=y&&y.components[s];if(!y||!f)return m[s]=null,l();m[s]={component:f},i.registerRouteInstance=function(e,t){var a=y.instances[s];(t&&a!==e||!t&&a===e)&&(y.instances[s]=t)},(i.hook||(i.hook={})).prepatch=function(e,t){y.instances[s]=t.componentInstance},i.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==y.instances[s]&&(y.instances[s]=e.componentInstance),k(c)};var b=y.props&&y.props[s];return b&&(n(m[s],{route:c,configProps:b}),T(f,i,c,b)),l(f,i,r)}};function T(e,t,a,r){var o=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0;default:0}}(a,r);if(o){o=t.props=n({},o);var i=t.attrs=t.attrs||{};for(var l in o)e.props&&l in e.props||(i[l]=o[l],delete o[l])}}function x(e,t,a){var r=e.charAt(0);if("/"===r)return e;if("?"===r||"#"===r)return t+e;var n=t.split("/");a&&n[n.length-1]||n.pop();for(var o=e.replace(/^\//,"").split("/"),i=0;i<o.length;i++){var l=o[i];".."===l?n.pop():"."!==l&&n.push(l)}return""!==n[0]&&n.unshift(""),n.join("/")}function S(e){return e.replace(/\/(?:\s*\/)+/g,"/")}var P=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},q=O,_=L,A=function(e,t){return J(L(e,t),t)},B=J,D=z,C=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function L(e,t){for(var a,r=[],n=0,o=0,i="",l=t&&t.delimiter||"/";null!=(a=C.exec(e));){var s=a[0],c=a[1],m=a.index;if(i+=e.slice(o,m),o=m+s.length,c)i+=c[1];else{var p=e[o],u=a[2],g=a[3],d=a[4],h=a[5],y=a[6],f=a[7];i&&(r.push(i),i="");var b=null!=u&&null!=p&&p!==u,v="+"===y||"*"===y,w="?"===y||"*"===y,k=a[2]||l,E=d||h;r.push({name:g||n++,prefix:u||"",delimiter:k,optional:w,repeat:v,partial:b,asterisk:!!f,pattern:E?$(E):f?".*":"[^"+I(k)+"]+?"})}}return o<e.length&&(i+=e.substr(o)),i&&r.push(i),r}function U(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function J(e,t){for(var a=new Array(e.length),r=0;r<e.length;r++)"object"==typeof e[r]&&(a[r]=new RegExp("^(?:"+e[r].pattern+")$",F(t)));return function(t,r){for(var n="",o=t||{},i=(r||{}).pretty?U:encodeURIComponent,l=0;l<e.length;l++){var s=e[l];if("string"!=typeof s){var c,m=o[s.name];if(null==m){if(s.optional){s.partial&&(n+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(P(m)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(m)+"`");if(0===m.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<m.length;p++){if(c=i(m[p]),!a[l].test(c))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(c)+"`");n+=(0===p?s.prefix:s.delimiter)+c}}else{if(c=s.asterisk?encodeURI(m).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):i(m),!a[l].test(c))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+c+'"');n+=s.prefix+c}}else n+=s}return n}}function I(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function $(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function j(e,t){return e.keys=t,e}function F(e){return e&&e.sensitive?"":"i"}function z(e,t,a){P(t)||(a=t||a,t=[]);for(var r=(a=a||{}).strict,n=!1!==a.end,o="",i=0;i<e.length;i++){var l=e[i];if("string"==typeof l)o+=I(l);else{var s=I(l.prefix),c="(?:"+l.pattern+")";t.push(l),l.repeat&&(c+="(?:"+s+c+")*"),o+=c=l.optional?l.partial?s+"("+c+")?":"(?:"+s+"("+c+"))?":s+"("+c+")"}}var m=I(a.delimiter||"/"),p=o.slice(-m.length)===m;return r||(o=(p?o.slice(0,-m.length):o)+"(?:"+m+"(?=$))?"),o+=n?"$":r&&p?"":"(?="+m+"|$)",j(new RegExp("^"+o,F(a)),t)}function O(e,t,a){return P(t)||(a=t||a,t=[]),a=a||{},e instanceof RegExp?function(e,t){var a=e.source.match(/\((?!\?)/g);if(a)for(var r=0;r<a.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return j(e,t)}(e,t):P(e)?function(e,t,a){for(var r=[],n=0;n<e.length;n++)r.push(O(e[n],t,a).source);return j(new RegExp("(?:"+r.join("|")+")",F(a)),t)}(e,t,a):function(e,t,a){return z(L(e,a),t,a)}(e,t,a)}q.parse=_,q.compile=A,q.tokensToFunction=B,q.tokensToRegExp=D;var M=Object.create(null);function N(e,t,a){t=t||{};try{var r=M[e]||(M[e]=q.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),r(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function K(e,t,a,r){var o="string"==typeof e?{path:e}:e;if(o._normalized)return o;if(o.name){var i=(o=n({},e)).params;return i&&"object"==typeof i&&(o.params=n({},i)),o}if(!o.path&&o.params&&t){(o=n({},o))._normalized=!0;var l=n(n({},t.params),o.params);if(t.name)o.name=t.name,o.params=l;else if(t.matched.length){var s=t.matched[t.matched.length-1].path;o.path=N(s,l,t.path)}else 0;return o}var c=function(e){var t="",a="",r=e.indexOf("#");r>=0&&(t=e.slice(r),e=e.slice(0,r));var n=e.indexOf("?");return n>=0&&(a=e.slice(n+1),e=e.slice(0,n)),{path:e,query:a,hash:t}}(o.path||""),u=t&&t.path||"/",g=c.path?x(c.path,u,a||o.append):u,d=function(e,t,a){void 0===t&&(t={});var r,n=a||p;try{r=n(e||"")}catch(e){r={}}for(var o in t){var i=t[o];r[o]=Array.isArray(i)?i.map(m):m(i)}return r}(c.query,o.query,r&&r.options.parseQuery),h=o.hash||c.hash;return h&&"#"!==h.charAt(0)&&(h="#"+h),{_normalized:!0,path:g,query:d,hash:h}}var R,H=function(){},V={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var t=this,a=this.$router,r=this.$route,o=a.resolve(this.to,r,this.append),i=o.location,l=o.route,s=o.href,c={},m=a.options.linkActiveClass,p=a.options.linkExactActiveClass,u=null==m?"router-link-active":m,h=null==p?"router-link-exact-active":p,y=null==this.activeClass?u:this.activeClass,f=null==this.exactActiveClass?h:this.exactActiveClass,b=l.redirectedFrom?d(null,K(l.redirectedFrom),null,a):l;c[f]=v(r,b,this.exactPath),c[y]=this.exact||this.exactPath?c[f]:function(e,t){return 0===e.path.replace(g,"/").indexOf(t.path.replace(g,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var a in t)if(!(a in e))return!1;return!0}(e.query,t.query)}(r,b);var w=c[f]?this.ariaCurrentValue:null,k=function(e){W(e)&&(t.replace?a.replace(i,H):a.push(i,H))},E={click:W};Array.isArray(this.event)?this.event.forEach((function(e){E[e]=k})):E[this.event]=k;var T={class:c},x=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:l,navigate:k,isActive:c[y],isExactActive:c[f]});if(x){if(1===x.length)return x[0];if(x.length>1||!x.length)return 0===x.length?e():e("span",{},x)}if("a"===this.tag)T.on=E,T.attrs={href:s,"aria-current":w};else{var S=function e(t){var a;if(t)for(var r=0;r<t.length;r++){if("a"===(a=t[r]).tag)return a;if(a.children&&(a=e(a.children)))return a}}(this.$slots.default);if(S){S.isStatic=!1;var P=S.data=n({},S.data);for(var q in P.on=P.on||{},P.on){var _=P.on[q];q in E&&(P.on[q]=Array.isArray(_)?_:[_])}for(var A in E)A in P.on?P.on[A].push(E[A]):P.on[A]=k;var B=S.data.attrs=n({},S.data.attrs);B.href=s,B["aria-current"]=w}else T.on=E}return e(this.tag,T,this.$slots.default)}};function W(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}var Y="undefined"!=typeof window;function G(e,t,a,r,n){var o=t||[],i=a||Object.create(null),l=r||Object.create(null);e.forEach((function(e){!function e(t,a,r,n,o,i){var l=n.path,s=n.name;0;var c=n.pathToRegexpOptions||{},m=function(e,t,a){a||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==t)return e;return S(t.path+"/"+e)}(l,o,c.strict);"boolean"==typeof n.caseSensitive&&(c.sensitive=n.caseSensitive);var p={path:m,regex:X(m,c),components:n.components||{default:n.component},alias:n.alias?"string"==typeof n.alias?[n.alias]:n.alias:[],instances:{},enteredCbs:{},name:s,parent:o,matchAs:i,redirect:n.redirect,beforeEnter:n.beforeEnter,meta:n.meta||{},props:null==n.props?{}:n.components?n.props:{default:n.props}};n.children&&n.children.forEach((function(n){var o=i?S(i+"/"+n.path):void 0;e(t,a,r,n,p,o)}));a[p.path]||(t.push(p.path),a[p.path]=p);if(void 0!==n.alias)for(var u=Array.isArray(n.alias)?n.alias:[n.alias],g=0;g<u.length;++g){0;var d={path:u[g],children:n.children};e(t,a,r,d,o,p.path||"/")}s&&(r[s]||(r[s]=p))}(o,i,l,e,n)}));for(var s=0,c=o.length;s<c;s++)"*"===o[s]&&(o.push(o.splice(s,1)[0]),c--,s--);return{pathList:o,pathMap:i,nameMap:l}}function X(e,t){return q(e,[],t)}function Q(e,t){var a=G(e),r=a.pathList,n=a.pathMap,o=a.nameMap;function i(e,a,i){var l=K(e,a,!1,t),c=l.name;if(c){var m=o[c];if(!m)return s(null,l);var p=m.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof l.params&&(l.params={}),a&&"object"==typeof a.params)for(var u in a.params)!(u in l.params)&&p.indexOf(u)>-1&&(l.params[u]=a.params[u]);return l.path=N(m.path,l.params),s(m,l,i)}if(l.path){l.params={};for(var g=0;g<r.length;g++){var d=r[g],h=n[d];if(Z(h.regex,l.path,l.params))return s(h,l,i)}}return s(null,l)}function l(e,a){var r=e.redirect,n="function"==typeof r?r(d(e,a,null,t)):r;if("string"==typeof n&&(n={path:n}),!n||"object"!=typeof n)return s(null,a);var l=n,c=l.name,m=l.path,p=a.query,u=a.hash,g=a.params;if(p=l.hasOwnProperty("query")?l.query:p,u=l.hasOwnProperty("hash")?l.hash:u,g=l.hasOwnProperty("params")?l.params:g,c){o[c];return i({_normalized:!0,name:c,query:p,hash:u,params:g},void 0,a)}if(m){var h=function(e,t){return x(e,t.parent?t.parent.path:"/",!0)}(m,e);return i({_normalized:!0,path:N(h,g),query:p,hash:u},void 0,a)}return s(null,a)}function s(e,a,r){return e&&e.redirect?l(e,r||a):e&&e.matchAs?function(e,t,a){var r=i({_normalized:!0,path:N(a,t.params)});if(r){var n=r.matched,o=n[n.length-1];return t.params=r.params,s(o,t)}return s(null,t)}(0,a,e.matchAs):d(e,a,r,t)}return{match:i,addRoute:function(e,t){var a="object"!=typeof e?o[e]:void 0;G([t||e],r,n,o,a),a&&a.alias.length&&G(a.alias.map((function(e){return{path:e,children:[t]}})),r,n,o,a)},getRoutes:function(){return r.map((function(e){return n[e]}))},addRoutes:function(e){G(e,r,n,o)}}}function Z(e,t,a){var r=t.match(e);if(!r)return!1;if(!a)return!0;for(var n=1,o=r.length;n<o;++n){var i=e.keys[n-1];i&&(a[i.name||"pathMatch"]="string"==typeof r[n]?c(r[n]):r[n])}return!0}var ee=Y&&window.performance&&window.performance.now?window.performance:Date;function te(){return ee.now().toFixed(3)}var ae=te();function re(){return ae}function ne(e){return ae=e}var oe=Object.create(null);function ie(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),a=n({},window.history.state);return a.key=re(),window.history.replaceState(a,"",t),window.addEventListener("popstate",ce),function(){window.removeEventListener("popstate",ce)}}function le(e,t,a,r){if(e.app){var n=e.options.scrollBehavior;n&&e.app.$nextTick((function(){var o=function(){var e=re();if(e)return oe[e]}(),i=n.call(e,t,a,r?o:null);i&&("function"==typeof i.then?i.then((function(e){de(e,o)})).catch((function(e){0})):de(i,o))}))}}function se(){var e=re();e&&(oe[e]={x:window.pageXOffset,y:window.pageYOffset})}function ce(e){se(),e.state&&e.state.key&&ne(e.state.key)}function me(e){return ue(e.x)||ue(e.y)}function pe(e){return{x:ue(e.x)?e.x:window.pageXOffset,y:ue(e.y)?e.y:window.pageYOffset}}function ue(e){return"number"==typeof e}var ge=/^#\d/;function de(e,t){var a,r="object"==typeof e;if(r&&"string"==typeof e.selector){var n=ge.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(n){var o=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var a=document.documentElement.getBoundingClientRect(),r=e.getBoundingClientRect();return{x:r.left-a.left-t.x,y:r.top-a.top-t.y}}(n,o={x:ue((a=o).x)?a.x:0,y:ue(a.y)?a.y:0})}else me(e)&&(t=pe(e))}else r&&me(e)&&(t=pe(e));t&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:t.x,top:t.y,behavior:e.behavior}):window.scrollTo(t.x,t.y))}var he,ye=Y&&((-1===(he=window.navigator.userAgent).indexOf("Android 2.")&&-1===he.indexOf("Android 4.0")||-1===he.indexOf("Mobile Safari")||-1!==he.indexOf("Chrome")||-1!==he.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function fe(e,t){se();var a=window.history;try{if(t){var r=n({},a.state);r.key=re(),a.replaceState(r,"",e)}else a.pushState({key:ne(te())},"",e)}catch(a){window.location[t?"replace":"assign"](e)}}function be(e){fe(e,!0)}function ve(e,t,a){var r=function(n){n>=e.length?a():e[n]?t(e[n],(function(){r(n+1)})):r(n+1)};r(0)}var we={redirected:2,aborted:4,cancelled:8,duplicated:16};function ke(e,t){return Te(e,t,we.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var t={};return xe.forEach((function(a){a in e&&(t[a]=e[a])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}function Ee(e,t){return Te(e,t,we.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function Te(e,t,a,r){var n=new Error(r);return n._isRouter=!0,n.from=e,n.to=t,n.type=a,n}var xe=["params","query","hash"];function Se(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function Pe(e,t){return Se(e)&&e._isRouter&&(null==t||e.type===t)}function qe(e){return function(t,a,r){var n=!1,o=0,i=null;_e(e,(function(e,t,a,l){if("function"==typeof e&&void 0===e.cid){n=!0,o++;var s,c=De((function(t){var n;((n=t).__esModule||Be&&"Module"===n[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:R.extend(t),a.components[l]=t,--o<=0&&r()})),m=De((function(e){var t="Failed to resolve async component "+l+": "+e;i||(i=Se(e)?e:new Error(t),r(i))}));try{s=e(c,m)}catch(e){m(e)}if(s)if("function"==typeof s.then)s.then(c,m);else{var p=s.component;p&&"function"==typeof p.then&&p.then(c,m)}}})),n||r()}}function _e(e,t){return Ae(e.map((function(e){return Object.keys(e.components).map((function(a){return t(e.components[a],e.instances[a],e,a)}))})))}function Ae(e){return Array.prototype.concat.apply([],e)}var Be="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function De(e){var t=!1;return function(){for(var a=[],r=arguments.length;r--;)a[r]=arguments[r];if(!t)return t=!0,e.apply(this,a)}}var Ce=function(e,t){this.router=e,this.base=function(e){if(!e)if(Y){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(t),this.current=y,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Le(e,t,a,r){var n=_e(e,(function(e,r,n,o){var i=function(e,t){"function"!=typeof e&&(e=R.extend(e));return e.options[t]}(e,t);if(i)return Array.isArray(i)?i.map((function(e){return a(e,r,n,o)})):a(i,r,n,o)}));return Ae(r?n.reverse():n)}function Ue(e,t){if(t)return function(){return e.apply(t,arguments)}}Ce.prototype.listen=function(e){this.cb=e},Ce.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},Ce.prototype.onError=function(e){this.errorCbs.push(e)},Ce.prototype.transitionTo=function(e,t,a){var r,n=this;try{r=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(t){t(e)})),e}var o=this.current;this.confirmTransition(r,(function(){n.updateRoute(r),t&&t(r),n.ensureURL(),n.router.afterHooks.forEach((function(e){e&&e(r,o)})),n.ready||(n.ready=!0,n.readyCbs.forEach((function(e){e(r)})))}),(function(e){a&&a(e),e&&!n.ready&&(Pe(e,we.redirected)&&o===y||(n.ready=!0,n.readyErrorCbs.forEach((function(t){t(e)}))))}))},Ce.prototype.confirmTransition=function(e,t,a){var r=this,n=this.current;this.pending=e;var o,i,l=function(e){!Pe(e)&&Se(e)&&(r.errorCbs.length?r.errorCbs.forEach((function(t){t(e)})):console.error(e)),a&&a(e)},s=e.matched.length-1,c=n.matched.length-1;if(v(e,n)&&s===c&&e.matched[s]===n.matched[c])return this.ensureURL(),e.hash&&le(this.router,n,e,!1),l(((i=Te(o=n,e,we.duplicated,'Avoided redundant navigation to current location: "'+o.fullPath+'".')).name="NavigationDuplicated",i));var m=function(e,t){var a,r=Math.max(e.length,t.length);for(a=0;a<r&&e[a]===t[a];a++);return{updated:t.slice(0,a),activated:t.slice(a),deactivated:e.slice(a)}}(this.current.matched,e.matched),p=m.updated,u=m.deactivated,g=m.activated,d=[].concat(function(e){return Le(e,"beforeRouteLeave",Ue,!0)}(u),this.router.beforeHooks,function(e){return Le(e,"beforeRouteUpdate",Ue)}(p),g.map((function(e){return e.beforeEnter})),qe(g)),h=function(t,a){if(r.pending!==e)return l(Ee(n,e));try{t(e,n,(function(t){!1===t?(r.ensureURL(!0),l(function(e,t){return Te(e,t,we.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(n,e))):Se(t)?(r.ensureURL(!0),l(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(l(ke(n,e)),"object"==typeof t&&t.replace?r.replace(t):r.push(t)):a(t)}))}catch(e){l(e)}};ve(d,h,(function(){ve(function(e){return Le(e,"beforeRouteEnter",(function(e,t,a,r){return function(e,t,a){return function(r,n,o){return e(r,n,(function(e){"function"==typeof e&&(t.enteredCbs[a]||(t.enteredCbs[a]=[]),t.enteredCbs[a].push(e)),o(e)}))}}(e,a,r)}))}(g).concat(r.router.resolveHooks),h,(function(){if(r.pending!==e)return l(Ee(n,e));r.pending=null,t(e),r.router.app&&r.router.app.$nextTick((function(){k(e)}))}))}))},Ce.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},Ce.prototype.setupListeners=function(){},Ce.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=y,this.pending=null};var Je=function(e){function t(t,a){e.call(this,t,a),this._startLocation=Ie(this.base)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router,a=t.options.scrollBehavior,r=ye&&a;r&&this.listeners.push(ie());var n=function(){var a=e.current,n=Ie(e.base);e.current===y&&n===e._startLocation||e.transitionTo(n,(function(e){r&&le(t,e,a,!0)}))};window.addEventListener("popstate",n),this.listeners.push((function(){window.removeEventListener("popstate",n)}))}},t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,a){var r=this,n=this.current;this.transitionTo(e,(function(e){fe(S(r.base+e.fullPath)),le(r.router,e,n,!1),t&&t(e)}),a)},t.prototype.replace=function(e,t,a){var r=this,n=this.current;this.transitionTo(e,(function(e){be(S(r.base+e.fullPath)),le(r.router,e,n,!1),t&&t(e)}),a)},t.prototype.ensureURL=function(e){if(Ie(this.base)!==this.current.fullPath){var t=S(this.base+this.current.fullPath);e?fe(t):be(t)}},t.prototype.getCurrentLocation=function(){return Ie(this.base)},t}(Ce);function Ie(e){var t=window.location.pathname,a=t.toLowerCase(),r=e.toLowerCase();return!e||a!==r&&0!==a.indexOf(S(r+"/"))||(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var $e=function(e){function t(t,a,r){e.call(this,t,a),r&&function(e){var t=Ie(e);if(!/^\/#/.test(t))return window.location.replace(S(e+"/#"+t)),!0}(this.base)||je()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,a=ye&&t;a&&this.listeners.push(ie());var r=function(){var t=e.current;je()&&e.transitionTo(Fe(),(function(r){a&&le(e.router,r,t,!0),ye||Me(r.fullPath)}))},n=ye?"popstate":"hashchange";window.addEventListener(n,r),this.listeners.push((function(){window.removeEventListener(n,r)}))}},t.prototype.push=function(e,t,a){var r=this,n=this.current;this.transitionTo(e,(function(e){Oe(e.fullPath),le(r.router,e,n,!1),t&&t(e)}),a)},t.prototype.replace=function(e,t,a){var r=this,n=this.current;this.transitionTo(e,(function(e){Me(e.fullPath),le(r.router,e,n,!1),t&&t(e)}),a)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;Fe()!==t&&(e?Oe(t):Me(t))},t.prototype.getCurrentLocation=function(){return Fe()},t}(Ce);function je(){var e=Fe();return"/"===e.charAt(0)||(Me("/"+e),!1)}function Fe(){var e=window.location.href,t=e.indexOf("#");return t<0?"":e=e.slice(t+1)}function ze(e){var t=window.location.href,a=t.indexOf("#");return(a>=0?t.slice(0,a):t)+"#"+e}function Oe(e){ye?fe(ze(e)):window.location.hash=e}function Me(e){ye?be(ze(e)):window.location.replace(ze(e))}var Ne=function(e){function t(t,a){e.call(this,t,a),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,a){var r=this;this.transitionTo(e,(function(e){r.stack=r.stack.slice(0,r.index+1).concat(e),r.index++,t&&t(e)}),a)},t.prototype.replace=function(e,t,a){var r=this;this.transitionTo(e,(function(e){r.stack=r.stack.slice(0,r.index).concat(e),t&&t(e)}),a)},t.prototype.go=function(e){var t=this,a=this.index+e;if(!(a<0||a>=this.stack.length)){var r=this.stack[a];this.confirmTransition(r,(function(){var e=t.current;t.index=a,t.updateRoute(r),t.router.afterHooks.forEach((function(t){t&&t(r,e)}))}),(function(e){Pe(e,we.duplicated)&&(t.index=a)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(Ce),Ke=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Q(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!ye&&!1!==e.fallback,this.fallback&&(t="hash"),Y||(t="abstract"),this.mode=t,t){case"history":this.history=new Je(this,e.base);break;case"hash":this.history=new $e(this,e.base,this.fallback);break;case"abstract":this.history=new Ne(this,e.base);break;default:0}},Re={currentRoute:{configurable:!0}};function He(e,t){return e.push(t),function(){var a=e.indexOf(t);a>-1&&e.splice(a,1)}}Ke.prototype.match=function(e,t,a){return this.matcher.match(e,t,a)},Re.currentRoute.get=function(){return this.history&&this.history.current},Ke.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var a=t.apps.indexOf(e);a>-1&&t.apps.splice(a,1),t.app===e&&(t.app=t.apps[0]||null),t.app||t.history.teardown()})),!this.app){this.app=e;var a=this.history;if(a instanceof Je||a instanceof $e){var r=function(e){a.setupListeners(),function(e){var r=a.current,n=t.options.scrollBehavior;ye&&n&&"fullPath"in e&&le(t,e,r,!1)}(e)};a.transitionTo(a.getCurrentLocation(),r,r)}a.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},Ke.prototype.beforeEach=function(e){return He(this.beforeHooks,e)},Ke.prototype.beforeResolve=function(e){return He(this.resolveHooks,e)},Ke.prototype.afterEach=function(e){return He(this.afterHooks,e)},Ke.prototype.onReady=function(e,t){this.history.onReady(e,t)},Ke.prototype.onError=function(e){this.history.onError(e)},Ke.prototype.push=function(e,t,a){var r=this;if(!t&&!a&&"undefined"!=typeof Promise)return new Promise((function(t,a){r.history.push(e,t,a)}));this.history.push(e,t,a)},Ke.prototype.replace=function(e,t,a){var r=this;if(!t&&!a&&"undefined"!=typeof Promise)return new Promise((function(t,a){r.history.replace(e,t,a)}));this.history.replace(e,t,a)},Ke.prototype.go=function(e){this.history.go(e)},Ke.prototype.back=function(){this.go(-1)},Ke.prototype.forward=function(){this.go(1)},Ke.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},Ke.prototype.resolve=function(e,t,a){var r=K(e,t=t||this.history.current,a,this),n=this.match(r,t),o=n.redirectedFrom||n.fullPath;return{location:r,route:n,href:function(e,t,a){var r="hash"===a?"#"+t:t;return e?S(e+"/"+r):r}(this.history.base,o,this.mode),normalizedTo:r,resolved:n}},Ke.prototype.getRoutes=function(){return this.matcher.getRoutes()},Ke.prototype.addRoute=function(e,t){this.matcher.addRoute(e,t),this.history.current!==y&&this.history.transitionTo(this.history.getCurrentLocation())},Ke.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==y&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Ke.prototype,Re),Ke.install=function e(t){if(!e.installed||R!==t){e.installed=!0,R=t;var a=function(e){return void 0!==e},r=function(e,t){var r=e.$options._parentVnode;a(r)&&a(r=r.data)&&a(r=r.registerRouteInstance)&&r(e,t)};t.mixin({beforeCreate:function(){a(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",E),t.component("RouterLink",V);var n=t.config.optionMergeStrategies;n.beforeRouteEnter=n.beforeRouteLeave=n.beforeRouteUpdate=n.created}},Ke.version="3.5.4",Ke.isNavigationFailure=Pe,Ke.NavigationFailureType=we,Ke.START_LOCATION=y,Y&&window.Vue&&window.Vue.use(Ke);var Ve=Ke;var We={NotFound:()=>Promise.all([a.e(0),a.e(1),a.e(6)]).then(a.bind(null,525)),Blog:()=>Promise.all([a.e(0),a.e(1),a.e(2),a.e(4)]).then(a.bind(null,524)),Layout:()=>Promise.all([a.e(0),a.e(1),a.e(2),a.e(635),a.e(5)]).then(a.bind(null,523)),Slide:()=>Promise.all([a.e(0),a.e(7)]).then(a.bind(null,526))},Ye={"v-d67fac18":()=>a.e(572).then(a.bind(null,527)),"v-704ec0f6":()=>a.e(537).then(a.bind(null,528)),"v-64ad8634":()=>a.e(579).then(a.bind(null,529)),"v-7d90151b":()=>a.e(37).then(a.bind(null,530)),"v-372b66f6":()=>a.e(36).then(a.bind(null,531)),"v-75e8440e":()=>a.e(39).then(a.bind(null,532)),"v-c6abb5b6":()=>a.e(40).then(a.bind(null,533)),"v-3fd81b4e":()=>a.e(38).then(a.bind(null,534)),"v-77c02b9f":()=>a.e(30).then(a.bind(null,535)),"v-6e1f31df":()=>a.e(35).then(a.bind(null,536)),"v-f5d87fb6":()=>a.e(50).then(a.bind(null,537)),"v-24b9f9d2":()=>a.e(41).then(a.bind(null,538)),"v-998686ac":()=>a.e(505).then(a.bind(null,539)),"v-0bed98a5":()=>a.e(46).then(a.bind(null,540)),"v-09229bab":()=>a.e(25).then(a.bind(null,541)),"v-4a7f66b3":()=>a.e(42).then(a.bind(null,542)),"v-84a78a34":()=>a.e(595).then(a.bind(null,543)),"v-dad451c6":()=>a.e(34).then(a.bind(null,544)),"v-b70ca5f6":()=>a.e(32).then(a.bind(null,545)),"v-278cb0c7":()=>a.e(31).then(a.bind(null,546)),"v-2b6a2ea5":()=>a.e(99).then(a.bind(null,547)),"v-42194f25":()=>a.e(33).then(a.bind(null,548)),"v-ab3140c6":()=>a.e(29).then(a.bind(null,549)),"v-f1419f76":()=>a.e(23).then(a.bind(null,550)),"v-d47751f6":()=>a.e(24).then(a.bind(null,551)),"v-87d6a988":()=>a.e(553).then(a.bind(null,552)),"v-5861af7a":()=>a.e(22).then(a.bind(null,553)),"v-334280bb":()=>a.e(21).then(a.bind(null,554)),"v-2c4ec045":()=>a.e(20).then(a.bind(null,555)),"v-7e930965":()=>a.e(19).then(a.bind(null,556)),"v-6e20c47b":()=>a.e(47).then(a.bind(null,557)),"v-252a1ae5":()=>a.e(48).then(a.bind(null,558)),"v-958c3daa":()=>a.e(49).then(a.bind(null,559)),"v-0ed7643a":()=>a.e(74).then(a.bind(null,560)),"v-393158a5":()=>a.e(75).then(a.bind(null,561)),"v-15ca0285":()=>a.e(76).then(a.bind(null,562)),"v-1a9e8c1b":()=>a.e(77).then(a.bind(null,563)),"v-2624a525":()=>a.e(78).then(a.bind(null,564)),"v-207dcba5":()=>a.e(79).then(a.bind(null,565)),"v-4414c8b6":()=>a.e(80).then(a.bind(null,566)),"v-f7222b38":()=>a.e(564).then(a.bind(null,567)),"v-e477b492":()=>a.e(16).then(a.bind(null,568)),"v-7e744542":()=>a.e(13).then(a.bind(null,569)),"v-0d4b8854":()=>a.e(566).then(a.bind(null,570)),"v-36ddfa76":()=>a.e(81).then(a.bind(null,571)),"v-1d2ea306":()=>a.e(82).then(a.bind(null,572)),"v-916a2c74":()=>a.e(567).then(a.bind(null,573)),"v-0e908b85":()=>a.e(71).then(a.bind(null,574)),"v-e3593b96":()=>a.e(70).then(a.bind(null,575)),"v-08445945":()=>a.e(72).then(a.bind(null,576)),"v-43dd4fe2":()=>a.e(544).then(a.bind(null,577)),"v-062f50f1":()=>a.e(73).then(a.bind(null,578)),"v-114583e5":()=>a.e(466).then(a.bind(null,579)),"v-c2030536":()=>a.e(198).then(a.bind(null,580)),"v-1ba63445":()=>a.e(411).then(a.bind(null,581)),"v-3b491bb6":()=>a.e(414).then(a.bind(null,582)),"v-4649cfe5":()=>a.e(170).then(a.bind(null,583)),"v-4743751e":()=>a.e(192).then(a.bind(null,584)),"v-9473e536":()=>a.e(195).then(a.bind(null,585)),"v-32439385":()=>a.e(235).then(a.bind(null,586)),"v-4f184e15":()=>a.e(279).then(a.bind(null,587)),"v-571c02b6":()=>a.e(327).then(a.bind(null,588)),"v-23c4fd45":()=>a.e(350).then(a.bind(null,589)),"v-6529ff6d":()=>a.e(449).then(a.bind(null,590)),"v-f65d6d36":()=>a.e(360).then(a.bind(null,591)),"v-7d755634":()=>a.e(528).then(a.bind(null,592)),"v-b9a480f6":()=>a.e(233).then(a.bind(null,593)),"v-7615423f":()=>a.e(266).then(a.bind(null,594)),"v-21acc425":()=>a.e(326).then(a.bind(null,595)),"v-28d09be5":()=>a.e(329).then(a.bind(null,596)),"v-2a9cc73b":()=>a.e(333).then(a.bind(null,597)),"v-6a86c3a6":()=>a.e(361).then(a.bind(null,598)),"v-efda7436":()=>a.e(364).then(a.bind(null,599)),"v-497adc6b":()=>a.e(380).then(a.bind(null,600)),"v-e6214e32":()=>a.e(396).then(a.bind(null,601)),"v-3b2bfbfb":()=>a.e(441).then(a.bind(null,602)),"v-30fb5a76":()=>a.e(443).then(a.bind(null,603)),"v-69145925":()=>a.e(444).then(a.bind(null,604)),"v-361e118e":()=>a.e(469).then(a.bind(null,605)),"v-69cd5401":()=>a.e(475).then(a.bind(null,606)),"v-738c4125":()=>a.e(154).then(a.bind(null,607)),"v-2df88ffd":()=>a.e(172).then(a.bind(null,608)),"v-39b2ee36":()=>a.e(188).then(a.bind(null,609)),"v-0a54f2a1":()=>a.e(183).then(a.bind(null,610)),"v-19dbad41":()=>a.e(190).then(a.bind(null,611)),"v-70fe4685":()=>a.e(200).then(a.bind(null,612)),"v-1cd977f6":()=>a.e(242).then(a.bind(null,613)),"v-04027205":()=>a.e(256).then(a.bind(null,614)),"v-5d7afbe5":()=>a.e(294).then(a.bind(null,615)),"v-994592f2":()=>a.e(331).then(a.bind(null,616)),"v-162c9265":()=>a.e(337).then(a.bind(null,617)),"v-2e7f0376":()=>a.e(383).then(a.bind(null,618)),"v-544f57f6":()=>a.e(366).then(a.bind(null,619)),"v-3b75c1e5":()=>a.e(442).then(a.bind(null,620)),"v-2180fa85":()=>a.e(451).then(a.bind(null,621)),"v-ee451ea2":()=>a.e(134).then(a.bind(null,622)),"v-244a2d05":()=>a.e(137).then(a.bind(null,623)),"v-52654585":()=>a.e(144).then(a.bind(null,624)),"v-a32c4436":()=>a.e(169).then(a.bind(null,625)),"v-0bf045a6":()=>a.e(429).then(a.bind(null,626)),"v-4e65b80f":()=>a.e(189).then(a.bind(null,627)),"v-2b09ae7b":()=>a.e(196).then(a.bind(null,628)),"v-7f545425":()=>a.e(223).then(a.bind(null,629)),"v-675d38b5":()=>a.e(227).then(a.bind(null,630)),"v-08d9baa5":()=>a.e(520).then(a.bind(null,631)),"v-47aa5819":()=>a.e(568).then(a.bind(null,632)),"v-4b3883d7":()=>a.e(575).then(a.bind(null,633)),"v-4ec6af95":()=>a.e(582).then(a.bind(null,634)),"v-5cff5e8d":()=>a.e(601).then(a.bind(null,635)),"v-608d8a4b":()=>a.e(605).then(a.bind(null,636)),"v-9b590f46":()=>a.e(556).then(a.bind(null,637)),"v-641bb609":()=>a.e(609).then(a.bind(null,638)),"v-b0421f28":()=>a.e(14).then(a.bind(null,639)),"v-7a9f58a5":()=>a.e(506).then(a.bind(null,640)),"v-2344e425":()=>a.e(371).then(a.bind(null,641)),"v-4b649519":()=>a.e(305).then(a.bind(null,642)),"v-c508b776":()=>a.e(313).then(a.bind(null,643)),"v-f7e08266":()=>a.e(317).then(a.bind(null,644)),"v-d4e67cb6":()=>a.e(447).then(a.bind(null,645)),"v-e5bd521a":()=>a.e(218).then(a.bind(null,646)),"v-2ef83476":()=>a.e(219).then(a.bind(null,647)),"v-65b73105":()=>a.e(226).then(a.bind(null,648)),"v-0f4fd9f9":()=>a.e(284).then(a.bind(null,649)),"v-78593305":()=>a.e(344).then(a.bind(null,650)),"v-2145d7f6":()=>a.e(397).then(a.bind(null,651)),"v-76b6c84d":()=>a.e(431).then(a.bind(null,652)),"v-3965f7b6":()=>a.e(409).then(a.bind(null,653)),"v-edc16f8a":()=>a.e(453).then(a.bind(null,654)),"v-2c7e9f15":()=>a.e(147).then(a.bind(null,655)),"v-4db48f76":()=>a.e(419).then(a.bind(null,656)),"v-0d3d20e5":()=>a.e(287).then(a.bind(null,657)),"v-684f5166":()=>a.e(319).then(a.bind(null,658)),"v-707dec93":()=>a.e(322).then(a.bind(null,659)),"v-5b8cdfa5":()=>a.e(325).then(a.bind(null,660)),"v-19c35345":()=>a.e(424).then(a.bind(null,661)),"v-47c411d7":()=>a.e(173).then(a.bind(null,662)),"v-88936716":()=>a.e(181).then(a.bind(null,663)),"v-5fe644c5":()=>a.e(334).then(a.bind(null,664)),"v-4f822e45":()=>a.e(460).then(a.bind(null,665)),"v-aa5c4cb6":()=>a.e(132).then(a.bind(null,666)),"v-2d288045":()=>a.e(176).then(a.bind(null,667)),"v-75672a25":()=>a.e(213).then(a.bind(null,668)),"v-503294bb":()=>a.e(220).then(a.bind(null,669)),"v-510f9ac1":()=>a.e(545).then(a.bind(null,670)),"v-35f1d79a":()=>a.e(126).then(a.bind(null,671)),"v-3e724785":()=>a.e(568).then(a.bind(null,672)),"v-840247b6":()=>a.e(576).then(a.bind(null,673)),"v-3d8b70c5":()=>a.e(583).then(a.bind(null,674)),"v-85cff536":()=>a.e(586).then(a.bind(null,675)),"v-3ca49a05":()=>a.e(590).then(a.bind(null,676)),"v-879da2b6":()=>a.e(597).then(a.bind(null,677)),"v-3bbdc345":()=>a.e(603).then(a.bind(null,678)),"v-bcb118d8":()=>a.e(498).then(a.bind(null,679)),"v-70c9179e":()=>a.e(517).then(a.bind(null,680)),"v-099226c6":()=>a.e(510).then(a.bind(null,681)),"v-0e098ff9":()=>a.e(376).then(a.bind(null,682)),"v-dbce8436":()=>a.e(384).then(a.bind(null,683)),"v-76f03e6d":()=>a.e(414).then(a.bind(null,684)),"v-558e7565":()=>a.e(191).then(a.bind(null,685)),"v-5bf25e5f":()=>a.e(243).then(a.bind(null,686)),"v-61d11f05":()=>a.e(307).then(a.bind(null,687)),"v-b4716336":()=>a.e(347).then(a.bind(null,688)),"v-51c8d8ff":()=>a.e(339).then(a.bind(null,689)),"v-6e4e9549":()=>a.e(363).then(a.bind(null,690)),"v-9bad55f6":()=>a.e(458).then(a.bind(null,691)),"v-0d2d8e76":()=>a.e(153).then(a.bind(null,692)),"v-075ddcb6":()=>a.e(209).then(a.bind(null,693)),"v-badbbe36":()=>a.e(193).then(a.bind(null,694)),"v-26f997b6":()=>a.e(123).then(a.bind(null,695)),"v-bd433a34":()=>a.e(534).then(a.bind(null,696)),"v-b96c6e36":()=>a.e(174).then(a.bind(null,697)),"v-4c296805":()=>a.e(241).then(a.bind(null,698)),"v-066d6876":()=>a.e(248).then(a.bind(null,699)),"v-598a9dad":()=>a.e(252).then(a.bind(null,700)),"v-097014c5":()=>a.e(285).then(a.bind(null,701)),"v-7756224a":()=>a.e(296).then(a.bind(null,702)),"v-2a8019c5":()=>a.e(318).then(a.bind(null,703)),"v-470a84fa":()=>a.e(343).then(a.bind(null,704)),"v-058a1e76":()=>a.e(386).then(a.bind(null,705)),"v-57be6a05":()=>a.e(418).then(a.bind(null,706)),"v-741e92f6":()=>a.e(434).then(a.bind(null,707)),"v-0f40a07f":()=>a.e(439).then(a.bind(null,708)),"v-2db55da5":()=>a.e(445).then(a.bind(null,709)),"v-1e6c3ca5":()=>a.e(497).then(a.bind(null,710)),"v-5746cbf3":()=>a.e(157).then(a.bind(null,711)),"v-7e32e276":()=>a.e(160).then(a.bind(null,712)),"v-3e805425":()=>a.e(182).then(a.bind(null,713)),"v-0867e1f6":()=>a.e(186).then(a.bind(null,714)),"v-9bbf3216":()=>a.e(542).then(a.bind(null,715)),"v-538dfb26":()=>a.e(501).then(a.bind(null,716)),"v-599d1da7":()=>a.e(502).then(a.bind(null,717)),"v-dc604366":()=>a.e(503).then(a.bind(null,718)),"v-770626e8":()=>a.e(12).then(a.bind(null,719)),"v-6c63cba9":()=>a.e(516).then(a.bind(null,720)),"v-0e908365":()=>a.e(521).then(a.bind(null,721)),"v-1a2b3877":()=>a.e(531).then(a.bind(null,722)),"v-b07c07fe":()=>a.e(541).then(a.bind(null,723)),"v-0b760be8":()=>a.e(549).then(a.bind(null,724)),"v-039a658b":()=>a.e(550).then(a.bind(null,725)),"v-c11cccce":()=>a.e(620).then(a.bind(null,726)),"v-5a460e56":()=>a.e(618).then(a.bind(null,727)),"v-50505c44":()=>a.e(10).then(a.bind(null,728)),"v-46e7f6f6":()=>a.e(626).then(a.bind(null,729)),"v-356e54c6":()=>a.e(612).then(a.bind(null,730)),"v-ddfed96a":()=>a.e(617).then(a.bind(null,731)),"v-753c3d65":()=>a.e(273).then(a.bind(null,732)),"v-087d3ca5":()=>a.e(495).then(a.bind(null,733)),"v-0d2a3409":()=>a.e(87).then(a.bind(null,734)),"v-48a9ae87":()=>a.e(88).then(a.bind(null,735)),"v-f7adadf6":()=>a.e(89).then(a.bind(null,736)),"v-80aeb8fa":()=>a.e(90).then(a.bind(null,737)),"v-09afc3fe":()=>a.e(91).then(a.bind(null,738)),"v-722712fd":()=>a.e(93).then(a.bind(null,739)),"v-36a7987f":()=>a.e(92).then(a.bind(null,740)),"v-1fc74288":()=>a.e(9).then(a.bind(null,741)),"v-89870f96":()=>a.e(102).then(a.bind(null,742)),"v-12881a9a":()=>a.e(103).then(a.bind(null,743)),"v-323b6d31":()=>a.e(85).then(a.bind(null,744)),"v-ee47900e":()=>a.e(94).then(a.bind(null,745)),"v-10bac8f6":()=>a.e(613).then(a.bind(null,746)),"v-3ca1fd12":()=>a.e(95).then(a.bind(null,747)),"v-3a81caf5":()=>a.e(96).then(a.bind(null,748)),"v-d956d71a":()=>a.e(97).then(a.bind(null,749)),"v-27b1441e":()=>a.e(98).then(a.bind(null,750)),"v-04c98825":()=>a.e(100).then(a.bind(null,751)),"v-42463f2a":()=>a.e(561).then(a.bind(null,752)),"v-384ad102":()=>a.e(101).then(a.bind(null,753)),"v-4128a0a5":()=>a.e(562).then(a.bind(null,754)),"v-739759a5":()=>a.e(56).then(a.bind(null,755)),"v-51e9c23a":()=>a.e(563).then(a.bind(null,756)),"v-42f76c97":()=>a.e(57).then(a.bind(null,757)),"v-4a339040":()=>a.e(560).then(a.bind(null,758)),"v-6dbae7af":()=>a.e(86).then(a.bind(null,759)),"v-613becc5":()=>a.e(64).then(a.bind(null,760)),"v-57ec3f51":()=>a.e(65).then(a.bind(null,761)),"v-5254db53":()=>a.e(587).then(a.bind(null,762)),"v-7253af26":()=>a.e(554).then(a.bind(null,763)),"v-e34eb3b6":()=>a.e(59).then(a.bind(null,764)),"v-57420f38":()=>a.e(518).then(a.bind(null,765)),"v-3f73a885":()=>a.e(565).then(a.bind(null,766)),"v-1119beef":()=>a.e(58).then(a.bind(null,767)),"v-a3ce5af4":()=>a.e(558).then(a.bind(null,768)),"v-2f140f76":()=>a.e(63).then(a.bind(null,769)),"v-1e0e94f1":()=>a.e(62).then(a.bind(null,770)),"v-500b9fb4":()=>a.e(557).then(a.bind(null,771)),"v-1d65a0c3":()=>a.e(60).then(a.bind(null,772)),"v-5f981865":()=>a.e(61).then(a.bind(null,773)),"v-4461025c":()=>a.e(559).then(a.bind(null,774)),"v-c3e4bbf6":()=>a.e(66).then(a.bind(null,775)),"v-600cd396":()=>a.e(55).then(a.bind(null,776)),"v-05cf5f74":()=>a.e(533).then(a.bind(null,777)),"v-6213a2c5":()=>a.e(150).then(a.bind(null,778)),"v-5c83ab87":()=>a.e(569).then(a.bind(null,779)),"v-332e77f6":()=>a.e(578).then(a.bind(null,780)),"v-704ddc83":()=>a.e(580).then(a.bind(null,781)),"v-0b9a15fe":()=>a.e(588).then(a.bind(null,782)),"v-f7cfe502":()=>a.e(594).then(a.bind(null,783)),"v-d03b830a":()=>a.e(604).then(a.bind(null,784)),"v-0dfd25fd":()=>a.e(599).then(a.bind(null,785)),"v-21c756f9":()=>a.e(607).then(a.bind(null,786)),"v-a8a72112":()=>a.e(610).then(a.bind(null,787)),"v-c954eb04":()=>a.e(15).then(a.bind(null,788)),"v-d87bc53e":()=>a.e(395).then(a.bind(null,789)),"v-12e9780e":()=>a.e(149).then(a.bind(null,790)),"v-1a80215b":()=>a.e(8).then(a.bind(null,791)),"v-67b200b6":()=>a.e(401).then(a.bind(null,792)),"v-5defb7e5":()=>a.e(385).then(a.bind(null,793)),"v-465d6cc9":()=>a.e(404).then(a.bind(null,794)),"v-1f4cdb65":()=>a.e(408).then(a.bind(null,795)),"v-3be3c79a":()=>a.e(421).then(a.bind(null,796)),"v-731f18d3":()=>a.e(428).then(a.bind(null,797)),"v-3ae678fa":()=>a.e(471).then(a.bind(null,798)),"v-1bc59805":()=>a.e(487).then(a.bind(null,799)),"v-78e5c005":()=>a.e(163).then(a.bind(null,800)),"v-34646645":()=>a.e(165).then(a.bind(null,801)),"v-7d82fb5a":()=>a.e(164).then(a.bind(null,802)),"v-39634e52":()=>a.e(166).then(a.bind(null,803)),"v-1aeb0de5":()=>a.e(168).then(a.bind(null,804)),"v-01463076":()=>a.e(197).then(a.bind(null,805)),"v-41f86cb6":()=>a.e(217).then(a.bind(null,806)),"v-42ac88b6":()=>a.e(234).then(a.bind(null,807)),"v-7bae3d45":()=>a.e(237).then(a.bind(null,808)),"v-29d015a5":()=>a.e(262).then(a.bind(null,809)),"v-c2e1f8e6":()=>a.e(269).then(a.bind(null,810)),"v-3c356305":()=>a.e(275).then(a.bind(null,811)),"v-6b6bd0c5":()=>a.e(286).then(a.bind(null,812)),"v-78f1cf25":()=>a.e(289).then(a.bind(null,813)),"v-5b91a785":()=>a.e(293).then(a.bind(null,814)),"v-816a889e":()=>a.e(295).then(a.bind(null,815)),"v-a88b2f36":()=>a.e(304).then(a.bind(null,816)),"v-57e8509b":()=>a.e(300).then(a.bind(null,817)),"v-fa3545d6":()=>a.e(308).then(a.bind(null,818)),"v-cb5092b6":()=>a.e(320).then(a.bind(null,819)),"v-4f4da7c5":()=>a.e(323).then(a.bind(null,820)),"v-b4cae9b6":()=>a.e(324).then(a.bind(null,821)),"v-9a89b336":()=>a.e(335).then(a.bind(null,822)),"v-02bc83f6":()=>a.e(336).then(a.bind(null,823)),"v-75956bc2":()=>a.e(362).then(a.bind(null,824)),"v-278ecdc5":()=>a.e(365).then(a.bind(null,825)),"v-024cae65":()=>a.e(368).then(a.bind(null,826)),"v-7ad03125":()=>a.e(375).then(a.bind(null,827)),"v-65768937":()=>a.e(378).then(a.bind(null,828)),"v-0b4d643f":()=>a.e(379).then(a.bind(null,829)),"v-2ac03de6":()=>a.e(532).then(a.bind(null,830)),"v-64b5f45b":()=>a.e(410).then(a.bind(null,831)),"v-30f251ee":()=>a.e(387).then(a.bind(null,832)),"v-5c00375a":()=>a.e(417).then(a.bind(null,833)),"v-0afa5c36":()=>a.e(423).then(a.bind(null,834)),"v-6adb0465":()=>a.e(433).then(a.bind(null,835)),"v-a8e064da":()=>a.e(457).then(a.bind(null,836)),"v-f175e3b6":()=>a.e(462).then(a.bind(null,837)),"v-f6eac32e":()=>a.e(470).then(a.bind(null,838)),"v-637acbcd":()=>a.e(486).then(a.bind(null,839)),"v-d273b6b6":()=>a.e(492).then(a.bind(null,840)),"v-b127db76":()=>a.e(135).then(a.bind(null,841)),"v-72039f9b":()=>a.e(155).then(a.bind(null,842)),"v-82ab1976":()=>a.e(194).then(a.bind(null,843)),"v-32568ff6":()=>a.e(156).then(a.bind(null,844)),"v-0c4ce425":()=>a.e(206).then(a.bind(null,845)),"v-2baeefe9":()=>a.e(573).then(a.bind(null,846)),"v-1c718b23":()=>a.e(548).then(a.bind(null,847)),"v-9a786500":()=>a.e(631).then(a.bind(null,848)),"v-5a3170aa":()=>a.e(632).then(a.bind(null,849)),"v-686a3bdb":()=>a.e(630).then(a.bind(null,850)),"v-1a8afcf8":()=>a.e(629).then(a.bind(null,851)),"v-a74f84b2":()=>a.e(522).then(a.bind(null,852)),"v-12c1b938":()=>a.e(530).then(a.bind(null,853)),"v-4a042605":()=>a.e(112).then(a.bind(null,854)),"v-7825eced":()=>a.e(111).then(a.bind(null,855)),"v-5614f01b":()=>a.e(109).then(a.bind(null,856)),"v-aff53d2e":()=>a.e(108).then(a.bind(null,857)),"v-295078c5":()=>a.e(110).then(a.bind(null,858)),"v-ba80e702":()=>a.e(113).then(a.bind(null,859)),"v-584b0e25":()=>a.e(115).then(a.bind(null,860)),"v-79030976":()=>a.e(105).then(a.bind(null,861)),"v-148801a5":()=>a.e(114).then(a.bind(null,862)),"v-36af5776":()=>a.e(106).then(a.bind(null,863)),"v-aaa246aa":()=>a.e(116).then(a.bind(null,864)),"v-e1cf13f6":()=>a.e(107).then(a.bind(null,865)),"v-74d392e6":()=>a.e(619).then(a.bind(null,866)),"v-44f15dcd":()=>a.e(180).then(a.bind(null,867)),"v-367869c9":()=>a.e(358).then(a.bind(null,868)),"v-74dd6dc5":()=>a.e(391).then(a.bind(null,869)),"v-3bb840a5":()=>a.e(393).then(a.bind(null,870)),"v-b74846f6":()=>a.e(308).then(a.bind(null,871)),"v-6eb37ec2":()=>a.e(354).then(a.bind(null,872)),"v-c2604de6":()=>a.e(315).then(a.bind(null,873)),"v-74b8d8e5":()=>a.e(356).then(a.bind(null,874)),"v-c3c2b5f6":()=>a.e(454).then(a.bind(null,875)),"v-088fd3c5":()=>a.e(455).then(a.bind(null,876)),"v-aac37736":()=>a.e(472).then(a.bind(null,877)),"v-b806b40e":()=>a.e(199).then(a.bind(null,878)),"v-9ad10df4":()=>a.e(527).then(a.bind(null,879)),"v-793bfff6":()=>a.e(240).then(a.bind(null,880)),"v-1fc5fcd2":()=>a.e(321).then(a.bind(null,881)),"v-4be2a0e1":()=>a.e(338).then(a.bind(null,882)),"v-782ef33f":()=>a.e(370).then(a.bind(null,883)),"v-b8e89306":()=>a.e(245).then(a.bind(null,884)),"v-22379377":()=>a.e(257).then(a.bind(null,885)),"v-5c6233cb":()=>a.e(244).then(a.bind(null,886)),"v-cce7b2b6":()=>a.e(259).then(a.bind(null,887)),"v-b9742ab6":()=>a.e(280).then(a.bind(null,888)),"v-c4a7310e":()=>a.e(288).then(a.bind(null,889)),"v-4faf75d7":()=>a.e(312).then(a.bind(null,890)),"v-20cc1125":()=>a.e(314).then(a.bind(null,891)),"v-e7cb6976":()=>a.e(355).then(a.bind(null,892)),"v-3887f5a9":()=>a.e(349).then(a.bind(null,893)),"v-cd41a876":()=>a.e(131).then(a.bind(null,894)),"v-7f8ee3e5":()=>a.e(570).then(a.bind(null,895)),"v-244c5125":()=>a.e(584).then(a.bind(null,896)),"v-5c24caf6":()=>a.e(577).then(a.bind(null,897)),"v-76ab07c5":()=>a.e(585).then(a.bind(null,898)),"v-6dec8336":()=>a.e(592).then(a.bind(null,899)),"v-1b687505":()=>a.e(600).then(a.bind(null,900)),"v-2e55a5a6":()=>a.e(509).then(a.bind(null,901)),"v-24c00325":()=>a.e(508).then(a.bind(null,902)),"v-da0d241e":()=>a.e(277).then(a.bind(null,903)),"v-99fdfab6":()=>a.e(255).then(a.bind(null,904)),"v-3c6586c5":()=>a.e(258).then(a.bind(null,905)),"v-ea990176":()=>a.e(290).then(a.bind(null,906)),"v-056a6d45":()=>a.e(297).then(a.bind(null,907)),"v-168abe05":()=>a.e(311).then(a.bind(null,908)),"v-07c36673":()=>a.e(353).then(a.bind(null,909)),"v-78782c85":()=>a.e(420).then(a.bind(null,910)),"v-30a87129":()=>a.e(488).then(a.bind(null,911)),"v-2a59b585":()=>a.e(139).then(a.bind(null,912)),"v-07cfe499":()=>a.e(175).then(a.bind(null,913)),"v-5f8b0b65":()=>a.e(178).then(a.bind(null,914)),"v-42cbc720":()=>a.e(622).then(a.bind(null,915)),"v-51e1b0b1":()=>a.e(292).then(a.bind(null,916)),"v-f73400f6":()=>a.e(260).then(a.bind(null,917)),"v-3dfb40b6":()=>a.e(278).then(a.bind(null,918)),"v-0968fa46":()=>a.e(281).then(a.bind(null,919)),"v-ffef3f36":()=>a.e(283).then(a.bind(null,920)),"v-37cab9d9":()=>a.e(398).then(a.bind(null,921)),"v-582f322f":()=>a.e(448).then(a.bind(null,922)),"v-b072eff6":()=>a.e(450).then(a.bind(null,923)),"v-739d0ca5":()=>a.e(459).then(a.bind(null,924)),"v-2112d365":()=>a.e(473).then(a.bind(null,925)),"v-d716c28a":()=>a.e(148).then(a.bind(null,926)),"v-03374545":()=>a.e(205).then(a.bind(null,927)),"v-65b3ac6e":()=>a.e(212).then(a.bind(null,928)),"v-5e33fa4b":()=>a.e(214).then(a.bind(null,929)),"v-2ad54d22":()=>a.e(246).then(a.bind(null,930)),"v-34097cb6":()=>a.e(270).then(a.bind(null,931)),"v-3d11f7de":()=>a.e(247).then(a.bind(null,932)),"v-50872265":()=>a.e(274).then(a.bind(null,933)),"v-cbd6f676":()=>a.e(301).then(a.bind(null,934)),"v-8e6dd0b6":()=>a.e(348).then(a.bind(null,935)),"v-fee15f9e":()=>a.e(461).then(a.bind(null,936)),"v-5b3183b6":()=>a.e(623).then(a.bind(null,937)),"v-057c8325":()=>a.e(211).then(a.bind(null,938)),"v-3f486746":()=>a.e(316).then(a.bind(null,939)),"v-ec532276":()=>a.e(359).then(a.bind(null,940)),"v-35248da5":()=>a.e(161).then(a.bind(null,941)),"v-4c39c203":()=>a.e(239).then(a.bind(null,942)),"v-93a30336":()=>a.e(201).then(a.bind(null,943)),"v-4af15859":()=>a.e(203).then(a.bind(null,944)),"v-840b2926":()=>a.e(225).then(a.bind(null,945)),"v-18966e06":()=>a.e(536).then(a.bind(null,946)),"v-015b0b3e":()=>a.e(45).then(a.bind(null,947)),"v-5ba60fa6":()=>a.e(53).then(a.bind(null,948)),"v-1d8c24a9":()=>a.e(28).then(a.bind(null,949)),"v-625bb365":()=>a.e(512).then(a.bind(null,950)),"v-bdb38f16":()=>a.e(514).then(a.bind(null,951)),"v-a2f8c2f2":()=>a.e(515).then(a.bind(null,952)),"v-5f355585":()=>a.e(513).then(a.bind(null,953)),"v-6f12ec96":()=>a.e(67).then(a.bind(null,954)),"v-e0c1ddb4":()=>a.e(543).then(a.bind(null,955)),"v-8baa3296":()=>a.e(373).then(a.bind(null,956)),"v-43611c23":()=>a.e(377).then(a.bind(null,957)),"v-a0059386":()=>a.e(122).then(a.bind(null,958)),"v-58d27333":()=>a.e(464).then(a.bind(null,959)),"v-83038776":()=>a.e(298).then(a.bind(null,960)),"v-61433385":()=>a.e(367).then(a.bind(null,961)),"v-3dca8686":()=>a.e(535).then(a.bind(null,962)),"v-7afd6f05":()=>a.e(69).then(a.bind(null,963)),"v-4267839e":()=>a.e(27).then(a.bind(null,964)),"v-2972fd5b":()=>a.e(51).then(a.bind(null,965)),"v-7c9db605":()=>a.e(44).then(a.bind(null,966)),"v-61e25645":()=>a.e(83).then(a.bind(null,967)),"v-ec0ef8b4":()=>a.e(523).then(a.bind(null,968)),"v-1b385671":()=>a.e(452).then(a.bind(null,969)),"v-59c7c24a":()=>a.e(299).then(a.bind(null,970)),"v-0ba86745":()=>a.e(357).then(a.bind(null,971)),"v-604ac37b":()=>a.e(369).then(a.bind(null,972)),"v-6ec9ec85":()=>a.e(372).then(a.bind(null,973)),"v-60e69ce5":()=>a.e(394).then(a.bind(null,974)),"v-b797c6fa":()=>a.e(430).then(a.bind(null,975)),"v-5a3fc6e6":()=>a.e(485).then(a.bind(null,976)),"v-63704c6e":()=>a.e(468).then(a.bind(null,977)),"v-2cb152c5":()=>a.e(229).then(a.bind(null,978)),"v-3cfd634a":()=>a.e(625).then(a.bind(null,979)),"v-27749c7f":()=>a.e(540).then(a.bind(null,980)),"v-28e85245":()=>a.e(552).then(a.bind(null,981)),"v-13914f76":()=>a.e(524).then(a.bind(null,982)),"v-36c50fc5":()=>a.e(381).then(a.bind(null,983)),"v-4a41daf7":()=>a.e(621).then(a.bind(null,984)),"v-73a01986":()=>a.e(504).then(a.bind(null,985)),"v-1ebbe39e":()=>a.e(382).then(a.bind(null,986)),"v-5cfc1d6e":()=>a.e(489).then(a.bind(null,987)),"v-59402925":()=>a.e(389).then(a.bind(null,988)),"v-067af542":()=>a.e(167).then(a.bind(null,989)),"v-33e0b295":()=>a.e(185).then(a.bind(null,990)),"v-e058a636":()=>a.e(276).then(a.bind(null,991)),"v-3fafbf1c":()=>a.e(624).then(a.bind(null,992)),"v-26abd165":()=>a.e(399).then(a.bind(null,993)),"v-2571e6d5":()=>a.e(400).then(a.bind(null,994)),"v-6e95c396":()=>a.e(402).then(a.bind(null,995)),"v-ca0a5286":()=>a.e(405).then(a.bind(null,996)),"v-0185e1b6":()=>a.e(474).then(a.bind(null,997)),"v-3e43a959":()=>a.e(125).then(a.bind(null,998)),"v-f829daf6":()=>a.e(435).then(a.bind(null,999)),"v-71623345":()=>a.e(120).then(a.bind(null,1e3)),"v-c5448ab6":()=>a.e(353).then(a.bind(null,1001)),"v-853d8742":()=>a.e(500).then(a.bind(null,1002)),"v-b3617cb4":()=>a.e(538).then(a.bind(null,1003)),"v-b4017dca":()=>a.e(571).then(a.bind(null,1004)),"v-77eed1e4":()=>a.e(121).then(a.bind(null,1005)),"v-5442b1c2":()=>a.e(574).then(a.bind(null,1006)),"v-05924865":()=>a.e(581).then(a.bind(null,1007)),"v-103ac39b":()=>a.e(52).then(a.bind(null,1008)),"v-56c9d6af":()=>a.e(596).then(a.bind(null,1009)),"v-65ca7e6a":()=>a.e(591).then(a.bind(null,1010)),"v-5191d686":()=>a.e(589).then(a.bind(null,1011)),"v-b94e83ca":()=>a.e(606).then(a.bind(null,1012)),"v-4da3b225":()=>a.e(608).then(a.bind(null,1013)),"v-4644022d":()=>a.e(602).then(a.bind(null,1014)),"v-7302cb32":()=>a.e(555).then(a.bind(null,1015)),"v-9056ab1e":()=>a.e(250).then(a.bind(null,1016)),"v-838c4236":()=>a.e(330).then(a.bind(null,1017)),"v-91061236":()=>a.e(539).then(a.bind(null,1018)),"v-1a5363e5":()=>a.e(438).then(a.bind(null,1019)),"v-041dd3be":()=>a.e(390).then(a.bind(null,1020)),"v-f28fde76":()=>a.e(437).then(a.bind(null,1021)),"v-3e91d245":()=>a.e(128).then(a.bind(null,1022)),"v-08940b3d":()=>a.e(341).then(a.bind(null,1023)),"v-2c356eea":()=>a.e(215).then(a.bind(null,1024)),"v-d23f8136":()=>a.e(162).then(a.bind(null,1025)),"v-576aad65":()=>a.e(340).then(a.bind(null,1026)),"v-65018d05":()=>a.e(627).then(a.bind(null,1027)),"v-39bdb2e5":()=>a.e(628).then(a.bind(null,1028)),"v-3b21ecb6":()=>a.e(422).then(a.bind(null,1029)),"v-16b59b25":()=>a.e(467).then(a.bind(null,1030)),"v-46bea2f6":()=>a.e(204).then(a.bind(null,1031)),"v-281d4a05":()=>a.e(614).then(a.bind(null,1032)),"v-0e6032b6":()=>a.e(511).then(a.bind(null,1033)),"v-3c738345":()=>a.e(406).then(a.bind(null,1034)),"v-10bb2036":()=>a.e(491).then(a.bind(null,1035)),"v-6c160b37":()=>a.e(412).then(a.bind(null,1036)),"v-02906445":()=>a.e(141).then(a.bind(null,1037)),"v-35db9f65":()=>a.e(202).then(a.bind(null,1038)),"v-1cf2ead9":()=>a.e(208).then(a.bind(null,1039)),"v-2d6aa9a5":()=>a.e(228).then(a.bind(null,1040)),"v-6cfaf976":()=>a.e(529).then(a.bind(null,1041)),"v-08f57306":()=>a.e(551).then(a.bind(null,1042)),"v-6add3944":()=>a.e(547).then(a.bind(null,1043)),"v-0d63d502":()=>a.e(346).then(a.bind(null,1044)),"v-0f85e4a5":()=>a.e(251).then(a.bind(null,1045)),"v-4b36484f":()=>a.e(479).then(a.bind(null,1046)),"v-2715a4ad":()=>a.e(425).then(a.bind(null,1047)),"v-edca7576":()=>a.e(207).then(a.bind(null,1048)),"v-7e95e336":()=>a.e(216).then(a.bind(null,1049)),"v-983abe52":()=>a.e(222).then(a.bind(null,1050)),"v-59ee7ff7":()=>a.e(210).then(a.bind(null,1051)),"v-0457009e":()=>a.e(232).then(a.bind(null,1052)),"v-85741fb6":()=>a.e(264).then(a.bind(null,1053)),"v-0d860cb6":()=>a.e(268).then(a.bind(null,1054)),"v-077c61c5":()=>a.e(302).then(a.bind(null,1055)),"v-155bc545":()=>a.e(306).then(a.bind(null,1056)),"v-b0393936":()=>a.e(477).then(a.bind(null,1057)),"v-367724a5":()=>a.e(152).then(a.bind(null,1058)),"v-b0bdc7e2":()=>a.e(615).then(a.bind(null,1059)),"v-a5a4e3f6":()=>a.e(526).then(a.bind(null,1060)),"v-6356d9a5":()=>a.e(127).then(a.bind(null,1061)),"v-173cb7e6":()=>a.e(507).then(a.bind(null,1062)),"v-5a7d501b":()=>a.e(124).then(a.bind(null,1063)),"v-131a89f6":()=>a.e(480).then(a.bind(null,1064)),"v-a554dab6":()=>a.e(484).then(a.bind(null,1065)),"v-37ce7125":()=>a.e(493).then(a.bind(null,1066)),"v-06e10b05":()=>a.e(130).then(a.bind(null,1067)),"v-6908511f":()=>a.e(133).then(a.bind(null,1068)),"v-496eb3f6":()=>a.e(136).then(a.bind(null,1069)),"v-2a1718e3":()=>a.e(138).then(a.bind(null,1070)),"v-490d2177":()=>a.e(140).then(a.bind(null,1071)),"v-09d9e8f6":()=>a.e(142).then(a.bind(null,1072)),"v-5af2464a":()=>a.e(143).then(a.bind(null,1073)),"v-99ac21c2":()=>a.e(145).then(a.bind(null,1074)),"v-40db7852":()=>a.e(146).then(a.bind(null,1075)),"v-0e1ee485":()=>a.e(148).then(a.bind(null,1076)),"v-f379e30e":()=>a.e(151).then(a.bind(null,1077)),"v-75d2c8ea":()=>a.e(140).then(a.bind(null,1078)),"v-bc8475fe":()=>a.e(140).then(a.bind(null,1079)),"v-2f64a44b":()=>a.e(179).then(a.bind(null,1080)),"v-5fe3b505":()=>a.e(238).then(a.bind(null,1081)),"v-3745ea5e":()=>a.e(261).then(a.bind(null,1082)),"v-d06d9bae":()=>a.e(265).then(a.bind(null,1083)),"v-564d7af6":()=>a.e(263).then(a.bind(null,1084)),"v-7c680e36":()=>a.e(267).then(a.bind(null,1085)),"v-3ba7a5bf":()=>a.e(271).then(a.bind(null,1086)),"v-d22c4cf6":()=>a.e(272).then(a.bind(null,1087)),"v-0066dbe5":()=>a.e(282).then(a.bind(null,1088)),"v-2f3134a5":()=>a.e(291).then(a.bind(null,1089)),"v-7d29feb7":()=>a.e(332).then(a.bind(null,1090)),"v-c8a213d6":()=>a.e(345).then(a.bind(null,1091)),"v-870f6136":()=>a.e(351).then(a.bind(null,1092)),"v-55f83d91":()=>a.e(352).then(a.bind(null,1093)),"v-e49c8976":()=>a.e(374).then(a.bind(null,1094)),"v-a948c136":()=>a.e(392).then(a.bind(null,1095)),"v-36a5f8a5":()=>a.e(456).then(a.bind(null,1096)),"v-427b433a":()=>a.e(465).then(a.bind(null,1097)),"v-77978635":()=>a.e(481).then(a.bind(null,1098)),"v-c20e1f1a":()=>a.e(496).then(a.bind(null,1099)),"v-634458d3":()=>a.e(129).then(a.bind(null,1100)),"v-fcced2f6":()=>a.e(17).then(a.bind(null,1101)),"v-e92d91be":()=>a.e(18).then(a.bind(null,1102)),"v-29844f66":()=>a.e(519).then(a.bind(null,1103)),"v-498f7dbf":()=>a.e(249).then(a.bind(null,1104)),"v-28e5e782":()=>a.e(253).then(a.bind(null,1105)),"v-c65eb46a":()=>a.e(254).then(a.bind(null,1106)),"v-f308db66":()=>a.e(303).then(a.bind(null,1107)),"v-7d103a45":()=>a.e(413).then(a.bind(null,1108)),"v-fa36ccf6":()=>a.e(407).then(a.bind(null,1109)),"v-789f6499":()=>a.e(426).then(a.bind(null,1110)),"v-ab79dc96":()=>a.e(432).then(a.bind(null,1111)),"v-5e5665f4":()=>a.e(525).then(a.bind(null,1112)),"v-101dea36":()=>a.e(403).then(a.bind(null,1113)),"v-41efcb75":()=>a.e(463).then(a.bind(null,1114)),"v-36833005":()=>a.e(490).then(a.bind(null,1115)),"v-4e95725d":()=>a.e(170).then(a.bind(null,1116)),"v-33f54cef":()=>a.e(230).then(a.bind(null,1117)),"v-1cc81f37":()=>a.e(309).then(a.bind(null,1118)),"v-a88cc59a":()=>a.e(310).then(a.bind(null,1119)),"v-729e2b2a":()=>a.e(499).then(a.bind(null,1120)),"v-265c4c55":()=>a.e(158).then(a.bind(null,1121)),"v-31c6c5b6":()=>a.e(224).then(a.bind(null,1122)),"v-5ec35345":()=>a.e(231).then(a.bind(null,1123)),"v-be32d0b6":()=>a.e(236).then(a.bind(null,1124)),"v-f2b10c5e":()=>a.e(342).then(a.bind(null,1125)),"v-0a625dc5":()=>a.e(611).then(a.bind(null,1126)),"v-605525c5":()=>a.e(26).then(a.bind(null,1127)),"v-a788d0b6":()=>a.e(43).then(a.bind(null,1128)),"v-44087b65":()=>a.e(68).then(a.bind(null,1129)),"v-0fbbecf6":()=>a.e(54).then(a.bind(null,1130)),"v-e0222576":()=>a.e(84).then(a.bind(null,1131)),"v-485541b6":()=>a.e(104).then(a.bind(null,1132)),"v-27bbd105":()=>a.e(117).then(a.bind(null,1133)),"v-73a242e5":()=>a.e(118).then(a.bind(null,1134)),"v-80ee9676":()=>a.e(119).then(a.bind(null,1135)),"v-54b14006":()=>a.e(11).then(a.bind(null,1136)),"v-291b15c5":()=>a.e(546).then(a.bind(null,1137)),"v-b3f4455e":()=>a.e(177).then(a.bind(null,1138)),"v-9463dba2":()=>a.e(184).then(a.bind(null,1139)),"v-0d7227b6":()=>a.e(242).then(a.bind(null,1140)),"v-c97f7236":()=>a.e(328).then(a.bind(null,1141)),"v-338be9f9":()=>a.e(388).then(a.bind(null,1142)),"v-1712d6d9":()=>a.e(415).then(a.bind(null,1143)),"v-373e94fb":()=>a.e(427).then(a.bind(null,1144)),"v-4dacf6b6":()=>a.e(416).then(a.bind(null,1145)),"v-c8756db6":()=>a.e(436).then(a.bind(null,1146)),"v-a446fb8a":()=>a.e(440).then(a.bind(null,1147)),"v-3d855f36":()=>a.e(446).then(a.bind(null,1148)),"v-6759cdc7":()=>a.e(476).then(a.bind(null,1149)),"v-6edad9f6":()=>a.e(478).then(a.bind(null,1150)),"v-6f7ad736":()=>a.e(482).then(a.bind(null,1151)),"v-8fe60762":()=>a.e(483).then(a.bind(null,1152)),"v-318666ae":()=>a.e(494).then(a.bind(null,1153)),"v-8d0fe46e":()=>a.e(159).then(a.bind(null,1154)),"v-33fb8d76":()=>a.e(171).then(a.bind(null,1155)),"v-b8b2f1ee":()=>a.e(187).then(a.bind(null,1156)),"v-0e68defa":()=>a.e(221).then(a.bind(null,1157)),"v-463acfc4":()=>a.e(616).then(a.bind(null,1158)),"v-597132cf":()=>a.e(598).then(a.bind(null,1159)),"v-55e30711":()=>a.e(593).then(a.bind(null,1160))};function Ge(e){const t=Object.create(null);return function(a){return t[a]||(t[a]=e(a))}}const Xe=/-(\w)/g,Qe=Ge(e=>e.replace(Xe,(e,t)=>t?t.toUpperCase():"")),Ze=/\B([A-Z])/g,et=Ge(e=>e.replace(Ze,"-$1").toLowerCase()),tt=Ge(e=>e.charAt(0).toUpperCase()+e.slice(1));function at(e,t){if(!t)return;if(e(t))return e(t);return t.includes("-")?e(tt(Qe(t))):e(tt(t))||e(et(t))}const rt=Object.assign({},We,Ye),nt=e=>rt[e],ot=e=>Ye[e],it=e=>We[e],lt=e=>r.a.component(e);function st(e){return at(ot,e)}function ct(e){return at(it,e)}function mt(e){return at(nt,e)}function pt(e){return at(lt,e)}function ut(...e){return Promise.all(e.filter(e=>e).map(async e=>{if(!pt(e)&&mt(e)){const t=await mt(e)();r.a.component(e,t.default)}}))}function gt(e,t){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=t)}var dt=a(69),ht=a.n(dt),yt=a(70),ft=a.n(yt),bt={created(){if(this.siteMeta=this.$site.headTags.filter(([e])=>"meta"===e).map(([e,t])=>t),this.$ssrContext){const t=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=t)?e.map(e=>{let t="<meta";return Object.keys(e).forEach(a=>{t+=` ${a}="${ft()(e[a])}"`}),t+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=wt(this.$canonicalUrl)}var e},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const e=this.getMergedMetaTags();this.currentMetaTags=kt(e,this.currentMetaTags)},getMergedMetaTags(){const e=this.$page.frontmatter.meta||[];return ht()([{name:"description",content:this.$description}],e,this.siteMeta,Et)},updateCanonicalLink(){vt(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",wt(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){kt(null,this.currentMetaTags),vt()}};function vt(){const e=document.querySelector("link[rel='canonical']");e&&e.remove()}function wt(e=""){return e?`<link href="${e}" rel="canonical" />`:""}function kt(e,t){if(t&&[...t].filter(e=>e.parentNode===document.head).forEach(e=>document.head.removeChild(e)),e)return e.map(e=>{const t=document.createElement("meta");return Object.keys(e).forEach(a=>{t.setAttribute(a,e[a])}),document.head.appendChild(t),t})}function Et(e){for(const t of["name","property","itemprop"])if(e.hasOwnProperty(t))return e[t]+t;return JSON.stringify(e)}var Tt=a(17),xt=a.n(Tt),St={mounted(){xt.a.configure({showSpinner:!1}),this.$router.beforeEach((e,t,a)=>{e.path===t.path||r.a.component(e.name)||xt.a.start(),a()}),this.$router.afterEach(()=>{xt.a.done(),this.isSidebarOpen=!1})}},Pt=a(7);let qt;var _t=r.a.extend({mounted(){qt=Object(Pt.a)(()=>{this.setActiveHash()},300),window.addEventListener("scroll",qt)},beforeDestroy(){window.removeEventListener("scroll",qt)},methods:{setActiveHash(){const e=Array.from(document.querySelectorAll(".sidebar-link")),t=Array.from(document.querySelectorAll(".header-anchor")).filter(t=>0===e.length||e.some(e=>e.hash===t.hash)),a=document.querySelector(".theme-default-content").offsetTop,r=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),n=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),o=window.innerHeight+r,i=decodeURIComponent(this.$route.hash),l=(e,a)=>{if(o===n)for(let e=a+1;e<t.length;e++)if(i===decodeURIComponent(t[e].hash))return;this.$vuepress.$set("disableScrollBehavior",!0),this.$router.replace(decodeURIComponent(e),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})};if(r-a<0&&i)l("#",-1);else for(let e=0;e<t.length;e++){const n=t[e],o=t[e+1];if(r-a>=n.parentElement.offsetTop+0&&(!o||r-a<o.parentElement.offsetTop+0)&&i!==decodeURIComponent(n.hash))return void l(n.hash,e)}}}}),At=r.a.extend({name:"Clipboard",props:{html:{type:String,default:""},lang:{type:String,default:"en-US"}},data:()=>({location:""}),computed:{copyright(){const{author:e}=this.$themeConfig;return{"zh-CN":`${this.html}\n-----\n${e?`著作权归${e}所有。\n`:""}链接: ${this.location}`,"en-US":`${this.html}\n-----\n${e?`Copyright by ${e}.\n`:""}Link: ${this.location}`,"vi-VN":`${this.html}\n-----\n${e?`bản quyền bởi ${e}.\n`:""}Liên kết: ${this.location}`}[this.lang]}},created(){"undefined"!=typeof window&&(this.location=window.location.toString())}}),Bt=a(1),Dt=Object(Bt.a)(At,(function(){var e=this._self._c;this._self._setupProxy;return e("div",{domProps:{innerHTML:this._s(this.copyright)}})}),[],!1,null,null,null).exports,Ct={noCopy:!1,noSelect:!1,disabled:!1,minLength:100,authorName:""},Lt={data:()=>({isElement:!1}),created(){this.onCopy=e=>{const t=getSelection().getRangeAt(0);if(String(t).length<this.minLength)return;if(e.preventDefault(),this.noCopy)return;const a=document.createElement("div");a.appendChild(getSelection().getRangeAt(0).cloneContents());const n=this.$lang,o=new r.a({render:e=>e(Dt,{props:{html:a.innerHTML,lang:n}})}).$mount(),{innerHTML:i,innerText:l}=o.$el;e.clipboardData?(e.clipboardData.setData("text/html",i),e.clipboardData.setData("text/plain",l)):window.clipboardData&&window.clipboardData.setData("text",l)}},watch:{isElement(e){if(!e)return;let{copyright:t=!Ct.disabled}=this.$frontmatter;if(!t)return;"object"!=typeof t&&(t={});const a=t.noSelect||Ct.noSelect;this.minLength=t.minLength||Ct.minLength,this.noCopy=t.noCopy||Ct.noCopy,a?this.$el.style.userSelect="none":this.$el.addEventListener("copy",this.onCopy)}},updated(){this.isElement="#comment"!==this.$el.nodeName},beforeDestory(){this.$el.removeEventListener("copy",this.onCopy)}};a(169);class Ut{constructor(){const e=document.getElementById("message-container");e?this.containerElement=e:(this.containerElement=document.createElement("div"),this.containerElement.id="message-container",document.body.appendChild(this.containerElement))}pop(e,t=2e3){const a=document.createElement("div");a.className="message move-in",a.innerHTML=e,this.containerElement.appendChild(a),t>0&&setTimeout(()=>{this.close(a)},t)}close(e){e.className=e.className.replace("move-in",""),e.className+="move-out",e.addEventListener("animationend",()=>{e.remove()})}}a(170),a(73);let Jt;const It={},$t={"/":{copy:"Copied successfully",hint:"Copy code"}},jt=()=>!!navigator&&/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/iu.test(navigator.userAgent);var Ft=[bt,St,_t,Lt,r.a.extend({mounted(){Jt=new Ut,jt()&&!It.showInMobile||this.genCopyButton()},updated(){jt()&&!It.showInMobile||this.genCopyButton()},methods:{genCopyButton(){const e=It.selector||'.theme-default-content div[class*="language-"] pre';setTimeout(()=>{"string"==typeof e?document.querySelectorAll(e).forEach(this.insertCopyButton.bind(this)):Array.isArray(e)&&e.forEach(e=>{document.querySelectorAll(e).forEach(this.insertCopyButton.bind(this))})},It.delay||500)},insertCopyButton(e){if(!e.hasAttribute("copy-code-registerd")){const t=document.createElement("button");It.pure?(t.className="copy-code-pure-button",t.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024" class="icon-copy-code"><path d="M704 896v80c0 26.51-21.49 48-48 48H112c-26.51 0-48-21.49-48-48V240c0-26.51 21.49-48 48-48h144v592c0 61.758 50.242 112 112 112h336zm0-688V0H368c-26.51 0-48 21.49-48 48v736c0 26.51 21.49 48 48 48h544c26.51 0 48-21.49 48-48V256H752c-26.4 0-48-21.6-48-48zm241.942-62.058L814.058 14.058A48 48 0 0 0 780.118 0H768v192h192v-12.118a48 48 0 0 0-14.058-33.94z"/></svg>'):(t.className="copy-code-button",t.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512" class="icon-copy-code"><path fill="currentColor" d="M384 112v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h80c0-35.29 28.71-64 64-64s64 28.71 64 64h80c26.51 0 48 21.49 48 48zM192 40c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24m96 114v-20a6 6 0 00-6-6H102a6 6 0 00-6 6v20a6 6 0 006 6h180a6 6 0 006-6z" /></svg>'),t.addEventListener("click",()=>{this.copyToClipboard(e.innerText)}),t.setAttribute("aria-label",$t[this.$localePath||"/"].hint),t.setAttribute("data-balloon-pos","left"),e.parentElement&&e.parentElement.insertBefore(t,e),e.setAttribute("copy-code-registerd","")}},copyToClipboard(e){const t=document.getSelection(),a=!!(t&&t.rangeCount>0)&&t.getRangeAt(0),r=document.createElement("textarea");r.value=e,r.setAttribute("readonly",""),r.style.position="absolute",r.style.top="-9999px",document.body.appendChild(r),r.select(),document.execCommand("copy"),It.pure||Jt.pop(`<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#06a35a"><path d="M822.812 824.618c-83.076 81.992-188.546 124.614-316.05 127.865-122.085-3.251-223.943-45.873-305.935-127.865S76.213 640.406 72.962 518.682c3.251-127.503 45.873-232.973 127.865-316.05 81.992-83.075 184.211-126.058 305.936-129.309 127.503 3.251 232.973 46.234 316.049 129.31 83.076 83.076 126.059 188.546 129.31 316.05-2.89 121.723-46.234 223.943-129.31 305.935zM432.717 684.111c3.973 3.974 8.307 5.78 13.364 6.14 5.057.362 9.753-1.444 13.365-5.417l292.57-287.515c3.974-3.973 5.78-8.307 5.78-13.364s-1.806-9.753-5.78-13.365l1.807 1.806c-3.973-3.973-8.669-5.779-14.087-6.14-5.418-.361-10.475 1.445-14.809 5.418L460.529 592.006c-3.973 3.25-8.669 4.695-14.448 4.695-5.78 0-10.836-1.445-15.531-3.973l-94.273-72.962c-4.335-3.251-9.392-4.335-14.448-3.973s-9.392 3.25-12.642 7.585l-2.89 3.973c-3.25 4.334-4.334 9.391-3.973 14.81.722 5.417 2.528 10.113 5.779 14.086L432.717 684.11z"/></svg><span>${$t[this.$localePath||"/"].copy} 🎉</span>`,It.duration),document.body.removeChild(r),a&&t&&(t.removeAllRanges(),t.addRange(a))}}})],zt={name:"GlobalLayout",computed:{layout(){const e=this.getLayout();return gt("layout",e),r.a.component(e)}},methods:{getLayout(){if(this.$page.path){const e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},Ot=Object(Bt.a)(zt,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(e,t,a){switch(t){case"components":e[t]||(e[t]={}),Object.assign(e[t],a);break;case"mixins":e[t]||(e[t]=[]),e[t].push(...a);break;default:throw new Error("Unknown option name.")}}(Ot,"mixins",Ft);const Mt=[{name:"v-d67fac18",path:"/algorithm-basic/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-d67fac18").then(a)}},{path:"/algorithm-basic/index.html",redirect:"/algorithm-basic/"},{name:"v-704ec0f6",path:"/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-704ec0f6").then(a)}},{path:"/index.html",redirect:"/"},{name:"v-64ad8634",path:"/algorithm-basic/basic-sort/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-64ad8634").then(a)}},{path:"/algorithm-basic/basic-sort/index.html",redirect:"/algorithm-basic/basic-sort/"},{name:"v-7d90151b",path:"/algorithm-basic/basic-sort/bubble-optimization/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7d90151b").then(a)}},{path:"/algorithm-basic/basic-sort/bubble-optimization/index.html",redirect:"/algorithm-basic/basic-sort/bubble-optimization/"},{path:"/algorithm-basic/basic-sort/bubble-optimization.html",redirect:"/algorithm-basic/basic-sort/bubble-optimization/"},{name:"v-372b66f6",path:"/algorithm-basic/basic-sort/bubble/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-372b66f6").then(a)}},{path:"/algorithm-basic/basic-sort/bubble/index.html",redirect:"/algorithm-basic/basic-sort/bubble/"},{path:"/algorithm-basic/basic-sort/bubble.html",redirect:"/algorithm-basic/basic-sort/bubble/"},{name:"v-75e8440e",path:"/algorithm-basic/basic-sort/insertion-meaning/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-75e8440e").then(a)}},{path:"/algorithm-basic/basic-sort/insertion-meaning/index.html",redirect:"/algorithm-basic/basic-sort/insertion-meaning/"},{path:"/algorithm-basic/basic-sort/insertion-meaning.html",redirect:"/algorithm-basic/basic-sort/insertion-meaning/"},{name:"v-c6abb5b6",path:"/algorithm-basic/basic-sort/insertion-optimization/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-c6abb5b6").then(a)}},{path:"/algorithm-basic/basic-sort/insertion-optimization/index.html",redirect:"/algorithm-basic/basic-sort/insertion-optimization/"},{path:"/algorithm-basic/basic-sort/insertion-optimization.html",redirect:"/algorithm-basic/basic-sort/insertion-optimization/"},{name:"v-3fd81b4e",path:"/algorithm-basic/basic-sort/insertion/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3fd81b4e").then(a)}},{path:"/algorithm-basic/basic-sort/insertion/index.html",redirect:"/algorithm-basic/basic-sort/insertion/"},{path:"/algorithm-basic/basic-sort/insertion.html",redirect:"/algorithm-basic/basic-sort/insertion/"},{name:"v-77c02b9f",path:"/algorithm-basic/basic-sort/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-77c02b9f").then(a)}},{path:"/algorithm-basic/basic-sort/intro/index.html",redirect:"/algorithm-basic/basic-sort/intro/"},{path:"/algorithm-basic/basic-sort/intro.html",redirect:"/algorithm-basic/basic-sort/intro/"},{name:"v-6e1f31df",path:"/algorithm-basic/basic-sort/selection/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6e1f31df").then(a)}},{path:"/algorithm-basic/basic-sort/selection/index.html",redirect:"/algorithm-basic/basic-sort/selection/"},{path:"/algorithm-basic/basic-sort/selection.html",redirect:"/algorithm-basic/basic-sort/selection/"},{name:"v-f5d87fb6",path:"/algorithm-basic/basic-sort/practice/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-f5d87fb6").then(a)}},{path:"/algorithm-basic/basic-sort/practice/index.html",redirect:"/algorithm-basic/basic-sort/practice/"},{path:"/algorithm-basic/basic-sort/practice.html",redirect:"/algorithm-basic/basic-sort/practice/"},{name:"v-24b9f9d2",path:"/algorithm-basic/basic-sort/shell/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-24b9f9d2").then(a)}},{path:"/algorithm-basic/basic-sort/shell/index.html",redirect:"/algorithm-basic/basic-sort/shell/"},{path:"/algorithm-basic/basic-sort/shell.html",redirect:"/algorithm-basic/basic-sort/shell/"},{name:"v-998686ac",path:"/algorithm-basic/binary-search/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-998686ac").then(a)}},{path:"/algorithm-basic/binary-search/index.html",redirect:"/algorithm-basic/binary-search/"},{name:"v-0bed98a5",path:"/algorithm-basic/binary-search/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0bed98a5").then(a)}},{path:"/algorithm-basic/binary-search/intro/index.html",redirect:"/algorithm-basic/binary-search/intro/"},{path:"/algorithm-basic/binary-search/intro.html",redirect:"/algorithm-basic/binary-search/intro/"},{name:"v-09229bab",path:"/algorithm-basic/loop-invariant/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-09229bab").then(a)}},{path:"/algorithm-basic/loop-invariant/intro/index.html",redirect:"/algorithm-basic/loop-invariant/intro/"},{path:"/algorithm-basic/loop-invariant/intro.html",redirect:"/algorithm-basic/loop-invariant/intro/"},{name:"v-4a7f66b3",path:"/algorithm-basic/merge-sort/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4a7f66b3").then(a)}},{path:"/algorithm-basic/merge-sort/intro/index.html",redirect:"/algorithm-basic/merge-sort/intro/"},{path:"/algorithm-basic/merge-sort/intro.html",redirect:"/algorithm-basic/merge-sort/intro/"},{name:"v-84a78a34",path:"/algorithm-basic/non-comparison/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-84a78a34").then(a)}},{path:"/algorithm-basic/non-comparison/index.html",redirect:"/algorithm-basic/non-comparison/"},{name:"v-dad451c6",path:"/algorithm-basic/non-comparison/bucket-sort/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-dad451c6").then(a)}},{path:"/algorithm-basic/non-comparison/bucket-sort/index.html",redirect:"/algorithm-basic/non-comparison/bucket-sort/"},{path:"/algorithm-basic/non-comparison/bucket-sort.html",redirect:"/algorithm-basic/non-comparison/bucket-sort/"},{name:"v-b70ca5f6",path:"/algorithm-basic/non-comparison/count-sort/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-b70ca5f6").then(a)}},{path:"/algorithm-basic/non-comparison/count-sort/index.html",redirect:"/algorithm-basic/non-comparison/count-sort/"},{path:"/algorithm-basic/non-comparison/count-sort.html",redirect:"/algorithm-basic/non-comparison/count-sort/"},{name:"v-278cb0c7",path:"/algorithm-basic/non-comparison/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-278cb0c7").then(a)}},{path:"/algorithm-basic/non-comparison/intro/index.html",redirect:"/algorithm-basic/non-comparison/intro/"},{path:"/algorithm-basic/non-comparison/intro.html",redirect:"/algorithm-basic/non-comparison/intro/"},{name:"v-2b6a2ea5",path:"/algorithm-basic/non-comparison/practice/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2b6a2ea5").then(a)}},{path:"/algorithm-basic/non-comparison/practice/index.html",redirect:"/algorithm-basic/non-comparison/practice/"},{path:"/algorithm-basic/non-comparison/practice.html",redirect:"/algorithm-basic/non-comparison/practice/"},{name:"v-42194f25",path:"/algorithm-basic/non-comparison/radix-sort/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-42194f25").then(a)}},{path:"/algorithm-basic/non-comparison/radix-sort/index.html",redirect:"/algorithm-basic/non-comparison/radix-sort/"},{path:"/algorithm-basic/non-comparison/radix-sort.html",redirect:"/algorithm-basic/non-comparison/radix-sort/"},{name:"v-ab3140c6",path:"/algorithm-basic/quick-sort/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-ab3140c6").then(a)}},{path:"/algorithm-basic/quick-sort/intro/index.html",redirect:"/algorithm-basic/quick-sort/intro/"},{path:"/algorithm-basic/quick-sort/intro.html",redirect:"/algorithm-basic/quick-sort/intro/"},{name:"v-f1419f76",path:"/algorithm-basic/recursion-time-complexity/recursion/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-f1419f76").then(a)}},{path:"/algorithm-basic/recursion-time-complexity/recursion/index.html",redirect:"/algorithm-basic/recursion-time-complexity/recursion/"},{path:"/algorithm-basic/recursion-time-complexity/recursion.html",redirect:"/algorithm-basic/recursion-time-complexity/recursion/"},{name:"v-d47751f6",path:"/algorithm-basic/recursion-time-complexity/time-complexity/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-d47751f6").then(a)}},{path:"/algorithm-basic/recursion-time-complexity/time-complexity/index.html",redirect:"/algorithm-basic/recursion-time-complexity/time-complexity/"},{path:"/algorithm-basic/recursion-time-complexity/time-complexity.html",redirect:"/algorithm-basic/recursion-time-complexity/time-complexity/"},{name:"v-87d6a988",path:"/algorithm-basic/reference/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-87d6a988").then(a)}},{path:"/algorithm-basic/reference/index.html",redirect:"/algorithm-basic/reference/"},{name:"v-5861af7a",path:"/algorithm-basic/reference/how-to-ask-questions/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5861af7a").then(a)}},{path:"/algorithm-basic/reference/how-to-ask-questions/index.html",redirect:"/algorithm-basic/reference/how-to-ask-questions/"},{path:"/algorithm-basic/reference/how-to-ask-questions.html",redirect:"/algorithm-basic/reference/how-to-ask-questions/"},{name:"v-334280bb",path:"/algorithm-basic/reference/download/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-334280bb").then(a)}},{path:"/algorithm-basic/reference/download/index.html",redirect:"/algorithm-basic/reference/download/"},{path:"/algorithm-basic/reference/download.html",redirect:"/algorithm-basic/reference/download/"},{name:"v-2c4ec045",path:"/algorithm-basic/reference/introduction-to-algorithms/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2c4ec045").then(a)}},{path:"/algorithm-basic/reference/introduction-to-algorithms/index.html",redirect:"/algorithm-basic/reference/introduction-to-algorithms/"},{path:"/algorithm-basic/reference/introduction-to-algorithms.html",redirect:"/algorithm-basic/reference/introduction-to-algorithms/"},{name:"v-7e930965",path:"/algorithm-basic/reference/reference/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7e930965").then(a)}},{path:"/algorithm-basic/reference/reference/index.html",redirect:"/algorithm-basic/reference/reference/"},{path:"/algorithm-basic/reference/reference.html",redirect:"/algorithm-basic/reference/reference/"},{name:"v-6e20c47b",path:"/algorithm-basic/sliding-window/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6e20c47b").then(a)}},{path:"/algorithm-basic/sliding-window/intro/index.html",redirect:"/algorithm-basic/sliding-window/intro/"},{path:"/algorithm-basic/sliding-window/intro.html",redirect:"/algorithm-basic/sliding-window/intro/"},{name:"v-252a1ae5",path:"/algorithm-basic/sliding-window/practice/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-252a1ae5").then(a)}},{path:"/algorithm-basic/sliding-window/practice/index.html",redirect:"/algorithm-basic/sliding-window/practice/"},{path:"/algorithm-basic/sliding-window/practice.html",redirect:"/algorithm-basic/sliding-window/practice/"},{name:"v-958c3daa",path:"/algorithm-basic/two-pointers/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-958c3daa").then(a)}},{path:"/algorithm-basic/two-pointers/intro/index.html",redirect:"/algorithm-basic/two-pointers/intro/"},{path:"/algorithm-basic/two-pointers/intro.html",redirect:"/algorithm-basic/two-pointers/intro/"},{name:"v-0ed7643a",path:"/algorithm-idea/backtracking/01-intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0ed7643a").then(a)}},{path:"/algorithm-idea/backtracking/01-intro/index.html",redirect:"/algorithm-idea/backtracking/01-intro/"},{path:"/algorithm-idea/backtracking/01-intro.html",redirect:"/algorithm-idea/backtracking/01-intro/"},{name:"v-393158a5",path:"/algorithm-idea/backtracking/02-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-393158a5").then(a)}},{path:"/algorithm-idea/backtracking/02-tree/index.html",redirect:"/algorithm-idea/backtracking/02-tree/"},{path:"/algorithm-idea/backtracking/02-tree.html",redirect:"/algorithm-idea/backtracking/02-tree/"},{name:"v-15ca0285",path:"/algorithm-idea/backtracking/03-backtracking/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-15ca0285").then(a)}},{path:"/algorithm-idea/backtracking/03-backtracking/index.html",redirect:"/algorithm-idea/backtracking/03-backtracking/"},{path:"/algorithm-idea/backtracking/03-backtracking.html",redirect:"/algorithm-idea/backtracking/03-backtracking/"},{name:"v-1a9e8c1b",path:"/algorithm-idea/backtracking/04-questions/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1a9e8c1b").then(a)}},{path:"/algorithm-idea/backtracking/04-questions/index.html",redirect:"/algorithm-idea/backtracking/04-questions/"},{path:"/algorithm-idea/backtracking/04-questions.html",redirect:"/algorithm-idea/backtracking/04-questions/"},{name:"v-2624a525",path:"/algorithm-idea/backtracking/05-pruning/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2624a525").then(a)}},{path:"/algorithm-idea/backtracking/05-pruning/index.html",redirect:"/algorithm-idea/backtracking/05-pruning/"},{path:"/algorithm-idea/backtracking/05-pruning.html",redirect:"/algorithm-idea/backtracking/05-pruning/"},{name:"v-207dcba5",path:"/algorithm-idea/backtracking/06-summary/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-207dcba5").then(a)}},{path:"/algorithm-idea/backtracking/06-summary/index.html",redirect:"/algorithm-idea/backtracking/06-summary/"},{path:"/algorithm-idea/backtracking/06-summary.html",redirect:"/algorithm-idea/backtracking/06-summary/"},{name:"v-4414c8b6",path:"/algorithm-idea/backtracking/07-practice/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4414c8b6").then(a)}},{path:"/algorithm-idea/backtracking/07-practice/index.html",redirect:"/algorithm-idea/backtracking/07-practice/"},{path:"/algorithm-idea/backtracking/07-practice.html",redirect:"/algorithm-idea/backtracking/07-practice/"},{name:"v-f7222b38",path:"/algorithm-idea/backtracking/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-f7222b38").then(a)}},{path:"/algorithm-idea/backtracking/index.html",redirect:"/algorithm-idea/backtracking/"},{name:"v-e477b492",path:"/algorithm-idea/breadth-first-search/0127-word-ladder/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-e477b492").then(a)}},{path:"/algorithm-idea/breadth-first-search/0127-word-ladder/index.html",redirect:"/algorithm-idea/breadth-first-search/0127-word-ladder/"},{path:"/algorithm-idea/breadth-first-search/0127-word-ladder.html",redirect:"/algorithm-idea/breadth-first-search/0127-word-ladder/"},{name:"v-7e744542",path:"/algorithm-idea/breadth-first-search/0752-%E6%89%93%E5%BC%80%E8%BD%AC%E7%9B%98%E9%94%81%EF%BC%88%E5%8D%95%E5%90%91%E3%80%81%E5%8F%8C%E5%90%91%20BFS%EF%BC%89/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7e744542").then(a)}},{path:"/algorithm-idea/breadth-first-search/0752-打开转盘锁（单向、双向 BFS）/",redirect:"/algorithm-idea/breadth-first-search/0752-%E6%89%93%E5%BC%80%E8%BD%AC%E7%9B%98%E9%94%81%EF%BC%88%E5%8D%95%E5%90%91%E3%80%81%E5%8F%8C%E5%90%91%20BFS%EF%BC%89/"},{path:"/algorithm-idea/breadth-first-search/0752-%E6%89%93%E5%BC%80%E8%BD%AC%E7%9B%98%E9%94%81%EF%BC%88%E5%8D%95%E5%90%91%E3%80%81%E5%8F%8C%E5%90%91%20BFS%EF%BC%89/index.html",redirect:"/algorithm-idea/breadth-first-search/0752-%E6%89%93%E5%BC%80%E8%BD%AC%E7%9B%98%E9%94%81%EF%BC%88%E5%8D%95%E5%90%91%E3%80%81%E5%8F%8C%E5%90%91%20BFS%EF%BC%89/"},{path:"/algorithm-idea/breadth-first-search/0752-打开转盘锁（单向、双向 BFS）.html",redirect:"/algorithm-idea/breadth-first-search/0752-%E6%89%93%E5%BC%80%E8%BD%AC%E7%9B%98%E9%94%81%EF%BC%88%E5%8D%95%E5%90%91%E3%80%81%E5%8F%8C%E5%90%91%20BFS%EF%BC%89/"},{name:"v-0d4b8854",path:"/algorithm-idea/breadth-first-search/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0d4b8854").then(a)}},{path:"/algorithm-idea/breadth-first-search/index.html",redirect:"/algorithm-idea/breadth-first-search/"},{name:"v-36ddfa76",path:"/algorithm-idea/breadth-first-search/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-36ddfa76").then(a)}},{path:"/algorithm-idea/breadth-first-search/intro/index.html",redirect:"/algorithm-idea/breadth-first-search/intro/"},{path:"/algorithm-idea/breadth-first-search/intro.html",redirect:"/algorithm-idea/breadth-first-search/intro/"},{name:"v-1d2ea306",path:"/algorithm-idea/breadth-first-search/practice/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1d2ea306").then(a)}},{path:"/algorithm-idea/breadth-first-search/practice/index.html",redirect:"/algorithm-idea/breadth-first-search/practice/"},{path:"/algorithm-idea/breadth-first-search/practice.html",redirect:"/algorithm-idea/breadth-first-search/practice/"},{name:"v-916a2c74",path:"/algorithm-idea/dynamic-programming/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-916a2c74").then(a)}},{path:"/algorithm-idea/dynamic-programming/index.html",redirect:"/algorithm-idea/dynamic-programming/"},{name:"v-0e908b85",path:"/algorithm-idea/dynamic-programming/practice/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0e908b85").then(a)}},{path:"/algorithm-idea/dynamic-programming/practice/index.html",redirect:"/algorithm-idea/dynamic-programming/practice/"},{path:"/algorithm-idea/dynamic-programming/practice.html",redirect:"/algorithm-idea/dynamic-programming/practice/"},{name:"v-e3593b96",path:"/algorithm-idea/dynamic-programming/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-e3593b96").then(a)}},{path:"/algorithm-idea/dynamic-programming/intro/index.html",redirect:"/algorithm-idea/dynamic-programming/intro/"},{path:"/algorithm-idea/dynamic-programming/intro.html",redirect:"/algorithm-idea/dynamic-programming/intro/"},{name:"v-08445945",path:"/algorithm-idea/greedy/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-08445945").then(a)}},{path:"/algorithm-idea/greedy/intro/index.html",redirect:"/algorithm-idea/greedy/intro/"},{path:"/algorithm-idea/greedy/intro.html",redirect:"/algorithm-idea/greedy/intro/"},{name:"v-43dd4fe2",path:"/array/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-43dd4fe2").then(a)}},{path:"/array/index.html",redirect:"/array/"},{name:"v-062f50f1",path:"/algorithm-idea/greedy/practice/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-062f50f1").then(a)}},{path:"/algorithm-idea/greedy/practice/index.html",redirect:"/algorithm-idea/greedy/practice/"},{path:"/algorithm-idea/greedy/practice.html",redirect:"/algorithm-idea/greedy/practice/"},{name:"v-114583e5",path:"/array/solutions/0008-string-to-integer-atoi/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-114583e5").then(a)}},{path:"/array/solutions/0008-string-to-integer-atoi/index.html",redirect:"/array/solutions/0008-string-to-integer-atoi/"},{path:"/array/solutions/0008-string-to-integer-atoi.html",redirect:"/array/solutions/0008-string-to-integer-atoi/"},{name:"v-c2030536",path:"/array/solutions/0013-roman-to-integer/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-c2030536").then(a)}},{path:"/array/solutions/0013-roman-to-integer/index.html",redirect:"/array/solutions/0013-roman-to-integer/"},{path:"/array/solutions/0013-roman-to-integer.html",redirect:"/array/solutions/0013-roman-to-integer/"},{name:"v-1ba63445",path:"/array/solutions/0066-plus-one/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1ba63445").then(a)}},{path:"/array/solutions/0066-plus-one/index.html",redirect:"/array/solutions/0066-plus-one/"},{path:"/array/solutions/0066-plus-one.html",redirect:"/array/solutions/0066-plus-one/"},{name:"v-3b491bb6",path:"/array/solutions/0067-add-binary/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3b491bb6").then(a)}},{path:"/array/solutions/0067-add-binary/index.html",redirect:"/array/solutions/0067-add-binary/"},{path:"/array/solutions/0067-add-binary.html",redirect:"/array/solutions/0067-add-binary/"},{name:"v-4649cfe5",path:"/array/solutions/0125-valid-palindrome/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4649cfe5").then(a)}},{path:"/array/solutions/0125-valid-palindrome/index.html",redirect:"/array/solutions/0125-valid-palindrome/"},{path:"/array/solutions/0125-valid-palindrome.html",redirect:"/array/solutions/0125-valid-palindrome/"},{name:"v-4743751e",path:"/array/solutions/0136-single-number/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4743751e").then(a)}},{path:"/array/solutions/0136-single-number/index.html",redirect:"/array/solutions/0136-single-number/"},{path:"/array/solutions/0136-single-number.html",redirect:"/array/solutions/0136-single-number/"},{name:"v-9473e536",path:"/array/solutions/0137-single-number-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-9473e536").then(a)}},{path:"/array/solutions/0137-single-number-ii/index.html",redirect:"/array/solutions/0137-single-number-ii/"},{path:"/array/solutions/0137-single-number-ii.html",redirect:"/array/solutions/0137-single-number-ii/"},{name:"v-32439385",path:"/array/solutions/0189-rotate-array/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-32439385").then(a)}},{path:"/array/solutions/0189-rotate-array/index.html",redirect:"/array/solutions/0189-rotate-array/"},{path:"/array/solutions/0189-rotate-array.html",redirect:"/array/solutions/0189-rotate-array/"},{name:"v-4f184e15",path:"/array/solutions/0240-search-a-2d-matrix-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4f184e15").then(a)}},{path:"/array/solutions/0240-search-a-2d-matrix-ii/index.html",redirect:"/array/solutions/0240-search-a-2d-matrix-ii/"},{path:"/array/solutions/0240-search-a-2d-matrix-ii.html",redirect:"/array/solutions/0240-search-a-2d-matrix-ii/"},{name:"v-571c02b6",path:"/array/solutions/0387-first-unique-character-in-a-string/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-571c02b6").then(a)}},{path:"/array/solutions/0387-first-unique-character-in-a-string/index.html",redirect:"/array/solutions/0387-first-unique-character-in-a-string/"},{path:"/array/solutions/0387-first-unique-character-in-a-string.html",redirect:"/array/solutions/0387-first-unique-character-in-a-string/"},{name:"v-23c4fd45",path:"/array/solutions/0448-find-all-numbers-disappeared-in-an-array/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-23c4fd45").then(a)}},{path:"/array/solutions/0448-find-all-numbers-disappeared-in-an-array/index.html",redirect:"/array/solutions/0448-find-all-numbers-disappeared-in-an-array/"},{path:"/array/solutions/0448-find-all-numbers-disappeared-in-an-array.html",redirect:"/array/solutions/0448-find-all-numbers-disappeared-in-an-array/"},{name:"v-6529ff6d",path:"/array/solutions/0836-rectangle-overlap/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6529ff6d").then(a)}},{path:"/array/solutions/0836-rectangle-overlap/index.html",redirect:"/array/solutions/0836-rectangle-overlap/"},{path:"/array/solutions/0836-rectangle-overlap.html",redirect:"/array/solutions/0836-rectangle-overlap/"},{name:"v-f65d6d36",path:"/array/solutions/0461-hamming-distance/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-f65d6d36").then(a)}},{path:"/array/solutions/0461-hamming-distance/index.html",redirect:"/array/solutions/0461-hamming-distance/"},{path:"/array/solutions/0461-hamming-distance.html",redirect:"/array/solutions/0461-hamming-distance/"},{name:"v-7d755634",path:"/backtracking/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7d755634").then(a)}},{path:"/backtracking/index.html",redirect:"/backtracking/"},{name:"v-b9a480f6",path:"/backtracking/solutions/0017-letter-combinations-of-a-phone-number/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-b9a480f6").then(a)}},{path:"/backtracking/solutions/0017-letter-combinations-of-a-phone-number/index.html",redirect:"/backtracking/solutions/0017-letter-combinations-of-a-phone-number/"},{path:"/backtracking/solutions/0017-letter-combinations-of-a-phone-number.html",redirect:"/backtracking/solutions/0017-letter-combinations-of-a-phone-number/"},{name:"v-7615423f",path:"/backtracking/solutions/0022-generate-parentheses/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7615423f").then(a)}},{path:"/backtracking/solutions/0022-generate-parentheses/index.html",redirect:"/backtracking/solutions/0022-generate-parentheses/"},{path:"/backtracking/solutions/0022-generate-parentheses.html",redirect:"/backtracking/solutions/0022-generate-parentheses/"},{name:"v-21acc425",path:"/backtracking/solutions/0037-sudoku-solver/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-21acc425").then(a)}},{path:"/backtracking/solutions/0037-sudoku-solver/index.html",redirect:"/backtracking/solutions/0037-sudoku-solver/"},{path:"/backtracking/solutions/0037-sudoku-solver.html",redirect:"/backtracking/solutions/0037-sudoku-solver/"},{name:"v-28d09be5",path:"/backtracking/solutions/0039-combination-sum/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-28d09be5").then(a)}},{path:"/backtracking/solutions/0039-combination-sum/index.html",redirect:"/backtracking/solutions/0039-combination-sum/"},{path:"/backtracking/solutions/0039-combination-sum.html",redirect:"/backtracking/solutions/0039-combination-sum/"},{name:"v-2a9cc73b",path:"/backtracking/solutions/0040-combination-sum-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2a9cc73b").then(a)}},{path:"/backtracking/solutions/0040-combination-sum-ii/index.html",redirect:"/backtracking/solutions/0040-combination-sum-ii/"},{path:"/backtracking/solutions/0040-combination-sum-ii.html",redirect:"/backtracking/solutions/0040-combination-sum-ii/"},{name:"v-6a86c3a6",path:"/backtracking/solutions/0046-permutations/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6a86c3a6").then(a)}},{path:"/backtracking/solutions/0046-permutations/index.html",redirect:"/backtracking/solutions/0046-permutations/"},{path:"/backtracking/solutions/0046-permutations.html",redirect:"/backtracking/solutions/0046-permutations/"},{name:"v-efda7436",path:"/backtracking/solutions/0047-permutations-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-efda7436").then(a)}},{path:"/backtracking/solutions/0047-permutations-ii/index.html",redirect:"/backtracking/solutions/0047-permutations-ii/"},{path:"/backtracking/solutions/0047-permutations-ii.html",redirect:"/backtracking/solutions/0047-permutations-ii/"},{name:"v-497adc6b",path:"/backtracking/solutions/0051-n-queens/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-497adc6b").then(a)}},{path:"/backtracking/solutions/0051-n-queens/index.html",redirect:"/backtracking/solutions/0051-n-queens/"},{path:"/backtracking/solutions/0051-n-queens.html",redirect:"/backtracking/solutions/0051-n-queens/"},{name:"v-e6214e32",path:"/backtracking/solutions/0060-permutation-sequence/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-e6214e32").then(a)}},{path:"/backtracking/solutions/0060-permutation-sequence/index.html",redirect:"/backtracking/solutions/0060-permutation-sequence/"},{path:"/backtracking/solutions/0060-permutation-sequence.html",redirect:"/backtracking/solutions/0060-permutation-sequence/"},{name:"v-3b2bfbfb",path:"/backtracking/solutions/0077-combinations/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3b2bfbfb").then(a)}},{path:"/backtracking/solutions/0077-combinations/index.html",redirect:"/backtracking/solutions/0077-combinations/"},{path:"/backtracking/solutions/0077-combinations.html",redirect:"/backtracking/solutions/0077-combinations/"},{name:"v-30fb5a76",path:"/backtracking/solutions/0078-subsets/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-30fb5a76").then(a)}},{path:"/backtracking/solutions/0078-subsets/index.html",redirect:"/backtracking/solutions/0078-subsets/"},{path:"/backtracking/solutions/0078-subsets.html",redirect:"/backtracking/solutions/0078-subsets/"},{name:"v-69145925",path:"/backtracking/solutions/0079-word-search/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-69145925").then(a)}},{path:"/backtracking/solutions/0079-word-search/index.html",redirect:"/backtracking/solutions/0079-word-search/"},{path:"/backtracking/solutions/0079-word-search.html",redirect:"/backtracking/solutions/0079-word-search/"},{name:"v-361e118e",path:"/backtracking/solutions/0090-subsets-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-361e118e").then(a)}},{path:"/backtracking/solutions/0090-subsets-ii/index.html",redirect:"/backtracking/solutions/0090-subsets-ii/"},{path:"/backtracking/solutions/0090-subsets-ii.html",redirect:"/backtracking/solutions/0090-subsets-ii/"},{name:"v-69cd5401",path:"/backtracking/solutions/0093-restore-ip-addresses/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-69cd5401").then(a)}},{path:"/backtracking/solutions/0093-restore-ip-addresses/index.html",redirect:"/backtracking/solutions/0093-restore-ip-addresses/"},{path:"/backtracking/solutions/0093-restore-ip-addresses.html",redirect:"/backtracking/solutions/0093-restore-ip-addresses/"},{name:"v-738c4125",path:"/backtracking/solutions/0113-path-sum-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-738c4125").then(a)}},{path:"/backtracking/solutions/0113-path-sum-ii/index.html",redirect:"/backtracking/solutions/0113-path-sum-ii/"},{path:"/backtracking/solutions/0113-path-sum-ii.html",redirect:"/backtracking/solutions/0113-path-sum-ii/"},{name:"v-2df88ffd",path:"/backtracking/solutions/0126-word-ladder-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2df88ffd").then(a)}},{path:"/backtracking/solutions/0126-word-ladder-ii/index.html",redirect:"/backtracking/solutions/0126-word-ladder-ii/"},{path:"/backtracking/solutions/0126-word-ladder-ii.html",redirect:"/backtracking/solutions/0126-word-ladder-ii/"},{name:"v-39b2ee36",path:"/backtracking/solutions/0131-palindrome-partitioning/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-39b2ee36").then(a)}},{path:"/backtracking/solutions/0131-palindrome-partitioning/index.html",redirect:"/backtracking/solutions/0131-palindrome-partitioning/"},{path:"/backtracking/solutions/0131-palindrome-partitioning.html",redirect:"/backtracking/solutions/0131-palindrome-partitioning/"},{name:"v-0a54f2a1",path:"/backtracking/solutions/0130-surrounded-regions/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0a54f2a1").then(a)}},{path:"/backtracking/solutions/0130-surrounded-regions/index.html",redirect:"/backtracking/solutions/0130-surrounded-regions/"},{path:"/backtracking/solutions/0130-surrounded-regions.html",redirect:"/backtracking/solutions/0130-surrounded-regions/"},{name:"v-19dbad41",path:"/backtracking/solutions/0132-palindrome-partitioning-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-19dbad41").then(a)}},{path:"/backtracking/solutions/0132-palindrome-partitioning-ii/index.html",redirect:"/backtracking/solutions/0132-palindrome-partitioning-ii/"},{path:"/backtracking/solutions/0132-palindrome-partitioning-ii.html",redirect:"/backtracking/solutions/0132-palindrome-partitioning-ii/"},{name:"v-70fe4685",path:"/backtracking/solutions/0140-word-break-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-70fe4685").then(a)}},{path:"/backtracking/solutions/0140-word-break-ii/index.html",redirect:"/backtracking/solutions/0140-word-break-ii/"},{path:"/backtracking/solutions/0140-word-break-ii.html",redirect:"/backtracking/solutions/0140-word-break-ii/"},{name:"v-1cd977f6",path:"/backtracking/solutions/0200-number-of-islands/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1cd977f6").then(a)}},{path:"/backtracking/solutions/0200-number-of-islands/index.html",redirect:"/backtracking/solutions/0200-number-of-islands/"},{path:"/backtracking/solutions/0200-number-of-islands.html",redirect:"/backtracking/solutions/0200-number-of-islands/"},{name:"v-04027205",path:"/backtracking/solutions/0216-combination-sum-iii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-04027205").then(a)}},{path:"/backtracking/solutions/0216-combination-sum-iii/index.html",redirect:"/backtracking/solutions/0216-combination-sum-iii/"},{path:"/backtracking/solutions/0216-combination-sum-iii.html",redirect:"/backtracking/solutions/0216-combination-sum-iii/"},{name:"v-5d7afbe5",path:"/backtracking/solutions/0306-additive-number/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5d7afbe5").then(a)}},{path:"/backtracking/solutions/0306-additive-number/index.html",redirect:"/backtracking/solutions/0306-additive-number/"},{path:"/backtracking/solutions/0306-additive-number.html",redirect:"/backtracking/solutions/0306-additive-number/"},{name:"v-994592f2",path:"/backtracking/solutions/0401-binary-watch/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-994592f2").then(a)}},{path:"/backtracking/solutions/0401-binary-watch/index.html",redirect:"/backtracking/solutions/0401-binary-watch/"},{path:"/backtracking/solutions/0401-binary-watch.html",redirect:"/backtracking/solutions/0401-binary-watch/"},{name:"v-162c9265",path:"/backtracking/solutions/0417-pacific-atlantic-water-flow/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-162c9265").then(a)}},{path:"/backtracking/solutions/0417-pacific-atlantic-water-flow/index.html",redirect:"/backtracking/solutions/0417-pacific-atlantic-water-flow/"},{path:"/backtracking/solutions/0417-pacific-atlantic-water-flow.html",redirect:"/backtracking/solutions/0417-pacific-atlantic-water-flow/"},{name:"v-2e7f0376",path:"/backtracking/solutions/0529-minesweeper/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2e7f0376").then(a)}},{path:"/backtracking/solutions/0529-minesweeper/index.html",redirect:"/backtracking/solutions/0529-minesweeper/"},{path:"/backtracking/solutions/0529-minesweeper.html",redirect:"/backtracking/solutions/0529-minesweeper/"},{name:"v-544f57f6",path:"/backtracking/solutions/0491-increasing-subsequences/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-544f57f6").then(a)}},{path:"/backtracking/solutions/0491-increasing-subsequences/index.html",redirect:"/backtracking/solutions/0491-increasing-subsequences/"},{path:"/backtracking/solutions/0491-increasing-subsequences.html",redirect:"/backtracking/solutions/0491-increasing-subsequences/"},{name:"v-3b75c1e5",path:"/backtracking/solutions/0784-letter-case-permutation/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3b75c1e5").then(a)}},{path:"/backtracking/solutions/0784-letter-case-permutation/index.html",redirect:"/backtracking/solutions/0784-letter-case-permutation/"},{path:"/backtracking/solutions/0784-letter-case-permutation.html",redirect:"/backtracking/solutions/0784-letter-case-permutation/"},{name:"v-2180fa85",path:"/backtracking/solutions/0842-split-array-into-fibonacci-sequence/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2180fa85").then(a)}},{path:"/backtracking/solutions/0842-split-array-into-fibonacci-sequence/index.html",redirect:"/backtracking/solutions/0842-split-array-into-fibonacci-sequence/"},{path:"/backtracking/solutions/0842-split-array-into-fibonacci-sequence.html",redirect:"/backtracking/solutions/0842-split-array-into-fibonacci-sequence/"},{name:"v-ee451ea2",path:"/backtracking/solutions/1020-number-of-enclaves/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-ee451ea2").then(a)}},{path:"/backtracking/solutions/1020-number-of-enclaves/index.html",redirect:"/backtracking/solutions/1020-number-of-enclaves/"},{path:"/backtracking/solutions/1020-number-of-enclaves.html",redirect:"/backtracking/solutions/1020-number-of-enclaves/"},{name:"v-244a2d05",path:"/backtracking/solutions/1034-coloring-a-border/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-244a2d05").then(a)}},{path:"/backtracking/solutions/1034-coloring-a-border/index.html",redirect:"/backtracking/solutions/1034-coloring-a-border/"},{path:"/backtracking/solutions/1034-coloring-a-border.html",redirect:"/backtracking/solutions/1034-coloring-a-border/"},{name:"v-52654585",path:"/backtracking/solutions/1079-letter-tile-possibilities/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-52654585").then(a)}},{path:"/backtracking/solutions/1079-letter-tile-possibilities/index.html",redirect:"/backtracking/solutions/1079-letter-tile-possibilities/"},{path:"/backtracking/solutions/1079-letter-tile-possibilities.html",redirect:"/backtracking/solutions/1079-letter-tile-possibilities/"},{name:"v-a32c4436",path:"/backtracking/solutions/1254-number-of-closed-islands/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a32c4436").then(a)}},{path:"/backtracking/solutions/1254-number-of-closed-islands/index.html",redirect:"/backtracking/solutions/1254-number-of-closed-islands/"},{path:"/backtracking/solutions/1254-number-of-closed-islands.html",redirect:"/backtracking/solutions/1254-number-of-closed-islands/"},{name:"v-0bf045a6",path:"/backtracking/solutions/0733-flood-fill/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0bf045a6").then(a)}},{path:"/backtracking/solutions/0733-flood-fill/index.html",redirect:"/backtracking/solutions/0733-flood-fill/"},{path:"/backtracking/solutions/0733-flood-fill.html",redirect:"/backtracking/solutions/0733-flood-fill/"},{name:"v-4e65b80f",path:"/backtracking/solutions/1329-sort-the-matrix-diagonally/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4e65b80f").then(a)}},{path:"/backtracking/solutions/1329-sort-the-matrix-diagonally/index.html",redirect:"/backtracking/solutions/1329-sort-the-matrix-diagonally/"},{path:"/backtracking/solutions/1329-sort-the-matrix-diagonally.html",redirect:"/backtracking/solutions/1329-sort-the-matrix-diagonally/"},{name:"v-2b09ae7b",path:"/backtracking/solutions/1391-check-if-there-is-a-valid-path-in-a-grid/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2b09ae7b").then(a)}},{path:"/backtracking/solutions/1391-check-if-there-is-a-valid-path-in-a-grid/index.html",redirect:"/backtracking/solutions/1391-check-if-there-is-a-valid-path-in-a-grid/"},{path:"/backtracking/solutions/1391-check-if-there-is-a-valid-path-in-a-grid.html",redirect:"/backtracking/solutions/1391-check-if-there-is-a-valid-path-in-a-grid/"},{name:"v-7f545425",path:"/backtracking/solutions/1593-split-a-string-into-the-max-number-of-unique-substrings/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7f545425").then(a)}},{path:"/backtracking/solutions/1593-split-a-string-into-the-max-number-of-unique-substrings/index.html",redirect:"/backtracking/solutions/1593-split-a-string-into-the-max-number-of-unique-substrings/"},{path:"/backtracking/solutions/1593-split-a-string-into-the-max-number-of-unique-substrings.html",redirect:"/backtracking/solutions/1593-split-a-string-into-the-max-number-of-unique-substrings/"},{name:"v-675d38b5",path:"/backtracking/solutions/1631-path-with-minimum-effort/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-675d38b5").then(a)}},{path:"/backtracking/solutions/1631-path-with-minimum-effort/index.html",redirect:"/backtracking/solutions/1631-path-with-minimum-effort/"},{path:"/backtracking/solutions/1631-path-with-minimum-effort.html",redirect:"/backtracking/solutions/1631-path-with-minimum-effort/"},{name:"v-08d9baa5",path:"/backtracking/solutions/38-zi-fu-chuan-de-pai-lie-lcof/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-08d9baa5").then(a)}},{path:"/backtracking/solutions/38-zi-fu-chuan-de-pai-lie-lcof/index.html",redirect:"/backtracking/solutions/38-zi-fu-chuan-de-pai-lie-lcof/"},{path:"/backtracking/solutions/38-zi-fu-chuan-de-pai-lie-lcof.html",redirect:"/backtracking/solutions/38-zi-fu-chuan-de-pai-lie-lcof/"},{name:"v-47aa5819",path:"/binary-search/01/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-47aa5819").then(a)}},{path:"/binary-search/01/index.html",redirect:"/binary-search/01/"},{path:"/binary-search/01.html",redirect:"/binary-search/01/"},{name:"v-4b3883d7",path:"/binary-search/02/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4b3883d7").then(a)}},{path:"/binary-search/02/index.html",redirect:"/binary-search/02/"},{path:"/binary-search/02.html",redirect:"/binary-search/02/"},{name:"v-4ec6af95",path:"/binary-search/03/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4ec6af95").then(a)}},{path:"/binary-search/03/index.html",redirect:"/binary-search/03/"},{path:"/binary-search/03.html",redirect:"/binary-search/03/"},{name:"v-5cff5e8d",path:"/binary-search/07/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5cff5e8d").then(a)}},{path:"/binary-search/07/index.html",redirect:"/binary-search/07/"},{path:"/binary-search/07.html",redirect:"/binary-search/07/"},{name:"v-608d8a4b",path:"/binary-search/08/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-608d8a4b").then(a)}},{path:"/binary-search/08/index.html",redirect:"/binary-search/08/"},{path:"/binary-search/08.html",redirect:"/binary-search/08/"},{name:"v-9b590f46",path:"/binary-search/10/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-9b590f46").then(a)}},{path:"/binary-search/10/index.html",redirect:"/binary-search/10/"},{path:"/binary-search/10.html",redirect:"/binary-search/10/"},{name:"v-641bb609",path:"/binary-search/09/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-641bb609").then(a)}},{path:"/binary-search/09/index.html",redirect:"/binary-search/09/"},{path:"/binary-search/09.html",redirect:"/binary-search/09/"},{name:"v-b0421f28",path:"/binary-search/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-b0421f28").then(a)}},{path:"/binary-search/index.html",redirect:"/binary-search/"},{name:"v-7a9f58a5",path:"/binary-search/practice/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7a9f58a5").then(a)}},{path:"/binary-search/practice/index.html",redirect:"/binary-search/practice/"},{path:"/binary-search/practice.html",redirect:"/binary-search/practice/"},{name:"v-2344e425",path:"/binary-search/solutions/find-index/0004-median-of-two-sorted-arrays/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2344e425").then(a)}},{path:"/binary-search/solutions/find-index/0004-median-of-two-sorted-arrays/index.html",redirect:"/binary-search/solutions/find-index/0004-median-of-two-sorted-arrays/"},{path:"/binary-search/solutions/find-index/0004-median-of-two-sorted-arrays.html",redirect:"/binary-search/solutions/find-index/0004-median-of-two-sorted-arrays/"},{name:"v-4b649519",path:"/binary-search/solutions/find-index/0033-search-in-rotated-sorted-array/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4b649519").then(a)}},{path:"/binary-search/solutions/find-index/0033-search-in-rotated-sorted-array/index.html",redirect:"/binary-search/solutions/find-index/0033-search-in-rotated-sorted-array/"},{path:"/binary-search/solutions/find-index/0033-search-in-rotated-sorted-array.html",redirect:"/binary-search/solutions/find-index/0033-search-in-rotated-sorted-array/"},{name:"v-c508b776",path:"/binary-search/solutions/find-index/0034-find-first-and-last-position-of-element-in-sorted-array/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-c508b776").then(a)}},{path:"/binary-search/solutions/find-index/0034-find-first-and-last-position-of-element-in-sorted-array/index.html",redirect:"/binary-search/solutions/find-index/0034-find-first-and-last-position-of-element-in-sorted-array/"},{path:"/binary-search/solutions/find-index/0034-find-first-and-last-position-of-element-in-sorted-array.html",redirect:"/binary-search/solutions/find-index/0034-find-first-and-last-position-of-element-in-sorted-array/"},{name:"v-f7e08266",path:"/binary-search/solutions/find-index/0035-search-insert-position/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-f7e08266").then(a)}},{path:"/binary-search/solutions/find-index/0035-search-insert-position/index.html",redirect:"/binary-search/solutions/find-index/0035-search-insert-position/"},{path:"/binary-search/solutions/find-index/0035-search-insert-position.html",redirect:"/binary-search/solutions/find-index/0035-search-insert-position/"},{name:"v-d4e67cb6",path:"/binary-search/solutions/find-index/0081-search-in-rotated-sorted-array-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-d4e67cb6").then(a)}},{path:"/binary-search/solutions/find-index/0081-search-in-rotated-sorted-array-ii/index.html",redirect:"/binary-search/solutions/find-index/0081-search-in-rotated-sorted-array-ii/"},{path:"/binary-search/solutions/find-index/0081-search-in-rotated-sorted-array-ii.html",redirect:"/binary-search/solutions/find-index/0081-search-in-rotated-sorted-array-ii/"},{name:"v-e5bd521a",path:"/binary-search/solutions/find-index/0153-find-minimum-in-rotated-sorted-array/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-e5bd521a").then(a)}},{path:"/binary-search/solutions/find-index/0153-find-minimum-in-rotated-sorted-array/index.html",redirect:"/binary-search/solutions/find-index/0153-find-minimum-in-rotated-sorted-array/"},{path:"/binary-search/solutions/find-index/0153-find-minimum-in-rotated-sorted-array.html",redirect:"/binary-search/solutions/find-index/0153-find-minimum-in-rotated-sorted-array/"},{name:"v-2ef83476",path:"/binary-search/solutions/find-index/0154-find-minimum-in-rotated-sorted-array-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2ef83476").then(a)}},{path:"/binary-search/solutions/find-index/0154-find-minimum-in-rotated-sorted-array-ii/index.html",redirect:"/binary-search/solutions/find-index/0154-find-minimum-in-rotated-sorted-array-ii/"},{path:"/binary-search/solutions/find-index/0154-find-minimum-in-rotated-sorted-array-ii.html",redirect:"/binary-search/solutions/find-index/0154-find-minimum-in-rotated-sorted-array-ii/"},{name:"v-65b73105",path:"/binary-search/solutions/find-index/0162-find-peak-element/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-65b73105").then(a)}},{path:"/binary-search/solutions/find-index/0162-find-peak-element/index.html",redirect:"/binary-search/solutions/find-index/0162-find-peak-element/"},{path:"/binary-search/solutions/find-index/0162-find-peak-element.html",redirect:"/binary-search/solutions/find-index/0162-find-peak-element/"},{name:"v-0f4fd9f9",path:"/binary-search/solutions/find-index/0275-h-index-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0f4fd9f9").then(a)}},{path:"/binary-search/solutions/find-index/0275-h-index-ii/index.html",redirect:"/binary-search/solutions/find-index/0275-h-index-ii/"},{path:"/binary-search/solutions/find-index/0275-h-index-ii.html",redirect:"/binary-search/solutions/find-index/0275-h-index-ii/"},{name:"v-78593305",path:"/binary-search/solutions/find-index/0436-find-right-interval/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-78593305").then(a)}},{path:"/binary-search/solutions/find-index/0436-find-right-interval/index.html",redirect:"/binary-search/solutions/find-index/0436-find-right-interval/"},{path:"/binary-search/solutions/find-index/0436-find-right-interval.html",redirect:"/binary-search/solutions/find-index/0436-find-right-interval/"},{name:"v-2145d7f6",path:"/binary-search/solutions/find-index/0611-valid-triangle-number/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2145d7f6").then(a)}},{path:"/binary-search/solutions/find-index/0611-valid-triangle-number/index.html",redirect:"/binary-search/solutions/find-index/0611-valid-triangle-number/"},{path:"/binary-search/solutions/find-index/0611-valid-triangle-number.html",redirect:"/binary-search/solutions/find-index/0611-valid-triangle-number/"},{name:"v-76b6c84d",path:"/binary-search/solutions/find-index/0744-find-smallest-letter-greater-than-target/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-76b6c84d").then(a)}},{path:"/binary-search/solutions/find-index/0744-find-smallest-letter-greater-than-target/index.html",redirect:"/binary-search/solutions/find-index/0744-find-smallest-letter-greater-than-target/"},{path:"/binary-search/solutions/find-index/0744-find-smallest-letter-greater-than-target.html",redirect:"/binary-search/solutions/find-index/0744-find-smallest-letter-greater-than-target/"},{name:"v-3965f7b6",path:"/binary-search/solutions/find-index/0658-find-k-closest-elements/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3965f7b6").then(a)}},{path:"/binary-search/solutions/find-index/0658-find-k-closest-elements/index.html",redirect:"/binary-search/solutions/find-index/0658-find-k-closest-elements/"},{path:"/binary-search/solutions/find-index/0658-find-k-closest-elements.html",redirect:"/binary-search/solutions/find-index/0658-find-k-closest-elements/"},{name:"v-edc16f8a",path:"/binary-search/solutions/find-index/0852-peak-index-in-a-mountain-array/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-edc16f8a").then(a)}},{path:"/binary-search/solutions/find-index/0852-peak-index-in-a-mountain-array/index.html",redirect:"/binary-search/solutions/find-index/0852-peak-index-in-a-mountain-array/"},{path:"/binary-search/solutions/find-index/0852-peak-index-in-a-mountain-array.html",redirect:"/binary-search/solutions/find-index/0852-peak-index-in-a-mountain-array/"},{name:"v-2c7e9f15",path:"/binary-search/solutions/find-index/1095-find-in-mountain-array/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2c7e9f15").then(a)}},{path:"/binary-search/solutions/find-index/1095-find-in-mountain-array/index.html",redirect:"/binary-search/solutions/find-index/1095-find-in-mountain-array/"},{path:"/binary-search/solutions/find-index/1095-find-in-mountain-array.html",redirect:"/binary-search/solutions/find-index/1095-find-in-mountain-array/"},{name:"v-4db48f76",path:"/binary-search/solutions/find-integer/0069-sqrtx/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4db48f76").then(a)}},{path:"/binary-search/solutions/find-integer/0069-sqrtx/index.html",redirect:"/binary-search/solutions/find-integer/0069-sqrtx/"},{path:"/binary-search/solutions/find-integer/0069-sqrtx.html",redirect:"/binary-search/solutions/find-integer/0069-sqrtx/"},{name:"v-0d3d20e5",path:"/binary-search/solutions/find-integer/0287-find-the-duplicate-number/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0d3d20e5").then(a)}},{path:"/binary-search/solutions/find-integer/0287-find-the-duplicate-number/index.html",redirect:"/binary-search/solutions/find-integer/0287-find-the-duplicate-number/"},{path:"/binary-search/solutions/find-integer/0287-find-the-duplicate-number.html",redirect:"/binary-search/solutions/find-integer/0287-find-the-duplicate-number/"},{name:"v-684f5166",path:"/binary-search/solutions/find-integer/0367-valid-perfect-square/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-684f5166").then(a)}},{path:"/binary-search/solutions/find-integer/0367-valid-perfect-square/index.html",redirect:"/binary-search/solutions/find-integer/0367-valid-perfect-square/"},{path:"/binary-search/solutions/find-integer/0367-valid-perfect-square.html",redirect:"/binary-search/solutions/find-integer/0367-valid-perfect-square/"},{name:"v-707dec93",path:"/binary-search/solutions/find-integer/0374-guess-number-higher-or-lower/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-707dec93").then(a)}},{path:"/binary-search/solutions/find-integer/0374-guess-number-higher-or-lower/index.html",redirect:"/binary-search/solutions/find-integer/0374-guess-number-higher-or-lower/"},{path:"/binary-search/solutions/find-integer/0374-guess-number-higher-or-lower.html",redirect:"/binary-search/solutions/find-integer/0374-guess-number-higher-or-lower/"},{name:"v-5b8cdfa5",path:"/binary-search/solutions/find-integer/0378-kth-smallest-element-in-a-sorted-matrix/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5b8cdfa5").then(a)}},{path:"/binary-search/solutions/find-integer/0378-kth-smallest-element-in-a-sorted-matrix/index.html",redirect:"/binary-search/solutions/find-integer/0378-kth-smallest-element-in-a-sorted-matrix/"},{path:"/binary-search/solutions/find-integer/0378-kth-smallest-element-in-a-sorted-matrix.html",redirect:"/binary-search/solutions/find-integer/0378-kth-smallest-element-in-a-sorted-matrix/"},{name:"v-19c35345",path:"/binary-search/solutions/find-integer/0719-find-k-th-smallest-pair-distance/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-19c35345").then(a)}},{path:"/binary-search/solutions/find-integer/0719-find-k-th-smallest-pair-distance/index.html",redirect:"/binary-search/solutions/find-integer/0719-find-k-th-smallest-pair-distance/"},{path:"/binary-search/solutions/find-integer/0719-find-k-th-smallest-pair-distance.html",redirect:"/binary-search/solutions/find-integer/0719-find-k-th-smallest-pair-distance/"},{name:"v-47c411d7",path:"/binary-search/solutions/find-integer/1276-number-of-burgers-with-no-waste-of-ingredients/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-47c411d7").then(a)}},{path:"/binary-search/solutions/find-integer/1276-number-of-burgers-with-no-waste-of-ingredients/index.html",redirect:"/binary-search/solutions/find-integer/1276-number-of-burgers-with-no-waste-of-ingredients/"},{path:"/binary-search/solutions/find-integer/1276-number-of-burgers-with-no-waste-of-ingredients.html",redirect:"/binary-search/solutions/find-integer/1276-number-of-burgers-with-no-waste-of-ingredients/"},{name:"v-88936716",path:"/binary-search/solutions/find-integer/1300-sum-of-mutated-array-closest-to-target/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-88936716").then(a)}},{path:"/binary-search/solutions/find-integer/1300-sum-of-mutated-array-closest-to-target/index.html",redirect:"/binary-search/solutions/find-integer/1300-sum-of-mutated-array-closest-to-target/"},{path:"/binary-search/solutions/find-integer/1300-sum-of-mutated-array-closest-to-target.html",redirect:"/binary-search/solutions/find-integer/1300-sum-of-mutated-array-closest-to-target/"},{name:"v-5fe644c5",path:"/binary-search/solutions/maximum-minimization/0410-split-array-largest-sum/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5fe644c5").then(a)}},{path:"/binary-search/solutions/maximum-minimization/0410-split-array-largest-sum/index.html",redirect:"/binary-search/solutions/maximum-minimization/0410-split-array-largest-sum/"},{path:"/binary-search/solutions/maximum-minimization/0410-split-array-largest-sum.html",redirect:"/binary-search/solutions/maximum-minimization/0410-split-array-largest-sum/"},{name:"v-4f822e45",path:"/binary-search/solutions/maximum-minimization/0875-koko-eating-bananas/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4f822e45").then(a)}},{path:"/binary-search/solutions/maximum-minimization/0875-koko-eating-bananas/index.html",redirect:"/binary-search/solutions/maximum-minimization/0875-koko-eating-bananas/"},{path:"/binary-search/solutions/maximum-minimization/0875-koko-eating-bananas.html",redirect:"/binary-search/solutions/maximum-minimization/0875-koko-eating-bananas/"},{name:"v-aa5c4cb6",path:"/binary-search/solutions/maximum-minimization/1011-capacity-to-ship-packages-within-d-days/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-aa5c4cb6").then(a)}},{path:"/binary-search/solutions/maximum-minimization/1011-capacity-to-ship-packages-within-d-days/index.html",redirect:"/binary-search/solutions/maximum-minimization/1011-capacity-to-ship-packages-within-d-days/"},{path:"/binary-search/solutions/maximum-minimization/1011-capacity-to-ship-packages-within-d-days.html",redirect:"/binary-search/solutions/maximum-minimization/1011-capacity-to-ship-packages-within-d-days/"},{name:"v-2d288045",path:"/binary-search/solutions/maximum-minimization/1283-find-the-smallest-divisor-given-a-threshold/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2d288045").then(a)}},{path:"/binary-search/solutions/maximum-minimization/1283-find-the-smallest-divisor-given-a-threshold/index.html",redirect:"/binary-search/solutions/maximum-minimization/1283-find-the-smallest-divisor-given-a-threshold/"},{path:"/binary-search/solutions/maximum-minimization/1283-find-the-smallest-divisor-given-a-threshold.html",redirect:"/binary-search/solutions/maximum-minimization/1283-find-the-smallest-divisor-given-a-threshold/"},{name:"v-75672a25",path:"/binary-search/solutions/maximum-minimization/1482-minimum-number-of-days-to-make-m-bouquets/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-75672a25").then(a)}},{path:"/binary-search/solutions/maximum-minimization/1482-minimum-number-of-days-to-make-m-bouquets/index.html",redirect:"/binary-search/solutions/maximum-minimization/1482-minimum-number-of-days-to-make-m-bouquets/"},{path:"/binary-search/solutions/maximum-minimization/1482-minimum-number-of-days-to-make-m-bouquets.html",redirect:"/binary-search/solutions/maximum-minimization/1482-minimum-number-of-days-to-make-m-bouquets/"},{name:"v-503294bb",path:"/binary-search/solutions/maximum-minimization/1552-magnetic-force-between-two-balls/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-503294bb").then(a)}},{path:"/binary-search/solutions/maximum-minimization/1552-magnetic-force-between-two-balls/index.html",redirect:"/binary-search/solutions/maximum-minimization/1552-magnetic-force-between-two-balls/"},{path:"/binary-search/solutions/maximum-minimization/1552-magnetic-force-between-two-balls.html",redirect:"/binary-search/solutions/maximum-minimization/1552-magnetic-force-between-two-balls/"},{name:"v-510f9ac1",path:"/binary-search/solutions/maximum-minimization/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-510f9ac1").then(a)}},{path:"/binary-search/solutions/maximum-minimization/intro/index.html",redirect:"/binary-search/solutions/maximum-minimization/intro/"},{path:"/binary-search/solutions/maximum-minimization/intro.html",redirect:"/binary-search/solutions/maximum-minimization/intro/"},{name:"v-35f1d79a",path:"/binary-search/solutions/maximum-minimization/%E5%B0%8F%E5%BC%A0%E5%88%B7%E9%A2%98%E8%AE%A1%E5%88%92/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-35f1d79a").then(a)}},{path:"/binary-search/solutions/maximum-minimization/小张刷题计划/",redirect:"/binary-search/solutions/maximum-minimization/%E5%B0%8F%E5%BC%A0%E5%88%B7%E9%A2%98%E8%AE%A1%E5%88%92/"},{path:"/binary-search/solutions/maximum-minimization/%E5%B0%8F%E5%BC%A0%E5%88%B7%E9%A2%98%E8%AE%A1%E5%88%92/index.html",redirect:"/binary-search/solutions/maximum-minimization/%E5%B0%8F%E5%BC%A0%E5%88%B7%E9%A2%98%E8%AE%A1%E5%88%92/"},{path:"/binary-search/solutions/maximum-minimization/小张刷题计划.html",redirect:"/binary-search/solutions/maximum-minimization/%E5%B0%8F%E5%BC%A0%E5%88%B7%E9%A2%98%E8%AE%A1%E5%88%92/"},{name:"v-3e724785",path:"/binary-search/videos/01/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3e724785").then(a)}},{path:"/binary-search/videos/01/index.html",redirect:"/binary-search/videos/01/"},{path:"/binary-search/videos/01.html",redirect:"/binary-search/videos/01/"},{name:"v-840247b6",path:"/binary-search/videos/02/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-840247b6").then(a)}},{path:"/binary-search/videos/02/index.html",redirect:"/binary-search/videos/02/"},{path:"/binary-search/videos/02.html",redirect:"/binary-search/videos/02/"},{name:"v-3d8b70c5",path:"/binary-search/videos/03/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3d8b70c5").then(a)}},{path:"/binary-search/videos/03/index.html",redirect:"/binary-search/videos/03/"},{path:"/binary-search/videos/03.html",redirect:"/binary-search/videos/03/"},{name:"v-85cff536",path:"/binary-search/videos/04/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-85cff536").then(a)}},{path:"/binary-search/videos/04/index.html",redirect:"/binary-search/videos/04/"},{path:"/binary-search/videos/04.html",redirect:"/binary-search/videos/04/"},{name:"v-3ca49a05",path:"/binary-search/videos/05/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3ca49a05").then(a)}},{path:"/binary-search/videos/05/index.html",redirect:"/binary-search/videos/05/"},{path:"/binary-search/videos/05.html",redirect:"/binary-search/videos/05/"},{name:"v-879da2b6",path:"/binary-search/videos/06/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-879da2b6").then(a)}},{path:"/binary-search/videos/06/index.html",redirect:"/binary-search/videos/06/"},{path:"/binary-search/videos/06.html",redirect:"/binary-search/videos/06/"},{name:"v-3bbdc345",path:"/binary-search/videos/07/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3bbdc345").then(a)}},{path:"/binary-search/videos/07/index.html",redirect:"/binary-search/videos/07/"},{path:"/binary-search/videos/07.html",redirect:"/binary-search/videos/07/"},{name:"v-bcb118d8",path:"/binary-search/%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E5%9B%9E%E7%AD%94%E9%97%AE%E9%A2%98/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-bcb118d8").then(a)}},{path:"/binary-search/「力扣」回答问题/",redirect:"/binary-search/%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E5%9B%9E%E7%AD%94%E9%97%AE%E9%A2%98/"},{path:"/binary-search/%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E5%9B%9E%E7%AD%94%E9%97%AE%E9%A2%98/index.html",redirect:"/binary-search/%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E5%9B%9E%E7%AD%94%E9%97%AE%E9%A2%98/"},{path:"/binary-search/「力扣」回答问题.html",redirect:"/binary-search/%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E5%9B%9E%E7%AD%94%E9%97%AE%E9%A2%98/"},{name:"v-70c9179e",path:"/binary-search/videos/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-70c9179e").then(a)}},{path:"/binary-search/videos/intro/index.html",redirect:"/binary-search/videos/intro/"},{path:"/binary-search/videos/intro.html",redirect:"/binary-search/videos/intro/"},{name:"v-099226c6",path:"/bit-manipulation/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-099226c6").then(a)}},{path:"/bit-manipulation/index.html",redirect:"/bit-manipulation/"},{name:"v-0e098ff9",path:"/bit-manipulation/solutions/0050-powx-n/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0e098ff9").then(a)}},{path:"/bit-manipulation/solutions/0050-powx-n/index.html",redirect:"/bit-manipulation/solutions/0050-powx-n/"},{path:"/bit-manipulation/solutions/0050-powx-n.html",redirect:"/bit-manipulation/solutions/0050-powx-n/"},{name:"v-dbce8436",path:"/bit-manipulation/solutions/0052-n-queens-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-dbce8436").then(a)}},{path:"/bit-manipulation/solutions/0052-n-queens-ii/index.html",redirect:"/bit-manipulation/solutions/0052-n-queens-ii/"},{path:"/bit-manipulation/solutions/0052-n-queens-ii.html",redirect:"/bit-manipulation/solutions/0052-n-queens-ii/"},{name:"v-76f03e6d",path:"/bit-manipulation/solutions/0067-add-binary/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-76f03e6d").then(a)}},{path:"/bit-manipulation/solutions/0067-add-binary/index.html",redirect:"/bit-manipulation/solutions/0067-add-binary/"},{path:"/bit-manipulation/solutions/0067-add-binary.html",redirect:"/bit-manipulation/solutions/0067-add-binary/"},{name:"v-558e7565",path:"/bit-manipulation/solutions/0136-single-number/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-558e7565").then(a)}},{path:"/bit-manipulation/solutions/0136-single-number/index.html",redirect:"/bit-manipulation/solutions/0136-single-number/"},{path:"/bit-manipulation/solutions/0136-single-number.html",redirect:"/bit-manipulation/solutions/0136-single-number/"},{name:"v-5bf25e5f",path:"/bit-manipulation/solutions/0201-bitwise-and-of-numbers-range/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5bf25e5f").then(a)}},{path:"/bit-manipulation/solutions/0201-bitwise-and-of-numbers-range/index.html",redirect:"/bit-manipulation/solutions/0201-bitwise-and-of-numbers-range/"},{path:"/bit-manipulation/solutions/0201-bitwise-and-of-numbers-range.html",redirect:"/bit-manipulation/solutions/0201-bitwise-and-of-numbers-range/"},{name:"v-61d11f05",path:"/bit-manipulation/solutions/0342-power-of-four/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-61d11f05").then(a)}},{path:"/bit-manipulation/solutions/0342-power-of-four/index.html",redirect:"/bit-manipulation/solutions/0342-power-of-four/"},{path:"/bit-manipulation/solutions/0342-power-of-four.html",redirect:"/bit-manipulation/solutions/0342-power-of-four/"},{name:"v-b4716336",path:"/bit-manipulation/solutions/0442-find-all-duplicates-in-an-array/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-b4716336").then(a)}},{path:"/bit-manipulation/solutions/0442-find-all-duplicates-in-an-array/index.html",redirect:"/bit-manipulation/solutions/0442-find-all-duplicates-in-an-array/"},{path:"/bit-manipulation/solutions/0442-find-all-duplicates-in-an-array.html",redirect:"/bit-manipulation/solutions/0442-find-all-duplicates-in-an-array/"},{name:"v-51c8d8ff",path:"/bit-manipulation/solutions/0421-maximum-xor-of-two-numbers-in-an-array/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-51c8d8ff").then(a)}},{path:"/bit-manipulation/solutions/0421-maximum-xor-of-two-numbers-in-an-array/index.html",redirect:"/bit-manipulation/solutions/0421-maximum-xor-of-two-numbers-in-an-array/"},{path:"/bit-manipulation/solutions/0421-maximum-xor-of-two-numbers-in-an-array.html",redirect:"/bit-manipulation/solutions/0421-maximum-xor-of-two-numbers-in-an-array/"},{name:"v-6e4e9549",path:"/bit-manipulation/solutions/0477-total-hamming-distance/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6e4e9549").then(a)}},{path:"/bit-manipulation/solutions/0477-total-hamming-distance/index.html",redirect:"/bit-manipulation/solutions/0477-total-hamming-distance/"},{path:"/bit-manipulation/solutions/0477-total-hamming-distance.html",redirect:"/bit-manipulation/solutions/0477-total-hamming-distance/"},{name:"v-9bad55f6",path:"/bit-manipulation/solutions/0868-binary-gap/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-9bad55f6").then(a)}},{path:"/bit-manipulation/solutions/0868-binary-gap/index.html",redirect:"/bit-manipulation/solutions/0868-binary-gap/"},{path:"/bit-manipulation/solutions/0868-binary-gap.html",redirect:"/bit-manipulation/solutions/0868-binary-gap/"},{name:"v-0d2d8e76",path:"/bit-manipulation/solutions/1128-number-of-equivalent-domino-pairs/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0d2d8e76").then(a)}},{path:"/bit-manipulation/solutions/1128-number-of-equivalent-domino-pairs/index.html",redirect:"/bit-manipulation/solutions/1128-number-of-equivalent-domino-pairs/"},{path:"/bit-manipulation/solutions/1128-number-of-equivalent-domino-pairs.html",redirect:"/bit-manipulation/solutions/1128-number-of-equivalent-domino-pairs/"},{name:"v-075ddcb6",path:"/bit-manipulation/solutions/1457-pseudo-palindromic-paths-in-a-binary-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-075ddcb6").then(a)}},{path:"/bit-manipulation/solutions/1457-pseudo-palindromic-paths-in-a-binary-tree/index.html",redirect:"/bit-manipulation/solutions/1457-pseudo-palindromic-paths-in-a-binary-tree/"},{path:"/bit-manipulation/solutions/1457-pseudo-palindromic-paths-in-a-binary-tree.html",redirect:"/bit-manipulation/solutions/1457-pseudo-palindromic-paths-in-a-binary-tree/"},{name:"v-badbbe36",path:"/bit-manipulation/solutions/1371-find-the-longest-substring-containing-vowels-in-even-counts/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-badbbe36").then(a)}},{path:"/bit-manipulation/solutions/1371-find-the-longest-substring-containing-vowels-in-even-counts/index.html",redirect:"/bit-manipulation/solutions/1371-find-the-longest-substring-containing-vowels-in-even-counts/"},{path:"/bit-manipulation/solutions/1371-find-the-longest-substring-containing-vowels-in-even-counts.html",redirect:"/bit-manipulation/solutions/1371-find-the-longest-substring-containing-vowels-in-even-counts/"},{name:"v-26f997b6",path:"/bit-manipulation/solutions/56-1-shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-26f997b6").then(a)}},{path:"/bit-manipulation/solutions/56-1-shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof/index.html",redirect:"/bit-manipulation/solutions/56-1-shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof/"},{path:"/bit-manipulation/solutions/56-1-shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof.html",redirect:"/bit-manipulation/solutions/56-1-shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof/"},{name:"v-bd433a34",path:"/breadth-first-search/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-bd433a34").then(a)}},{path:"/breadth-first-search/index.html",redirect:"/breadth-first-search/"},{name:"v-b96c6e36",path:"/breadth-first-search/solutions/0127-word-ladder/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-b96c6e36").then(a)}},{path:"/breadth-first-search/solutions/0127-word-ladder/index.html",redirect:"/breadth-first-search/solutions/0127-word-ladder/"},{path:"/breadth-first-search/solutions/0127-word-ladder.html",redirect:"/breadth-first-search/solutions/0127-word-ladder/"},{name:"v-4c296805",path:"/breadth-first-search/solutions/0200-number-of-islands/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4c296805").then(a)}},{path:"/breadth-first-search/solutions/0200-number-of-islands/index.html",redirect:"/breadth-first-search/solutions/0200-number-of-islands/"},{path:"/breadth-first-search/solutions/0200-number-of-islands.html",redirect:"/breadth-first-search/solutions/0200-number-of-islands/"},{name:"v-066d6876",path:"/breadth-first-search/solutions/0207-course-schedule/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-066d6876").then(a)}},{path:"/breadth-first-search/solutions/0207-course-schedule/index.html",redirect:"/breadth-first-search/solutions/0207-course-schedule/"},{path:"/breadth-first-search/solutions/0207-course-schedule.html",redirect:"/breadth-first-search/solutions/0207-course-schedule/"},{name:"v-598a9dad",path:"/breadth-first-search/solutions/0210-course-schedule-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-598a9dad").then(a)}},{path:"/breadth-first-search/solutions/0210-course-schedule-ii/index.html",redirect:"/breadth-first-search/solutions/0210-course-schedule-ii/"},{path:"/breadth-first-search/solutions/0210-course-schedule-ii.html",redirect:"/breadth-first-search/solutions/0210-course-schedule-ii/"},{name:"v-097014c5",path:"/breadth-first-search/solutions/0279-perfect-squares/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-097014c5").then(a)}},{path:"/breadth-first-search/solutions/0279-perfect-squares/index.html",redirect:"/breadth-first-search/solutions/0279-perfect-squares/"},{path:"/breadth-first-search/solutions/0279-perfect-squares.html",redirect:"/breadth-first-search/solutions/0279-perfect-squares/"},{name:"v-7756224a",path:"/breadth-first-search/solutions/0310-minimum-height-trees/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7756224a").then(a)}},{path:"/breadth-first-search/solutions/0310-minimum-height-trees/index.html",redirect:"/breadth-first-search/solutions/0310-minimum-height-trees/"},{path:"/breadth-first-search/solutions/0310-minimum-height-trees.html",redirect:"/breadth-first-search/solutions/0310-minimum-height-trees/"},{name:"v-2a8019c5",path:"/breadth-first-search/solutions/0365-water-and-jug-problem/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2a8019c5").then(a)}},{path:"/breadth-first-search/solutions/0365-water-and-jug-problem/index.html",redirect:"/breadth-first-search/solutions/0365-water-and-jug-problem/"},{path:"/breadth-first-search/solutions/0365-water-and-jug-problem.html",redirect:"/breadth-first-search/solutions/0365-water-and-jug-problem/"},{name:"v-470a84fa",path:"/breadth-first-search/solutions/0433-minimum-genetic-mutation/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-470a84fa").then(a)}},{path:"/breadth-first-search/solutions/0433-minimum-genetic-mutation/index.html",redirect:"/breadth-first-search/solutions/0433-minimum-genetic-mutation/"},{path:"/breadth-first-search/solutions/0433-minimum-genetic-mutation.html",redirect:"/breadth-first-search/solutions/0433-minimum-genetic-mutation/"},{name:"v-058a1e76",path:"/breadth-first-search/solutions/0542-01-matrix/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-058a1e76").then(a)}},{path:"/breadth-first-search/solutions/0542-01-matrix/index.html",redirect:"/breadth-first-search/solutions/0542-01-matrix/"},{path:"/breadth-first-search/solutions/0542-01-matrix.html",redirect:"/breadth-first-search/solutions/0542-01-matrix/"},{name:"v-57be6a05",path:"/breadth-first-search/solutions/0690-employee-importance/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-57be6a05").then(a)}},{path:"/breadth-first-search/solutions/0690-employee-importance/index.html",redirect:"/breadth-first-search/solutions/0690-employee-importance/"},{path:"/breadth-first-search/solutions/0690-employee-importance.html",redirect:"/breadth-first-search/solutions/0690-employee-importance/"},{name:"v-741e92f6",path:"/breadth-first-search/solutions/0752-open-the-lock/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-741e92f6").then(a)}},{path:"/breadth-first-search/solutions/0752-open-the-lock/index.html",redirect:"/breadth-first-search/solutions/0752-open-the-lock/"},{path:"/breadth-first-search/solutions/0752-open-the-lock.html",redirect:"/breadth-first-search/solutions/0752-open-the-lock/"},{name:"v-0f40a07f",path:"/breadth-first-search/solutions/0773-sliding-puzzle/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0f40a07f").then(a)}},{path:"/breadth-first-search/solutions/0773-sliding-puzzle/index.html",redirect:"/breadth-first-search/solutions/0773-sliding-puzzle/"},{path:"/breadth-first-search/solutions/0773-sliding-puzzle.html",redirect:"/breadth-first-search/solutions/0773-sliding-puzzle/"},{name:"v-2db55da5",path:"/breadth-first-search/solutions/0802-find-eventual-safe-states/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2db55da5").then(a)}},{path:"/breadth-first-search/solutions/0802-find-eventual-safe-states/index.html",redirect:"/breadth-first-search/solutions/0802-find-eventual-safe-states/"},{path:"/breadth-first-search/solutions/0802-find-eventual-safe-states.html",redirect:"/breadth-first-search/solutions/0802-find-eventual-safe-states/"},{name:"v-1e6c3ca5",path:"/breadth-first-search/solutions/0994-rotting-oranges/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1e6c3ca5").then(a)}},{path:"/breadth-first-search/solutions/0994-rotting-oranges/index.html",redirect:"/breadth-first-search/solutions/0994-rotting-oranges/"},{path:"/breadth-first-search/solutions/0994-rotting-oranges.html",redirect:"/breadth-first-search/solutions/0994-rotting-oranges/"},{name:"v-5746cbf3",path:"/breadth-first-search/solutions/1162-as-far-from-land-as-possible/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5746cbf3").then(a)}},{path:"/breadth-first-search/solutions/1162-as-far-from-land-as-possible/index.html",redirect:"/breadth-first-search/solutions/1162-as-far-from-land-as-possible/"},{path:"/breadth-first-search/solutions/1162-as-far-from-land-as-possible.html",redirect:"/breadth-first-search/solutions/1162-as-far-from-land-as-possible/"},{name:"v-7e32e276",path:"/breadth-first-search/solutions/1203-sort-items-by-groups-respecting-dependencies/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7e32e276").then(a)}},{path:"/breadth-first-search/solutions/1203-sort-items-by-groups-respecting-dependencies/index.html",redirect:"/breadth-first-search/solutions/1203-sort-items-by-groups-respecting-dependencies/"},{path:"/breadth-first-search/solutions/1203-sort-items-by-groups-respecting-dependencies.html",redirect:"/breadth-first-search/solutions/1203-sort-items-by-groups-respecting-dependencies/"},{name:"v-3e805425",path:"/breadth-first-search/solutions/1306-jump-game-iii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3e805425").then(a)}},{path:"/breadth-first-search/solutions/1306-jump-game-iii/index.html",redirect:"/breadth-first-search/solutions/1306-jump-game-iii/"},{path:"/breadth-first-search/solutions/1306-jump-game-iii.html",redirect:"/breadth-first-search/solutions/1306-jump-game-iii/"},{name:"v-0867e1f6",path:"/breadth-first-search/solutions/1315-sum-of-nodes-with-even-valued-grandparent/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0867e1f6").then(a)}},{path:"/breadth-first-search/solutions/1315-sum-of-nodes-with-even-valued-grandparent/index.html",redirect:"/breadth-first-search/solutions/1315-sum-of-nodes-with-even-valued-grandparent/"},{path:"/breadth-first-search/solutions/1315-sum-of-nodes-with-even-valued-grandparent.html",redirect:"/breadth-first-search/solutions/1315-sum-of-nodes-with-even-valued-grandparent/"},{name:"v-9bbf3216",path:"/breadth-first-search/solutions/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-9bbf3216").then(a)}},{path:"/breadth-first-search/solutions/intro/index.html",redirect:"/breadth-first-search/solutions/intro/"},{path:"/breadth-first-search/solutions/intro.html",redirect:"/breadth-first-search/solutions/intro/"},{name:"v-538dfb26",path:"/chat/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-538dfb26").then(a)}},{path:"/chat/index.html",redirect:"/chat/"},{name:"v-599d1da7",path:"/chat/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-599d1da7").then(a)}},{path:"/chat/intro/index.html",redirect:"/chat/intro/"},{path:"/chat/intro.html",redirect:"/chat/intro/"},{name:"v-dc604366",path:"/chat/%E4%B8%80%E4%BA%9B%E6%97%A0%E5%A4%84%E5%AE%89%E6%94%BE%E7%9A%84%E9%93%BE%E6%8E%A5/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-dc604366").then(a)}},{path:"/chat/一些无处安放的链接/",redirect:"/chat/%E4%B8%80%E4%BA%9B%E6%97%A0%E5%A4%84%E5%AE%89%E6%94%BE%E7%9A%84%E9%93%BE%E6%8E%A5/"},{path:"/chat/%E4%B8%80%E4%BA%9B%E6%97%A0%E5%A4%84%E5%AE%89%E6%94%BE%E7%9A%84%E9%93%BE%E6%8E%A5/index.html",redirect:"/chat/%E4%B8%80%E4%BA%9B%E6%97%A0%E5%A4%84%E5%AE%89%E6%94%BE%E7%9A%84%E9%93%BE%E6%8E%A5/"},{path:"/chat/一些无处安放的链接.html",redirect:"/chat/%E4%B8%80%E4%BA%9B%E6%97%A0%E5%A4%84%E5%AE%89%E6%94%BE%E7%9A%84%E9%93%BE%E6%8E%A5/"},{name:"v-770626e8",path:"/chat/%E4%BD%A0%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E5%8F%AF%E8%83%BD%E6%B2%A1%E6%9C%89%E7%94%A8/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-770626e8").then(a)}},{path:"/chat/你学习算法可能没有用/",redirect:"/chat/%E4%BD%A0%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E5%8F%AF%E8%83%BD%E6%B2%A1%E6%9C%89%E7%94%A8/"},{path:"/chat/%E4%BD%A0%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E5%8F%AF%E8%83%BD%E6%B2%A1%E6%9C%89%E7%94%A8/index.html",redirect:"/chat/%E4%BD%A0%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E5%8F%AF%E8%83%BD%E6%B2%A1%E6%9C%89%E7%94%A8/"},{path:"/chat/你学习算法可能没有用.html",redirect:"/chat/%E4%BD%A0%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E5%8F%AF%E8%83%BD%E6%B2%A1%E6%9C%89%E7%94%A8/"},{name:"v-6c63cba9",path:"/chat/%E5%85%B3%E4%BA%8E%E6%88%91%E5%9C%A8%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E4%B8%8A%E5%9B%9E%E7%AD%94%E9%97%AE%E9%A2%98%E7%9A%84%E7%82%B9%E7%82%B9%E6%BB%B4%E6%BB%B4/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6c63cba9").then(a)}},{path:"/chat/关于我在「力扣」上回答问题的点点滴滴/",redirect:"/chat/%E5%85%B3%E4%BA%8E%E6%88%91%E5%9C%A8%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E4%B8%8A%E5%9B%9E%E7%AD%94%E9%97%AE%E9%A2%98%E7%9A%84%E7%82%B9%E7%82%B9%E6%BB%B4%E6%BB%B4/"},{path:"/chat/%E5%85%B3%E4%BA%8E%E6%88%91%E5%9C%A8%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E4%B8%8A%E5%9B%9E%E7%AD%94%E9%97%AE%E9%A2%98%E7%9A%84%E7%82%B9%E7%82%B9%E6%BB%B4%E6%BB%B4/index.html",redirect:"/chat/%E5%85%B3%E4%BA%8E%E6%88%91%E5%9C%A8%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E4%B8%8A%E5%9B%9E%E7%AD%94%E9%97%AE%E9%A2%98%E7%9A%84%E7%82%B9%E7%82%B9%E6%BB%B4%E6%BB%B4/"},{path:"/chat/关于我在「力扣」上回答问题的点点滴滴.html",redirect:"/chat/%E5%85%B3%E4%BA%8E%E6%88%91%E5%9C%A8%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E4%B8%8A%E5%9B%9E%E7%AD%94%E9%97%AE%E9%A2%98%E7%9A%84%E7%82%B9%E7%82%B9%E6%BB%B4%E6%BB%B4/"},{name:"v-0e908365",path:"/chat/%E5%89%91%E6%8C%87%20Offer%EF%BC%88%E7%AC%AC%202%20%E7%89%88%EF%BC%89%E4%B8%8E%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E9%97%AE%E9%A2%98%E7%9A%84%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0e908365").then(a)}},{path:"/chat/剑指 Offer（第 2 版）与「力扣」问题的对应关系/",redirect:"/chat/%E5%89%91%E6%8C%87%20Offer%EF%BC%88%E7%AC%AC%202%20%E7%89%88%EF%BC%89%E4%B8%8E%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E9%97%AE%E9%A2%98%E7%9A%84%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB/"},{path:"/chat/%E5%89%91%E6%8C%87%20Offer%EF%BC%88%E7%AC%AC%202%20%E7%89%88%EF%BC%89%E4%B8%8E%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E9%97%AE%E9%A2%98%E7%9A%84%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB/index.html",redirect:"/chat/%E5%89%91%E6%8C%87%20Offer%EF%BC%88%E7%AC%AC%202%20%E7%89%88%EF%BC%89%E4%B8%8E%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E9%97%AE%E9%A2%98%E7%9A%84%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB/"},{path:"/chat/剑指 Offer（第 2 版）与「力扣」问题的对应关系.html",redirect:"/chat/%E5%89%91%E6%8C%87%20Offer%EF%BC%88%E7%AC%AC%202%20%E7%89%88%EF%BC%89%E4%B8%8E%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E9%97%AE%E9%A2%98%E7%9A%84%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB/"},{name:"v-1a2b3877",path:"/chat/%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E6%B2%A1%E6%9C%89%E6%8D%B7%E5%BE%84/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1a2b3877").then(a)}},{path:"/chat/学习算法没有捷径/",redirect:"/chat/%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E6%B2%A1%E6%9C%89%E6%8D%B7%E5%BE%84/"},{path:"/chat/%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E6%B2%A1%E6%9C%89%E6%8D%B7%E5%BE%84/index.html",redirect:"/chat/%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E6%B2%A1%E6%9C%89%E6%8D%B7%E5%BE%84/"},{path:"/chat/学习算法没有捷径.html",redirect:"/chat/%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E6%B2%A1%E6%9C%89%E6%8D%B7%E5%BE%84/"},{name:"v-b07c07fe",path:"/chat/%E6%88%91%E5%AF%B9%E7%AE%97%E6%B3%95%E3%80%8C%E9%A2%98%E3%80%8D%E7%9A%84%E5%81%8F%E8%A7%81/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-b07c07fe").then(a)}},{path:"/chat/我对算法「题」的偏见/",redirect:"/chat/%E6%88%91%E5%AF%B9%E7%AE%97%E6%B3%95%E3%80%8C%E9%A2%98%E3%80%8D%E7%9A%84%E5%81%8F%E8%A7%81/"},{path:"/chat/%E6%88%91%E5%AF%B9%E7%AE%97%E6%B3%95%E3%80%8C%E9%A2%98%E3%80%8D%E7%9A%84%E5%81%8F%E8%A7%81/index.html",redirect:"/chat/%E6%88%91%E5%AF%B9%E7%AE%97%E6%B3%95%E3%80%8C%E9%A2%98%E3%80%8D%E7%9A%84%E5%81%8F%E8%A7%81/"},{path:"/chat/我对算法「题」的偏见.html",redirect:"/chat/%E6%88%91%E5%AF%B9%E7%AE%97%E6%B3%95%E3%80%8C%E9%A2%98%E3%80%8D%E7%9A%84%E5%81%8F%E8%A7%81/"},{name:"v-0b760be8",path:"/chat/%E6%A2%A6%E6%83%B3%E7%A0%B4%E7%A2%8E%E7%9A%842021%E5%B9%B4/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0b760be8").then(a)}},{path:"/chat/梦想破碎的2021年/",redirect:"/chat/%E6%A2%A6%E6%83%B3%E7%A0%B4%E7%A2%8E%E7%9A%842021%E5%B9%B4/"},{path:"/chat/%E6%A2%A6%E6%83%B3%E7%A0%B4%E7%A2%8E%E7%9A%842021%E5%B9%B4/index.html",redirect:"/chat/%E6%A2%A6%E6%83%B3%E7%A0%B4%E7%A2%8E%E7%9A%842021%E5%B9%B4/"},{path:"/chat/梦想破碎的2021年.html",redirect:"/chat/%E6%A2%A6%E6%83%B3%E7%A0%B4%E7%A2%8E%E7%9A%842021%E5%B9%B4/"},{name:"v-039a658b",path:"/chat/%E6%A8%A1%E6%9D%BF%E4%B8%8D%E9%87%8D%E8%A6%81%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-039a658b").then(a)}},{path:"/chat/模板不重要（转载）/",redirect:"/chat/%E6%A8%A1%E6%9D%BF%E4%B8%8D%E9%87%8D%E8%A6%81%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89/"},{path:"/chat/%E6%A8%A1%E6%9D%BF%E4%B8%8D%E9%87%8D%E8%A6%81%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89/index.html",redirect:"/chat/%E6%A8%A1%E6%9D%BF%E4%B8%8D%E9%87%8D%E8%A6%81%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89/"},{path:"/chat/模板不重要（转载）.html",redirect:"/chat/%E6%A8%A1%E6%9D%BF%E4%B8%8D%E9%87%8D%E8%A6%81%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89/"},{name:"v-c11cccce",path:"/chat/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%92%8C%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-c11cccce").then(a)}},{path:"/chat/软件工程师和算法竞赛（转载）/",redirect:"/chat/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%92%8C%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89/"},{path:"/chat/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%92%8C%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89/index.html",redirect:"/chat/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%92%8C%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89/"},{path:"/chat/软件工程师和算法竞赛（转载）.html",redirect:"/chat/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%92%8C%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89/"},{name:"v-5a460e56",path:"/chat/%E8%B0%8B%E7%94%9F%E7%9A%84%E8%B7%AF%E4%B8%8A%E4%B8%8D%E6%8A%9B%E5%BC%83%E8%89%AF%E7%9F%A5/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5a460e56").then(a)}},{path:"/chat/谋生的路上不抛弃良知/",redirect:"/chat/%E8%B0%8B%E7%94%9F%E7%9A%84%E8%B7%AF%E4%B8%8A%E4%B8%8D%E6%8A%9B%E5%BC%83%E8%89%AF%E7%9F%A5/"},{path:"/chat/%E8%B0%8B%E7%94%9F%E7%9A%84%E8%B7%AF%E4%B8%8A%E4%B8%8D%E6%8A%9B%E5%BC%83%E8%89%AF%E7%9F%A5/index.html",redirect:"/chat/%E8%B0%8B%E7%94%9F%E7%9A%84%E8%B7%AF%E4%B8%8A%E4%B8%8D%E6%8A%9B%E5%BC%83%E8%89%AF%E7%9F%A5/"},{path:"/chat/谋生的路上不抛弃良知.html",redirect:"/chat/%E8%B0%8B%E7%94%9F%E7%9A%84%E8%B7%AF%E4%B8%8A%E4%B8%8D%E6%8A%9B%E5%BC%83%E8%89%AF%E7%9F%A5/"},{name:"v-50505c44",path:"/chat/%E9%A2%98%E5%8D%95/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-50505c44").then(a)}},{path:"/chat/题单/",redirect:"/chat/%E9%A2%98%E5%8D%95/"},{path:"/chat/%E9%A2%98%E5%8D%95/index.html",redirect:"/chat/%E9%A2%98%E5%8D%95/"},{path:"/chat/题单.html",redirect:"/chat/%E9%A2%98%E5%8D%95/"},{name:"v-46e7f6f6",path:"/chat/%E9%AB%98%E7%BA%A7%E7%A8%8B%E5%BA%8F%E5%91%98%E4%B8%8D%E6%98%AF%E8%BF%BD%E6%B1%82%E7%9A%84%E7%9B%AE%E6%A0%87%EF%BC%88%E9%9B%B7%E5%86%9B%EF%BC%89/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-46e7f6f6").then(a)}},{path:"/chat/高级程序员不是追求的目标（雷军）/",redirect:"/chat/%E9%AB%98%E7%BA%A7%E7%A8%8B%E5%BA%8F%E5%91%98%E4%B8%8D%E6%98%AF%E8%BF%BD%E6%B1%82%E7%9A%84%E7%9B%AE%E6%A0%87%EF%BC%88%E9%9B%B7%E5%86%9B%EF%BC%89/"},{path:"/chat/%E9%AB%98%E7%BA%A7%E7%A8%8B%E5%BA%8F%E5%91%98%E4%B8%8D%E6%98%AF%E8%BF%BD%E6%B1%82%E7%9A%84%E7%9B%AE%E6%A0%87%EF%BC%88%E9%9B%B7%E5%86%9B%EF%BC%89/index.html",redirect:"/chat/%E9%AB%98%E7%BA%A7%E7%A8%8B%E5%BA%8F%E5%91%98%E4%B8%8D%E6%98%AF%E8%BF%BD%E6%B1%82%E7%9A%84%E7%9B%AE%E6%A0%87%EF%BC%88%E9%9B%B7%E5%86%9B%EF%BC%89/"},{path:"/chat/高级程序员不是追求的目标（雷军）.html",redirect:"/chat/%E9%AB%98%E7%BA%A7%E7%A8%8B%E5%BA%8F%E5%91%98%E4%B8%8D%E6%98%AF%E8%BF%BD%E6%B1%82%E7%9A%84%E7%9B%AE%E6%A0%87%EF%BC%88%E9%9B%B7%E5%86%9B%EF%BC%89/"},{name:"v-356e54c6",path:"/choice/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-356e54c6").then(a)}},{path:"/choice/index.html",redirect:"/choice/"},{name:"v-ddfed96a",path:"/choice/binary-search/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-ddfed96a").then(a)}},{path:"/choice/binary-search/intro/index.html",redirect:"/choice/binary-search/intro/"},{path:"/choice/binary-search/intro.html",redirect:"/choice/binary-search/intro/"},{name:"v-753c3d65",path:"/choice/tree/0236-lowest-common-ancestor-of-a-binary-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-753c3d65").then(a)}},{path:"/choice/tree/0236-lowest-common-ancestor-of-a-binary-tree/index.html",redirect:"/choice/tree/0236-lowest-common-ancestor-of-a-binary-tree/"},{path:"/choice/tree/0236-lowest-common-ancestor-of-a-binary-tree.html",redirect:"/choice/tree/0236-lowest-common-ancestor-of-a-binary-tree/"},{name:"v-087d3ca5",path:"/choice/tree/0993-cousins-in-binary-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-087d3ca5").then(a)}},{path:"/choice/tree/0993-cousins-in-binary-tree/index.html",redirect:"/choice/tree/0993-cousins-in-binary-tree/"},{path:"/choice/tree/0993-cousins-in-binary-tree.html",redirect:"/choice/tree/0993-cousins-in-binary-tree/"},{name:"v-0d2a3409",path:"/data-structure-advance/fenwick-tree/01/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0d2a3409").then(a)}},{path:"/data-structure-advance/fenwick-tree/01/index.html",redirect:"/data-structure-advance/fenwick-tree/01/"},{path:"/data-structure-advance/fenwick-tree/01.html",redirect:"/data-structure-advance/fenwick-tree/01/"},{name:"v-48a9ae87",path:"/data-structure-advance/fenwick-tree/02/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-48a9ae87").then(a)}},{path:"/data-structure-advance/fenwick-tree/02/index.html",redirect:"/data-structure-advance/fenwick-tree/02/"},{path:"/data-structure-advance/fenwick-tree/02.html",redirect:"/data-structure-advance/fenwick-tree/02/"},{name:"v-f7adadf6",path:"/data-structure-advance/fenwick-tree/03/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-f7adadf6").then(a)}},{path:"/data-structure-advance/fenwick-tree/03/index.html",redirect:"/data-structure-advance/fenwick-tree/03/"},{path:"/data-structure-advance/fenwick-tree/03.html",redirect:"/data-structure-advance/fenwick-tree/03/"},{name:"v-80aeb8fa",path:"/data-structure-advance/fenwick-tree/04/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-80aeb8fa").then(a)}},{path:"/data-structure-advance/fenwick-tree/04/index.html",redirect:"/data-structure-advance/fenwick-tree/04/"},{path:"/data-structure-advance/fenwick-tree/04.html",redirect:"/data-structure-advance/fenwick-tree/04/"},{name:"v-09afc3fe",path:"/data-structure-advance/fenwick-tree/05/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-09afc3fe").then(a)}},{path:"/data-structure-advance/fenwick-tree/05/index.html",redirect:"/data-structure-advance/fenwick-tree/05/"},{path:"/data-structure-advance/fenwick-tree/05.html",redirect:"/data-structure-advance/fenwick-tree/05/"},{name:"v-722712fd",path:"/data-structure-advance/fenwick-tree/07/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-722712fd").then(a)}},{path:"/data-structure-advance/fenwick-tree/07/index.html",redirect:"/data-structure-advance/fenwick-tree/07/"},{path:"/data-structure-advance/fenwick-tree/07.html",redirect:"/data-structure-advance/fenwick-tree/07/"},{name:"v-36a7987f",path:"/data-structure-advance/fenwick-tree/06/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-36a7987f").then(a)}},{path:"/data-structure-advance/fenwick-tree/06/index.html",redirect:"/data-structure-advance/fenwick-tree/06/"},{path:"/data-structure-advance/fenwick-tree/06.html",redirect:"/data-structure-advance/fenwick-tree/06/"},{name:"v-1fc74288",path:"/data-structure-advance/fenwick-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1fc74288").then(a)}},{path:"/data-structure-advance/fenwick-tree/index.html",redirect:"/data-structure-advance/fenwick-tree/"},{name:"v-89870f96",path:"/data-structure-advance/segment-tree/01/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-89870f96").then(a)}},{path:"/data-structure-advance/segment-tree/01/index.html",redirect:"/data-structure-advance/segment-tree/01/"},{path:"/data-structure-advance/segment-tree/01.html",redirect:"/data-structure-advance/segment-tree/01/"},{name:"v-12881a9a",path:"/data-structure-advance/segment-tree/02/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-12881a9a").then(a)}},{path:"/data-structure-advance/segment-tree/02/index.html",redirect:"/data-structure-advance/segment-tree/02/"},{path:"/data-structure-advance/segment-tree/02.html",redirect:"/data-structure-advance/segment-tree/02/"},{name:"v-323b6d31",path:"/data-structure-advance/segment-tree/03/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-323b6d31").then(a)}},{path:"/data-structure-advance/segment-tree/03/index.html",redirect:"/data-structure-advance/segment-tree/03/"},{path:"/data-structure-advance/segment-tree/03.html",redirect:"/data-structure-advance/segment-tree/03/"},{name:"v-ee47900e",path:"/data-structure-advance/trie/01/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-ee47900e").then(a)}},{path:"/data-structure-advance/trie/01/index.html",redirect:"/data-structure-advance/trie/01/"},{path:"/data-structure-advance/trie/01.html",redirect:"/data-structure-advance/trie/01/"},{name:"v-10bac8f6",path:"/data-structure-advance/segment-tree/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-10bac8f6").then(a)}},{path:"/data-structure-advance/segment-tree/intro/index.html",redirect:"/data-structure-advance/segment-tree/intro/"},{path:"/data-structure-advance/segment-tree/intro.html",redirect:"/data-structure-advance/segment-tree/intro/"},{name:"v-3ca1fd12",path:"/data-structure-advance/trie/02/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3ca1fd12").then(a)}},{path:"/data-structure-advance/trie/02/index.html",redirect:"/data-structure-advance/trie/02/"},{path:"/data-structure-advance/trie/02.html",redirect:"/data-structure-advance/trie/02/"},{name:"v-3a81caf5",path:"/data-structure-advance/trie/03/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3a81caf5").then(a)}},{path:"/data-structure-advance/trie/03/index.html",redirect:"/data-structure-advance/trie/03/"},{path:"/data-structure-advance/trie/03.html",redirect:"/data-structure-advance/trie/03/"},{name:"v-d956d71a",path:"/data-structure-advance/trie/04/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-d956d71a").then(a)}},{path:"/data-structure-advance/trie/04/index.html",redirect:"/data-structure-advance/trie/04/"},{path:"/data-structure-advance/trie/04.html",redirect:"/data-structure-advance/trie/04/"},{name:"v-27b1441e",path:"/data-structure-advance/trie/05/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-27b1441e").then(a)}},{path:"/data-structure-advance/trie/05/index.html",redirect:"/data-structure-advance/trie/05/"},{path:"/data-structure-advance/trie/05.html",redirect:"/data-structure-advance/trie/05/"},{name:"v-04c98825",path:"/data-structure-advance/union-find/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-04c98825").then(a)}},{path:"/data-structure-advance/union-find/intro/index.html",redirect:"/data-structure-advance/union-find/intro/"},{path:"/data-structure-advance/union-find/intro.html",redirect:"/data-structure-advance/union-find/intro/"},{name:"v-42463f2a",path:"/data-structure-basic/binary-search-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-42463f2a").then(a)}},{path:"/data-structure-basic/binary-search-tree/index.html",redirect:"/data-structure-basic/binary-search-tree/"},{name:"v-384ad102",path:"/data-structure-advance/union-find/practice/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-384ad102").then(a)}},{path:"/data-structure-advance/union-find/practice/index.html",redirect:"/data-structure-advance/union-find/practice/"},{path:"/data-structure-advance/union-find/practice.html",redirect:"/data-structure-advance/union-find/practice/"},{name:"v-4128a0a5",path:"/data-structure-basic/binary-search-tree/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4128a0a5").then(a)}},{path:"/data-structure-basic/binary-search-tree/intro/index.html",redirect:"/data-structure-basic/binary-search-tree/intro/"},{path:"/data-structure-basic/binary-search-tree/intro.html",redirect:"/data-structure-basic/binary-search-tree/intro/"},{name:"v-739759a5",path:"/data-structure-basic/hash-table/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-739759a5").then(a)}},{path:"/data-structure-basic/hash-table/intro/index.html",redirect:"/data-structure-basic/hash-table/intro/"},{path:"/data-structure-basic/hash-table/intro.html",redirect:"/data-structure-basic/hash-table/intro/"},{name:"v-51e9c23a",path:"/data-structure-basic/hash-table/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-51e9c23a").then(a)}},{path:"/data-structure-basic/hash-table/index.html",redirect:"/data-structure-basic/hash-table/"},{name:"v-42f76c97",path:"/data-structure-basic/hash-table/practice/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-42f76c97").then(a)}},{path:"/data-structure-basic/hash-table/practice/index.html",redirect:"/data-structure-basic/hash-table/practice/"},{path:"/data-structure-basic/hash-table/practice.html",redirect:"/data-structure-basic/hash-table/practice/"},{name:"v-4a339040",path:"/data-structure-basic/heap/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4a339040").then(a)}},{path:"/data-structure-basic/heap/index.html",redirect:"/data-structure-basic/heap/"},{name:"v-6dbae7af",path:"/data-structure-advance/segment-tree/04/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6dbae7af").then(a)}},{path:"/data-structure-advance/segment-tree/04/index.html",redirect:"/data-structure-advance/segment-tree/04/"},{path:"/data-structure-advance/segment-tree/04.html",redirect:"/data-structure-advance/segment-tree/04/"},{name:"v-613becc5",path:"/data-structure-basic/heap/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-613becc5").then(a)}},{path:"/data-structure-basic/heap/intro/index.html",redirect:"/data-structure-basic/heap/intro/"},{path:"/data-structure-basic/heap/intro.html",redirect:"/data-structure-basic/heap/intro/"},{name:"v-57ec3f51",path:"/data-structure-basic/heap/practice/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-57ec3f51").then(a)}},{path:"/data-structure-basic/heap/practice/index.html",redirect:"/data-structure-basic/heap/practice/"},{path:"/data-structure-basic/heap/practice.html",redirect:"/data-structure-basic/heap/practice/"},{name:"v-5254db53",path:"/binary-search/04/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5254db53").then(a)}},{path:"/binary-search/04/index.html",redirect:"/binary-search/04/"},{path:"/binary-search/04.html",redirect:"/binary-search/04/"},{name:"v-7253af26",path:"/data-structure-basic/linked-list/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7253af26").then(a)}},{path:"/data-structure-basic/linked-list/index.html",redirect:"/data-structure-basic/linked-list/"},{name:"v-e34eb3b6",path:"/data-structure-basic/linked-list/practice/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-e34eb3b6").then(a)}},{path:"/data-structure-basic/linked-list/practice/index.html",redirect:"/data-structure-basic/linked-list/practice/"},{path:"/data-structure-basic/linked-list/practice.html",redirect:"/data-structure-basic/linked-list/practice/"},{name:"v-57420f38",path:"/data-structure-basic/prefix-sum/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-57420f38").then(a)}},{path:"/data-structure-basic/prefix-sum/index.html",redirect:"/data-structure-basic/prefix-sum/"},{name:"v-3f73a885",path:"/data-structure-basic/prefix-sum/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3f73a885").then(a)}},{path:"/data-structure-basic/prefix-sum/intro/index.html",redirect:"/data-structure-basic/prefix-sum/intro/"},{path:"/data-structure-basic/prefix-sum/intro.html",redirect:"/data-structure-basic/prefix-sum/intro/"},{name:"v-1119beef",path:"/data-structure-basic/linked-list/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1119beef").then(a)}},{path:"/data-structure-basic/linked-list/intro/index.html",redirect:"/data-structure-basic/linked-list/intro/"},{path:"/data-structure-basic/linked-list/intro.html",redirect:"/data-structure-basic/linked-list/intro/"},{name:"v-a3ce5af4",path:"/data-structure-basic/queue/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a3ce5af4").then(a)}},{path:"/data-structure-basic/queue/index.html",redirect:"/data-structure-basic/queue/"},{name:"v-2f140f76",path:"/data-structure-basic/queue/practice/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2f140f76").then(a)}},{path:"/data-structure-basic/queue/practice/index.html",redirect:"/data-structure-basic/queue/practice/"},{path:"/data-structure-basic/queue/practice.html",redirect:"/data-structure-basic/queue/practice/"},{name:"v-1e0e94f1",path:"/data-structure-basic/queue/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1e0e94f1").then(a)}},{path:"/data-structure-basic/queue/intro/index.html",redirect:"/data-structure-basic/queue/intro/"},{path:"/data-structure-basic/queue/intro.html",redirect:"/data-structure-basic/queue/intro/"},{name:"v-500b9fb4",path:"/data-structure-basic/stack/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-500b9fb4").then(a)}},{path:"/data-structure-basic/stack/index.html",redirect:"/data-structure-basic/stack/"},{name:"v-1d65a0c3",path:"/data-structure-basic/stack/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1d65a0c3").then(a)}},{path:"/data-structure-basic/stack/intro/index.html",redirect:"/data-structure-basic/stack/intro/"},{path:"/data-structure-basic/stack/intro.html",redirect:"/data-structure-basic/stack/intro/"},{name:"v-5f981865",path:"/data-structure-basic/stack/practice/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5f981865").then(a)}},{path:"/data-structure-basic/stack/practice/index.html",redirect:"/data-structure-basic/stack/practice/"},{path:"/data-structure-basic/stack/practice.html",redirect:"/data-structure-basic/stack/practice/"},{name:"v-4461025c",path:"/data-structure-basic/tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4461025c").then(a)}},{path:"/data-structure-basic/tree/index.html",redirect:"/data-structure-basic/tree/"},{name:"v-c3e4bbf6",path:"/data-structure-basic/tree/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-c3e4bbf6").then(a)}},{path:"/data-structure-basic/tree/intro/index.html",redirect:"/data-structure-basic/tree/intro/"},{path:"/data-structure-basic/tree/intro.html",redirect:"/data-structure-basic/tree/intro/"},{name:"v-600cd396",path:"/data-structure-basic/tree/practice/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-600cd396").then(a)}},{path:"/data-structure-basic/tree/practice/index.html",redirect:"/data-structure-basic/tree/practice/"},{path:"/data-structure-basic/tree/practice.html",redirect:"/data-structure-basic/tree/practice/"},{name:"v-05cf5f74",path:"/difference/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-05cf5f74").then(a)}},{path:"/difference/index.html",redirect:"/difference/"},{name:"v-6213a2c5",path:"/difference/1109-corporate-flight-bookings/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6213a2c5").then(a)}},{path:"/difference/1109-corporate-flight-bookings/index.html",redirect:"/difference/1109-corporate-flight-bookings/"},{path:"/difference/1109-corporate-flight-bookings.html",redirect:"/difference/1109-corporate-flight-bookings/"},{name:"v-5c83ab87",path:"/dynamic-programming/01/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5c83ab87").then(a)}},{path:"/dynamic-programming/01/index.html",redirect:"/dynamic-programming/01/"},{path:"/dynamic-programming/01.html",redirect:"/dynamic-programming/01/"},{name:"v-332e77f6",path:"/dynamic-programming/02/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-332e77f6").then(a)}},{path:"/dynamic-programming/02/index.html",redirect:"/dynamic-programming/02/"},{path:"/dynamic-programming/02.html",redirect:"/dynamic-programming/02/"},{name:"v-704ddc83",path:"/dynamic-programming/03/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-704ddc83").then(a)}},{path:"/dynamic-programming/03/index.html",redirect:"/dynamic-programming/03/"},{path:"/dynamic-programming/03.html",redirect:"/dynamic-programming/03/"},{name:"v-0b9a15fe",path:"/dynamic-programming/04/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0b9a15fe").then(a)}},{path:"/dynamic-programming/04/index.html",redirect:"/dynamic-programming/04/"},{path:"/dynamic-programming/04.html",redirect:"/dynamic-programming/04/"},{name:"v-f7cfe502",path:"/dynamic-programming/05/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-f7cfe502").then(a)}},{path:"/dynamic-programming/05/index.html",redirect:"/dynamic-programming/05/"},{path:"/dynamic-programming/05.html",redirect:"/dynamic-programming/05/"},{name:"v-d03b830a",path:"/dynamic-programming/07/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-d03b830a").then(a)}},{path:"/dynamic-programming/07/index.html",redirect:"/dynamic-programming/07/"},{path:"/dynamic-programming/07.html",redirect:"/dynamic-programming/07/"},{name:"v-0dfd25fd",path:"/dynamic-programming/06/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0dfd25fd").then(a)}},{path:"/dynamic-programming/06/index.html",redirect:"/dynamic-programming/06/"},{path:"/dynamic-programming/06.html",redirect:"/dynamic-programming/06/"},{name:"v-21c756f9",path:"/dynamic-programming/08/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-21c756f9").then(a)}},{path:"/dynamic-programming/08/index.html",redirect:"/dynamic-programming/08/"},{path:"/dynamic-programming/08.html",redirect:"/dynamic-programming/08/"},{name:"v-a8a72112",path:"/dynamic-programming/09/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a8a72112").then(a)}},{path:"/dynamic-programming/09/index.html",redirect:"/dynamic-programming/09/"},{path:"/dynamic-programming/09.html",redirect:"/dynamic-programming/09/"},{name:"v-c954eb04",path:"/dynamic-programming/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-c954eb04").then(a)}},{path:"/dynamic-programming/index.html",redirect:"/dynamic-programming/"},{name:"v-d87bc53e",path:"/dynamic-programming/solutions/0005-longest-palindromic-substring/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-d87bc53e").then(a)}},{path:"/dynamic-programming/solutions/0005-longest-palindromic-substring/index.html",redirect:"/dynamic-programming/solutions/0005-longest-palindromic-substring/"},{path:"/dynamic-programming/solutions/0005-longest-palindromic-substring.html",redirect:"/dynamic-programming/solutions/0005-longest-palindromic-substring/"},{name:"v-12e9780e",path:"/dynamic-programming/solutions/0010-regular-expression-matching/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-12e9780e").then(a)}},{path:"/dynamic-programming/solutions/0010-regular-expression-matching/index.html",redirect:"/dynamic-programming/solutions/0010-regular-expression-matching/"},{path:"/dynamic-programming/solutions/0010-regular-expression-matching.html",redirect:"/dynamic-programming/solutions/0010-regular-expression-matching/"},{name:"v-1a80215b",path:"/dynamic-programming/solutions/0046/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1a80215b").then(a)}},{path:"/dynamic-programming/solutions/0046/index.html",redirect:"/dynamic-programming/solutions/0046/"},{path:"/dynamic-programming/solutions/0046.html",redirect:"/dynamic-programming/solutions/0046/"},{name:"v-67b200b6",path:"/dynamic-programming/solutions/0062-unique-paths/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-67b200b6").then(a)}},{path:"/dynamic-programming/solutions/0062-unique-paths/index.html",redirect:"/dynamic-programming/solutions/0062-unique-paths/"},{path:"/dynamic-programming/solutions/0062-unique-paths.html",redirect:"/dynamic-programming/solutions/0062-unique-paths/"},{name:"v-5defb7e5",path:"/dynamic-programming/solutions/0053-maximum-subarray/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5defb7e5").then(a)}},{path:"/dynamic-programming/solutions/0053-maximum-subarray/index.html",redirect:"/dynamic-programming/solutions/0053-maximum-subarray/"},{path:"/dynamic-programming/solutions/0053-maximum-subarray.html",redirect:"/dynamic-programming/solutions/0053-maximum-subarray/"},{name:"v-465d6cc9",path:"/dynamic-programming/solutions/0063-unique-paths-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-465d6cc9").then(a)}},{path:"/dynamic-programming/solutions/0063-unique-paths-ii/index.html",redirect:"/dynamic-programming/solutions/0063-unique-paths-ii/"},{path:"/dynamic-programming/solutions/0063-unique-paths-ii.html",redirect:"/dynamic-programming/solutions/0063-unique-paths-ii/"},{name:"v-1f4cdb65",path:"/dynamic-programming/solutions/0064-minimum-path-sum/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1f4cdb65").then(a)}},{path:"/dynamic-programming/solutions/0064-minimum-path-sum/index.html",redirect:"/dynamic-programming/solutions/0064-minimum-path-sum/"},{path:"/dynamic-programming/solutions/0064-minimum-path-sum.html",redirect:"/dynamic-programming/solutions/0064-minimum-path-sum/"},{name:"v-3be3c79a",path:"/dynamic-programming/solutions/0070-climbing-stairs/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3be3c79a").then(a)}},{path:"/dynamic-programming/solutions/0070-climbing-stairs/index.html",redirect:"/dynamic-programming/solutions/0070-climbing-stairs/"},{path:"/dynamic-programming/solutions/0070-climbing-stairs.html",redirect:"/dynamic-programming/solutions/0070-climbing-stairs/"},{name:"v-731f18d3",path:"/dynamic-programming/solutions/0072-edit-distance/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-731f18d3").then(a)}},{path:"/dynamic-programming/solutions/0072-edit-distance/index.html",redirect:"/dynamic-programming/solutions/0072-edit-distance/"},{path:"/dynamic-programming/solutions/0072-edit-distance.html",redirect:"/dynamic-programming/solutions/0072-edit-distance/"},{name:"v-3ae678fa",path:"/dynamic-programming/solutions/0091-decode-ways/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3ae678fa").then(a)}},{path:"/dynamic-programming/solutions/0091-decode-ways/index.html",redirect:"/dynamic-programming/solutions/0091-decode-ways/"},{path:"/dynamic-programming/solutions/0091-decode-ways.html",redirect:"/dynamic-programming/solutions/0091-decode-ways/"},{name:"v-1bc59805",path:"/dynamic-programming/solutions/0096-unique-binary-search-trees/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1bc59805").then(a)}},{path:"/dynamic-programming/solutions/0096-unique-binary-search-trees/index.html",redirect:"/dynamic-programming/solutions/0096-unique-binary-search-trees/"},{path:"/dynamic-programming/solutions/0096-unique-binary-search-trees.html",redirect:"/dynamic-programming/solutions/0096-unique-binary-search-trees/"},{name:"v-78e5c005",path:"/dynamic-programming/solutions/0120-triangle/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-78e5c005").then(a)}},{path:"/dynamic-programming/solutions/0120-triangle/index.html",redirect:"/dynamic-programming/solutions/0120-triangle/"},{path:"/dynamic-programming/solutions/0120-triangle.html",redirect:"/dynamic-programming/solutions/0120-triangle/"},{name:"v-34646645",path:"/dynamic-programming/solutions/0122-best-time-to-buy-and-sell-stock-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-34646645").then(a)}},{path:"/dynamic-programming/solutions/0122-best-time-to-buy-and-sell-stock-ii/index.html",redirect:"/dynamic-programming/solutions/0122-best-time-to-buy-and-sell-stock-ii/"},{path:"/dynamic-programming/solutions/0122-best-time-to-buy-and-sell-stock-ii.html",redirect:"/dynamic-programming/solutions/0122-best-time-to-buy-and-sell-stock-ii/"},{name:"v-7d82fb5a",path:"/dynamic-programming/solutions/0121-best-time-to-buy-and-sell-stock/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7d82fb5a").then(a)}},{path:"/dynamic-programming/solutions/0121-best-time-to-buy-and-sell-stock/index.html",redirect:"/dynamic-programming/solutions/0121-best-time-to-buy-and-sell-stock/"},{path:"/dynamic-programming/solutions/0121-best-time-to-buy-and-sell-stock.html",redirect:"/dynamic-programming/solutions/0121-best-time-to-buy-and-sell-stock/"},{name:"v-39634e52",path:"/dynamic-programming/solutions/0123-best-time-to-buy-and-sell-stock-iii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-39634e52").then(a)}},{path:"/dynamic-programming/solutions/0123-best-time-to-buy-and-sell-stock-iii/index.html",redirect:"/dynamic-programming/solutions/0123-best-time-to-buy-and-sell-stock-iii/"},{path:"/dynamic-programming/solutions/0123-best-time-to-buy-and-sell-stock-iii.html",redirect:"/dynamic-programming/solutions/0123-best-time-to-buy-and-sell-stock-iii/"},{name:"v-1aeb0de5",path:"/dynamic-programming/solutions/0124-binary-tree-maximum-path-sum/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1aeb0de5").then(a)}},{path:"/dynamic-programming/solutions/0124-binary-tree-maximum-path-sum/index.html",redirect:"/dynamic-programming/solutions/0124-binary-tree-maximum-path-sum/"},{path:"/dynamic-programming/solutions/0124-binary-tree-maximum-path-sum.html",redirect:"/dynamic-programming/solutions/0124-binary-tree-maximum-path-sum/"},{name:"v-01463076",path:"/dynamic-programming/solutions/0139-word-break/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-01463076").then(a)}},{path:"/dynamic-programming/solutions/0139-word-break/index.html",redirect:"/dynamic-programming/solutions/0139-word-break/"},{path:"/dynamic-programming/solutions/0139-word-break.html",redirect:"/dynamic-programming/solutions/0139-word-break/"},{name:"v-41f86cb6",path:"/dynamic-programming/solutions/0152-maximum-product-subarray/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-41f86cb6").then(a)}},{path:"/dynamic-programming/solutions/0152-maximum-product-subarray/index.html",redirect:"/dynamic-programming/solutions/0152-maximum-product-subarray/"},{path:"/dynamic-programming/solutions/0152-maximum-product-subarray.html",redirect:"/dynamic-programming/solutions/0152-maximum-product-subarray/"},{name:"v-42ac88b6",path:"/dynamic-programming/solutions/0188-best-time-to-buy-and-sell-stock-iv/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-42ac88b6").then(a)}},{path:"/dynamic-programming/solutions/0188-best-time-to-buy-and-sell-stock-iv/index.html",redirect:"/dynamic-programming/solutions/0188-best-time-to-buy-and-sell-stock-iv/"},{path:"/dynamic-programming/solutions/0188-best-time-to-buy-and-sell-stock-iv.html",redirect:"/dynamic-programming/solutions/0188-best-time-to-buy-and-sell-stock-iv/"},{name:"v-7bae3d45",path:"/dynamic-programming/solutions/0198-house-robber/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7bae3d45").then(a)}},{path:"/dynamic-programming/solutions/0198-house-robber/index.html",redirect:"/dynamic-programming/solutions/0198-house-robber/"},{path:"/dynamic-programming/solutions/0198-house-robber.html",redirect:"/dynamic-programming/solutions/0198-house-robber/"},{name:"v-29d015a5",path:"/dynamic-programming/solutions/0221-maximal-square/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-29d015a5").then(a)}},{path:"/dynamic-programming/solutions/0221-maximal-square/index.html",redirect:"/dynamic-programming/solutions/0221-maximal-square/"},{path:"/dynamic-programming/solutions/0221-maximal-square.html",redirect:"/dynamic-programming/solutions/0221-maximal-square/"},{name:"v-c2e1f8e6",path:"/dynamic-programming/solutions/0233-number-of-digit-one/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-c2e1f8e6").then(a)}},{path:"/dynamic-programming/solutions/0233-number-of-digit-one/index.html",redirect:"/dynamic-programming/solutions/0233-number-of-digit-one/"},{path:"/dynamic-programming/solutions/0233-number-of-digit-one.html",redirect:"/dynamic-programming/solutions/0233-number-of-digit-one/"},{name:"v-3c356305",path:"/dynamic-programming/solutions/0238-product-of-array-except-self/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3c356305").then(a)}},{path:"/dynamic-programming/solutions/0238-product-of-array-except-self/index.html",redirect:"/dynamic-programming/solutions/0238-product-of-array-except-self/"},{path:"/dynamic-programming/solutions/0238-product-of-array-except-self.html",redirect:"/dynamic-programming/solutions/0238-product-of-array-except-self/"},{name:"v-6b6bd0c5",path:"/dynamic-programming/solutions/0279-perfect-squares/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6b6bd0c5").then(a)}},{path:"/dynamic-programming/solutions/0279-perfect-squares/index.html",redirect:"/dynamic-programming/solutions/0279-perfect-squares/"},{path:"/dynamic-programming/solutions/0279-perfect-squares.html",redirect:"/dynamic-programming/solutions/0279-perfect-squares/"},{name:"v-78f1cf25",path:"/dynamic-programming/solutions/0292-nim-game/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-78f1cf25").then(a)}},{path:"/dynamic-programming/solutions/0292-nim-game/index.html",redirect:"/dynamic-programming/solutions/0292-nim-game/"},{path:"/dynamic-programming/solutions/0292-nim-game.html",redirect:"/dynamic-programming/solutions/0292-nim-game/"},{name:"v-5b91a785",path:"/dynamic-programming/solutions/0300-longest-increasing-subsequence/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5b91a785").then(a)}},{path:"/dynamic-programming/solutions/0300-longest-increasing-subsequence/index.html",redirect:"/dynamic-programming/solutions/0300-longest-increasing-subsequence/"},{path:"/dynamic-programming/solutions/0300-longest-increasing-subsequence.html",redirect:"/dynamic-programming/solutions/0300-longest-increasing-subsequence/"},{name:"v-816a889e",path:"/dynamic-programming/solutions/0309-best-time-to-buy-and-sell-stock-with-cooldown/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-816a889e").then(a)}},{path:"/dynamic-programming/solutions/0309-best-time-to-buy-and-sell-stock-with-cooldown/index.html",redirect:"/dynamic-programming/solutions/0309-best-time-to-buy-and-sell-stock-with-cooldown/"},{path:"/dynamic-programming/solutions/0309-best-time-to-buy-and-sell-stock-with-cooldown.html",redirect:"/dynamic-programming/solutions/0309-best-time-to-buy-and-sell-stock-with-cooldown/"},{name:"v-a88b2f36",path:"/dynamic-programming/solutions/0337-house-robber-iii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a88b2f36").then(a)}},{path:"/dynamic-programming/solutions/0337-house-robber-iii/index.html",redirect:"/dynamic-programming/solutions/0337-house-robber-iii/"},{path:"/dynamic-programming/solutions/0337-house-robber-iii.html",redirect:"/dynamic-programming/solutions/0337-house-robber-iii/"},{name:"v-57e8509b",path:"/dynamic-programming/solutions/0322-coin-change/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-57e8509b").then(a)}},{path:"/dynamic-programming/solutions/0322-coin-change/index.html",redirect:"/dynamic-programming/solutions/0322-coin-change/"},{path:"/dynamic-programming/solutions/0322-coin-change.html",redirect:"/dynamic-programming/solutions/0322-coin-change/"},{name:"v-fa3545d6",path:"/dynamic-programming/solutions/0343-integer-break/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-fa3545d6").then(a)}},{path:"/dynamic-programming/solutions/0343-integer-break/index.html",redirect:"/dynamic-programming/solutions/0343-integer-break/"},{path:"/dynamic-programming/solutions/0343-integer-break.html",redirect:"/dynamic-programming/solutions/0343-integer-break/"},{name:"v-cb5092b6",path:"/dynamic-programming/solutions/0368-largest-divisible-subset/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-cb5092b6").then(a)}},{path:"/dynamic-programming/solutions/0368-largest-divisible-subset/index.html",redirect:"/dynamic-programming/solutions/0368-largest-divisible-subset/"},{path:"/dynamic-programming/solutions/0368-largest-divisible-subset.html",redirect:"/dynamic-programming/solutions/0368-largest-divisible-subset/"},{name:"v-4f4da7c5",path:"/dynamic-programming/solutions/0376-wiggle-subsequence/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4f4da7c5").then(a)}},{path:"/dynamic-programming/solutions/0376-wiggle-subsequence/index.html",redirect:"/dynamic-programming/solutions/0376-wiggle-subsequence/"},{path:"/dynamic-programming/solutions/0376-wiggle-subsequence.html",redirect:"/dynamic-programming/solutions/0376-wiggle-subsequence/"},{name:"v-b4cae9b6",path:"/dynamic-programming/solutions/0377-combination-sum-iv/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-b4cae9b6").then(a)}},{path:"/dynamic-programming/solutions/0377-combination-sum-iv/index.html",redirect:"/dynamic-programming/solutions/0377-combination-sum-iv/"},{path:"/dynamic-programming/solutions/0377-combination-sum-iv.html",redirect:"/dynamic-programming/solutions/0377-combination-sum-iv/"},{name:"v-9a89b336",path:"/dynamic-programming/solutions/0413-arithmetic-slices/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-9a89b336").then(a)}},{path:"/dynamic-programming/solutions/0413-arithmetic-slices/index.html",redirect:"/dynamic-programming/solutions/0413-arithmetic-slices/"},{path:"/dynamic-programming/solutions/0413-arithmetic-slices.html",redirect:"/dynamic-programming/solutions/0413-arithmetic-slices/"},{name:"v-02bc83f6",path:"/dynamic-programming/solutions/0416-partition-equal-subset-sum/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-02bc83f6").then(a)}},{path:"/dynamic-programming/solutions/0416-partition-equal-subset-sum/index.html",redirect:"/dynamic-programming/solutions/0416-partition-equal-subset-sum/"},{path:"/dynamic-programming/solutions/0416-partition-equal-subset-sum.html",redirect:"/dynamic-programming/solutions/0416-partition-equal-subset-sum/"},{name:"v-75956bc2",path:"/dynamic-programming/solutions/0474-ones-and-zeroes/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-75956bc2").then(a)}},{path:"/dynamic-programming/solutions/0474-ones-and-zeroes/index.html",redirect:"/dynamic-programming/solutions/0474-ones-and-zeroes/"},{path:"/dynamic-programming/solutions/0474-ones-and-zeroes.html",redirect:"/dynamic-programming/solutions/0474-ones-and-zeroes/"},{name:"v-278ecdc5",path:"/dynamic-programming/solutions/0486-predict-the-winner/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-278ecdc5").then(a)}},{path:"/dynamic-programming/solutions/0486-predict-the-winner/index.html",redirect:"/dynamic-programming/solutions/0486-predict-the-winner/"},{path:"/dynamic-programming/solutions/0486-predict-the-winner.html",redirect:"/dynamic-programming/solutions/0486-predict-the-winner/"},{name:"v-024cae65",path:"/dynamic-programming/solutions/0494-target-sum/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-024cae65").then(a)}},{path:"/dynamic-programming/solutions/0494-target-sum/index.html",redirect:"/dynamic-programming/solutions/0494-target-sum/"},{path:"/dynamic-programming/solutions/0494-target-sum.html",redirect:"/dynamic-programming/solutions/0494-target-sum/"},{name:"v-7ad03125",path:"/dynamic-programming/solutions/0509-fibonacci-number/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7ad03125").then(a)}},{path:"/dynamic-programming/solutions/0509-fibonacci-number/index.html",redirect:"/dynamic-programming/solutions/0509-fibonacci-number/"},{path:"/dynamic-programming/solutions/0509-fibonacci-number.html",redirect:"/dynamic-programming/solutions/0509-fibonacci-number/"},{name:"v-65768937",path:"/dynamic-programming/solutions/0516-longest-palindromic-subsequence/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-65768937").then(a)}},{path:"/dynamic-programming/solutions/0516-longest-palindromic-subsequence/index.html",redirect:"/dynamic-programming/solutions/0516-longest-palindromic-subsequence/"},{path:"/dynamic-programming/solutions/0516-longest-palindromic-subsequence.html",redirect:"/dynamic-programming/solutions/0516-longest-palindromic-subsequence/"},{name:"v-0b4d643f",path:"/dynamic-programming/solutions/0518-coin-change-2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0b4d643f").then(a)}},{path:"/dynamic-programming/solutions/0518-coin-change-2/index.html",redirect:"/dynamic-programming/solutions/0518-coin-change-2/"},{path:"/dynamic-programming/solutions/0518-coin-change-2.html",redirect:"/dynamic-programming/solutions/0518-coin-change-2/"},{name:"v-2ac03de6",path:"/dynamic-programming/solutions/0518-%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2ac03de6").then(a)}},{path:"/dynamic-programming/solutions/0518-完全背包公式推导/",redirect:"/dynamic-programming/solutions/0518-%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC/"},{path:"/dynamic-programming/solutions/0518-%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC/index.html",redirect:"/dynamic-programming/solutions/0518-%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC/"},{path:"/dynamic-programming/solutions/0518-完全背包公式推导.html",redirect:"/dynamic-programming/solutions/0518-%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC/"},{name:"v-64b5f45b",path:"/dynamic-programming/solutions/0644-strange-printer/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-64b5f45b").then(a)}},{path:"/dynamic-programming/solutions/0644-strange-printer/index.html",redirect:"/dynamic-programming/solutions/0644-strange-printer/"},{path:"/dynamic-programming/solutions/0644-strange-printer.html",redirect:"/dynamic-programming/solutions/0644-strange-printer/"},{name:"v-30f251ee",path:"/dynamic-programming/solutions/0543-diameter-of-binary-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-30f251ee").then(a)}},{path:"/dynamic-programming/solutions/0543-diameter-of-binary-tree/index.html",redirect:"/dynamic-programming/solutions/0543-diameter-of-binary-tree/"},{path:"/dynamic-programming/solutions/0543-diameter-of-binary-tree.html",redirect:"/dynamic-programming/solutions/0543-diameter-of-binary-tree/"},{name:"v-5c00375a",path:"/dynamic-programming/solutions/0687-longest-univalue-path/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5c00375a").then(a)}},{path:"/dynamic-programming/solutions/0687-longest-univalue-path/index.html",redirect:"/dynamic-programming/solutions/0687-longest-univalue-path/"},{path:"/dynamic-programming/solutions/0687-longest-univalue-path.html",redirect:"/dynamic-programming/solutions/0687-longest-univalue-path/"},{name:"v-0afa5c36",path:"/dynamic-programming/solutions/0714-best-time-to-buy-and-sell-stock-with-transaction-fee/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0afa5c36").then(a)}},{path:"/dynamic-programming/solutions/0714-best-time-to-buy-and-sell-stock-with-transaction-fee/index.html",redirect:"/dynamic-programming/solutions/0714-best-time-to-buy-and-sell-stock-with-transaction-fee/"},{path:"/dynamic-programming/solutions/0714-best-time-to-buy-and-sell-stock-with-transaction-fee.html",redirect:"/dynamic-programming/solutions/0714-best-time-to-buy-and-sell-stock-with-transaction-fee/"},{name:"v-6adb0465",path:"/dynamic-programming/solutions/0746-min-cost-climbing-stairs/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6adb0465").then(a)}},{path:"/dynamic-programming/solutions/0746-min-cost-climbing-stairs/index.html",redirect:"/dynamic-programming/solutions/0746-min-cost-climbing-stairs/"},{path:"/dynamic-programming/solutions/0746-min-cost-climbing-stairs.html",redirect:"/dynamic-programming/solutions/0746-min-cost-climbing-stairs/"},{name:"v-a8e064da",path:"/dynamic-programming/solutions/0865-smallest-subtree-with-all-the-deepest-nodes/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a8e064da").then(a)}},{path:"/dynamic-programming/solutions/0865-smallest-subtree-with-all-the-deepest-nodes/index.html",redirect:"/dynamic-programming/solutions/0865-smallest-subtree-with-all-the-deepest-nodes/"},{path:"/dynamic-programming/solutions/0865-smallest-subtree-with-all-the-deepest-nodes.html",redirect:"/dynamic-programming/solutions/0865-smallest-subtree-with-all-the-deepest-nodes/"},{name:"v-f175e3b6",path:"/dynamic-programming/solutions/0877-stone-game/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-f175e3b6").then(a)}},{path:"/dynamic-programming/solutions/0877-stone-game/index.html",redirect:"/dynamic-programming/solutions/0877-stone-game/"},{path:"/dynamic-programming/solutions/0877-stone-game.html",redirect:"/dynamic-programming/solutions/0877-stone-game/"},{name:"v-f6eac32e",path:"/dynamic-programming/solutions/0918-maximum-sum-circular-subarray/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-f6eac32e").then(a)}},{path:"/dynamic-programming/solutions/0918-maximum-sum-circular-subarray/index.html",redirect:"/dynamic-programming/solutions/0918-maximum-sum-circular-subarray/"},{path:"/dynamic-programming/solutions/0918-maximum-sum-circular-subarray.html",redirect:"/dynamic-programming/solutions/0918-maximum-sum-circular-subarray/"},{name:"v-637acbcd",path:"/dynamic-programming/solutions/0968-binary-tree-cameras/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-637acbcd").then(a)}},{path:"/dynamic-programming/solutions/0968-binary-tree-cameras/index.html",redirect:"/dynamic-programming/solutions/0968-binary-tree-cameras/"},{path:"/dynamic-programming/solutions/0968-binary-tree-cameras.html",redirect:"/dynamic-programming/solutions/0968-binary-tree-cameras/"},{name:"v-d273b6b6",path:"/dynamic-programming/solutions/0983-minimum-cost-for-tickets/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-d273b6b6").then(a)}},{path:"/dynamic-programming/solutions/0983-minimum-cost-for-tickets/index.html",redirect:"/dynamic-programming/solutions/0983-minimum-cost-for-tickets/"},{path:"/dynamic-programming/solutions/0983-minimum-cost-for-tickets.html",redirect:"/dynamic-programming/solutions/0983-minimum-cost-for-tickets/"},{name:"v-b127db76",path:"/dynamic-programming/solutions/1025-divisor-game/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-b127db76").then(a)}},{path:"/dynamic-programming/solutions/1025-divisor-game/index.html",redirect:"/dynamic-programming/solutions/1025-divisor-game/"},{path:"/dynamic-programming/solutions/1025-divisor-game.html",redirect:"/dynamic-programming/solutions/1025-divisor-game/"},{name:"v-72039f9b",path:"/dynamic-programming/solutions/1140-stone-game-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-72039f9b").then(a)}},{path:"/dynamic-programming/solutions/1140-stone-game-ii/index.html",redirect:"/dynamic-programming/solutions/1140-stone-game-ii/"},{path:"/dynamic-programming/solutions/1140-stone-game-ii.html",redirect:"/dynamic-programming/solutions/1140-stone-game-ii/"},{name:"v-82ab1976",path:"/dynamic-programming/solutions/1372-longest-zigzag-path-in-a-binary-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-82ab1976").then(a)}},{path:"/dynamic-programming/solutions/1372-longest-zigzag-path-in-a-binary-tree/index.html",redirect:"/dynamic-programming/solutions/1372-longest-zigzag-path-in-a-binary-tree/"},{path:"/dynamic-programming/solutions/1372-longest-zigzag-path-in-a-binary-tree.html",redirect:"/dynamic-programming/solutions/1372-longest-zigzag-path-in-a-binary-tree/"},{name:"v-32568ff6",path:"/dynamic-programming/solutions/1143-longest-common-subsequence/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-32568ff6").then(a)}},{path:"/dynamic-programming/solutions/1143-longest-common-subsequence/index.html",redirect:"/dynamic-programming/solutions/1143-longest-common-subsequence/"},{path:"/dynamic-programming/solutions/1143-longest-common-subsequence.html",redirect:"/dynamic-programming/solutions/1143-longest-common-subsequence/"},{name:"v-0c4ce425",path:"/dynamic-programming/solutions/1449-form-largest-integer-with-digits-that-add-up-to-target/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0c4ce425").then(a)}},{path:"/dynamic-programming/solutions/1449-form-largest-integer-with-digits-that-add-up-to-target/index.html",redirect:"/dynamic-programming/solutions/1449-form-largest-integer-with-digits-that-add-up-to-target/"},{path:"/dynamic-programming/solutions/1449-form-largest-integer-with-digits-that-add-up-to-target.html",redirect:"/dynamic-programming/solutions/1449-form-largest-integer-with-digits-that-add-up-to-target/"},{name:"v-2baeefe9",path:"/dynamic-programming/solutions/practice/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2baeefe9").then(a)}},{path:"/dynamic-programming/solutions/practice/index.html",redirect:"/dynamic-programming/solutions/practice/"},{path:"/dynamic-programming/solutions/practice.html",redirect:"/dynamic-programming/solutions/practice/"},{name:"v-1c718b23",path:"/dynamic-programming/solutions/tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1c718b23").then(a)}},{path:"/dynamic-programming/solutions/tree/index.html",redirect:"/dynamic-programming/solutions/tree/"},{path:"/dynamic-programming/solutions/tree.html",redirect:"/dynamic-programming/solutions/tree/"},{name:"v-9a786500",path:"/dynamic-programming/solutions/%E5%86%8D%E8%AE%B2%E3%80%8C%E6%A0%91%E5%BD%A2%20DP%E3%80%8D%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E7%8E%A9%E6%84%8F%E5%84%BF/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-9a786500").then(a)}},{path:"/dynamic-programming/solutions/再讲「树形 DP」是个什么玩意儿/",redirect:"/dynamic-programming/solutions/%E5%86%8D%E8%AE%B2%E3%80%8C%E6%A0%91%E5%BD%A2%20DP%E3%80%8D%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E7%8E%A9%E6%84%8F%E5%84%BF/"},{path:"/dynamic-programming/solutions/%E5%86%8D%E8%AE%B2%E3%80%8C%E6%A0%91%E5%BD%A2%20DP%E3%80%8D%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E7%8E%A9%E6%84%8F%E5%84%BF/index.html",redirect:"/dynamic-programming/solutions/%E5%86%8D%E8%AE%B2%E3%80%8C%E6%A0%91%E5%BD%A2%20DP%E3%80%8D%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E7%8E%A9%E6%84%8F%E5%84%BF/"},{path:"/dynamic-programming/solutions/再讲「树形 DP」是个什么玩意儿.html",redirect:"/dynamic-programming/solutions/%E5%86%8D%E8%AE%B2%E3%80%8C%E6%A0%91%E5%BD%A2%20DP%E3%80%8D%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E7%8E%A9%E6%84%8F%E5%84%BF/"},{name:"v-5a3170aa",path:"/dynamic-programming/solutions/%E6%A0%91%E5%BD%A2%20DP%20%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E7%8E%A9%E6%84%8F%E5%84%BF/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5a3170aa").then(a)}},{path:"/dynamic-programming/solutions/树形 DP 是个什么玩意儿/",redirect:"/dynamic-programming/solutions/%E6%A0%91%E5%BD%A2%20DP%20%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E7%8E%A9%E6%84%8F%E5%84%BF/"},{path:"/dynamic-programming/solutions/%E6%A0%91%E5%BD%A2%20DP%20%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E7%8E%A9%E6%84%8F%E5%84%BF/index.html",redirect:"/dynamic-programming/solutions/%E6%A0%91%E5%BD%A2%20DP%20%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E7%8E%A9%E6%84%8F%E5%84%BF/"},{path:"/dynamic-programming/solutions/树形 DP 是个什么玩意儿.html",redirect:"/dynamic-programming/solutions/%E6%A0%91%E5%BD%A2%20DP%20%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E7%8E%A9%E6%84%8F%E5%84%BF/"},{name:"v-686a3bdb",path:"/dynamic-programming/%E4%BB%8E%E3%80%8C%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C%E3%80%8D%E9%97%AE%E9%A2%98%E8%B0%88%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E7%8A%B6%E6%80%81%EF%BC%88%E5%AE%9A%E4%B9%89%E5%AD%90%E9%97%AE%E9%A2%98%EF%BC%89/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-686a3bdb").then(a)}},{path:"/dynamic-programming/从「最大子段和」问题谈如何设计状态（定义子问题）/",redirect:"/dynamic-programming/%E4%BB%8E%E3%80%8C%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C%E3%80%8D%E9%97%AE%E9%A2%98%E8%B0%88%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E7%8A%B6%E6%80%81%EF%BC%88%E5%AE%9A%E4%B9%89%E5%AD%90%E9%97%AE%E9%A2%98%EF%BC%89/"},{path:"/dynamic-programming/%E4%BB%8E%E3%80%8C%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C%E3%80%8D%E9%97%AE%E9%A2%98%E8%B0%88%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E7%8A%B6%E6%80%81%EF%BC%88%E5%AE%9A%E4%B9%89%E5%AD%90%E9%97%AE%E9%A2%98%EF%BC%89/index.html",redirect:"/dynamic-programming/%E4%BB%8E%E3%80%8C%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C%E3%80%8D%E9%97%AE%E9%A2%98%E8%B0%88%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E7%8A%B6%E6%80%81%EF%BC%88%E5%AE%9A%E4%B9%89%E5%AD%90%E9%97%AE%E9%A2%98%EF%BC%89/"},{path:"/dynamic-programming/从「最大子段和」问题谈如何设计状态（定义子问题）.html",redirect:"/dynamic-programming/%E4%BB%8E%E3%80%8C%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C%E3%80%8D%E9%97%AE%E9%A2%98%E8%B0%88%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E7%8A%B6%E6%80%81%EF%BC%88%E5%AE%9A%E4%B9%89%E5%AD%90%E9%97%AE%E9%A2%98%EF%BC%89/"},{name:"v-1a8afcf8",path:"/dynamic-programming/%E3%80%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E3%80%8D%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8F%AB%E3%80%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E3%80%8D/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1a8afcf8").then(a)}},{path:"/dynamic-programming/「动态规划」为什么叫「动态规划」/",redirect:"/dynamic-programming/%E3%80%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E3%80%8D%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8F%AB%E3%80%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E3%80%8D/"},{path:"/dynamic-programming/%E3%80%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E3%80%8D%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8F%AB%E3%80%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E3%80%8D/index.html",redirect:"/dynamic-programming/%E3%80%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E3%80%8D%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8F%AB%E3%80%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E3%80%8D/"},{path:"/dynamic-programming/「动态规划」为什么叫「动态规划」.html",redirect:"/dynamic-programming/%E3%80%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E3%80%8D%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8F%AB%E3%80%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E3%80%8D/"},{name:"v-a74f84b2",path:"/dynamic-programming/%E8%AF%AD%E9%9B%80%E7%9A%84%E7%AC%94%E8%AE%B0/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a74f84b2").then(a)}},{path:"/dynamic-programming/语雀的笔记/",redirect:"/dynamic-programming/%E8%AF%AD%E9%9B%80%E7%9A%84%E7%AC%94%E8%AE%B0/"},{path:"/dynamic-programming/%E8%AF%AD%E9%9B%80%E7%9A%84%E7%AC%94%E8%AE%B0/index.html",redirect:"/dynamic-programming/%E8%AF%AD%E9%9B%80%E7%9A%84%E7%AC%94%E8%AE%B0/"},{path:"/dynamic-programming/语雀的笔记.html",redirect:"/dynamic-programming/%E8%AF%AD%E9%9B%80%E7%9A%84%E7%AC%94%E8%AE%B0/"},{name:"v-12c1b938",path:"/graph/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-12c1b938").then(a)}},{path:"/graph/index.html",redirect:"/graph/"},{name:"v-4a042605",path:"/graph/dijkstra/code/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4a042605").then(a)}},{path:"/graph/dijkstra/code/index.html",redirect:"/graph/dijkstra/code/"},{path:"/graph/dijkstra/code.html",redirect:"/graph/dijkstra/code/"},{name:"v-7825eced",path:"/graph/dijkstra/example/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7825eced").then(a)}},{path:"/graph/dijkstra/example/index.html",redirect:"/graph/dijkstra/example/"},{path:"/graph/dijkstra/example.html",redirect:"/graph/dijkstra/example/"},{name:"v-5614f01b",path:"/graph/dijkstra/geometrically-intuitive/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5614f01b").then(a)}},{path:"/graph/dijkstra/geometrically-intuitive/index.html",redirect:"/graph/dijkstra/geometrically-intuitive/"},{path:"/graph/dijkstra/geometrically-intuitive.html",redirect:"/graph/dijkstra/geometrically-intuitive/"},{name:"v-aff53d2e",path:"/graph/dijkstra/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-aff53d2e").then(a)}},{path:"/graph/dijkstra/intro/index.html",redirect:"/graph/dijkstra/intro/"},{path:"/graph/dijkstra/intro.html",redirect:"/graph/dijkstra/intro/"},{name:"v-295078c5",path:"/graph/dijkstra/relaxation/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-295078c5").then(a)}},{path:"/graph/dijkstra/relaxation/index.html",redirect:"/graph/dijkstra/relaxation/"},{path:"/graph/dijkstra/relaxation.html",redirect:"/graph/dijkstra/relaxation/"},{name:"v-ba80e702",path:"/graph/dijkstra/summarize/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-ba80e702").then(a)}},{path:"/graph/dijkstra/summarize/index.html",redirect:"/graph/dijkstra/summarize/"},{path:"/graph/dijkstra/summarize.html",redirect:"/graph/dijkstra/summarize/"},{name:"v-584b0e25",path:"/graph/minimum-spanning-tree/application/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-584b0e25").then(a)}},{path:"/graph/minimum-spanning-tree/application/index.html",redirect:"/graph/minimum-spanning-tree/application/"},{path:"/graph/minimum-spanning-tree/application.html",redirect:"/graph/minimum-spanning-tree/application/"},{name:"v-79030976",path:"/graph/minimum-spanning-tree/kruskal/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-79030976").then(a)}},{path:"/graph/minimum-spanning-tree/kruskal/index.html",redirect:"/graph/minimum-spanning-tree/kruskal/"},{path:"/graph/minimum-spanning-tree/kruskal.html",redirect:"/graph/minimum-spanning-tree/kruskal/"},{name:"v-148801a5",path:"/graph/minimum-spanning-tree/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-148801a5").then(a)}},{path:"/graph/minimum-spanning-tree/intro/index.html",redirect:"/graph/minimum-spanning-tree/intro/"},{path:"/graph/minimum-spanning-tree/intro.html",redirect:"/graph/minimum-spanning-tree/intro/"},{name:"v-36af5776",path:"/graph/minimum-spanning-tree/lazy-prim/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-36af5776").then(a)}},{path:"/graph/minimum-spanning-tree/lazy-prim/index.html",redirect:"/graph/minimum-spanning-tree/lazy-prim/"},{path:"/graph/minimum-spanning-tree/lazy-prim.html",redirect:"/graph/minimum-spanning-tree/lazy-prim/"},{name:"v-aaa246aa",path:"/graph/minimum-spanning-tree/segmentation-theorem/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-aaa246aa").then(a)}},{path:"/graph/minimum-spanning-tree/segmentation-theorem/index.html",redirect:"/graph/minimum-spanning-tree/segmentation-theorem/"},{path:"/graph/minimum-spanning-tree/segmentation-theorem.html",redirect:"/graph/minimum-spanning-tree/segmentation-theorem/"},{name:"v-e1cf13f6",path:"/graph/minimum-spanning-tree/summarize/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-e1cf13f6").then(a)}},{path:"/graph/minimum-spanning-tree/summarize/index.html",redirect:"/graph/minimum-spanning-tree/summarize/"},{path:"/graph/minimum-spanning-tree/summarize.html",redirect:"/graph/minimum-spanning-tree/summarize/"},{name:"v-74d392e6",path:"/greedy/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-74d392e6").then(a)}},{path:"/greedy/index.html",redirect:"/greedy/"},{name:"v-44f15dcd",path:"/greedy/solutions/0012-integer-to-roman/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-44f15dcd").then(a)}},{path:"/greedy/solutions/0012-integer-to-roman/index.html",redirect:"/greedy/solutions/0012-integer-to-roman/"},{path:"/greedy/solutions/0012-integer-to-roman.html",redirect:"/greedy/solutions/0012-integer-to-roman/"},{name:"v-367869c9",path:"/greedy/solutions/0045-jump-game-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-367869c9").then(a)}},{path:"/greedy/solutions/0045-jump-game-ii/index.html",redirect:"/greedy/solutions/0045-jump-game-ii/"},{path:"/greedy/solutions/0045-jump-game-ii.html",redirect:"/greedy/solutions/0045-jump-game-ii/"},{name:"v-74dd6dc5",path:"/greedy/solutions/0056-merge-intervals/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-74dd6dc5").then(a)}},{path:"/greedy/solutions/0056-merge-intervals/index.html",redirect:"/greedy/solutions/0056-merge-intervals/"},{path:"/greedy/solutions/0056-merge-intervals.html",redirect:"/greedy/solutions/0056-merge-intervals/"},{name:"v-3bb840a5",path:"/greedy/solutions/0057-insert-interval/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3bb840a5").then(a)}},{path:"/greedy/solutions/0057-insert-interval/index.html",redirect:"/greedy/solutions/0057-insert-interval/"},{path:"/greedy/solutions/0057-insert-interval.html",redirect:"/greedy/solutions/0057-insert-interval/"},{name:"v-b74846f6",path:"/greedy/solutions/0343-integer-break/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-b74846f6").then(a)}},{path:"/greedy/solutions/0343-integer-break/index.html",redirect:"/greedy/solutions/0343-integer-break/"},{path:"/greedy/solutions/0343-integer-break.html",redirect:"/greedy/solutions/0343-integer-break/"},{name:"v-6eb37ec2",path:"/greedy/solutions/0452-minimum-number-of-arrows-to-burst-balloons/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6eb37ec2").then(a)}},{path:"/greedy/solutions/0452-minimum-number-of-arrows-to-burst-balloons/index.html",redirect:"/greedy/solutions/0452-minimum-number-of-arrows-to-burst-balloons/"},{path:"/greedy/solutions/0452-minimum-number-of-arrows-to-burst-balloons.html",redirect:"/greedy/solutions/0452-minimum-number-of-arrows-to-burst-balloons/"},{name:"v-c2604de6",path:"/greedy/solutions/0354-russian-doll-envelopes/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-c2604de6").then(a)}},{path:"/greedy/solutions/0354-russian-doll-envelopes/index.html",redirect:"/greedy/solutions/0354-russian-doll-envelopes/"},{path:"/greedy/solutions/0354-russian-doll-envelopes.html",redirect:"/greedy/solutions/0354-russian-doll-envelopes/"},{name:"v-74b8d8e5",path:"/greedy/solutions/0455-assign-cookies/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-74b8d8e5").then(a)}},{path:"/greedy/solutions/0455-assign-cookies/index.html",redirect:"/greedy/solutions/0455-assign-cookies/"},{path:"/greedy/solutions/0455-assign-cookies.html",redirect:"/greedy/solutions/0455-assign-cookies/"},{name:"v-c3c2b5f6",path:"/greedy/solutions/0860-lemonade-change/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-c3c2b5f6").then(a)}},{path:"/greedy/solutions/0860-lemonade-change/index.html",redirect:"/greedy/solutions/0860-lemonade-change/"},{path:"/greedy/solutions/0860-lemonade-change.html",redirect:"/greedy/solutions/0860-lemonade-change/"},{name:"v-088fd3c5",path:"/greedy/solutions/0861-score-after-flipping-matrix/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-088fd3c5").then(a)}},{path:"/greedy/solutions/0861-score-after-flipping-matrix/index.html",redirect:"/greedy/solutions/0861-score-after-flipping-matrix/"},{path:"/greedy/solutions/0861-score-after-flipping-matrix.html",redirect:"/greedy/solutions/0861-score-after-flipping-matrix/"},{name:"v-aac37736",path:"/greedy/solutions/0921-minimum-add-to-make-parentheses-valid/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-aac37736").then(a)}},{path:"/greedy/solutions/0921-minimum-add-to-make-parentheses-valid/index.html",redirect:"/greedy/solutions/0921-minimum-add-to-make-parentheses-valid/"},{path:"/greedy/solutions/0921-minimum-add-to-make-parentheses-valid.html",redirect:"/greedy/solutions/0921-minimum-add-to-make-parentheses-valid/"},{name:"v-b806b40e",path:"/greedy/solutions/1400-construct-k-palindrome-strings/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-b806b40e").then(a)}},{path:"/greedy/solutions/1400-construct-k-palindrome-strings/index.html",redirect:"/greedy/solutions/1400-construct-k-palindrome-strings/"},{path:"/greedy/solutions/1400-construct-k-palindrome-strings.html",redirect:"/greedy/solutions/1400-construct-k-palindrome-strings/"},{name:"v-9ad10df4",path:"/hash-table/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-9ad10df4").then(a)}},{path:"/hash-table/index.html",redirect:"/hash-table/"},{name:"v-793bfff6",path:"/hash-table/solutions/0001-two-sum/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-793bfff6").then(a)}},{path:"/hash-table/solutions/0001-two-sum/index.html",redirect:"/hash-table/solutions/0001-two-sum/"},{path:"/hash-table/solutions/0001-two-sum.html",redirect:"/hash-table/solutions/0001-two-sum/"},{name:"v-1fc5fcd2",path:"/hash-table/solutions/0036-valid-sudoku/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1fc5fcd2").then(a)}},{path:"/hash-table/solutions/0036-valid-sudoku/index.html",redirect:"/hash-table/solutions/0036-valid-sudoku/"},{path:"/hash-table/solutions/0036-valid-sudoku.html",redirect:"/hash-table/solutions/0036-valid-sudoku/"},{name:"v-4be2a0e1",path:"/hash-table/solutions/0041-first-missing-positive/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4be2a0e1").then(a)}},{path:"/hash-table/solutions/0041-first-missing-positive/index.html",redirect:"/hash-table/solutions/0041-first-missing-positive/"},{path:"/hash-table/solutions/0041-first-missing-positive.html",redirect:"/hash-table/solutions/0041-first-missing-positive/"},{name:"v-782ef33f",path:"/hash-table/solutions/0049-group-anagrams/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-782ef33f").then(a)}},{path:"/hash-table/solutions/0049-group-anagrams/index.html",redirect:"/hash-table/solutions/0049-group-anagrams/"},{path:"/hash-table/solutions/0049-group-anagrams.html",redirect:"/hash-table/solutions/0049-group-anagrams/"},{name:"v-b8e89306",path:"/hash-table/solutions/0202-happy-number/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-b8e89306").then(a)}},{path:"/hash-table/solutions/0202-happy-number/index.html",redirect:"/hash-table/solutions/0202-happy-number/"},{path:"/hash-table/solutions/0202-happy-number.html",redirect:"/hash-table/solutions/0202-happy-number/"},{name:"v-22379377",path:"/hash-table/solutions/0217-contains-duplicate/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-22379377").then(a)}},{path:"/hash-table/solutions/0217-contains-duplicate/index.html",redirect:"/hash-table/solutions/0217-contains-duplicate/"},{path:"/hash-table/solutions/0217-contains-duplicate.html",redirect:"/hash-table/solutions/0217-contains-duplicate/"},{name:"v-5c6233cb",path:"/hash-table/solutions/0205-isomorphic-strings/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5c6233cb").then(a)}},{path:"/hash-table/solutions/0205-isomorphic-strings/index.html",redirect:"/hash-table/solutions/0205-isomorphic-strings/"},{path:"/hash-table/solutions/0205-isomorphic-strings.html",redirect:"/hash-table/solutions/0205-isomorphic-strings/"},{name:"v-cce7b2b6",path:"/hash-table/solutions/0219-contains-duplicate-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-cce7b2b6").then(a)}},{path:"/hash-table/solutions/0219-contains-duplicate-ii/index.html",redirect:"/hash-table/solutions/0219-contains-duplicate-ii/"},{path:"/hash-table/solutions/0219-contains-duplicate-ii.html",redirect:"/hash-table/solutions/0219-contains-duplicate-ii/"},{name:"v-b9742ab6",path:"/hash-table/solutions/0242-valid-anagram/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-b9742ab6").then(a)}},{path:"/hash-table/solutions/0242-valid-anagram/index.html",redirect:"/hash-table/solutions/0242-valid-anagram/"},{path:"/hash-table/solutions/0242-valid-anagram.html",redirect:"/hash-table/solutions/0242-valid-anagram/"},{name:"v-c4a7310e",path:"/hash-table/solutions/0290-word-pattern/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-c4a7310e").then(a)}},{path:"/hash-table/solutions/0290-word-pattern/index.html",redirect:"/hash-table/solutions/0290-word-pattern/"},{path:"/hash-table/solutions/0290-word-pattern.html",redirect:"/hash-table/solutions/0290-word-pattern/"},{name:"v-4faf75d7",path:"/hash-table/solutions/0349-intersection-of-two-arrays/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4faf75d7").then(a)}},{path:"/hash-table/solutions/0349-intersection-of-two-arrays/index.html",redirect:"/hash-table/solutions/0349-intersection-of-two-arrays/"},{path:"/hash-table/solutions/0349-intersection-of-two-arrays.html",redirect:"/hash-table/solutions/0349-intersection-of-two-arrays/"},{name:"v-20cc1125",path:"/hash-table/solutions/0350-intersection-of-two-arrays-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-20cc1125").then(a)}},{path:"/hash-table/solutions/0350-intersection-of-two-arrays-ii/index.html",redirect:"/hash-table/solutions/0350-intersection-of-two-arrays-ii/"},{path:"/hash-table/solutions/0350-intersection-of-two-arrays-ii.html",redirect:"/hash-table/solutions/0350-intersection-of-two-arrays-ii/"},{name:"v-e7cb6976",path:"/hash-table/solutions/0454-4sum-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-e7cb6976").then(a)}},{path:"/hash-table/solutions/0454-4sum-ii/index.html",redirect:"/hash-table/solutions/0454-4sum-ii/"},{path:"/hash-table/solutions/0454-4sum-ii.html",redirect:"/hash-table/solutions/0454-4sum-ii/"},{name:"v-3887f5a9",path:"/hash-table/solutions/0447-number-of-boomerangs/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3887f5a9").then(a)}},{path:"/hash-table/solutions/0447-number-of-boomerangs/index.html",redirect:"/hash-table/solutions/0447-number-of-boomerangs/"},{path:"/hash-table/solutions/0447-number-of-boomerangs.html",redirect:"/hash-table/solutions/0447-number-of-boomerangs/"},{name:"v-cd41a876",path:"/hash-table/solutions/1010-pairs-of-songs-with-total-durations-divisible-by-60/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-cd41a876").then(a)}},{path:"/hash-table/solutions/1010-pairs-of-songs-with-total-durations-divisible-by-60/index.html",redirect:"/hash-table/solutions/1010-pairs-of-songs-with-total-durations-divisible-by-60/"},{path:"/hash-table/solutions/1010-pairs-of-songs-with-total-durations-divisible-by-60.html",redirect:"/hash-table/solutions/1010-pairs-of-songs-with-total-durations-divisible-by-60/"},{name:"v-7f8ee3e5",path:"/heap/01/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7f8ee3e5").then(a)}},{path:"/heap/01/index.html",redirect:"/heap/01/"},{path:"/heap/01.html",redirect:"/heap/01/"},{name:"v-244c5125",path:"/heap/03/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-244c5125").then(a)}},{path:"/heap/03/index.html",redirect:"/heap/03/"},{path:"/heap/03.html",redirect:"/heap/03/"},{name:"v-5c24caf6",path:"/heap/02/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5c24caf6").then(a)}},{path:"/heap/02/index.html",redirect:"/heap/02/"},{path:"/heap/02.html",redirect:"/heap/02/"},{name:"v-76ab07c5",path:"/heap/04/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-76ab07c5").then(a)}},{path:"/heap/04/index.html",redirect:"/heap/04/"},{path:"/heap/04.html",redirect:"/heap/04/"},{name:"v-6dec8336",path:"/heap/05/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6dec8336").then(a)}},{path:"/heap/05/index.html",redirect:"/heap/05/"},{path:"/heap/05.html",redirect:"/heap/05/"},{name:"v-1b687505",path:"/heap/06/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1b687505").then(a)}},{path:"/heap/06/index.html",redirect:"/heap/06/"},{path:"/heap/06.html",redirect:"/heap/06/"},{name:"v-2e55a5a6",path:"/heap/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2e55a5a6").then(a)}},{path:"/heap/index.html",redirect:"/heap/"},{name:"v-24c00325",path:"/heap/practice/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-24c00325").then(a)}},{path:"/heap/practice/index.html",redirect:"/heap/practice/"},{path:"/heap/practice.html",redirect:"/heap/practice/"},{name:"v-da0d241e",path:"/heap/solutions/0023-merge-k-sorted-lists/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-da0d241e").then(a)}},{path:"/heap/solutions/0023-merge-k-sorted-lists/index.html",redirect:"/heap/solutions/0023-merge-k-sorted-lists/"},{path:"/heap/solutions/0023-merge-k-sorted-lists.html",redirect:"/heap/solutions/0023-merge-k-sorted-lists/"},{name:"v-99fdfab6",path:"/heap/solutions/0215-kth-largest-element-in-an-array/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-99fdfab6").then(a)}},{path:"/heap/solutions/0215-kth-largest-element-in-an-array/index.html",redirect:"/heap/solutions/0215-kth-largest-element-in-an-array/"},{path:"/heap/solutions/0215-kth-largest-element-in-an-array.html",redirect:"/heap/solutions/0215-kth-largest-element-in-an-array/"},{name:"v-3c6586c5",path:"/heap/solutions/0218-the-skyline-problem/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3c6586c5").then(a)}},{path:"/heap/solutions/0218-the-skyline-problem/index.html",redirect:"/heap/solutions/0218-the-skyline-problem/"},{path:"/heap/solutions/0218-the-skyline-problem.html",redirect:"/heap/solutions/0218-the-skyline-problem/"},{name:"v-ea990176",path:"/heap/solutions/0295-find-median-from-data-stream/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-ea990176").then(a)}},{path:"/heap/solutions/0295-find-median-from-data-stream/index.html",redirect:"/heap/solutions/0295-find-median-from-data-stream/"},{path:"/heap/solutions/0295-find-median-from-data-stream.html",redirect:"/heap/solutions/0295-find-median-from-data-stream/"},{name:"v-056a6d45",path:"/heap/solutions/0313-super-ugly-number/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-056a6d45").then(a)}},{path:"/heap/solutions/0313-super-ugly-number/index.html",redirect:"/heap/solutions/0313-super-ugly-number/"},{path:"/heap/solutions/0313-super-ugly-number.html",redirect:"/heap/solutions/0313-super-ugly-number/"},{name:"v-168abe05",path:"/heap/solutions/0347-top-k-frequent-elements/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-168abe05").then(a)}},{path:"/heap/solutions/0347-top-k-frequent-elements/index.html",redirect:"/heap/solutions/0347-top-k-frequent-elements/"},{path:"/heap/solutions/0347-top-k-frequent-elements.html",redirect:"/heap/solutions/0347-top-k-frequent-elements/"},{name:"v-07c36673",path:"/heap/solutions/0451-sort-characters-by-frequency/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-07c36673").then(a)}},{path:"/heap/solutions/0451-sort-characters-by-frequency/index.html",redirect:"/heap/solutions/0451-sort-characters-by-frequency/"},{path:"/heap/solutions/0451-sort-characters-by-frequency.html",redirect:"/heap/solutions/0451-sort-characters-by-frequency/"},{name:"v-78782c85",path:"/heap/solutions/0703-kth-largest-element-in-a-stream/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-78782c85").then(a)}},{path:"/heap/solutions/0703-kth-largest-element-in-a-stream/index.html",redirect:"/heap/solutions/0703-kth-largest-element-in-a-stream/"},{path:"/heap/solutions/0703-kth-largest-element-in-a-stream.html",redirect:"/heap/solutions/0703-kth-largest-element-in-a-stream/"},{name:"v-30a87129",path:"/heap/solutions/0973-k-closest-points-to-origin/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-30a87129").then(a)}},{path:"/heap/solutions/0973-k-closest-points-to-origin/index.html",redirect:"/heap/solutions/0973-k-closest-points-to-origin/"},{path:"/heap/solutions/0973-k-closest-points-to-origin.html",redirect:"/heap/solutions/0973-k-closest-points-to-origin/"},{name:"v-2a59b585",path:"/heap/solutions/1046-last-stone-weight/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2a59b585").then(a)}},{path:"/heap/solutions/1046-last-stone-weight/index.html",redirect:"/heap/solutions/1046-last-stone-weight/"},{path:"/heap/solutions/1046-last-stone-weight.html",redirect:"/heap/solutions/1046-last-stone-weight/"},{name:"v-07cfe499",path:"/heap/solutions/1282-group-the-people-given-the-group-size-they-belong-to/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-07cfe499").then(a)}},{path:"/heap/solutions/1282-group-the-people-given-the-group-size-they-belong-to/index.html",redirect:"/heap/solutions/1282-group-the-people-given-the-group-size-they-belong-to/"},{path:"/heap/solutions/1282-group-the-people-given-the-group-size-they-belong-to.html",redirect:"/heap/solutions/1282-group-the-people-given-the-group-size-they-belong-to/"},{name:"v-5f8b0b65",path:"/heap/solutions/1296-divide-array-in-sets-of-k-consecutive-numbers/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5f8b0b65").then(a)}},{path:"/heap/solutions/1296-divide-array-in-sets-of-k-consecutive-numbers/index.html",redirect:"/heap/solutions/1296-divide-array-in-sets-of-k-consecutive-numbers/"},{path:"/heap/solutions/1296-divide-array-in-sets-of-k-consecutive-numbers.html",redirect:"/heap/solutions/1296-divide-array-in-sets-of-k-consecutive-numbers/"},{name:"v-42cbc720",path:"/linked-list/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-42cbc720").then(a)}},{path:"/linked-list/index.html",redirect:"/linked-list/"},{name:"v-51e1b0b1",path:"/linked-list/basic/0002-add-two-numbers/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-51e1b0b1").then(a)}},{path:"/linked-list/basic/0002-add-two-numbers/index.html",redirect:"/linked-list/basic/0002-add-two-numbers/"},{path:"/linked-list/basic/0002-add-two-numbers.html",redirect:"/linked-list/basic/0002-add-two-numbers/"},{name:"v-f73400f6",path:"/linked-list/basic/0021-merge-two-sorted-lists/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-f73400f6").then(a)}},{path:"/linked-list/basic/0021-merge-two-sorted-lists/index.html",redirect:"/linked-list/basic/0021-merge-two-sorted-lists/"},{path:"/linked-list/basic/0021-merge-two-sorted-lists.html",redirect:"/linked-list/basic/0021-merge-two-sorted-lists/"},{name:"v-3dfb40b6",path:"/linked-list/basic/0023-merge-k-sorted-lists/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3dfb40b6").then(a)}},{path:"/linked-list/basic/0023-merge-k-sorted-lists/index.html",redirect:"/linked-list/basic/0023-merge-k-sorted-lists/"},{path:"/linked-list/basic/0023-merge-k-sorted-lists.html",redirect:"/linked-list/basic/0023-merge-k-sorted-lists/"},{name:"v-0968fa46",path:"/linked-list/basic/0024-swap-nodes-in-pairs/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0968fa46").then(a)}},{path:"/linked-list/basic/0024-swap-nodes-in-pairs/index.html",redirect:"/linked-list/basic/0024-swap-nodes-in-pairs/"},{path:"/linked-list/basic/0024-swap-nodes-in-pairs.html",redirect:"/linked-list/basic/0024-swap-nodes-in-pairs/"},{name:"v-ffef3f36",path:"/linked-list/basic/0025-reverse-nodes-in-k-group/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-ffef3f36").then(a)}},{path:"/linked-list/basic/0025-reverse-nodes-in-k-group/index.html",redirect:"/linked-list/basic/0025-reverse-nodes-in-k-group/"},{path:"/linked-list/basic/0025-reverse-nodes-in-k-group.html",redirect:"/linked-list/basic/0025-reverse-nodes-in-k-group/"},{name:"v-37cab9d9",path:"/linked-list/basic/0061-rotate-list/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-37cab9d9").then(a)}},{path:"/linked-list/basic/0061-rotate-list/index.html",redirect:"/linked-list/basic/0061-rotate-list/"},{path:"/linked-list/basic/0061-rotate-list.html",redirect:"/linked-list/basic/0061-rotate-list/"},{name:"v-582f322f",path:"/linked-list/basic/0082-remove-duplicates-from-sorted-list-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-582f322f").then(a)}},{path:"/linked-list/basic/0082-remove-duplicates-from-sorted-list-ii/index.html",redirect:"/linked-list/basic/0082-remove-duplicates-from-sorted-list-ii/"},{path:"/linked-list/basic/0082-remove-duplicates-from-sorted-list-ii.html",redirect:"/linked-list/basic/0082-remove-duplicates-from-sorted-list-ii/"},{name:"v-b072eff6",path:"/linked-list/basic/0083-remove-duplicates-from-sorted-list/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-b072eff6").then(a)}},{path:"/linked-list/basic/0083-remove-duplicates-from-sorted-list/index.html",redirect:"/linked-list/basic/0083-remove-duplicates-from-sorted-list/"},{path:"/linked-list/basic/0083-remove-duplicates-from-sorted-list.html",redirect:"/linked-list/basic/0083-remove-duplicates-from-sorted-list/"},{name:"v-739d0ca5",path:"/linked-list/basic/0086-partition-list/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-739d0ca5").then(a)}},{path:"/linked-list/basic/0086-partition-list/index.html",redirect:"/linked-list/basic/0086-partition-list/"},{path:"/linked-list/basic/0086-partition-list.html",redirect:"/linked-list/basic/0086-partition-list/"},{name:"v-2112d365",path:"/linked-list/basic/0092-reverse-linked-list-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2112d365").then(a)}},{path:"/linked-list/basic/0092-reverse-linked-list-ii/index.html",redirect:"/linked-list/basic/0092-reverse-linked-list-ii/"},{path:"/linked-list/basic/0092-reverse-linked-list-ii.html",redirect:"/linked-list/basic/0092-reverse-linked-list-ii/"},{name:"v-d716c28a",path:"/linked-list/basic/0109-convert-sorted-list-to-binary-search-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-d716c28a").then(a)}},{path:"/linked-list/basic/0109-convert-sorted-list-to-binary-search-tree/index.html",redirect:"/linked-list/basic/0109-convert-sorted-list-to-binary-search-tree/"},{path:"/linked-list/basic/0109-convert-sorted-list-to-binary-search-tree.html",redirect:"/linked-list/basic/0109-convert-sorted-list-to-binary-search-tree/"},{name:"v-03374545",path:"/linked-list/basic/0143-reorder-list/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-03374545").then(a)}},{path:"/linked-list/basic/0143-reorder-list/index.html",redirect:"/linked-list/basic/0143-reorder-list/"},{path:"/linked-list/basic/0143-reorder-list.html",redirect:"/linked-list/basic/0143-reorder-list/"},{name:"v-65b3ac6e",path:"/linked-list/basic/0147-insertion-sort-list/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-65b3ac6e").then(a)}},{path:"/linked-list/basic/0147-insertion-sort-list/index.html",redirect:"/linked-list/basic/0147-insertion-sort-list/"},{path:"/linked-list/basic/0147-insertion-sort-list.html",redirect:"/linked-list/basic/0147-insertion-sort-list/"},{name:"v-5e33fa4b",path:"/linked-list/basic/0148-sort-list/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5e33fa4b").then(a)}},{path:"/linked-list/basic/0148-sort-list/index.html",redirect:"/linked-list/basic/0148-sort-list/"},{path:"/linked-list/basic/0148-sort-list.html",redirect:"/linked-list/basic/0148-sort-list/"},{name:"v-2ad54d22",path:"/linked-list/basic/0203-remove-linked-list-elements/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2ad54d22").then(a)}},{path:"/linked-list/basic/0203-remove-linked-list-elements/index.html",redirect:"/linked-list/basic/0203-remove-linked-list-elements/"},{path:"/linked-list/basic/0203-remove-linked-list-elements.html",redirect:"/linked-list/basic/0203-remove-linked-list-elements/"},{name:"v-34097cb6",path:"/linked-list/basic/0234-palindrome-linked-list/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-34097cb6").then(a)}},{path:"/linked-list/basic/0234-palindrome-linked-list/index.html",redirect:"/linked-list/basic/0234-palindrome-linked-list/"},{path:"/linked-list/basic/0234-palindrome-linked-list.html",redirect:"/linked-list/basic/0234-palindrome-linked-list/"},{name:"v-3d11f7de",path:"/linked-list/basic/0206-reverse-linked-list/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3d11f7de").then(a)}},{path:"/linked-list/basic/0206-reverse-linked-list/index.html",redirect:"/linked-list/basic/0206-reverse-linked-list/"},{path:"/linked-list/basic/0206-reverse-linked-list.html",redirect:"/linked-list/basic/0206-reverse-linked-list/"},{name:"v-50872265",path:"/linked-list/basic/0237-delete-node-in-a-linked-list/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-50872265").then(a)}},{path:"/linked-list/basic/0237-delete-node-in-a-linked-list/index.html",redirect:"/linked-list/basic/0237-delete-node-in-a-linked-list/"},{path:"/linked-list/basic/0237-delete-node-in-a-linked-list.html",redirect:"/linked-list/basic/0237-delete-node-in-a-linked-list/"},{name:"v-cbd6f676",path:"/linked-list/basic/0328-odd-even-linked-list/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-cbd6f676").then(a)}},{path:"/linked-list/basic/0328-odd-even-linked-list/index.html",redirect:"/linked-list/basic/0328-odd-even-linked-list/"},{path:"/linked-list/basic/0328-odd-even-linked-list.html",redirect:"/linked-list/basic/0328-odd-even-linked-list/"},{name:"v-8e6dd0b6",path:"/linked-list/basic/0445-add-two-numbers-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-8e6dd0b6").then(a)}},{path:"/linked-list/basic/0445-add-two-numbers-ii/index.html",redirect:"/linked-list/basic/0445-add-two-numbers-ii/"},{path:"/linked-list/basic/0445-add-two-numbers-ii.html",redirect:"/linked-list/basic/0445-add-two-numbers-ii/"},{name:"v-fee15f9e",path:"/linked-list/basic/0876-middle-of-the-linked-list/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-fee15f9e").then(a)}},{path:"/linked-list/basic/0876-middle-of-the-linked-list/index.html",redirect:"/linked-list/basic/0876-middle-of-the-linked-list/"},{path:"/linked-list/basic/0876-middle-of-the-linked-list.html",redirect:"/linked-list/basic/0876-middle-of-the-linked-list/"},{name:"v-5b3183b6",path:"/linked-list/basic/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5b3183b6").then(a)}},{path:"/linked-list/basic/intro/index.html",redirect:"/linked-list/basic/intro/"},{path:"/linked-list/basic/intro.html",redirect:"/linked-list/basic/intro/"},{name:"v-057c8325",path:"/linked-list/design/0146-lru-cache/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-057c8325").then(a)}},{path:"/linked-list/design/0146-lru-cache/index.html",redirect:"/linked-list/design/0146-lru-cache/"},{path:"/linked-list/design/0146-lru-cache.html",redirect:"/linked-list/design/0146-lru-cache/"},{name:"v-3f486746",path:"/linked-list/design/0355-design-twitter/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3f486746").then(a)}},{path:"/linked-list/design/0355-design-twitter/index.html",redirect:"/linked-list/design/0355-design-twitter/"},{path:"/linked-list/design/0355-design-twitter.html",redirect:"/linked-list/design/0355-design-twitter/"},{name:"v-ec532276",path:"/linked-list/design/0460-lfu-cache/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-ec532276").then(a)}},{path:"/linked-list/design/0460-lfu-cache/index.html",redirect:"/linked-list/design/0460-lfu-cache/"},{path:"/linked-list/design/0460-lfu-cache.html",redirect:"/linked-list/design/0460-lfu-cache/"},{name:"v-35248da5",path:"/linked-list/design/1206-design-skiplist/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-35248da5").then(a)}},{path:"/linked-list/design/1206-design-skiplist/index.html",redirect:"/linked-list/design/1206-design-skiplist/"},{path:"/linked-list/design/1206-design-skiplist.html",redirect:"/linked-list/design/1206-design-skiplist/"},{name:"v-4c39c203",path:"/linked-list/fast-slow-points/0019-remove-nth-node-from-end-of-list/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4c39c203").then(a)}},{path:"/linked-list/fast-slow-points/0019-remove-nth-node-from-end-of-list/index.html",redirect:"/linked-list/fast-slow-points/0019-remove-nth-node-from-end-of-list/"},{path:"/linked-list/fast-slow-points/0019-remove-nth-node-from-end-of-list.html",redirect:"/linked-list/fast-slow-points/0019-remove-nth-node-from-end-of-list/"},{name:"v-93a30336",path:"/linked-list/fast-slow-points/0141-linked-list-cycle/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-93a30336").then(a)}},{path:"/linked-list/fast-slow-points/0141-linked-list-cycle/index.html",redirect:"/linked-list/fast-slow-points/0141-linked-list-cycle/"},{path:"/linked-list/fast-slow-points/0141-linked-list-cycle.html",redirect:"/linked-list/fast-slow-points/0141-linked-list-cycle/"},{name:"v-4af15859",path:"/linked-list/fast-slow-points/0142-linked-list-cycle-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4af15859").then(a)}},{path:"/linked-list/fast-slow-points/0142-linked-list-cycle-ii/index.html",redirect:"/linked-list/fast-slow-points/0142-linked-list-cycle-ii/"},{path:"/linked-list/fast-slow-points/0142-linked-list-cycle-ii.html",redirect:"/linked-list/fast-slow-points/0142-linked-list-cycle-ii/"},{name:"v-840b2926",path:"/linked-list/fast-slow-points/0160-intersection-of-two-linked-lists/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-840b2926").then(a)}},{path:"/linked-list/fast-slow-points/0160-intersection-of-two-linked-lists/index.html",redirect:"/linked-list/fast-slow-points/0160-intersection-of-two-linked-lists/"},{path:"/linked-list/fast-slow-points/0160-intersection-of-two-linked-lists.html",redirect:"/linked-list/fast-slow-points/0160-intersection-of-two-linked-lists/"},{name:"v-18966e06",path:"/loop-invariant/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-18966e06").then(a)}},{path:"/loop-invariant/index.html",redirect:"/loop-invariant/"},{name:"v-015b0b3e",path:"/loop-invariant/application/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-015b0b3e").then(a)}},{path:"/loop-invariant/application/index.html",redirect:"/loop-invariant/application/"},{path:"/loop-invariant/application.html",redirect:"/loop-invariant/application/"},{name:"v-5ba60fa6",path:"/loop-invariant/example/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5ba60fa6").then(a)}},{path:"/loop-invariant/example/index.html",redirect:"/loop-invariant/example/"},{path:"/loop-invariant/example.html",redirect:"/loop-invariant/example/"},{name:"v-1d8c24a9",path:"/loop-invariant/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1d8c24a9").then(a)}},{path:"/loop-invariant/intro/index.html",redirect:"/loop-invariant/intro/"},{path:"/loop-invariant/intro.html",redirect:"/loop-invariant/intro/"},{name:"v-625bb365",path:"/loop-invariant/solutions/0026-remove-duplicates-from-sorted-array/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-625bb365").then(a)}},{path:"/loop-invariant/solutions/0026-remove-duplicates-from-sorted-array/index.html",redirect:"/loop-invariant/solutions/0026-remove-duplicates-from-sorted-array/"},{path:"/loop-invariant/solutions/0026-remove-duplicates-from-sorted-array.html",redirect:"/loop-invariant/solutions/0026-remove-duplicates-from-sorted-array/"},{name:"v-bdb38f16",path:"/loop-invariant/solutions/0027-remove-element/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-bdb38f16").then(a)}},{path:"/loop-invariant/solutions/0027-remove-element/index.html",redirect:"/loop-invariant/solutions/0027-remove-element/"},{path:"/loop-invariant/solutions/0027-remove-element.html",redirect:"/loop-invariant/solutions/0027-remove-element/"},{name:"v-a2f8c2f2",path:"/loop-invariant/solutions/0080-remove-duplicates-from-sorted-array-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a2f8c2f2").then(a)}},{path:"/loop-invariant/solutions/0080-remove-duplicates-from-sorted-array-ii/index.html",redirect:"/loop-invariant/solutions/0080-remove-duplicates-from-sorted-array-ii/"},{path:"/loop-invariant/solutions/0080-remove-duplicates-from-sorted-array-ii.html",redirect:"/loop-invariant/solutions/0080-remove-duplicates-from-sorted-array-ii/"},{name:"v-5f355585",path:"/loop-invariant/solutions/0283-move-zeroes/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5f355585").then(a)}},{path:"/loop-invariant/solutions/0283-move-zeroes/index.html",redirect:"/loop-invariant/solutions/0283-move-zeroes/"},{path:"/loop-invariant/solutions/0283-move-zeroes.html",redirect:"/loop-invariant/solutions/0283-move-zeroes/"},{name:"v-6f12ec96",path:"/loop-invariant/summary/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6f12ec96").then(a)}},{path:"/loop-invariant/summary/index.html",redirect:"/loop-invariant/summary/"},{path:"/loop-invariant/summary.html",redirect:"/loop-invariant/summary/"},{name:"v-e0c1ddb4",path:"/math/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-e0c1ddb4").then(a)}},{path:"/math/index.html",redirect:"/math/"},{name:"v-8baa3296",path:"/math/solutions/0507-perfect-number/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-8baa3296").then(a)}},{path:"/math/solutions/0507-perfect-number/index.html",redirect:"/math/solutions/0507-perfect-number/"},{path:"/math/solutions/0507-perfect-number.html",redirect:"/math/solutions/0507-perfect-number/"},{name:"v-43611c23",path:"/merge-sort/0050-powx-n/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-43611c23").then(a)}},{path:"/merge-sort/0050-powx-n/index.html",redirect:"/merge-sort/0050-powx-n/"},{path:"/merge-sort/0050-powx-n.html",redirect:"/merge-sort/0050-powx-n/"},{name:"v-a0059386",path:"/merge-sort/0051-shu-zu-zhong-de-ni-xu-dui-lcof/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a0059386").then(a)}},{path:"/merge-sort/0051-shu-zu-zhong-de-ni-xu-dui-lcof/index.html",redirect:"/merge-sort/0051-shu-zu-zhong-de-ni-xu-dui-lcof/"},{path:"/merge-sort/0051-shu-zu-zhong-de-ni-xu-dui-lcof.html",redirect:"/merge-sort/0051-shu-zu-zhong-de-ni-xu-dui-lcof/"},{name:"v-58d27333",path:"/merge-sort/0088-merge-sorted-array/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-58d27333").then(a)}},{path:"/merge-sort/0088-merge-sorted-array/index.html",redirect:"/merge-sort/0088-merge-sorted-array/"},{path:"/merge-sort/0088-merge-sorted-array.html",redirect:"/merge-sort/0088-merge-sorted-array/"},{name:"v-83038776",path:"/merge-sort/0315-count-of-smaller-numbers-after-self/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-83038776").then(a)}},{path:"/merge-sort/0315-count-of-smaller-numbers-after-self/index.html",redirect:"/merge-sort/0315-count-of-smaller-numbers-after-self/"},{path:"/merge-sort/0315-count-of-smaller-numbers-after-self.html",redirect:"/merge-sort/0315-count-of-smaller-numbers-after-self/"},{name:"v-61433385",path:"/merge-sort/0493-reverse-pairs/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-61433385").then(a)}},{path:"/merge-sort/0493-reverse-pairs/index.html",redirect:"/merge-sort/0493-reverse-pairs/"},{path:"/merge-sort/0493-reverse-pairs.html",redirect:"/merge-sort/0493-reverse-pairs/"},{name:"v-3dca8686",path:"/merge-sort/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3dca8686").then(a)}},{path:"/merge-sort/index.html",redirect:"/merge-sort/"},{name:"v-7afd6f05",path:"/merge-sort/bottom2up/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7afd6f05").then(a)}},{path:"/merge-sort/bottom2up/index.html",redirect:"/merge-sort/bottom2up/"},{path:"/merge-sort/bottom2up.html",redirect:"/merge-sort/bottom2up/"},{name:"v-4267839e",path:"/merge-sort/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4267839e").then(a)}},{path:"/merge-sort/intro/index.html",redirect:"/merge-sort/intro/"},{path:"/merge-sort/intro.html",redirect:"/merge-sort/intro/"},{name:"v-2972fd5b",path:"/merge-sort/merge-sort-optimize/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2972fd5b").then(a)}},{path:"/merge-sort/merge-sort-optimize/index.html",redirect:"/merge-sort/merge-sort-optimize/"},{path:"/merge-sort/merge-sort-optimize.html",redirect:"/merge-sort/merge-sort-optimize/"},{name:"v-7c9db605",path:"/merge-sort/merge-sort/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7c9db605").then(a)}},{path:"/merge-sort/merge-sort/index.html",redirect:"/merge-sort/merge-sort/"},{path:"/merge-sort/merge-sort.html",redirect:"/merge-sort/merge-sort/"},{name:"v-61e25645",path:"/merge-sort/practice/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-61e25645").then(a)}},{path:"/merge-sort/practice/index.html",redirect:"/merge-sort/practice/"},{path:"/merge-sort/practice.html",redirect:"/merge-sort/practice/"},{name:"v-ec0ef8b4",path:"/monotonous-stack/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-ec0ef8b4").then(a)}},{path:"/monotonous-stack/index.html",redirect:"/monotonous-stack/"},{name:"v-1b385671",path:"/monotonous-stack/solutions/0084-largest-rectangle-in-histogram/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1b385671").then(a)}},{path:"/monotonous-stack/solutions/0084-largest-rectangle-in-histogram/index.html",redirect:"/monotonous-stack/solutions/0084-largest-rectangle-in-histogram/"},{path:"/monotonous-stack/solutions/0084-largest-rectangle-in-histogram.html",redirect:"/monotonous-stack/solutions/0084-largest-rectangle-in-histogram/"},{name:"v-59c7c24a",path:"/monotonous-stack/solutions/0316-remove-duplicate-letters/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-59c7c24a").then(a)}},{path:"/monotonous-stack/solutions/0316-remove-duplicate-letters/index.html",redirect:"/monotonous-stack/solutions/0316-remove-duplicate-letters/"},{path:"/monotonous-stack/solutions/0316-remove-duplicate-letters.html",redirect:"/monotonous-stack/solutions/0316-remove-duplicate-letters/"},{name:"v-0ba86745",path:"/monotonous-stack/solutions/0456-132-pattern/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0ba86745").then(a)}},{path:"/monotonous-stack/solutions/0456-132-pattern/index.html",redirect:"/monotonous-stack/solutions/0456-132-pattern/"},{path:"/monotonous-stack/solutions/0456-132-pattern.html",redirect:"/monotonous-stack/solutions/0456-132-pattern/"},{name:"v-604ac37b",path:"/monotonous-stack/solutions/0496-next-greater-element-i/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-604ac37b").then(a)}},{path:"/monotonous-stack/solutions/0496-next-greater-element-i/index.html",redirect:"/monotonous-stack/solutions/0496-next-greater-element-i/"},{path:"/monotonous-stack/solutions/0496-next-greater-element-i.html",redirect:"/monotonous-stack/solutions/0496-next-greater-element-i/"},{name:"v-6ec9ec85",path:"/monotonous-stack/solutions/0503-next-greater-element-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6ec9ec85").then(a)}},{path:"/monotonous-stack/solutions/0503-next-greater-element-ii/index.html",redirect:"/monotonous-stack/solutions/0503-next-greater-element-ii/"},{path:"/monotonous-stack/solutions/0503-next-greater-element-ii.html",redirect:"/monotonous-stack/solutions/0503-next-greater-element-ii/"},{name:"v-60e69ce5",path:"/monotonous-stack/solutions/0581-shortest-unsorted-continuous-subarray/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-60e69ce5").then(a)}},{path:"/monotonous-stack/solutions/0581-shortest-unsorted-continuous-subarray/index.html",redirect:"/monotonous-stack/solutions/0581-shortest-unsorted-continuous-subarray/"},{path:"/monotonous-stack/solutions/0581-shortest-unsorted-continuous-subarray.html",redirect:"/monotonous-stack/solutions/0581-shortest-unsorted-continuous-subarray/"},{name:"v-b797c6fa",path:"/monotonous-stack/solutions/0739-daily-temperatures/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-b797c6fa").then(a)}},{path:"/monotonous-stack/solutions/0739-daily-temperatures/index.html",redirect:"/monotonous-stack/solutions/0739-daily-temperatures/"},{path:"/monotonous-stack/solutions/0739-daily-temperatures.html",redirect:"/monotonous-stack/solutions/0739-daily-temperatures/"},{name:"v-5a3fc6e6",path:"/monotonous-stack/solutions/0962-maximum-width-ramp/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5a3fc6e6").then(a)}},{path:"/monotonous-stack/solutions/0962-maximum-width-ramp/index.html",redirect:"/monotonous-stack/solutions/0962-maximum-width-ramp/"},{path:"/monotonous-stack/solutions/0962-maximum-width-ramp.html",redirect:"/monotonous-stack/solutions/0962-maximum-width-ramp/"},{name:"v-63704c6e",path:"/monotonous-stack/solutions/0970-sum-of-subarray-minimums/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-63704c6e").then(a)}},{path:"/monotonous-stack/solutions/0970-sum-of-subarray-minimums/index.html",redirect:"/monotonous-stack/solutions/0970-sum-of-subarray-minimums/"},{path:"/monotonous-stack/solutions/0970-sum-of-subarray-minimums.html",redirect:"/monotonous-stack/solutions/0970-sum-of-subarray-minimums/"},{name:"v-2cb152c5",path:"/monotonous-stack/solutions/1673-find-the-most-competitive-subsequence/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2cb152c5").then(a)}},{path:"/monotonous-stack/solutions/1673-find-the-most-competitive-subsequence/index.html",redirect:"/monotonous-stack/solutions/1673-find-the-most-competitive-subsequence/"},{path:"/monotonous-stack/solutions/1673-find-the-most-competitive-subsequence.html",redirect:"/monotonous-stack/solutions/1673-find-the-most-competitive-subsequence/"},{name:"v-3cfd634a",path:"/music/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3cfd634a").then(a)}},{path:"/music/index.html",redirect:"/music/"},{name:"v-27749c7f",path:"/music/dongni/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-27749c7f").then(a)}},{path:"/music/dongni/index.html",redirect:"/music/dongni/"},{path:"/music/dongni.html",redirect:"/music/dongni/"},{name:"v-28e85245",path:"/music/gungunchangjiangdongshishui/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-28e85245").then(a)}},{path:"/music/gungunchangjiangdongshishui/index.html",redirect:"/music/gungunchangjiangdongshishui/"},{path:"/music/gungunchangjiangdongshishui.html",redirect:"/music/gungunchangjiangdongshishui/"},{name:"v-13914f76",path:"/music/lishidetiankong/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-13914f76").then(a)}},{path:"/music/lishidetiankong/index.html",redirect:"/music/lishidetiankong/"},{path:"/music/lishidetiankong.html",redirect:"/music/lishidetiankong/"},{name:"v-36c50fc5",path:"/presum-hashtable/solutions/0523-continuous-subarray-sum/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-36c50fc5").then(a)}},{path:"/presum-hashtable/solutions/0523-continuous-subarray-sum/index.html",redirect:"/presum-hashtable/solutions/0523-continuous-subarray-sum/"},{path:"/presum-hashtable/solutions/0523-continuous-subarray-sum.html",redirect:"/presum-hashtable/solutions/0523-continuous-subarray-sum/"},{name:"v-4a41daf7",path:"/music/zheyibai/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4a41daf7").then(a)}},{path:"/music/zheyibai/index.html",redirect:"/music/zheyibai/"},{path:"/music/zheyibai.html",redirect:"/music/zheyibai/"},{name:"v-73a01986",path:"/presum-hashtable/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-73a01986").then(a)}},{path:"/presum-hashtable/index.html",redirect:"/presum-hashtable/"},{name:"v-1ebbe39e",path:"/presum-hashtable/solutions/0525-contiguous-array/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1ebbe39e").then(a)}},{path:"/presum-hashtable/solutions/0525-contiguous-array/index.html",redirect:"/presum-hashtable/solutions/0525-contiguous-array/"},{path:"/presum-hashtable/solutions/0525-contiguous-array.html",redirect:"/presum-hashtable/solutions/0525-contiguous-array/"},{name:"v-5cfc1d6e",path:"/presum-hashtable/solutions/0974-subarray-sums-divisible-by-k/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5cfc1d6e").then(a)}},{path:"/presum-hashtable/solutions/0974-subarray-sums-divisible-by-k/index.html",redirect:"/presum-hashtable/solutions/0974-subarray-sums-divisible-by-k/"},{path:"/presum-hashtable/solutions/0974-subarray-sums-divisible-by-k.html",redirect:"/presum-hashtable/solutions/0974-subarray-sums-divisible-by-k/"},{name:"v-59402925",path:"/presum-hashtable/solutions/0560-subarray-sum-equals-k/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-59402925").then(a)}},{path:"/presum-hashtable/solutions/0560-subarray-sum-equals-k/index.html",redirect:"/presum-hashtable/solutions/0560-subarray-sum-equals-k/"},{path:"/presum-hashtable/solutions/0560-subarray-sum-equals-k.html",redirect:"/presum-hashtable/solutions/0560-subarray-sum-equals-k/"},{name:"v-067af542",path:"/presum-hashtable/solutions/1248-count-number-of-nice-subarrays/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-067af542").then(a)}},{path:"/presum-hashtable/solutions/1248-count-number-of-nice-subarrays/index.html",redirect:"/presum-hashtable/solutions/1248-count-number-of-nice-subarrays/"},{path:"/presum-hashtable/solutions/1248-count-number-of-nice-subarrays.html",redirect:"/presum-hashtable/solutions/1248-count-number-of-nice-subarrays/"},{name:"v-33e0b295",path:"/presum-hashtable/solutions/1314-matrix-block-sum/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-33e0b295").then(a)}},{path:"/presum-hashtable/solutions/1314-matrix-block-sum/index.html",redirect:"/presum-hashtable/solutions/1314-matrix-block-sum/"},{path:"/presum-hashtable/solutions/1314-matrix-block-sum.html",redirect:"/presum-hashtable/solutions/1314-matrix-block-sum/"},{name:"v-e058a636",path:"/queue/solutions/0239-sliding-window-maximum/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-e058a636").then(a)}},{path:"/queue/solutions/0239-sliding-window-maximum/index.html",redirect:"/queue/solutions/0239-sliding-window-maximum/"},{path:"/queue/solutions/0239-sliding-window-maximum.html",redirect:"/queue/solutions/0239-sliding-window-maximum/"},{name:"v-3fafbf1c",path:"/queue/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3fafbf1c").then(a)}},{path:"/queue/index.html",redirect:"/queue/"},{name:"v-26abd165",path:"/queue/solutions/0621-task-scheduler/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-26abd165").then(a)}},{path:"/queue/solutions/0621-task-scheduler/index.html",redirect:"/queue/solutions/0621-task-scheduler/"},{path:"/queue/solutions/0621-task-scheduler.html",redirect:"/queue/solutions/0621-task-scheduler/"},{name:"v-2571e6d5",path:"/queue/solutions/0622-design-circular-queue/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2571e6d5").then(a)}},{path:"/queue/solutions/0622-design-circular-queue/index.html",redirect:"/queue/solutions/0622-design-circular-queue/"},{path:"/queue/solutions/0622-design-circular-queue.html",redirect:"/queue/solutions/0622-design-circular-queue/"},{name:"v-6e95c396",path:"/queue/solutions/0630-course-schedule-iii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6e95c396").then(a)}},{path:"/queue/solutions/0630-course-schedule-iii/index.html",redirect:"/queue/solutions/0630-course-schedule-iii/"},{path:"/queue/solutions/0630-course-schedule-iii.html",redirect:"/queue/solutions/0630-course-schedule-iii/"},{name:"v-ca0a5286",path:"/queue/solutions/0641-design-circular-deque/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-ca0a5286").then(a)}},{path:"/queue/solutions/0641-design-circular-deque/index.html",redirect:"/queue/solutions/0641-design-circular-deque/"},{path:"/queue/solutions/0641-design-circular-deque.html",redirect:"/queue/solutions/0641-design-circular-deque/"},{name:"v-0185e1b6",path:"/queue/solutions/0933-number-of-recent-calls/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0185e1b6").then(a)}},{path:"/queue/solutions/0933-number-of-recent-calls/index.html",redirect:"/queue/solutions/0933-number-of-recent-calls/"},{path:"/queue/solutions/0933-number-of-recent-calls.html",redirect:"/queue/solutions/0933-number-of-recent-calls/"},{name:"v-3e43a959",path:"/quick-sort/0040-zui-xiao-de-kge-shu-lcof/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3e43a959").then(a)}},{path:"/quick-sort/0040-zui-xiao-de-kge-shu-lcof/index.html",redirect:"/quick-sort/0040-zui-xiao-de-kge-shu-lcof/"},{path:"/quick-sort/0040-zui-xiao-de-kge-shu-lcof.html",redirect:"/quick-sort/0040-zui-xiao-de-kge-shu-lcof/"},{name:"v-f829daf6",path:"/quick-sort/0075-sort-colors/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-f829daf6").then(a)}},{path:"/quick-sort/0075-sort-colors/index.html",redirect:"/quick-sort/0075-sort-colors/"},{path:"/quick-sort/0075-sort-colors.html",redirect:"/quick-sort/0075-sort-colors/"},{name:"v-71623345",path:"/quick-sort/0215-kth-largest-element-in-an-array/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-71623345").then(a)}},{path:"/quick-sort/0215-kth-largest-element-in-an-array/index.html",redirect:"/quick-sort/0215-kth-largest-element-in-an-array/"},{path:"/quick-sort/0215-kth-largest-element-in-an-array.html",redirect:"/quick-sort/0215-kth-largest-element-in-an-array/"},{name:"v-c5448ab6",path:"/quick-sort/0451-sort-characters-by-frequency/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-c5448ab6").then(a)}},{path:"/quick-sort/0451-sort-characters-by-frequency/index.html",redirect:"/quick-sort/0451-sort-characters-by-frequency/"},{path:"/quick-sort/0451-sort-characters-by-frequency.html",redirect:"/quick-sort/0451-sort-characters-by-frequency/"},{name:"v-853d8742",path:"/quick-sort/17-14-smallest-k-lcci/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-853d8742").then(a)}},{path:"/quick-sort/17-14-smallest-k-lcci/index.html",redirect:"/quick-sort/17-14-smallest-k-lcci/"},{path:"/quick-sort/17-14-smallest-k-lcci.html",redirect:"/quick-sort/17-14-smallest-k-lcci/"},{name:"v-b3617cb4",path:"/quick-sort/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-b3617cb4").then(a)}},{path:"/quick-sort/index.html",redirect:"/quick-sort/"},{name:"v-b4017dca",path:"/quick-sort/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-b4017dca").then(a)}},{path:"/quick-sort/intro/index.html",redirect:"/quick-sort/intro/"},{path:"/quick-sort/intro.html",redirect:"/quick-sort/intro/"},{name:"v-77eed1e4",path:"/quick-sort/partition%20%E5%87%A0%E7%A7%8D%E5%86%99%E6%B3%95%E6%AF%94%E8%BE%83/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-77eed1e4").then(a)}},{path:"/quick-sort/partition 几种写法比较/",redirect:"/quick-sort/partition%20%E5%87%A0%E7%A7%8D%E5%86%99%E6%B3%95%E6%AF%94%E8%BE%83/"},{path:"/quick-sort/partition%20%E5%87%A0%E7%A7%8D%E5%86%99%E6%B3%95%E6%AF%94%E8%BE%83/index.html",redirect:"/quick-sort/partition%20%E5%87%A0%E7%A7%8D%E5%86%99%E6%B3%95%E6%AF%94%E8%BE%83/"},{path:"/quick-sort/partition 几种写法比较.html",redirect:"/quick-sort/partition%20%E5%87%A0%E7%A7%8D%E5%86%99%E6%B3%95%E6%AF%94%E8%BE%83/"},{name:"v-5442b1c2",path:"/quick-sort/partition/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5442b1c2").then(a)}},{path:"/quick-sort/partition/index.html",redirect:"/quick-sort/partition/"},{path:"/quick-sort/partition.html",redirect:"/quick-sort/partition/"},{name:"v-05924865",path:"/quick-sort/quick-sort-basic/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-05924865").then(a)}},{path:"/quick-sort/quick-sort-basic/index.html",redirect:"/quick-sort/quick-sort-basic/"},{path:"/quick-sort/quick-sort-basic.html",redirect:"/quick-sort/quick-sort-basic/"},{name:"v-103ac39b",path:"/quick-sort/quick-sort-optimize/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-103ac39b").then(a)}},{path:"/quick-sort/quick-sort-optimize/index.html",redirect:"/quick-sort/quick-sort-optimize/"},{path:"/quick-sort/quick-sort-optimize.html",redirect:"/quick-sort/quick-sort-optimize/"},{name:"v-56c9d6af",path:"/quick-sort/quick-sort-three-ways/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-56c9d6af").then(a)}},{path:"/quick-sort/quick-sort-three-ways/index.html",redirect:"/quick-sort/quick-sort-three-ways/"},{path:"/quick-sort/quick-sort-three-ways.html",redirect:"/quick-sort/quick-sort-three-ways/"},{name:"v-65ca7e6a",path:"/quick-sort/quick-sort-two-ways/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-65ca7e6a").then(a)}},{path:"/quick-sort/quick-sort-two-ways/index.html",redirect:"/quick-sort/quick-sort-two-ways/"},{path:"/quick-sort/quick-sort-two-ways.html",redirect:"/quick-sort/quick-sort-two-ways/"},{name:"v-5191d686",path:"/quick-sort/random-select-pivot/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5191d686").then(a)}},{path:"/quick-sort/random-select-pivot/index.html",redirect:"/quick-sort/random-select-pivot/"},{path:"/quick-sort/random-select-pivot.html",redirect:"/quick-sort/random-select-pivot/"},{name:"v-b94e83ca",path:"/quick-sort/review-loop-invariant/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-b94e83ca").then(a)}},{path:"/quick-sort/review-loop-invariant/index.html",redirect:"/quick-sort/review-loop-invariant/"},{path:"/quick-sort/review-loop-invariant.html",redirect:"/quick-sort/review-loop-invariant/"},{name:"v-4da3b225",path:"/quick-sort/review-recursion/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4da3b225").then(a)}},{path:"/quick-sort/review-recursion/index.html",redirect:"/quick-sort/review-recursion/"},{path:"/quick-sort/review-recursion.html",redirect:"/quick-sort/review-recursion/"},{name:"v-4644022d",path:"/quick-sort/summary-partition/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4644022d").then(a)}},{path:"/quick-sort/summary-partition/index.html",redirect:"/quick-sort/summary-partition/"},{path:"/quick-sort/summary-partition.html",redirect:"/quick-sort/summary-partition/"},{name:"v-7302cb32",path:"/quick-sort/summary/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7302cb32").then(a)}},{path:"/quick-sort/summary/index.html",redirect:"/quick-sort/summary/"},{path:"/quick-sort/summary.html",redirect:"/quick-sort/summary/"},{name:"v-9056ab1e",path:"/sliding-window/01/0209-minimum-size-subarray-sum/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-9056ab1e").then(a)}},{path:"/sliding-window/01/0209-minimum-size-subarray-sum/index.html",redirect:"/sliding-window/01/0209-minimum-size-subarray-sum/"},{path:"/sliding-window/01/0209-minimum-size-subarray-sum.html",redirect:"/sliding-window/01/0209-minimum-size-subarray-sum/"},{name:"v-838c4236",path:"/sliding-window/01/0003-longest-substring-without-repeating-characters/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-838c4236").then(a)}},{path:"/sliding-window/01/0003-longest-substring-without-repeating-characters/index.html",redirect:"/sliding-window/01/0003-longest-substring-without-repeating-characters/"},{path:"/sliding-window/01/0003-longest-substring-without-repeating-characters.html",redirect:"/sliding-window/01/0003-longest-substring-without-repeating-characters/"},{name:"v-91061236",path:"/sliding-window/01/summary/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-91061236").then(a)}},{path:"/sliding-window/01/summary/index.html",redirect:"/sliding-window/01/summary/"},{path:"/sliding-window/01/summary.html",redirect:"/sliding-window/01/summary/"},{name:"v-1a5363e5",path:"/sliding-window/02/0076-minimum-window-substring/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1a5363e5").then(a)}},{path:"/sliding-window/02/0076-minimum-window-substring/index.html",redirect:"/sliding-window/02/0076-minimum-window-substring/"},{path:"/sliding-window/02/0076-minimum-window-substring.html",redirect:"/sliding-window/02/0076-minimum-window-substring/"},{name:"v-041dd3be",path:"/sliding-window/02/0567-permutation-in-string/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-041dd3be").then(a)}},{path:"/sliding-window/02/0567-permutation-in-string/index.html",redirect:"/sliding-window/02/0567-permutation-in-string/"},{path:"/sliding-window/02/0567-permutation-in-string.html",redirect:"/sliding-window/02/0567-permutation-in-string/"},{name:"v-f28fde76",path:"/sliding-window/02/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-f28fde76").then(a)}},{path:"/sliding-window/02/intro/index.html",redirect:"/sliding-window/02/intro/"},{path:"/sliding-window/02/intro.html",redirect:"/sliding-window/02/intro/"},{name:"v-3e91d245",path:"/sliding-window/03/1004-max-consecutive-ones-iii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3e91d245").then(a)}},{path:"/sliding-window/03/1004-max-consecutive-ones-iii/index.html",redirect:"/sliding-window/03/1004-max-consecutive-ones-iii/"},{path:"/sliding-window/03/1004-max-consecutive-ones-iii.html",redirect:"/sliding-window/03/1004-max-consecutive-ones-iii/"},{name:"v-08940b3d",path:"/sliding-window/03/0424-longest-repeating-character-replacement/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-08940b3d").then(a)}},{path:"/sliding-window/03/0424-longest-repeating-character-replacement/index.html",redirect:"/sliding-window/03/0424-longest-repeating-character-replacement/"},{path:"/sliding-window/03/0424-longest-repeating-character-replacement.html",redirect:"/sliding-window/03/0424-longest-repeating-character-replacement/"},{name:"v-2c356eea",path:"/sliding-window/03/1493-longest-subarray-of-1s-after-deleting-one-element/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2c356eea").then(a)}},{path:"/sliding-window/03/1493-longest-subarray-of-1s-after-deleting-one-element/index.html",redirect:"/sliding-window/03/1493-longest-subarray-of-1s-after-deleting-one-element/"},{path:"/sliding-window/03/1493-longest-subarray-of-1s-after-deleting-one-element.html",redirect:"/sliding-window/03/1493-longest-subarray-of-1s-after-deleting-one-element/"},{name:"v-d23f8136",path:"/sliding-window/03/1208-get-equal-substrings-within-budget/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-d23f8136").then(a)}},{path:"/sliding-window/03/1208-get-equal-substrings-within-budget/index.html",redirect:"/sliding-window/03/1208-get-equal-substrings-within-budget/"},{path:"/sliding-window/03/1208-get-equal-substrings-within-budget.html",redirect:"/sliding-window/03/1208-get-equal-substrings-within-budget/"},{name:"v-576aad65",path:"/sliding-window/03/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-576aad65").then(a)}},{path:"/sliding-window/03/intro/index.html",redirect:"/sliding-window/03/intro/"},{path:"/sliding-window/03/intro.html",redirect:"/sliding-window/03/intro/"},{name:"v-65018d05",path:"/sliding-window/04/0159-longest-substring-with-at-most-two-distinct-characters/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-65018d05").then(a)}},{path:"/sliding-window/04/0159-longest-substring-with-at-most-two-distinct-characters/index.html",redirect:"/sliding-window/04/0159-longest-substring-with-at-most-two-distinct-characters/"},{path:"/sliding-window/04/0159-longest-substring-with-at-most-two-distinct-characters.html",redirect:"/sliding-window/04/0159-longest-substring-with-at-most-two-distinct-characters/"},{name:"v-39bdb2e5",path:"/sliding-window/04/0340-longest-substring-with-at-most-k-distinct-characters/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-39bdb2e5").then(a)}},{path:"/sliding-window/04/0340-longest-substring-with-at-most-k-distinct-characters/index.html",redirect:"/sliding-window/04/0340-longest-substring-with-at-most-k-distinct-characters/"},{path:"/sliding-window/04/0340-longest-substring-with-at-most-k-distinct-characters.html",redirect:"/sliding-window/04/0340-longest-substring-with-at-most-k-distinct-characters/"},{name:"v-3b21ecb6",path:"/sliding-window/04/0713-subarray-product-less-than-k/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3b21ecb6").then(a)}},{path:"/sliding-window/04/0713-subarray-product-less-than-k/index.html",redirect:"/sliding-window/04/0713-subarray-product-less-than-k/"},{path:"/sliding-window/04/0713-subarray-product-less-than-k.html",redirect:"/sliding-window/04/0713-subarray-product-less-than-k/"},{name:"v-16b59b25",path:"/sliding-window/04/0904-fruit-into-baskets/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-16b59b25").then(a)}},{path:"/sliding-window/04/0904-fruit-into-baskets/index.html",redirect:"/sliding-window/04/0904-fruit-into-baskets/"},{path:"/sliding-window/04/0904-fruit-into-baskets.html",redirect:"/sliding-window/04/0904-fruit-into-baskets/"},{name:"v-46bea2f6",path:"/sliding-window/05/1438-longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-46bea2f6").then(a)}},{path:"/sliding-window/05/1438-longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit/index.html",redirect:"/sliding-window/05/1438-longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit/"},{path:"/sliding-window/05/1438-longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit.html",redirect:"/sliding-window/05/1438-longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit/"},{name:"v-281d4a05",path:"/sliding-window/04/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-281d4a05").then(a)}},{path:"/sliding-window/04/intro/index.html",redirect:"/sliding-window/04/intro/"},{path:"/sliding-window/04/intro.html",redirect:"/sliding-window/04/intro/"},{name:"v-0e6032b6",path:"/sliding-window/05/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0e6032b6").then(a)}},{path:"/sliding-window/05/intro/index.html",redirect:"/sliding-window/05/intro/"},{path:"/sliding-window/05/intro.html",redirect:"/sliding-window/05/intro/"},{name:"v-3c738345",path:"/sliding-window/06/0643-maximum-average-subarray-i/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3c738345").then(a)}},{path:"/sliding-window/06/0643-maximum-average-subarray-i/index.html",redirect:"/sliding-window/06/0643-maximum-average-subarray-i/"},{path:"/sliding-window/06/0643-maximum-average-subarray-i.html",redirect:"/sliding-window/06/0643-maximum-average-subarray-i/"},{name:"v-10bb2036",path:"/sliding-window/06/0978-longest-turbulent-subarray/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-10bb2036").then(a)}},{path:"/sliding-window/06/0978-longest-turbulent-subarray/index.html",redirect:"/sliding-window/06/0978-longest-turbulent-subarray/"},{path:"/sliding-window/06/0978-longest-turbulent-subarray.html",redirect:"/sliding-window/06/0978-longest-turbulent-subarray/"},{name:"v-6c160b37",path:"/sliding-window/06/0674-longest-continuous-increasing-subsequence/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6c160b37").then(a)}},{path:"/sliding-window/06/0674-longest-continuous-increasing-subsequence/index.html",redirect:"/sliding-window/06/0674-longest-continuous-increasing-subsequence/"},{path:"/sliding-window/06/0674-longest-continuous-increasing-subsequence.html",redirect:"/sliding-window/06/0674-longest-continuous-increasing-subsequence/"},{name:"v-02906445",path:"/sliding-window/06/1052-grumpy-bookstore-owner/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-02906445").then(a)}},{path:"/sliding-window/06/1052-grumpy-bookstore-owner/index.html",redirect:"/sliding-window/06/1052-grumpy-bookstore-owner/"},{path:"/sliding-window/06/1052-grumpy-bookstore-owner.html",redirect:"/sliding-window/06/1052-grumpy-bookstore-owner/"},{name:"v-35db9f65",path:"/sliding-window/06/1423-maximum-points-you-can-obtain-from-cards/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-35db9f65").then(a)}},{path:"/sliding-window/06/1423-maximum-points-you-can-obtain-from-cards/index.html",redirect:"/sliding-window/06/1423-maximum-points-you-can-obtain-from-cards/"},{path:"/sliding-window/06/1423-maximum-points-you-can-obtain-from-cards.html",redirect:"/sliding-window/06/1423-maximum-points-you-can-obtain-from-cards/"},{name:"v-1cf2ead9",path:"/sliding-window/06/1456-maximum-number-of-vowels-in-a-substring-of-given-length/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1cf2ead9").then(a)}},{path:"/sliding-window/06/1456-maximum-number-of-vowels-in-a-substring-of-given-length/index.html",redirect:"/sliding-window/06/1456-maximum-number-of-vowels-in-a-substring-of-given-length/"},{path:"/sliding-window/06/1456-maximum-number-of-vowels-in-a-substring-of-given-length.html",redirect:"/sliding-window/06/1456-maximum-number-of-vowels-in-a-substring-of-given-length/"},{name:"v-2d6aa9a5",path:"/sliding-window/06/1658-minimum-operations-to-reduce-x-to-zero/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2d6aa9a5").then(a)}},{path:"/sliding-window/06/1658-minimum-operations-to-reduce-x-to-zero/index.html",redirect:"/sliding-window/06/1658-minimum-operations-to-reduce-x-to-zero/"},{path:"/sliding-window/06/1658-minimum-operations-to-reduce-x-to-zero.html",redirect:"/sliding-window/06/1658-minimum-operations-to-reduce-x-to-zero/"},{name:"v-6cfaf976",path:"/sliding-window/06/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6cfaf976").then(a)}},{path:"/sliding-window/06/intro/index.html",redirect:"/sliding-window/06/intro/"},{path:"/sliding-window/06/intro.html",redirect:"/sliding-window/06/intro/"},{name:"v-08f57306",path:"/sliding-window/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-08f57306").then(a)}},{path:"/sliding-window/index.html",redirect:"/sliding-window/"},{name:"v-6add3944",path:"/stack/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6add3944").then(a)}},{path:"/stack/index.html",redirect:"/stack/"},{name:"v-0d63d502",path:"/sliding-window/02/0438-find-all-anagrams-in-a-string/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0d63d502").then(a)}},{path:"/sliding-window/02/0438-find-all-anagrams-in-a-string/index.html",redirect:"/sliding-window/02/0438-find-all-anagrams-in-a-string/"},{path:"/sliding-window/02/0438-find-all-anagrams-in-a-string.html",redirect:"/sliding-window/02/0438-find-all-anagrams-in-a-string/"},{name:"v-0f85e4a5",path:"/stack/solutions/0020-valid-parentheses/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0f85e4a5").then(a)}},{path:"/stack/solutions/0020-valid-parentheses/index.html",redirect:"/stack/solutions/0020-valid-parentheses/"},{path:"/stack/solutions/0020-valid-parentheses.html",redirect:"/stack/solutions/0020-valid-parentheses/"},{name:"v-4b36484f",path:"/stack/solutions/0094-binary-tree-inorder-traversal/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4b36484f").then(a)}},{path:"/stack/solutions/0094-binary-tree-inorder-traversal/index.html",redirect:"/stack/solutions/0094-binary-tree-inorder-traversal/"},{path:"/stack/solutions/0094-binary-tree-inorder-traversal.html",redirect:"/stack/solutions/0094-binary-tree-inorder-traversal/"},{name:"v-2715a4ad",path:"/stack/solutions/0071-simplify-path/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2715a4ad").then(a)}},{path:"/stack/solutions/0071-simplify-path/index.html",redirect:"/stack/solutions/0071-simplify-path/"},{path:"/stack/solutions/0071-simplify-path.html",redirect:"/stack/solutions/0071-simplify-path/"},{name:"v-edca7576",path:"/stack/solutions/0144-binary-tree-preorder-traversal/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-edca7576").then(a)}},{path:"/stack/solutions/0144-binary-tree-preorder-traversal/index.html",redirect:"/stack/solutions/0144-binary-tree-preorder-traversal/"},{path:"/stack/solutions/0144-binary-tree-preorder-traversal.html",redirect:"/stack/solutions/0144-binary-tree-preorder-traversal/"},{name:"v-7e95e336",path:"/stack/solutions/0150-evaluate-reverse-polish-notation/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7e95e336").then(a)}},{path:"/stack/solutions/0150-evaluate-reverse-polish-notation/index.html",redirect:"/stack/solutions/0150-evaluate-reverse-polish-notation/"},{path:"/stack/solutions/0150-evaluate-reverse-polish-notation.html",redirect:"/stack/solutions/0150-evaluate-reverse-polish-notation/"},{name:"v-983abe52",path:"/stack/solutions/0155-min-stack/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-983abe52").then(a)}},{path:"/stack/solutions/0155-min-stack/index.html",redirect:"/stack/solutions/0155-min-stack/"},{path:"/stack/solutions/0155-min-stack.html",redirect:"/stack/solutions/0155-min-stack/"},{name:"v-59ee7ff7",path:"/stack/solutions/0145-binary-tree-postorder-traversal/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-59ee7ff7").then(a)}},{path:"/stack/solutions/0145-binary-tree-postorder-traversal/index.html",redirect:"/stack/solutions/0145-binary-tree-postorder-traversal/"},{path:"/stack/solutions/0145-binary-tree-postorder-traversal.html",redirect:"/stack/solutions/0145-binary-tree-postorder-traversal/"},{name:"v-0457009e",path:"/stack/solutions/0173-binary-search-tree-iterator/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0457009e").then(a)}},{path:"/stack/solutions/0173-binary-search-tree-iterator/index.html",redirect:"/stack/solutions/0173-binary-search-tree-iterator/"},{path:"/stack/solutions/0173-binary-search-tree-iterator.html",redirect:"/stack/solutions/0173-binary-search-tree-iterator/"},{name:"v-85741fb6",path:"/stack/solutions/0225-implement-stack-using-queues/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-85741fb6").then(a)}},{path:"/stack/solutions/0225-implement-stack-using-queues/index.html",redirect:"/stack/solutions/0225-implement-stack-using-queues/"},{path:"/stack/solutions/0225-implement-stack-using-queues.html",redirect:"/stack/solutions/0225-implement-stack-using-queues/"},{name:"v-0d860cb6",path:"/stack/solutions/0232-implement-queue-using-stacks/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0d860cb6").then(a)}},{path:"/stack/solutions/0232-implement-queue-using-stacks/index.html",redirect:"/stack/solutions/0232-implement-queue-using-stacks/"},{path:"/stack/solutions/0232-implement-queue-using-stacks.html",redirect:"/stack/solutions/0232-implement-queue-using-stacks/"},{name:"v-077c61c5",path:"/stack/solutions/0331-verify-preorder-serialization-of-a-binary-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-077c61c5").then(a)}},{path:"/stack/solutions/0331-verify-preorder-serialization-of-a-binary-tree/index.html",redirect:"/stack/solutions/0331-verify-preorder-serialization-of-a-binary-tree/"},{path:"/stack/solutions/0331-verify-preorder-serialization-of-a-binary-tree.html",redirect:"/stack/solutions/0331-verify-preorder-serialization-of-a-binary-tree/"},{name:"v-155bc545",path:"/stack/solutions/0341-flatten-nested-list-iterator/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-155bc545").then(a)}},{path:"/stack/solutions/0341-flatten-nested-list-iterator/index.html",redirect:"/stack/solutions/0341-flatten-nested-list-iterator/"},{path:"/stack/solutions/0341-flatten-nested-list-iterator.html",redirect:"/stack/solutions/0341-flatten-nested-list-iterator/"},{name:"v-b0393936",path:"/stack/solutions/0946-validate-stack-sequences/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-b0393936").then(a)}},{path:"/stack/solutions/0946-validate-stack-sequences/index.html",redirect:"/stack/solutions/0946-validate-stack-sequences/"},{path:"/stack/solutions/0946-validate-stack-sequences.html",redirect:"/stack/solutions/0946-validate-stack-sequences/"},{name:"v-367724a5",path:"/stack/solutions/1111-maximum-nesting-depth-of-two-valid-parentheses-strings/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-367724a5").then(a)}},{path:"/stack/solutions/1111-maximum-nesting-depth-of-two-valid-parentheses-strings/index.html",redirect:"/stack/solutions/1111-maximum-nesting-depth-of-two-valid-parentheses-strings/"},{path:"/stack/solutions/1111-maximum-nesting-depth-of-two-valid-parentheses-strings.html",redirect:"/stack/solutions/1111-maximum-nesting-depth-of-two-valid-parentheses-strings/"},{name:"v-b0bdc7e2",path:"/suanfa8/bulletin-board/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-b0bdc7e2").then(a)}},{path:"/suanfa8/bulletin-board/index.html",redirect:"/suanfa8/bulletin-board/"},{path:"/suanfa8/bulletin-board.html",redirect:"/suanfa8/bulletin-board/"},{name:"v-a5a4e3f6",path:"/suanfa8/changelog/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a5a4e3f6").then(a)}},{path:"/suanfa8/changelog/index.html",redirect:"/suanfa8/changelog/"},{path:"/suanfa8/changelog.html",redirect:"/suanfa8/changelog/"},{name:"v-6356d9a5",path:"/suanfa8/discuss-from-leetcode/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6356d9a5").then(a)}},{path:"/suanfa8/discuss-from-leetcode/index.html",redirect:"/suanfa8/discuss-from-leetcode/"},{path:"/suanfa8/discuss-from-leetcode.html",redirect:"/suanfa8/discuss-from-leetcode/"},{name:"v-173cb7e6",path:"/tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-173cb7e6").then(a)}},{path:"/tree/index.html",redirect:"/tree/"},{name:"v-5a7d501b",path:"/data-structure/binary-search-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5a7d501b").then(a)}},{path:"/data-structure/binary-search-tree/index.html",redirect:"/data-structure/binary-search-tree/"},{path:"/tree/intro.html",redirect:"/data-structure/binary-search-tree/"},{name:"v-131a89f6",path:"/tree/solutions/0094-binary-tree-inorder-traversal/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-131a89f6").then(a)}},{path:"/tree/solutions/0094-binary-tree-inorder-traversal/index.html",redirect:"/tree/solutions/0094-binary-tree-inorder-traversal/"},{path:"/tree/solutions/0094-binary-tree-inorder-traversal.html",redirect:"/tree/solutions/0094-binary-tree-inorder-traversal/"},{name:"v-a554dab6",path:"/tree/solutions/0095-unique-binary-search-trees-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a554dab6").then(a)}},{path:"/tree/solutions/0095-unique-binary-search-trees-ii/index.html",redirect:"/tree/solutions/0095-unique-binary-search-trees-ii/"},{path:"/tree/solutions/0095-unique-binary-search-trees-ii.html",redirect:"/tree/solutions/0095-unique-binary-search-trees-ii/"},{name:"v-37ce7125",path:"/tree/solutions/0098-validate-binary-search-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-37ce7125").then(a)}},{path:"/tree/solutions/0098-validate-binary-search-tree/index.html",redirect:"/tree/solutions/0098-validate-binary-search-tree/"},{path:"/tree/solutions/0098-validate-binary-search-tree.html",redirect:"/tree/solutions/0098-validate-binary-search-tree/"},{name:"v-06e10b05",path:"/tree/solutions/0100-same-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-06e10b05").then(a)}},{path:"/tree/solutions/0100-same-tree/index.html",redirect:"/tree/solutions/0100-same-tree/"},{path:"/tree/solutions/0100-same-tree.html",redirect:"/tree/solutions/0100-same-tree/"},{name:"v-6908511f",path:"/tree/solutions/0101-symmetric-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6908511f").then(a)}},{path:"/tree/solutions/0101-symmetric-tree/index.html",redirect:"/tree/solutions/0101-symmetric-tree/"},{path:"/tree/solutions/0101-symmetric-tree.html",redirect:"/tree/solutions/0101-symmetric-tree/"},{name:"v-496eb3f6",path:"/tree/solutions/0102-binary-tree-level-order-traversal/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-496eb3f6").then(a)}},{path:"/tree/solutions/0102-binary-tree-level-order-traversal/index.html",redirect:"/tree/solutions/0102-binary-tree-level-order-traversal/"},{path:"/tree/solutions/0102-binary-tree-level-order-traversal.html",redirect:"/tree/solutions/0102-binary-tree-level-order-traversal/"},{name:"v-2a1718e3",path:"/tree/solutions/0103-binary-tree-zigzag-level-order-traversal/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2a1718e3").then(a)}},{path:"/tree/solutions/0103-binary-tree-zigzag-level-order-traversal/index.html",redirect:"/tree/solutions/0103-binary-tree-zigzag-level-order-traversal/"},{path:"/tree/solutions/0103-binary-tree-zigzag-level-order-traversal.html",redirect:"/tree/solutions/0103-binary-tree-zigzag-level-order-traversal/"},{name:"v-490d2177",path:"/tree/solutions/0104-maximum-depth-of-binary-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-490d2177").then(a)}},{path:"/tree/solutions/0104-maximum-depth-of-binary-tree/index.html",redirect:"/tree/solutions/0104-maximum-depth-of-binary-tree/"},{path:"/tree/solutions/0104-maximum-depth-of-binary-tree.html",redirect:"/tree/solutions/0104-maximum-depth-of-binary-tree/"},{name:"v-09d9e8f6",path:"/tree/solutions/0105-construct-binary-tree-from-preorder-and-inorder-traversal/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-09d9e8f6").then(a)}},{path:"/tree/solutions/0105-construct-binary-tree-from-preorder-and-inorder-traversal/index.html",redirect:"/tree/solutions/0105-construct-binary-tree-from-preorder-and-inorder-traversal/"},{path:"/tree/solutions/0105-construct-binary-tree-from-preorder-and-inorder-traversal.html",redirect:"/tree/solutions/0105-construct-binary-tree-from-preorder-and-inorder-traversal/"},{name:"v-5af2464a",path:"/tree/solutions/0106-construct-binary-tree-from-inorder-and-postorder-traversal/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5af2464a").then(a)}},{path:"/tree/solutions/0106-construct-binary-tree-from-inorder-and-postorder-traversal/index.html",redirect:"/tree/solutions/0106-construct-binary-tree-from-inorder-and-postorder-traversal/"},{path:"/tree/solutions/0106-construct-binary-tree-from-inorder-and-postorder-traversal.html",redirect:"/tree/solutions/0106-construct-binary-tree-from-inorder-and-postorder-traversal/"},{name:"v-99ac21c2",path:"/tree/solutions/0107-binary-tree-level-order-traversal-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-99ac21c2").then(a)}},{path:"/tree/solutions/0107-binary-tree-level-order-traversal-ii/index.html",redirect:"/tree/solutions/0107-binary-tree-level-order-traversal-ii/"},{path:"/tree/solutions/0107-binary-tree-level-order-traversal-ii.html",redirect:"/tree/solutions/0107-binary-tree-level-order-traversal-ii/"},{name:"v-40db7852",path:"/tree/solutions/0108-convert-sorted-array-to-binary-search-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-40db7852").then(a)}},{path:"/tree/solutions/0108-convert-sorted-array-to-binary-search-tree/index.html",redirect:"/tree/solutions/0108-convert-sorted-array-to-binary-search-tree/"},{path:"/tree/solutions/0108-convert-sorted-array-to-binary-search-tree.html",redirect:"/tree/solutions/0108-convert-sorted-array-to-binary-search-tree/"},{name:"v-0e1ee485",path:"/tree/solutions/0109-convert-sorted-list-to-binary-search-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0e1ee485").then(a)}},{path:"/tree/solutions/0109-convert-sorted-list-to-binary-search-tree/index.html",redirect:"/tree/solutions/0109-convert-sorted-list-to-binary-search-tree/"},{path:"/tree/solutions/0109-convert-sorted-list-to-binary-search-tree.html",redirect:"/tree/solutions/0109-convert-sorted-list-to-binary-search-tree/"},{name:"v-f379e30e",path:"/leetcode-algo/0110-balanced-binary-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-f379e30e").then(a)}},{path:"/leetcode-algo/0110-balanced-binary-tree/index.html",redirect:"/leetcode-algo/0110-balanced-binary-tree/"},{path:"/tree/solutions/0110-balanced-binary-tree.html",redirect:"/leetcode-algo/0110-balanced-binary-tree/"},{name:"v-75d2c8ea",path:"/tree/solutions/0111-minimum-depth-of-binary-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-75d2c8ea").then(a)}},{path:"/tree/solutions/0111-minimum-depth-of-binary-tree/index.html",redirect:"/tree/solutions/0111-minimum-depth-of-binary-tree/"},{path:"/tree/solutions/0111-minimum-depth-of-binary-tree.html",redirect:"/tree/solutions/0111-minimum-depth-of-binary-tree/"},{name:"v-bc8475fe",path:"/tree/solutions/0112-path-sum/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-bc8475fe").then(a)}},{path:"/tree/solutions/0112-path-sum/index.html",redirect:"/tree/solutions/0112-path-sum/"},{path:"/tree/solutions/0112-path-sum.html",redirect:"/tree/solutions/0112-path-sum/"},{name:"v-2f64a44b",path:"/tree/solutions/0129-sum-root-to-leaf-numbers/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2f64a44b").then(a)}},{path:"/tree/solutions/0129-sum-root-to-leaf-numbers/index.html",redirect:"/tree/solutions/0129-sum-root-to-leaf-numbers/"},{path:"/tree/solutions/0129-sum-root-to-leaf-numbers.html",redirect:"/tree/solutions/0129-sum-root-to-leaf-numbers/"},{name:"v-5fe3b505",path:"/tree/solutions/0199-binary-tree-right-side-view/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5fe3b505").then(a)}},{path:"/tree/solutions/0199-binary-tree-right-side-view/index.html",redirect:"/tree/solutions/0199-binary-tree-right-side-view/"},{path:"/tree/solutions/0199-binary-tree-right-side-view.html",redirect:"/tree/solutions/0199-binary-tree-right-side-view/"},{name:"v-3745ea5e",path:"/tree/solutions/0220-contains-duplicate-iii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3745ea5e").then(a)}},{path:"/tree/solutions/0220-contains-duplicate-iii/index.html",redirect:"/tree/solutions/0220-contains-duplicate-iii/"},{path:"/tree/solutions/0220-contains-duplicate-iii.html",redirect:"/tree/solutions/0220-contains-duplicate-iii/"},{name:"v-d06d9bae",path:"/tree/solutions/0226-invert-binary-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-d06d9bae").then(a)}},{path:"/tree/solutions/0226-invert-binary-tree/index.html",redirect:"/tree/solutions/0226-invert-binary-tree/"},{path:"/tree/solutions/0226-invert-binary-tree.html",redirect:"/tree/solutions/0226-invert-binary-tree/"},{name:"v-564d7af6",path:"/tree/solutions/0222-count-complete-tree-nodes/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-564d7af6").then(a)}},{path:"/tree/solutions/0222-count-complete-tree-nodes/index.html",redirect:"/tree/solutions/0222-count-complete-tree-nodes/"},{path:"/tree/solutions/0222-count-complete-tree-nodes.html",redirect:"/tree/solutions/0222-count-complete-tree-nodes/"},{name:"v-7c680e36",path:"/tree/solutions/0230-kth-smallest-element-in-a-bst/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7c680e36").then(a)}},{path:"/tree/solutions/0230-kth-smallest-element-in-a-bst/index.html",redirect:"/tree/solutions/0230-kth-smallest-element-in-a-bst/"},{path:"/tree/solutions/0230-kth-smallest-element-in-a-bst.html",redirect:"/tree/solutions/0230-kth-smallest-element-in-a-bst/"},{name:"v-3ba7a5bf",path:"/tree/solutions/0235-lowest-common-ancestor-of-a-binary-search-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3ba7a5bf").then(a)}},{path:"/tree/solutions/0235-lowest-common-ancestor-of-a-binary-search-tree/index.html",redirect:"/tree/solutions/0235-lowest-common-ancestor-of-a-binary-search-tree/"},{path:"/tree/solutions/0235-lowest-common-ancestor-of-a-binary-search-tree.html",redirect:"/tree/solutions/0235-lowest-common-ancestor-of-a-binary-search-tree/"},{name:"v-d22c4cf6",path:"/tree/solutions/0236-lowest-common-ancestor-of-a-binary-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-d22c4cf6").then(a)}},{path:"/tree/solutions/0236-lowest-common-ancestor-of-a-binary-tree/index.html",redirect:"/tree/solutions/0236-lowest-common-ancestor-of-a-binary-tree/"},{path:"/tree/solutions/0236-lowest-common-ancestor-of-a-binary-tree.html",redirect:"/tree/solutions/0236-lowest-common-ancestor-of-a-binary-tree/"},{name:"v-0066dbe5",path:"/tree/solutions/0257-binary-tree-paths/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0066dbe5").then(a)}},{path:"/tree/solutions/0257-binary-tree-paths/index.html",redirect:"/tree/solutions/0257-binary-tree-paths/"},{path:"/tree/solutions/0257-binary-tree-paths.html",redirect:"/tree/solutions/0257-binary-tree-paths/"},{name:"v-2f3134a5",path:"/tree/solutions/0297-serialize-and-deserialize-binary-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2f3134a5").then(a)}},{path:"/tree/solutions/0297-serialize-and-deserialize-binary-tree/index.html",redirect:"/tree/solutions/0297-serialize-and-deserialize-binary-tree/"},{path:"/tree/solutions/0297-serialize-and-deserialize-binary-tree.html",redirect:"/tree/solutions/0297-serialize-and-deserialize-binary-tree/"},{name:"v-7d29feb7",path:"/tree/solutions/0404-sum-of-left-leaves/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7d29feb7").then(a)}},{path:"/tree/solutions/0404-sum-of-left-leaves/index.html",redirect:"/tree/solutions/0404-sum-of-left-leaves/"},{path:"/tree/solutions/0404-sum-of-left-leaves.html",redirect:"/tree/solutions/0404-sum-of-left-leaves/"},{name:"v-c8a213d6",path:"/tree/solutions/0437-path-sum-iii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-c8a213d6").then(a)}},{path:"/tree/solutions/0437-path-sum-iii/index.html",redirect:"/tree/solutions/0437-path-sum-iii/"},{path:"/tree/solutions/0437-path-sum-iii.html",redirect:"/tree/solutions/0437-path-sum-iii/"},{name:"v-870f6136",path:"/tree/solutions/0449-serialize-and-deserialize-bst/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-870f6136").then(a)}},{path:"/tree/solutions/0449-serialize-and-deserialize-bst/index.html",redirect:"/tree/solutions/0449-serialize-and-deserialize-bst/"},{path:"/tree/solutions/0449-serialize-and-deserialize-bst.html",redirect:"/tree/solutions/0449-serialize-and-deserialize-bst/"},{name:"v-55f83d91",path:"/tree/solutions/0450-delete-node-in-a-bst/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-55f83d91").then(a)}},{path:"/tree/solutions/0450-delete-node-in-a-bst/index.html",redirect:"/tree/solutions/0450-delete-node-in-a-bst/"},{path:"/tree/solutions/0450-delete-node-in-a-bst.html",redirect:"/tree/solutions/0450-delete-node-in-a-bst/"},{name:"v-e49c8976",path:"/tree/solutions/0508-most-frequent-subtree-sum/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-e49c8976").then(a)}},{path:"/tree/solutions/0508-most-frequent-subtree-sum/index.html",redirect:"/tree/solutions/0508-most-frequent-subtree-sum/"},{path:"/tree/solutions/0508-most-frequent-subtree-sum.html",redirect:"/tree/solutions/0508-most-frequent-subtree-sum/"},{name:"v-a948c136",path:"/tree/solutions/0572-subtree-of-another-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a948c136").then(a)}},{path:"/tree/solutions/0572-subtree-of-another-tree/index.html",redirect:"/tree/solutions/0572-subtree-of-another-tree/"},{path:"/tree/solutions/0572-subtree-of-another-tree.html",redirect:"/tree/solutions/0572-subtree-of-another-tree/"},{name:"v-36a5f8a5",path:"/tree/solutions/0863-all-nodes-distance-k-in-binary-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-36a5f8a5").then(a)}},{path:"/tree/solutions/0863-all-nodes-distance-k-in-binary-tree/index.html",redirect:"/tree/solutions/0863-all-nodes-distance-k-in-binary-tree/"},{path:"/tree/solutions/0863-all-nodes-distance-k-in-binary-tree.html",redirect:"/tree/solutions/0863-all-nodes-distance-k-in-binary-tree/"},{name:"v-427b433a",path:"/tree/solutions/0897-increasing-order-search-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-427b433a").then(a)}},{path:"/tree/solutions/0897-increasing-order-search-tree/index.html",redirect:"/tree/solutions/0897-increasing-order-search-tree/"},{path:"/tree/solutions/0897-increasing-order-search-tree.html",redirect:"/tree/solutions/0897-increasing-order-search-tree/"},{name:"v-77978635",path:"/tree/solutions/0951-flip-equivalent-binary-trees/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-77978635").then(a)}},{path:"/tree/solutions/0951-flip-equivalent-binary-trees/index.html",redirect:"/tree/solutions/0951-flip-equivalent-binary-trees/"},{path:"/tree/solutions/0951-flip-equivalent-binary-trees.html",redirect:"/tree/solutions/0951-flip-equivalent-binary-trees/"},{name:"v-c20e1f1a",path:"/tree/solutions/0993-cousins-in-binary-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-c20e1f1a").then(a)}},{path:"/tree/solutions/0993-cousins-in-binary-tree/index.html",redirect:"/tree/solutions/0993-cousins-in-binary-tree/"},{path:"/tree/solutions/0993-cousins-in-binary-tree.html",redirect:"/tree/solutions/0993-cousins-in-binary-tree/"},{name:"v-634458d3",path:"/tree/solutions/1008-construct-binary-search-tree-from-preorder-traversal/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-634458d3").then(a)}},{path:"/tree/solutions/1008-construct-binary-search-tree-from-preorder-traversal/index.html",redirect:"/tree/solutions/1008-construct-binary-search-tree-from-preorder-traversal/"},{path:"/tree/solutions/1008-construct-binary-search-tree-from-preorder-traversal.html",redirect:"/tree/solutions/1008-construct-binary-search-tree-from-preorder-traversal/"},{name:"v-fcced2f6",path:"/tree/solutions/1079-letter-tile-possibilities/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-fcced2f6").then(a)}},{path:"/tree/solutions/1079-letter-tile-possibilities/index.html",redirect:"/tree/solutions/1079-letter-tile-possibilities/"},{path:"/tree/solutions/1079-letter-tile-possibilities.html",redirect:"/tree/solutions/1079-letter-tile-possibilities/"},{name:"v-e92d91be",path:"/tree/solutions/1080-insufficient-nodes-in-root-to-leaf-paths/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-e92d91be").then(a)}},{path:"/tree/solutions/1080-insufficient-nodes-in-root-to-leaf-paths/index.html",redirect:"/tree/solutions/1080-insufficient-nodes-in-root-to-leaf-paths/"},{path:"/tree/solutions/1080-insufficient-nodes-in-root-to-leaf-paths.html",redirect:"/tree/solutions/1080-insufficient-nodes-in-root-to-leaf-paths/"},{name:"v-29844f66",path:"/trie/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-29844f66").then(a)}},{path:"/trie/index.html",redirect:"/trie/"},{name:"v-498f7dbf",path:"/trie/solutions/0208-implement-trie-prefix-tree/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-498f7dbf").then(a)}},{path:"/trie/solutions/0208-implement-trie-prefix-tree/index.html",redirect:"/trie/solutions/0208-implement-trie-prefix-tree/"},{path:"/trie/solutions/0208-implement-trie-prefix-tree.html",redirect:"/trie/solutions/0208-implement-trie-prefix-tree/"},{name:"v-28e5e782",path:"/trie/solutions/0211-design-add-and-search-words-data-structure/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-28e5e782").then(a)}},{path:"/trie/solutions/0211-design-add-and-search-words-data-structure/index.html",redirect:"/trie/solutions/0211-design-add-and-search-words-data-structure/"},{path:"/trie/solutions/0211-design-add-and-search-words-data-structure.html",redirect:"/trie/solutions/0211-design-add-and-search-words-data-structure/"},{name:"v-c65eb46a",path:"/trie/solutions/0212.word-search-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-c65eb46a").then(a)}},{path:"/trie/solutions/0212.word-search-ii/index.html",redirect:"/trie/solutions/0212.word-search-ii/"},{path:"/trie/solutions/0212.word-search-ii.html",redirect:"/trie/solutions/0212.word-search-ii/"},{name:"v-f308db66",path:"/trie/solutions/0336-palindrome-pairs/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-f308db66").then(a)}},{path:"/trie/solutions/0336-palindrome-pairs/index.html",redirect:"/trie/solutions/0336-palindrome-pairs/"},{path:"/trie/solutions/0336-palindrome-pairs.html",redirect:"/trie/solutions/0336-palindrome-pairs/"},{name:"v-7d103a45",path:"/trie/solutions/0677-map-sum-pairs/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7d103a45").then(a)}},{path:"/trie/solutions/0677-map-sum-pairs/index.html",redirect:"/trie/solutions/0677-map-sum-pairs/"},{path:"/trie/solutions/0677-map-sum-pairs.html",redirect:"/trie/solutions/0677-map-sum-pairs/"},{name:"v-fa36ccf6",path:"/trie/solutions/0648-replace-words/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-fa36ccf6").then(a)}},{path:"/trie/solutions/0648-replace-words/index.html",redirect:"/trie/solutions/0648-replace-words/"},{path:"/trie/solutions/0648-replace-words.html",redirect:"/trie/solutions/0648-replace-words/"},{name:"v-789f6499",path:"/trie/solutions/0720-longest-word-in-dictionary/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-789f6499").then(a)}},{path:"/trie/solutions/0720-longest-word-in-dictionary/index.html",redirect:"/trie/solutions/0720-longest-word-in-dictionary/"},{path:"/trie/solutions/0720-longest-word-in-dictionary.html",redirect:"/trie/solutions/0720-longest-word-in-dictionary/"},{name:"v-ab79dc96",path:"/trie/solutions/0745-prefix-and-suffix-search/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-ab79dc96").then(a)}},{path:"/trie/solutions/0745-prefix-and-suffix-search/index.html",redirect:"/trie/solutions/0745-prefix-and-suffix-search/"},{path:"/trie/solutions/0745-prefix-and-suffix-search.html",redirect:"/trie/solutions/0745-prefix-and-suffix-search/"},{name:"v-5e5665f4",path:"/two-pointers/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5e5665f4").then(a)}},{path:"/two-pointers/index.html",redirect:"/two-pointers/"},{name:"v-101dea36",path:"/two-pointers/advance/0633-sum-of-square-numbers/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-101dea36").then(a)}},{path:"/two-pointers/advance/0633-sum-of-square-numbers/index.html",redirect:"/two-pointers/advance/0633-sum-of-square-numbers/"},{path:"/two-pointers/advance/0633-sum-of-square-numbers.html",redirect:"/two-pointers/advance/0633-sum-of-square-numbers/"},{name:"v-41efcb75",path:"/two-pointers/advance/0881-boats-to-save-people/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-41efcb75").then(a)}},{path:"/two-pointers/advance/0881-boats-to-save-people/index.html",redirect:"/two-pointers/advance/0881-boats-to-save-people/"},{path:"/two-pointers/advance/0881-boats-to-save-people.html",redirect:"/two-pointers/advance/0881-boats-to-save-people/"},{name:"v-36833005",path:"/two-pointers/advance/0977-squares-of-a-sorted-array/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-36833005").then(a)}},{path:"/two-pointers/advance/0977-squares-of-a-sorted-array/index.html",redirect:"/two-pointers/advance/0977-squares-of-a-sorted-array/"},{path:"/two-pointers/advance/0977-squares-of-a-sorted-array.html",redirect:"/two-pointers/advance/0977-squares-of-a-sorted-array/"},{name:"v-4e95725d",path:"/two-pointers/basic/0125-valid-palindrome/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4e95725d").then(a)}},{path:"/two-pointers/basic/0125-valid-palindrome/index.html",redirect:"/two-pointers/basic/0125-valid-palindrome/"},{path:"/two-pointers/basic/0125-valid-palindrome.html",redirect:"/two-pointers/basic/0125-valid-palindrome/"},{name:"v-33f54cef",path:"/two-pointers/basic/0167-two-sum-ii-input-array-is-sorted/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-33f54cef").then(a)}},{path:"/two-pointers/basic/0167-two-sum-ii-input-array-is-sorted/index.html",redirect:"/two-pointers/basic/0167-two-sum-ii-input-array-is-sorted/"},{path:"/two-pointers/basic/0167-two-sum-ii-input-array-is-sorted.html",redirect:"/two-pointers/basic/0167-two-sum-ii-input-array-is-sorted/"},{name:"v-1cc81f37",path:"/two-pointers/basic/0344-reverse-string/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1cc81f37").then(a)}},{path:"/two-pointers/basic/0344-reverse-string/index.html",redirect:"/two-pointers/basic/0344-reverse-string/"},{path:"/two-pointers/basic/0344-reverse-string.html",redirect:"/two-pointers/basic/0344-reverse-string/"},{name:"v-a88cc59a",path:"/two-pointers/basic/0345-reverse-vowels-of-a-string/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a88cc59a").then(a)}},{path:"/two-pointers/basic/0345-reverse-vowels-of-a-string/index.html",redirect:"/two-pointers/basic/0345-reverse-vowels-of-a-string/"},{path:"/two-pointers/basic/0345-reverse-vowels-of-a-string.html",redirect:"/two-pointers/basic/0345-reverse-vowels-of-a-string/"},{name:"v-729e2b2a",path:"/two-pointers/basic/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-729e2b2a").then(a)}},{path:"/two-pointers/basic/intro/index.html",redirect:"/two-pointers/basic/intro/"},{path:"/two-pointers/basic/intro.html",redirect:"/two-pointers/basic/intro/"},{name:"v-265c4c55",path:"/two-pointers/importance/0011-container-with-most-water/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-265c4c55").then(a)}},{path:"/two-pointers/importance/0011-container-with-most-water/index.html",redirect:"/two-pointers/importance/0011-container-with-most-water/"},{path:"/two-pointers/importance/0011-container-with-most-water.html",redirect:"/two-pointers/importance/0011-container-with-most-water/"},{name:"v-31c6c5b6",path:"/two-pointers/importance/0015-3sum/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-31c6c5b6").then(a)}},{path:"/two-pointers/importance/0015-3sum/index.html",redirect:"/two-pointers/importance/0015-3sum/"},{path:"/two-pointers/importance/0015-3sum.html",redirect:"/two-pointers/importance/0015-3sum/"},{name:"v-5ec35345",path:"/two-pointers/importance/0016-3sum-closest/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5ec35345").then(a)}},{path:"/two-pointers/importance/0016-3sum-closest/index.html",redirect:"/two-pointers/importance/0016-3sum-closest/"},{path:"/two-pointers/importance/0016-3sum-closest.html",redirect:"/two-pointers/importance/0016-3sum-closest/"},{name:"v-be32d0b6",path:"/two-pointers/importance/0018-4sum/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-be32d0b6").then(a)}},{path:"/two-pointers/importance/0018-4sum/index.html",redirect:"/two-pointers/importance/0018-4sum/"},{path:"/two-pointers/importance/0018-4sum.html",redirect:"/two-pointers/importance/0018-4sum/"},{name:"v-f2b10c5e",path:"/two-pointers/importance/0042-trapping-rain-water/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-f2b10c5e").then(a)}},{path:"/two-pointers/importance/0042-trapping-rain-water/index.html",redirect:"/two-pointers/importance/0042-trapping-rain-water/"},{path:"/two-pointers/importance/0042-trapping-rain-water.html",redirect:"/two-pointers/importance/0042-trapping-rain-water/"},{name:"v-0a625dc5",path:"/two-pointers/importance/intro/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0a625dc5").then(a)}},{path:"/two-pointers/importance/intro/index.html",redirect:"/two-pointers/importance/intro/"},{path:"/two-pointers/importance/intro.html",redirect:"/two-pointers/importance/intro/"},{name:"v-605525c5",path:"/union-find/01/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-605525c5").then(a)}},{path:"/union-find/01/index.html",redirect:"/union-find/01/"},{path:"/union-find/01.html",redirect:"/union-find/01/"},{name:"v-a788d0b6",path:"/union-find/02/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a788d0b6").then(a)}},{path:"/union-find/02/index.html",redirect:"/union-find/02/"},{path:"/union-find/02.html",redirect:"/union-find/02/"},{name:"v-44087b65",path:"/union-find/04/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-44087b65").then(a)}},{path:"/union-find/04/index.html",redirect:"/union-find/04/"},{path:"/union-find/04.html",redirect:"/union-find/04/"},{name:"v-0fbbecf6",path:"/union-find/03/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0fbbecf6").then(a)}},{path:"/union-find/03/index.html",redirect:"/union-find/03/"},{path:"/union-find/03.html",redirect:"/union-find/03/"},{name:"v-e0222576",path:"/union-find/05/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-e0222576").then(a)}},{path:"/union-find/05/index.html",redirect:"/union-find/05/"},{path:"/union-find/05.html",redirect:"/union-find/05/"},{name:"v-485541b6",path:"/union-find/06/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-485541b6").then(a)}},{path:"/union-find/06/index.html",redirect:"/union-find/06/"},{path:"/union-find/06.html",redirect:"/union-find/06/"},{name:"v-27bbd105",path:"/union-find/07/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-27bbd105").then(a)}},{path:"/union-find/07/index.html",redirect:"/union-find/07/"},{path:"/union-find/07.html",redirect:"/union-find/07/"},{name:"v-73a242e5",path:"/union-find/08/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-73a242e5").then(a)}},{path:"/union-find/08/index.html",redirect:"/union-find/08/"},{path:"/union-find/08.html",redirect:"/union-find/08/"},{name:"v-80ee9676",path:"/union-find/09/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-80ee9676").then(a)}},{path:"/union-find/09/index.html",redirect:"/union-find/09/"},{path:"/union-find/09.html",redirect:"/union-find/09/"},{name:"v-54b14006",path:"/union-find/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-54b14006").then(a)}},{path:"/union-find/index.html",redirect:"/union-find/"},{name:"v-291b15c5",path:"/union-find/practice/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-291b15c5").then(a)}},{path:"/union-find/practice/index.html",redirect:"/union-find/practice/"},{path:"/union-find/practice.html",redirect:"/union-find/practice/"},{name:"v-b3f4455e",path:"/union-find/solutions/0128-longest-consecutive-sequence/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-b3f4455e").then(a)}},{path:"/union-find/solutions/0128-longest-consecutive-sequence/index.html",redirect:"/union-find/solutions/0128-longest-consecutive-sequence/"},{path:"/union-find/solutions/0128-longest-consecutive-sequence.html",redirect:"/union-find/solutions/0128-longest-consecutive-sequence/"},{name:"v-9463dba2",path:"/union-find/solutions/0130-surrounded-regions/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-9463dba2").then(a)}},{path:"/union-find/solutions/0130-surrounded-regions/index.html",redirect:"/union-find/solutions/0130-surrounded-regions/"},{path:"/union-find/solutions/0130-surrounded-regions.html",redirect:"/union-find/solutions/0130-surrounded-regions/"},{name:"v-0d7227b6",path:"/union-find/solutions/0200-number-of-islands/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0d7227b6").then(a)}},{path:"/union-find/solutions/0200-number-of-islands/index.html",redirect:"/union-find/solutions/0200-number-of-islands/"},{path:"/union-find/solutions/0200-number-of-islands.html",redirect:"/union-find/solutions/0200-number-of-islands/"},{name:"v-c97f7236",path:"/union-find/solutions/0399-evaluate-division/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-c97f7236").then(a)}},{path:"/union-find/solutions/0399-evaluate-division/index.html",redirect:"/union-find/solutions/0399-evaluate-division/"},{path:"/union-find/solutions/0399-evaluate-division.html",redirect:"/union-find/solutions/0399-evaluate-division/"},{name:"v-338be9f9",path:"/union-find/solutions/0547-friend-circles/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-338be9f9").then(a)}},{path:"/union-find/solutions/0547-friend-circles/index.html",redirect:"/union-find/solutions/0547-friend-circles/"},{path:"/union-find/solutions/0547-friend-circles.html",redirect:"/union-find/solutions/0547-friend-circles/"},{name:"v-1712d6d9",path:"/union-find/solutions/0684-redundant-connection/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-1712d6d9").then(a)}},{path:"/union-find/solutions/0684-redundant-connection/index.html",redirect:"/union-find/solutions/0684-redundant-connection/"},{path:"/union-find/solutions/0684-redundant-connection.html",redirect:"/union-find/solutions/0684-redundant-connection/"},{name:"v-373e94fb",path:"/union-find/solutions/0721-accounts-merge/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-373e94fb").then(a)}},{path:"/union-find/solutions/0721-accounts-merge/index.html",redirect:"/union-find/solutions/0721-accounts-merge/"},{path:"/union-find/solutions/0721-accounts-merge.html",redirect:"/union-find/solutions/0721-accounts-merge/"},{name:"v-4dacf6b6",path:"/union-find/solutions/0685-redundant-connection-ii/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4dacf6b6").then(a)}},{path:"/union-find/solutions/0685-redundant-connection-ii/index.html",redirect:"/union-find/solutions/0685-redundant-connection-ii/"},{path:"/union-find/solutions/0685-redundant-connection-ii.html",redirect:"/union-find/solutions/0685-redundant-connection-ii/"},{name:"v-c8756db6",path:"/union-find/solutions/0765-couples-holding-hands/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-c8756db6").then(a)}},{path:"/union-find/solutions/0765-couples-holding-hands/index.html",redirect:"/union-find/solutions/0765-couples-holding-hands/"},{path:"/union-find/solutions/0765-couples-holding-hands.html",redirect:"/union-find/solutions/0765-couples-holding-hands/"},{name:"v-a446fb8a",path:"/union-find/solutions/0778-swim-in-rising-water/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a446fb8a").then(a)}},{path:"/union-find/solutions/0778-swim-in-rising-water/index.html",redirect:"/union-find/solutions/0778-swim-in-rising-water/"},{path:"/union-find/solutions/0778-swim-in-rising-water.html",redirect:"/union-find/solutions/0778-swim-in-rising-water/"},{name:"v-3d855f36",path:"/union-find/solutions/0803-bricks-falling-when-hit/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3d855f36").then(a)}},{path:"/union-find/solutions/0803-bricks-falling-when-hit/index.html",redirect:"/union-find/solutions/0803-bricks-falling-when-hit/"},{path:"/union-find/solutions/0803-bricks-falling-when-hit.html",redirect:"/union-find/solutions/0803-bricks-falling-when-hit/"},{name:"v-6759cdc7",path:"/union-find/solutions/0945-minimum-increment-to-make-array-unique/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6759cdc7").then(a)}},{path:"/union-find/solutions/0945-minimum-increment-to-make-array-unique/index.html",redirect:"/union-find/solutions/0945-minimum-increment-to-make-array-unique/"},{path:"/union-find/solutions/0945-minimum-increment-to-make-array-unique.html",redirect:"/union-find/solutions/0945-minimum-increment-to-make-array-unique/"},{name:"v-6edad9f6",path:"/union-find/solutions/0947-most-stones-removed-with-same-row-or-column/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6edad9f6").then(a)}},{path:"/union-find/solutions/0947-most-stones-removed-with-same-row-or-column/index.html",redirect:"/union-find/solutions/0947-most-stones-removed-with-same-row-or-column/"},{path:"/union-find/solutions/0947-most-stones-removed-with-same-row-or-column.html",redirect:"/union-find/solutions/0947-most-stones-removed-with-same-row-or-column/"},{name:"v-6f7ad736",path:"/union-find/solutions/0952-largest-component-size-by-common-factor/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6f7ad736").then(a)}},{path:"/union-find/solutions/0952-largest-component-size-by-common-factor/index.html",redirect:"/union-find/solutions/0952-largest-component-size-by-common-factor/"},{path:"/union-find/solutions/0952-largest-component-size-by-common-factor.html",redirect:"/union-find/solutions/0952-largest-component-size-by-common-factor/"},{name:"v-8fe60762",path:"/union-find/solutions/0959-regions-cut-by-slashes/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-8fe60762").then(a)}},{path:"/union-find/solutions/0959-regions-cut-by-slashes/index.html",redirect:"/union-find/solutions/0959-regions-cut-by-slashes/"},{path:"/union-find/solutions/0959-regions-cut-by-slashes.html",redirect:"/union-find/solutions/0959-regions-cut-by-slashes/"},{name:"v-318666ae",path:"/union-find/solutions/0990-satisfiability-of-equality-equations/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-318666ae").then(a)}},{path:"/union-find/solutions/0990-satisfiability-of-equality-equations/index.html",redirect:"/union-find/solutions/0990-satisfiability-of-equality-equations/"},{path:"/union-find/solutions/0990-satisfiability-of-equality-equations.html",redirect:"/union-find/solutions/0990-satisfiability-of-equality-equations/"},{name:"v-8d0fe46e",path:"/union-find/solutions/1202-smallest-string-with-swaps/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-8d0fe46e").then(a)}},{path:"/union-find/solutions/1202-smallest-string-with-swaps/index.html",redirect:"/union-find/solutions/1202-smallest-string-with-swaps/"},{path:"/union-find/solutions/1202-smallest-string-with-swaps.html",redirect:"/union-find/solutions/1202-smallest-string-with-swaps/"},{name:"v-33fb8d76",path:"/union-find/solutions/1267-count-servers-that-communicate/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-33fb8d76").then(a)}},{path:"/union-find/solutions/1267-count-servers-that-communicate/index.html",redirect:"/union-find/solutions/1267-count-servers-that-communicate/"},{path:"/union-find/solutions/1267-count-servers-that-communicate.html",redirect:"/union-find/solutions/1267-count-servers-that-communicate/"},{name:"v-b8b2f1ee",path:"/union-find/solutions/1319-number-of-operations-to-make-network-connected/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-b8b2f1ee").then(a)}},{path:"/union-find/solutions/1319-number-of-operations-to-make-network-connected/index.html",redirect:"/union-find/solutions/1319-number-of-operations-to-make-network-connected/"},{path:"/union-find/solutions/1319-number-of-operations-to-make-network-connected.html",redirect:"/union-find/solutions/1319-number-of-operations-to-make-network-connected/"},{name:"v-0e68defa",path:"/union-find/solutions/1559-detect-cycles-in-2d-grid/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0e68defa").then(a)}},{path:"/union-find/solutions/1559-detect-cycles-in-2d-grid/index.html",redirect:"/union-find/solutions/1559-detect-cycles-in-2d-grid/"},{path:"/union-find/solutions/1559-detect-cycles-in-2d-grid.html",redirect:"/union-find/solutions/1559-detect-cycles-in-2d-grid/"},{name:"v-463acfc4",path:"/video/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-463acfc4").then(a)}},{path:"/video/index.html",redirect:"/video/"},{name:"v-597132cf",path:"/binary-search/06/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-597132cf").then(a)}},{path:"/binary-search/06/index.html",redirect:"/binary-search/06/"},{path:"/binary-search/06.html",redirect:"/binary-search/06/"},{name:"v-55e30711",path:"/binary-search/05/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-55e30711").then(a)}},{path:"/binary-search/05/index.html",redirect:"/binary-search/05/"},{path:"/binary-search/05.html",redirect:"/binary-search/05/"},{name:"v-6453f364",path:"/article/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-6453f364").then(a)}},{path:"/article/index.html",redirect:"/article/"},{name:"v-4340f7e8",path:"/star/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-4340f7e8").then(a)}},{path:"/star/index.html",redirect:"/star/"},{name:"v-7d484ebf",path:"/encrypt/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-7d484ebf").then(a)}},{path:"/encrypt/index.html",redirect:"/encrypt/"},{name:"v-2470be33",path:"/slide/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-2470be33").then(a)}},{path:"/slide/index.html",redirect:"/slide/"},{name:"v-6319eb4e",path:"/timeline/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-6319eb4e").then(a)}},{path:"/timeline/index.html",redirect:"/timeline/"},{name:"v-b1564aac",path:"/tag/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-b1564aac").then(a)},meta:{pid:"tag",id:"tag"}},{path:"/tag/index.html",redirect:"/tag/"},{name:"v-28e6393c",path:"/category/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-28e6393c").then(a)},meta:{pid:"category",id:"category"}},{path:"/category/index.html",redirect:"/category/"},{name:"v-23f1e153",path:"/tag/排序算法/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-23f1e153").then(a)},meta:{pid:"tag",id:"排序算法"}},{path:"/tag/排序算法/index.html",redirect:"/tag/排序算法/"},{name:"v-eb35fb00",path:"/tag/减治思想/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-eb35fb00").then(a)},meta:{pid:"tag",id:"减治思想"}},{path:"/tag/减治思想/index.html",redirect:"/tag/减治思想/"},{name:"v-197ac33a",path:"/tag/数组/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-197ac33a").then(a)},meta:{pid:"tag",id:"数组"}},{path:"/tag/数组/index.html",redirect:"/tag/数组/"},{name:"v-34859c0a",path:"/tag/循环不变量/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-34859c0a").then(a)},meta:{pid:"tag",id:"循环不变量"}},{path:"/tag/循环不变量/index.html",redirect:"/tag/循环不变量/"},{name:"v-21e4c30c",path:"/tag/分而治之/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-21e4c30c").then(a)},meta:{pid:"tag",id:"分而治之"}},{path:"/tag/分而治之/index.html",redirect:"/tag/分而治之/"},{name:"v-08b1a33d",path:"/tag/归并排序/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-08b1a33d").then(a)},meta:{pid:"tag",id:"归并排序"}},{path:"/tag/归并排序/index.html",redirect:"/tag/归并排序/"},{name:"v-15a8c65d",path:"/tag/桶排序/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-15a8c65d").then(a)},meta:{pid:"tag",id:"桶排序"}},{path:"/tag/桶排序/index.html",redirect:"/tag/桶排序/"},{name:"v-9a387e42",path:"/tag/计数排序/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-9a387e42").then(a)},meta:{pid:"tag",id:"计数排序"}},{path:"/tag/计数排序/index.html",redirect:"/tag/计数排序/"},{name:"v-4fc9e0e7",path:"/tag/快速排序/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-4fc9e0e7").then(a)},meta:{pid:"tag",id:"快速排序"}},{path:"/tag/快速排序/index.html",redirect:"/tag/快速排序/"},{name:"v-00c740fc",path:"/tag/分治算法/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-00c740fc").then(a)},meta:{pid:"tag",id:"分治算法"}},{path:"/tag/分治算法/index.html",redirect:"/tag/分治算法/"},{name:"v-3b98fbac",path:"/tag/滑动窗口/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-3b98fbac").then(a)},meta:{pid:"tag",id:"滑动窗口"}},{path:"/tag/滑动窗口/index.html",redirect:"/tag/滑动窗口/"},{name:"v-3f714451",path:"/tag/双指针/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-3f714451").then(a)},meta:{pid:"tag",id:"双指针"}},{path:"/tag/双指针/index.html",redirect:"/tag/双指针/"},{name:"v-26880831",path:"/tag/回溯算法/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-26880831").then(a)},meta:{pid:"tag",id:"回溯算法"}},{path:"/tag/回溯算法/index.html",redirect:"/tag/回溯算法/"},{name:"v-5d2c70d3",path:"/tag/递归/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-5d2c70d3").then(a)},meta:{pid:"tag",id:"递归"}},{path:"/tag/递归/index.html",redirect:"/tag/递归/"},{name:"v-fa4c15d0",path:"/tag/树形问题/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-fa4c15d0").then(a)},meta:{pid:"tag",id:"树形问题"}},{path:"/tag/树形问题/index.html",redirect:"/tag/树形问题/"},{name:"v-f909b96c",path:"/tag/深度优先遍历/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-f909b96c").then(a)},meta:{pid:"tag",id:"深度优先遍历"}},{path:"/tag/深度优先遍历/index.html",redirect:"/tag/深度优先遍历/"},{name:"v-7c98e15c",path:"/tag/广度优先遍历/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-7c98e15c").then(a)},meta:{pid:"tag",id:"广度优先遍历"}},{path:"/tag/广度优先遍历/index.html",redirect:"/tag/广度优先遍历/"},{name:"v-e55a7dbe",path:"/tag/动态规划/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-e55a7dbe").then(a)},meta:{pid:"tag",id:"动态规划"}},{path:"/tag/动态规划/index.html",redirect:"/tag/动态规划/"},{name:"v-f8355e62",path:"/tag/贪心算法/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-f8355e62").then(a)},meta:{pid:"tag",id:"贪心算法"}},{path:"/tag/贪心算法/index.html",redirect:"/tag/贪心算法/"},{name:"v-2bb7b0b6",path:"/tag/字符串/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-2bb7b0b6").then(a)},meta:{pid:"tag",id:"字符串"}},{path:"/tag/字符串/index.html",redirect:"/tag/字符串/"},{name:"v-198e6bf2",path:"/tag/原地哈希/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-198e6bf2").then(a)},meta:{pid:"tag",id:"原地哈希"}},{path:"/tag/原地哈希/index.html",redirect:"/tag/原地哈希/"},{name:"v-5ad85ca4",path:"/tag/剪枝/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-5ad85ca4").then(a)},meta:{pid:"tag",id:"剪枝"}},{path:"/tag/剪枝/index.html",redirect:"/tag/剪枝/"},{name:"v-29896eb6",path:"/tag/并查集/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-29896eb6").then(a)},meta:{pid:"tag",id:"并查集"}},{path:"/tag/并查集/index.html",redirect:"/tag/并查集/"},{name:"v-1942f75d",path:"/tag/flood fill/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-1942f75d").then(a)},meta:{pid:"tag",id:"flood fill"}},{path:"/tag/flood fill/index.html",redirect:"/tag/flood fill/"},{name:"v-95f91212",path:"/tag/二分查找/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-95f91212").then(a)},meta:{pid:"tag",id:"二分查找"}},{path:"/tag/二分查找/index.html",redirect:"/tag/二分查找/"},{name:"v-66c658b5",path:"/tag/位运算/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-66c658b5").then(a)},meta:{pid:"tag",id:"位运算"}},{path:"/tag/位运算/index.html",redirect:"/tag/位运算/"},{name:"v-5f674688",path:"/tag/拓扑排序/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-5f674688").then(a)},meta:{pid:"tag",id:"拓扑排序"}},{path:"/tag/拓扑排序/index.html",redirect:"/tag/拓扑排序/"},{name:"v-561a8f79",path:"/tag/队列/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-561a8f79").then(a)},meta:{pid:"tag",id:"队列"}},{path:"/tag/队列/index.html",redirect:"/tag/队列/"},{name:"v-3306eb19",path:"/tag/单调队列/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-3306eb19").then(a)},meta:{pid:"tag",id:"单调队列"}},{path:"/tag/单调队列/index.html",redirect:"/tag/单调队列/"},{name:"v-5fe0dc46",path:"/tag/闲谈/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-5fe0dc46").then(a)},meta:{pid:"tag",id:"闲谈"}},{path:"/tag/闲谈/index.html",redirect:"/tag/闲谈/"},{name:"v-4ede7ea8",path:"/tag/闲聊/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-4ede7ea8").then(a)},meta:{pid:"tag",id:"闲聊"}},{path:"/tag/闲聊/index.html",redirect:"/tag/闲聊/"},{name:"v-1161037c",path:"/tag/二叉树/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-1161037c").then(a)},meta:{pid:"tag",id:"二叉树"}},{path:"/tag/二叉树/index.html",redirect:"/tag/二叉树/"},{name:"v-6ddb6a52",path:"/tag/树状数组/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-6ddb6a52").then(a)},meta:{pid:"tag",id:"树状数组"}},{path:"/tag/树状数组/index.html",redirect:"/tag/树状数组/"},{name:"v-7ac9e5ba",path:"/tag/线段树/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-7ac9e5ba").then(a)},meta:{pid:"tag",id:"线段树"}},{path:"/tag/线段树/index.html",redirect:"/tag/线段树/"},{name:"v-16df426a",path:"/tag/Trie/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-16df426a").then(a)},meta:{pid:"tag",id:"Trie"}},{path:"/tag/Trie/index.html",redirect:"/tag/Trie/"},{name:"v-60f644cf",path:"/tag/二叉搜索树/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-60f644cf").then(a)},meta:{pid:"tag",id:"二叉搜索树"}},{path:"/tag/二叉搜索树/index.html",redirect:"/tag/二叉搜索树/"},{name:"v-38be412e",path:"/tag/哈希表/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-38be412e").then(a)},meta:{pid:"tag",id:"哈希表"}},{path:"/tag/哈希表/index.html",redirect:"/tag/哈希表/"},{name:"v-743eddda",path:"/tag/优先队列/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-743eddda").then(a)},meta:{pid:"tag",id:"优先队列"}},{path:"/tag/优先队列/index.html",redirect:"/tag/优先队列/"},{name:"v-38874a70",path:"/tag/链表/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-38874a70").then(a)},meta:{pid:"tag",id:"链表"}},{path:"/tag/链表/index.html",redirect:"/tag/链表/"},{name:"v-73e16dd2",path:"/tag/栈/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-73e16dd2").then(a)},meta:{pid:"tag",id:"栈"}},{path:"/tag/栈/index.html",redirect:"/tag/栈/"},{name:"v-73e170ba",path:"/tag/树/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-73e170ba").then(a)},meta:{pid:"tag",id:"树"}},{path:"/tag/树/index.html",redirect:"/tag/树/"},{name:"v-02f47e76",path:"/tag/差分/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-02f47e76").then(a)},meta:{pid:"tag",id:"差分"}},{path:"/tag/差分/index.html",redirect:"/tag/差分/"},{name:"v-55ff4e24",path:"/tag/区间 DP/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-55ff4e24").then(a)},meta:{pid:"tag",id:"区间 DP"}},{path:"/tag/区间 DP/index.html",redirect:"/tag/区间 DP/"},{name:"v-6585f98f",path:"/tag/树形 DP/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-6585f98f").then(a)},meta:{pid:"tag",id:"树形 DP"}},{path:"/tag/树形 DP/index.html",redirect:"/tag/树形 DP/"},{name:"v-43f4afc0",path:"/tag/数位 DP/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-43f4afc0").then(a)},meta:{pid:"tag",id:"数位 DP"}},{path:"/tag/数位 DP/index.html",redirect:"/tag/数位 DP/"},{name:"v-f2889d84",path:"/tag/背包问题/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-f2889d84").then(a)},meta:{pid:"tag",id:"背包问题"}},{path:"/tag/背包问题/index.html",redirect:"/tag/背包问题/"},{name:"v-1cc5e493",path:"/tag/完全背包/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-1cc5e493").then(a)},meta:{pid:"tag",id:"完全背包"}},{path:"/tag/完全背包/index.html",redirect:"/tag/完全背包/"},{name:"v-0af1f74f",path:"/tag/0-1 背包问题/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-0af1f74f").then(a)},meta:{pid:"tag",id:"0-1 背包问题"}},{path:"/tag/0-1 背包问题/index.html",redirect:"/tag/0-1 背包问题/"},{name:"v-877704e2",path:"/tag/Dijkstra/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-877704e2").then(a)},meta:{pid:"tag",id:"Dijkstra"}},{path:"/tag/Dijkstra/index.html",redirect:"/tag/Dijkstra/"},{name:"v-021f31cf",path:"/tag/最小生成树/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-021f31cf").then(a)},meta:{pid:"tag",id:"最小生成树"}},{path:"/tag/最小生成树/index.html",redirect:"/tag/最小生成树/"},{name:"v-b8756c9e",path:"/tag/滚动哈希/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-b8756c9e").then(a)},meta:{pid:"tag",id:"滚动哈希"}},{path:"/tag/滚动哈希/index.html",redirect:"/tag/滚动哈希/"},{name:"v-0c0040b5",path:"/tag/堆/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-0c0040b5").then(a)},meta:{pid:"tag",id:"堆"}},{path:"/tag/堆/index.html",redirect:"/tag/堆/"},{name:"v-7ae518cb",path:"/tag/分治法/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-7ae518cb").then(a)},meta:{pid:"tag",id:"分治法"}},{path:"/tag/分治法/index.html",redirect:"/tag/分治法/"},{name:"v-51f39717",path:"/tag/单链表/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-51f39717").then(a)},meta:{pid:"tag",id:"单链表"}},{path:"/tag/单链表/index.html",redirect:"/tag/单链表/"},{name:"v-6e765324",path:"/tag/双向链表/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-6e765324").then(a)},meta:{pid:"tag",id:"双向链表"}},{path:"/tag/双向链表/index.html",redirect:"/tag/双向链表/"},{name:"v-948e6992",path:"/tag/快慢指针/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-948e6992").then(a)},meta:{pid:"tag",id:"快慢指针"}},{path:"/tag/快慢指针/index.html",redirect:"/tag/快慢指针/"},{name:"v-481fe1e6",path:"/tag/数学/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-481fe1e6").then(a)},meta:{pid:"tag",id:"数学"}},{path:"/tag/数学/index.html",redirect:"/tag/数学/"},{name:"v-20dd039c",path:"/tag/单调栈/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-20dd039c").then(a)},meta:{pid:"tag",id:"单调栈"}},{path:"/tag/单调栈/index.html",redirect:"/tag/单调栈/"},{name:"v-dc82fba4",path:"/tag/音乐/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-dc82fba4").then(a)},meta:{pid:"tag",id:"音乐"}},{path:"/tag/音乐/index.html",redirect:"/tag/音乐/"},{name:"v-f7f67d00",path:"/tag/前缀和/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-f7f67d00").then(a)},meta:{pid:"tag",id:"前缀和"}},{path:"/tag/前缀和/index.html",redirect:"/tag/前缀和/"},{name:"v-2eb2cb3d",path:"/tag/减而治之/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-2eb2cb3d").then(a)},meta:{pid:"tag",id:"减而治之"}},{path:"/tag/减而治之/index.html",redirect:"/tag/减而治之/"},{name:"v-7d96fa4f",path:"/tag/分治思想/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-7d96fa4f").then(a)},meta:{pid:"tag",id:"分治思想"}},{path:"/tag/分治思想/index.html",redirect:"/tag/分治思想/"},{name:"v-7263191a",path:"/tag/二分搜索树/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-7263191a").then(a)},meta:{pid:"tag",id:"二分搜索树"}},{path:"/tag/二分搜索树/index.html",redirect:"/tag/二分搜索树/"},{name:"v-027d9852",path:"/tag/后序遍历/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-027d9852").then(a)},meta:{pid:"tag",id:"后序遍历"}},{path:"/tag/后序遍历/index.html",redirect:"/tag/后序遍历/"},{name:"v-0d1ef430",path:"/tag/前缀树/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-0d1ef430").then(a)},meta:{pid:"tag",id:"前缀树"}},{path:"/tag/前缀树/index.html",redirect:"/tag/前缀树/"},{name:"v-33731426",path:"/tag/单源最短路径/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-33731426").then(a)},meta:{pid:"tag",id:"单源最短路径"}},{path:"/tag/单源最短路径/index.html",redirect:"/tag/单源最短路径/"},{name:"v-e0020710",path:"/tag/视频题解/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-e0020710").then(a)},meta:{pid:"tag",id:"视频题解"}},{path:"/tag/视频题解/index.html",redirect:"/tag/视频题解/"},{name:"v-60bed3fe",path:"/category/排序算法/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-60bed3fe").then(a)},meta:{pid:"category",id:"排序算法"}},{path:"/category/排序算法/index.html",redirect:"/category/排序算法/"},{name:"v-60b22ba5",path:"/category/二分查找/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-60b22ba5").then(a)},meta:{pid:"category",id:"二分查找"}},{path:"/category/二分查找/index.html",redirect:"/category/二分查找/"},{name:"v-7a0c4b1c",path:"/category/循环不变量/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-7a0c4b1c").then(a)},meta:{pid:"category",id:"循环不变量"}},{path:"/category/循环不变量/index.html",redirect:"/category/循环不变量/"},{name:"v-090ed4d6",path:"/category/快速排序/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-090ed4d6").then(a)},meta:{pid:"category",id:"快速排序"}},{path:"/category/快速排序/index.html",redirect:"/category/快速排序/"},{name:"v-31709f4c",path:"/category/滑动窗口/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-31709f4c").then(a)},meta:{pid:"category",id:"滑动窗口"}},{path:"/category/滑动窗口/index.html",redirect:"/category/滑动窗口/"},{name:"v-da0c183a",path:"/category/双指针/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-da0c183a").then(a)},meta:{pid:"category",id:"双指针"}},{path:"/category/双指针/index.html",redirect:"/category/双指针/"},{name:"v-5b928642",path:"/category/回溯算法/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-5b928642").then(a)},meta:{pid:"category",id:"回溯算法"}},{path:"/category/回溯算法/index.html",redirect:"/category/回溯算法/"},{name:"v-6f51068a",path:"/category/广度优先遍历/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-6f51068a").then(a)},meta:{pid:"category",id:"广度优先遍历"}},{path:"/category/广度优先遍历/index.html",redirect:"/category/广度优先遍历/"},{name:"v-390175cf",path:"/category/动态规划/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-390175cf").then(a)},meta:{pid:"category",id:"动态规划"}},{path:"/category/动态规划/index.html",redirect:"/category/动态规划/"},{name:"v-2f94057d",path:"/category/贪心算法/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-2f94057d").then(a)},meta:{pid:"category",id:"贪心算法"}},{path:"/category/贪心算法/index.html",redirect:"/category/贪心算法/"},{name:"v-29663130",path:"/category/数组/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-29663130").then(a)},meta:{pid:"category",id:"数组"}},{path:"/category/数组/index.html",redirect:"/category/数组/"},{name:"v-3dacd737",path:"/category/字符串/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-3dacd737").then(a)},meta:{pid:"category",id:"字符串"}},{path:"/category/字符串/index.html",redirect:"/category/字符串/"},{name:"v-a969d7a0",path:"/category/分治算法/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-a969d7a0").then(a)},meta:{pid:"category",id:"分治算法"}},{path:"/category/分治算法/index.html",redirect:"/category/分治算法/"},{name:"v-8b61ef72",path:"/category/位运算/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-8b61ef72").then(a)},meta:{pid:"category",id:"位运算"}},{path:"/category/位运算/index.html",redirect:"/category/位运算/"},{name:"v-31b30074",path:"/category/闲谈/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-31b30074").then(a)},meta:{pid:"category",id:"闲谈"}},{path:"/category/闲谈/index.html",redirect:"/category/闲谈/"},{name:"v-20b0a2d6",path:"/category/闲聊/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-20b0a2d6").then(a)},meta:{pid:"category",id:"闲聊"}},{path:"/category/闲聊/index.html",redirect:"/category/闲聊/"},{name:"v-4f797e68",path:"/category/树/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-4f797e68").then(a)},meta:{pid:"category",id:"树"}},{path:"/category/树/index.html",redirect:"/category/树/"},{name:"v-74c0ff85",path:"/category/树状数组/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-74c0ff85").then(a)},meta:{pid:"category",id:"树状数组"}},{path:"/category/树状数组/index.html",redirect:"/category/树状数组/"},{name:"v-1623bcb5",path:"/category/线段树/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-1623bcb5").then(a)},meta:{pid:"category",id:"线段树"}},{path:"/category/线段树/index.html",redirect:"/category/线段树/"},{name:"v-264d4b79",path:"/category/Trie/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-264d4b79").then(a)},meta:{pid:"category",id:"Trie"}},{path:"/category/Trie/index.html",redirect:"/category/Trie/"},{name:"v-7d121e48",path:"/category/并查集/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-7d121e48").then(a)},meta:{pid:"category",id:"并查集"}},{path:"/category/并查集/index.html",redirect:"/category/并查集/"},{name:"v-b306183e",path:"/category/二叉搜索树/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-b306183e").then(a)},meta:{pid:"category",id:"二叉搜索树"}},{path:"/category/二叉搜索树/index.html",redirect:"/category/二叉搜索树/"},{name:"v-37298efb",path:"/category/哈希表/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-37298efb").then(a)},meta:{pid:"category",id:"哈希表"}},{path:"/category/哈希表/index.html",redirect:"/category/哈希表/"},{name:"v-718f45c1",path:"/category/优先队列/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-718f45c1").then(a)},meta:{pid:"category",id:"优先队列"}},{path:"/category/优先队列/index.html",redirect:"/category/优先队列/"},{name:"v-94e30214",path:"/category/链表/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-94e30214").then(a)},meta:{pid:"category",id:"链表"}},{path:"/category/链表/index.html",redirect:"/category/链表/"},{name:"v-27ecb3a7",path:"/category/队列/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-27ecb3a7").then(a)},meta:{pid:"category",id:"队列"}},{path:"/category/队列/index.html",redirect:"/category/队列/"},{name:"v-4f798438",path:"/category/栈/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-4f798438").then(a)},meta:{pid:"category",id:"栈"}},{path:"/category/栈/index.html",redirect:"/category/栈/"},{name:"v-5672bab8",path:"/category/差分/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-5672bab8").then(a)},meta:{pid:"category",id:"差分"}},{path:"/category/差分/index.html",redirect:"/category/差分/"},{name:"v-a0009ba2",path:"/category/图论/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-a0009ba2").then(a)},meta:{pid:"category",id:"图论"}},{path:"/category/图论/index.html",redirect:"/category/图论/"},{name:"v-7585bec0",path:"/category/原地哈希/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-7585bec0").then(a)},meta:{pid:"category",id:"原地哈希"}},{path:"/category/原地哈希/index.html",redirect:"/category/原地哈希/"},{name:"v-19f20614",path:"/category/数学/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-19f20614").then(a)},meta:{pid:"category",id:"数学"}},{path:"/category/数学/index.html",redirect:"/category/数学/"},{name:"v-2efe9501",path:"/category/递归/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-2efe9501").then(a)},meta:{pid:"category",id:"递归"}},{path:"/category/递归/index.html",redirect:"/category/递归/"},{name:"v-973f502a",path:"/category/归并排序/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-973f502a").then(a)},meta:{pid:"category",id:"归并排序"}},{path:"/category/归并排序/index.html",redirect:"/category/归并排序/"},{name:"v-6390a65c",path:"/category/音乐/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-6390a65c").then(a)},meta:{pid:"category",id:"音乐"}},{path:"/category/音乐/index.html",redirect:"/category/音乐/"},{name:"v-50e51ddc",path:"/category/前缀和/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-50e51ddc").then(a)},meta:{pid:"category",id:"前缀和"}},{path:"/category/前缀和/index.html",redirect:"/category/前缀和/"},{name:"v-4ad82dd4",path:"/category/二叉树/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-4ad82dd4").then(a)},meta:{pid:"category",id:"二叉树"}},{path:"/category/二叉树/index.html",redirect:"/category/二叉树/"},{name:"v-1206ffd6",path:"/category/算法与数据结构/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-1206ffd6").then(a)},meta:{pid:"category",id:"算法与数据结构"}},{path:"/category/算法与数据结构/index.html",redirect:"/category/算法与数据结构/"},{name:"v-902c6fa8",path:"/category/二分搜索树/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-902c6fa8").then(a)},meta:{pid:"category",id:"二分搜索树"}},{path:"/category/二分搜索树/index.html",redirect:"/category/二分搜索树/"},{name:"v-4cf9357a",path:"/category/前缀树/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-4cf9357a").then(a)},meta:{pid:"category",id:"前缀树"}},{path:"/category/前缀树/index.html",redirect:"/category/前缀树/"},{name:"v-3badb126",path:"/category/视频题解/",component:Ot,beforeEnter:(e,t,a)=>{ut("Blog","v-3badb126").then(a)},meta:{pid:"category",id:"视频题解"}},{path:"/category/视频题解/index.html",redirect:"/category/视频题解/"},{name:"v-217aa10a",path:"/tag/排序算法/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-217aa10a").then(a)},meta:{pid:"tag",id:"排序算法"}},{path:"/tag/排序算法/page/2/index.html",redirect:"/tag/排序算法/page/2/"},{name:"v-217aa129",path:"/tag/排序算法/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-217aa129").then(a)},meta:{pid:"tag",id:"排序算法"}},{path:"/tag/排序算法/page/3/index.html",redirect:"/tag/排序算法/page/3/"},{name:"v-07921d43",path:"/tag/数组/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-07921d43").then(a)},meta:{pid:"tag",id:"数组"}},{path:"/tag/数组/page/2/index.html",redirect:"/tag/数组/page/2/"},{name:"v-07921d62",path:"/tag/数组/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-07921d62").then(a)},meta:{pid:"tag",id:"数组"}},{path:"/tag/数组/page/3/index.html",redirect:"/tag/数组/page/3/"},{name:"v-2d1be59e",path:"/tag/分而治之/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2d1be59e").then(a)},meta:{pid:"tag",id:"分而治之"}},{path:"/tag/分而治之/page/2/index.html",redirect:"/tag/分而治之/page/2/"},{name:"v-2d1be560",path:"/tag/分而治之/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2d1be560").then(a)},meta:{pid:"tag",id:"分而治之"}},{path:"/tag/分而治之/page/3/index.html",redirect:"/tag/分而治之/page/3/"},{name:"v-c0b89a14",path:"/tag/快速排序/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-c0b89a14").then(a)},meta:{pid:"tag",id:"快速排序"}},{path:"/tag/快速排序/page/2/index.html",redirect:"/tag/快速排序/page/2/"},{name:"v-6bcae091",path:"/tag/滑动窗口/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6bcae091").then(a)},meta:{pid:"tag",id:"滑动窗口"}},{path:"/tag/滑动窗口/page/2/index.html",redirect:"/tag/滑动窗口/page/2/"},{name:"v-6bcae0b0",path:"/tag/滑动窗口/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6bcae0b0").then(a)},meta:{pid:"tag",id:"滑动窗口"}},{path:"/tag/滑动窗口/page/3/index.html",redirect:"/tag/滑动窗口/page/3/"},{name:"v-6bcae0cf",path:"/tag/滑动窗口/page/4/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6bcae0cf").then(a)},meta:{pid:"tag",id:"滑动窗口"}},{path:"/tag/滑动窗口/page/4/index.html",redirect:"/tag/滑动窗口/page/4/"},{name:"v-2db3844c",path:"/tag/双指针/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2db3844c").then(a)},meta:{pid:"tag",id:"双指针"}},{path:"/tag/双指针/page/2/index.html",redirect:"/tag/双指针/page/2/"},{name:"v-a7dab728",path:"/tag/回溯算法/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a7dab728").then(a)},meta:{pid:"tag",id:"回溯算法"}},{path:"/tag/回溯算法/page/2/index.html",redirect:"/tag/回溯算法/page/2/"},{name:"v-a7dab6ea",path:"/tag/回溯算法/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a7dab6ea").then(a)},meta:{pid:"tag",id:"回溯算法"}},{path:"/tag/回溯算法/page/3/index.html",redirect:"/tag/回溯算法/page/3/"},{name:"v-a7dab6ac",path:"/tag/回溯算法/page/4/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a7dab6ac").then(a)},meta:{pid:"tag",id:"回溯算法"}},{path:"/tag/回溯算法/page/4/index.html",redirect:"/tag/回溯算法/page/4/"},{name:"v-a7dab66e",path:"/tag/回溯算法/page/5/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a7dab66e").then(a)},meta:{pid:"tag",id:"回溯算法"}},{path:"/tag/回溯算法/page/5/index.html",redirect:"/tag/回溯算法/page/5/"},{name:"v-a8b0bcec",path:"/tag/递归/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a8b0bcec").then(a)},meta:{pid:"tag",id:"递归"}},{path:"/tag/递归/page/2/index.html",redirect:"/tag/递归/page/2/"},{name:"v-a8b0bcae",path:"/tag/递归/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a8b0bcae").then(a)},meta:{pid:"tag",id:"递归"}},{path:"/tag/递归/page/3/index.html",redirect:"/tag/递归/page/3/"},{name:"v-a8b0bc70",path:"/tag/递归/page/4/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a8b0bc70").then(a)},meta:{pid:"tag",id:"递归"}},{path:"/tag/递归/page/4/index.html",redirect:"/tag/递归/page/4/"},{name:"v-a8b0bc32",path:"/tag/递归/page/5/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a8b0bc32").then(a)},meta:{pid:"tag",id:"递归"}},{path:"/tag/递归/page/5/index.html",redirect:"/tag/递归/page/5/"},{name:"v-a8b0bbf4",path:"/tag/递归/page/6/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a8b0bbf4").then(a)},meta:{pid:"tag",id:"递归"}},{path:"/tag/递归/page/6/index.html",redirect:"/tag/递归/page/6/"},{name:"v-a8b0bbb6",path:"/tag/递归/page/7/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-a8b0bbb6").then(a)},meta:{pid:"tag",id:"递归"}},{path:"/tag/递归/page/7/index.html",redirect:"/tag/递归/page/7/"},{name:"v-542eb5a5",path:"/tag/树形问题/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-542eb5a5").then(a)},meta:{pid:"tag",id:"树形问题"}},{path:"/tag/树形问题/page/2/index.html",redirect:"/tag/树形问题/page/2/"},{name:"v-542eb5c4",path:"/tag/树形问题/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-542eb5c4").then(a)},meta:{pid:"tag",id:"树形问题"}},{path:"/tag/树形问题/page/3/index.html",redirect:"/tag/树形问题/page/3/"},{name:"v-542eb5e3",path:"/tag/树形问题/page/4/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-542eb5e3").then(a)},meta:{pid:"tag",id:"树形问题"}},{path:"/tag/树形问题/page/4/index.html",redirect:"/tag/树形问题/page/4/"},{name:"v-4c788b33",path:"/tag/深度优先遍历/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4c788b33").then(a)},meta:{pid:"tag",id:"深度优先遍历"}},{path:"/tag/深度优先遍历/page/2/index.html",redirect:"/tag/深度优先遍历/page/2/"},{name:"v-4c788b52",path:"/tag/深度优先遍历/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4c788b52").then(a)},meta:{pid:"tag",id:"深度优先遍历"}},{path:"/tag/深度优先遍历/page/3/index.html",redirect:"/tag/深度优先遍历/page/3/"},{name:"v-4c788b71",path:"/tag/深度优先遍历/page/4/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4c788b71").then(a)},meta:{pid:"tag",id:"深度优先遍历"}},{path:"/tag/深度优先遍历/page/4/index.html",redirect:"/tag/深度优先遍历/page/4/"},{name:"v-4c788b90",path:"/tag/深度优先遍历/page/5/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-4c788b90").then(a)},meta:{pid:"tag",id:"深度优先遍历"}},{path:"/tag/深度优先遍历/page/5/index.html",redirect:"/tag/深度优先遍历/page/5/"},{name:"v-9443963e",path:"/tag/广度优先遍历/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-9443963e").then(a)},meta:{pid:"tag",id:"广度优先遍历"}},{path:"/tag/广度优先遍历/page/2/index.html",redirect:"/tag/广度优先遍历/page/2/"},{name:"v-94439600",path:"/tag/广度优先遍历/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-94439600").then(a)},meta:{pid:"tag",id:"广度优先遍历"}},{path:"/tag/广度优先遍历/page/3/index.html",redirect:"/tag/广度优先遍历/page/3/"},{name:"v-944395c2",path:"/tag/广度优先遍历/page/4/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-944395c2").then(a)},meta:{pid:"tag",id:"广度优先遍历"}},{path:"/tag/广度优先遍历/page/4/index.html",redirect:"/tag/广度优先遍历/page/4/"},{name:"v-2962fd7c",path:"/tag/动态规划/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2962fd7c").then(a)},meta:{pid:"tag",id:"动态规划"}},{path:"/tag/动态规划/page/2/index.html",redirect:"/tag/动态规划/page/2/"},{name:"v-2962fd9b",path:"/tag/动态规划/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2962fd9b").then(a)},meta:{pid:"tag",id:"动态规划"}},{path:"/tag/动态规划/page/3/index.html",redirect:"/tag/动态规划/page/3/"},{name:"v-2962fdba",path:"/tag/动态规划/page/4/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2962fdba").then(a)},meta:{pid:"tag",id:"动态规划"}},{path:"/tag/动态规划/page/4/index.html",redirect:"/tag/动态规划/page/4/"},{name:"v-2962fdd9",path:"/tag/动态规划/page/5/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2962fdd9").then(a)},meta:{pid:"tag",id:"动态规划"}},{path:"/tag/动态规划/page/5/index.html",redirect:"/tag/动态规划/page/5/"},{name:"v-2962fdf8",path:"/tag/动态规划/page/6/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2962fdf8").then(a)},meta:{pid:"tag",id:"动态规划"}},{path:"/tag/动态规划/page/6/index.html",redirect:"/tag/动态规划/page/6/"},{name:"v-2962fe17",path:"/tag/动态规划/page/7/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2962fe17").then(a)},meta:{pid:"tag",id:"动态规划"}},{path:"/tag/动态规划/page/7/index.html",redirect:"/tag/动态规划/page/7/"},{name:"v-2962fe36",path:"/tag/动态规划/page/8/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-2962fe36").then(a)},meta:{pid:"tag",id:"动态规划"}},{path:"/tag/动态规划/page/8/index.html",redirect:"/tag/动态规划/page/8/"},{name:"v-6dae0e0e",path:"/tag/贪心算法/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6dae0e0e").then(a)},meta:{pid:"tag",id:"贪心算法"}},{path:"/tag/贪心算法/page/2/index.html",redirect:"/tag/贪心算法/page/2/"},{name:"v-376dfa78",path:"/tag/字符串/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-376dfa78").then(a)},meta:{pid:"tag",id:"字符串"}},{path:"/tag/字符串/page/2/index.html",redirect:"/tag/字符串/page/2/"},{name:"v-25cece47",path:"/tag/并查集/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-25cece47").then(a)},meta:{pid:"tag",id:"并查集"}},{path:"/tag/并查集/page/2/index.html",redirect:"/tag/并查集/page/2/"},{name:"v-25cece66",path:"/tag/并查集/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-25cece66").then(a)},meta:{pid:"tag",id:"并查集"}},{path:"/tag/并查集/page/3/index.html",redirect:"/tag/并查集/page/3/"},{name:"v-25cece85",path:"/tag/并查集/page/4/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-25cece85").then(a)},meta:{pid:"tag",id:"并查集"}},{path:"/tag/并查集/page/4/index.html",redirect:"/tag/并查集/page/4/"},{name:"v-06a82ae6",path:"/tag/二分查找/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-06a82ae6").then(a)},meta:{pid:"tag",id:"二分查找"}},{path:"/tag/二分查找/page/2/index.html",redirect:"/tag/二分查找/page/2/"},{name:"v-06a82b05",path:"/tag/二分查找/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-06a82b05").then(a)},meta:{pid:"tag",id:"二分查找"}},{path:"/tag/二分查找/page/3/index.html",redirect:"/tag/二分查找/page/3/"},{name:"v-06a82b24",path:"/tag/二分查找/page/4/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-06a82b24").then(a)},meta:{pid:"tag",id:"二分查找"}},{path:"/tag/二分查找/page/4/index.html",redirect:"/tag/二分查找/page/4/"},{name:"v-06a82b43",path:"/tag/二分查找/page/5/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-06a82b43").then(a)},meta:{pid:"tag",id:"二分查找"}},{path:"/tag/二分查找/page/5/index.html",redirect:"/tag/二分查找/page/5/"},{name:"v-06a82b62",path:"/tag/二分查找/page/6/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-06a82b62").then(a)},meta:{pid:"tag",id:"二分查找"}},{path:"/tag/二分查找/page/6/index.html",redirect:"/tag/二分查找/page/6/"},{name:"v-38357768",path:"/tag/位运算/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-38357768").then(a)},meta:{pid:"tag",id:"位运算"}},{path:"/tag/位运算/page/2/index.html",redirect:"/tag/位运算/page/2/"},{name:"v-6e0e693b",path:"/tag/二叉树/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6e0e693b").then(a)},meta:{pid:"tag",id:"二叉树"}},{path:"/tag/二叉树/page/2/index.html",redirect:"/tag/二叉树/page/2/"},{name:"v-6e0e695a",path:"/tag/二叉树/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6e0e695a").then(a)},meta:{pid:"tag",id:"二叉树"}},{path:"/tag/二叉树/page/3/index.html",redirect:"/tag/二叉树/page/3/"},{name:"v-5d629a0e",path:"/tag/二叉搜索树/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5d629a0e").then(a)},meta:{pid:"tag",id:"二叉搜索树"}},{path:"/tag/二叉搜索树/page/2/index.html",redirect:"/tag/二叉搜索树/page/2/"},{name:"v-59ebbe34",path:"/tag/哈希表/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-59ebbe34").then(a)},meta:{pid:"tag",id:"哈希表"}},{path:"/tag/哈希表/page/2/index.html",redirect:"/tag/哈希表/page/2/"},{name:"v-59ebbe53",path:"/tag/哈希表/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-59ebbe53").then(a)},meta:{pid:"tag",id:"哈希表"}},{path:"/tag/哈希表/page/3/index.html",redirect:"/tag/哈希表/page/3/"},{name:"v-234a8d6c",path:"/tag/优先队列/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-234a8d6c").then(a)},meta:{pid:"tag",id:"优先队列"}},{path:"/tag/优先队列/page/2/index.html",redirect:"/tag/优先队列/page/2/"},{name:"v-234a8d2e",path:"/tag/优先队列/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-234a8d2e").then(a)},meta:{pid:"tag",id:"优先队列"}},{path:"/tag/优先队列/page/3/index.html",redirect:"/tag/优先队列/page/3/"},{name:"v-5ae0ec16",path:"/tag/链表/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5ae0ec16").then(a)},meta:{pid:"tag",id:"链表"}},{path:"/tag/链表/page/2/index.html",redirect:"/tag/链表/page/2/"},{name:"v-5ae0ebd8",path:"/tag/链表/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5ae0ebd8").then(a)},meta:{pid:"tag",id:"链表"}},{path:"/tag/链表/page/3/index.html",redirect:"/tag/链表/page/3/"},{name:"v-f82a50aa",path:"/tag/栈/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-f82a50aa").then(a)},meta:{pid:"tag",id:"栈"}},{path:"/tag/栈/page/2/index.html",redirect:"/tag/栈/page/2/"},{name:"v-f82a506c",path:"/tag/栈/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-f82a506c").then(a)},meta:{pid:"tag",id:"栈"}},{path:"/tag/栈/page/3/index.html",redirect:"/tag/栈/page/3/"},{name:"v-ed0cc96a",path:"/tag/单调栈/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-ed0cc96a").then(a)},meta:{pid:"tag",id:"单调栈"}},{path:"/tag/单调栈/page/2/index.html",redirect:"/tag/单调栈/page/2/"},{name:"v-f6b426c8",path:"/category/排序算法/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-f6b426c8").then(a)},meta:{pid:"category",id:"排序算法"}},{path:"/category/排序算法/page/2/index.html",redirect:"/category/排序算法/page/2/"},{name:"v-f6b4268a",path:"/category/排序算法/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-f6b4268a").then(a)},meta:{pid:"category",id:"排序算法"}},{path:"/category/排序算法/page/3/index.html",redirect:"/category/排序算法/page/3/"},{name:"v-f6b4264c",path:"/category/排序算法/page/4/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-f6b4264c").then(a)},meta:{pid:"category",id:"排序算法"}},{path:"/category/排序算法/page/4/index.html",redirect:"/category/排序算法/page/4/"},{name:"v-69d37678",path:"/category/二分查找/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-69d37678").then(a)},meta:{pid:"category",id:"二分查找"}},{path:"/category/二分查找/page/2/index.html",redirect:"/category/二分查找/page/2/"},{name:"v-69d37697",path:"/category/二分查找/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-69d37697").then(a)},meta:{pid:"category",id:"二分查找"}},{path:"/category/二分查找/page/3/index.html",redirect:"/category/二分查找/page/3/"},{name:"v-69d376b6",path:"/category/二分查找/page/4/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-69d376b6").then(a)},meta:{pid:"category",id:"二分查找"}},{path:"/category/二分查找/page/4/index.html",redirect:"/category/二分查找/page/4/"},{name:"v-69d376d5",path:"/category/二分查找/page/5/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-69d376d5").then(a)},meta:{pid:"category",id:"二分查找"}},{path:"/category/二分查找/page/5/index.html",redirect:"/category/二分查找/page/5/"},{name:"v-69d376f4",path:"/category/二分查找/page/6/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-69d376f4").then(a)},meta:{pid:"category",id:"二分查找"}},{path:"/category/二分查找/page/6/index.html",redirect:"/category/二分查找/page/6/"},{name:"v-6213a7ba",path:"/category/滑动窗口/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6213a7ba").then(a)},meta:{pid:"category",id:"滑动窗口"}},{path:"/category/滑动窗口/page/2/index.html",redirect:"/category/滑动窗口/page/2/"},{name:"v-6213a77c",path:"/category/滑动窗口/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-6213a77c").then(a)},meta:{pid:"category",id:"滑动窗口"}},{path:"/category/滑动窗口/page/3/index.html",redirect:"/category/滑动窗口/page/3/"},{name:"v-7d438c7a",path:"/category/双指针/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-7d438c7a").then(a)},meta:{pid:"category",id:"双指针"}},{path:"/category/双指针/page/2/index.html",redirect:"/category/双指针/page/2/"},{name:"v-0f3deffe",path:"/category/回溯算法/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0f3deffe").then(a)},meta:{pid:"category",id:"回溯算法"}},{path:"/category/回溯算法/page/2/index.html",redirect:"/category/回溯算法/page/2/"},{name:"v-0f3df01d",path:"/category/回溯算法/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0f3df01d").then(a)},meta:{pid:"category",id:"回溯算法"}},{path:"/category/回溯算法/page/3/index.html",redirect:"/category/回溯算法/page/3/"},{name:"v-0f3df03c",path:"/category/回溯算法/page/4/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0f3df03c").then(a)},meta:{pid:"category",id:"回溯算法"}},{path:"/category/回溯算法/page/4/index.html",redirect:"/category/回溯算法/page/4/"},{name:"v-0f3df05b",path:"/category/回溯算法/page/5/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0f3df05b").then(a)},meta:{pid:"category",id:"回溯算法"}},{path:"/category/回溯算法/page/5/index.html",redirect:"/category/回溯算法/page/5/"},{name:"v-0bcf001a",path:"/category/广度优先遍历/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0bcf001a").then(a)},meta:{pid:"category",id:"广度优先遍历"}},{path:"/category/广度优先遍历/page/2/index.html",redirect:"/category/广度优先遍历/page/2/"},{name:"v-0bceffdc",path:"/category/广度优先遍历/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0bceffdc").then(a)},meta:{pid:"category",id:"广度优先遍历"}},{path:"/category/广度优先遍历/page/3/index.html",redirect:"/category/广度优先遍历/page/3/"},{name:"v-e6e36de4",path:"/category/动态规划/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-e6e36de4").then(a)},meta:{pid:"category",id:"动态规划"}},{path:"/category/动态规划/page/2/index.html",redirect:"/category/动态规划/page/2/"},{name:"v-e6e36da6",path:"/category/动态规划/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-e6e36da6").then(a)},meta:{pid:"category",id:"动态规划"}},{path:"/category/动态规划/page/3/index.html",redirect:"/category/动态规划/page/3/"},{name:"v-e6e36d68",path:"/category/动态规划/page/4/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-e6e36d68").then(a)},meta:{pid:"category",id:"动态规划"}},{path:"/category/动态规划/page/4/index.html",redirect:"/category/动态规划/page/4/"},{name:"v-e6e36d2a",path:"/category/动态规划/page/5/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-e6e36d2a").then(a)},meta:{pid:"category",id:"动态规划"}},{path:"/category/动态规划/page/5/index.html",redirect:"/category/动态规划/page/5/"},{name:"v-e6e36cec",path:"/category/动态规划/page/6/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-e6e36cec").then(a)},meta:{pid:"category",id:"动态规划"}},{path:"/category/动态规划/page/6/index.html",redirect:"/category/动态规划/page/6/"},{name:"v-e6e36cae",path:"/category/动态规划/page/7/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-e6e36cae").then(a)},meta:{pid:"category",id:"动态规划"}},{path:"/category/动态规划/page/7/index.html",redirect:"/category/动态规划/page/7/"},{name:"v-e6e36c70",path:"/category/动态规划/page/8/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-e6e36c70").then(a)},meta:{pid:"category",id:"动态规划"}},{path:"/category/动态规划/page/8/index.html",redirect:"/category/动态规划/page/8/"},{name:"v-5e4d4cc0",path:"/category/贪心算法/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-5e4d4cc0").then(a)},meta:{pid:"category",id:"贪心算法"}},{path:"/category/贪心算法/page/2/index.html",redirect:"/category/贪心算法/page/2/"},{name:"v-3a458955",path:"/category/数组/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3a458955").then(a)},meta:{pid:"category",id:"数组"}},{path:"/category/数组/page/2/index.html",redirect:"/category/数组/page/2/"},{name:"v-f07500d4",path:"/category/位运算/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-f07500d4").then(a)},meta:{pid:"category",id:"位运算"}},{path:"/category/位运算/page/2/index.html",redirect:"/category/位运算/page/2/"},{name:"v-755ed675",path:"/category/并查集/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-755ed675").then(a)},meta:{pid:"category",id:"并查集"}},{path:"/category/并查集/page/2/index.html",redirect:"/category/并查集/page/2/"},{name:"v-755ed694",path:"/category/并查集/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-755ed694").then(a)},meta:{pid:"category",id:"并查集"}},{path:"/category/并查集/page/3/index.html",redirect:"/category/并查集/page/3/"},{name:"v-755ed6b3",path:"/category/并查集/page/4/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-755ed6b3").then(a)},meta:{pid:"category",id:"并查集"}},{path:"/category/并查集/page/4/index.html",redirect:"/category/并查集/page/4/"},{name:"v-ad08733c",path:"/category/哈希表/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-ad08733c").then(a)},meta:{pid:"category",id:"哈希表"}},{path:"/category/哈希表/page/2/index.html",redirect:"/category/哈希表/page/2/"},{name:"v-518604dc",path:"/category/优先队列/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-518604dc").then(a)},meta:{pid:"category",id:"优先队列"}},{path:"/category/优先队列/page/2/index.html",redirect:"/category/优先队列/page/2/"},{name:"v-518604fb",path:"/category/优先队列/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-518604fb").then(a)},meta:{pid:"category",id:"优先队列"}},{path:"/category/优先队列/page/3/index.html",redirect:"/category/优先队列/page/3/"},{name:"v-0542f607",path:"/category/链表/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0542f607").then(a)},meta:{pid:"category",id:"链表"}},{path:"/category/链表/page/2/index.html",redirect:"/category/链表/page/2/"},{name:"v-0542f626",path:"/category/链表/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0542f626").then(a)},meta:{pid:"category",id:"链表"}},{path:"/category/链表/page/3/index.html",redirect:"/category/链表/page/3/"},{name:"v-0542f645",path:"/category/链表/page/4/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-0542f645").then(a)},meta:{pid:"category",id:"链表"}},{path:"/category/链表/page/4/index.html",redirect:"/category/链表/page/4/"},{name:"v-3a97a14e",path:"/category/栈/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3a97a14e").then(a)},meta:{pid:"category",id:"栈"}},{path:"/category/栈/page/2/index.html",redirect:"/category/栈/page/2/"},{name:"v-3a97a110",path:"/category/栈/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-3a97a110").then(a)},meta:{pid:"category",id:"栈"}},{path:"/category/栈/page/3/index.html",redirect:"/category/栈/page/3/"},{name:"v-d2753ea4",path:"/category/图论/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-d2753ea4").then(a)},meta:{pid:"category",id:"图论"}},{path:"/category/图论/page/2/index.html",redirect:"/category/图论/page/2/"},{name:"v-84c31d2e",path:"/category/二叉树/page/2/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-84c31d2e").then(a)},meta:{pid:"category",id:"二叉树"}},{path:"/category/二叉树/page/2/index.html",redirect:"/category/二叉树/page/2/"},{name:"v-84c31cf0",path:"/category/二叉树/page/3/",component:Ot,beforeEnter:(e,t,a)=>{ut("Layout","v-84c31cf0").then(a)},meta:{pid:"category",id:"二叉树"}},{path:"/category/二叉树/page/3/index.html",redirect:"/category/二叉树/page/3/"},{path:"*",component:Ot}],Nt={title:"算法吧",description:"欢迎来到算法吧",base:"/",headTags:[["script",{src:"https://cdn.jsdelivr.net/npm/react/umd/react.production.min.js"}],["script",{src:"https://cdn.jsdelivr.net/npm/react-dom/umd/react-dom.production.min.js"}],["script",{src:"https://cdn.jsdelivr.net/npm/vue/dist/vue.min.js"}],["script",{src:"https://cdn.jsdelivr.net/npm/@babel/standalone/babel.min.js"}],["script",{"data-ad-client":"ca-pub-6066632930480255",async:!0,src:"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"}],["script",{},'\n    var _hmt = _hmt || [];\n(function() {\n  var hm = document.createElement("script");\n  hm.src = "https://hm.baidu.com/hm.js?15b6e6a744ff92195a76bda533c2c0bf";\n  var s = document.getElementsByTagName("script")[0]; \n  s.parentNode.insertBefore(hm, s);\n})();\n    '],["link",{rel:"icon",href:"/suanfa8.png"}],["link",{rel:"manifest",href:"/manifest.webmanifest",crossorigin:"use-credentials"}],["meta",{name:"theme-color",content:"#46bd87"}],["link",{rel:"apple-touch-icon",href:"/assets/icon/apple-icon-152.png"}],["meta",{name:"apple-mobile-web-app-capable",content:"yes"}],["meta",{name:"apple-mobile-web-app-status-bar-style",content:"black"}],["meta",{name:"msapplication-TileImage",content:"/assets/icon/ms-icon-144.png"}],["meta",{name:"msapplication-TileColor",content:"#ffffff"}],["meta",{name:"viewport",content:"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover"}],["link",{rel:"alternate",type:"application/atom+xml",href:"https://suanfa8.com/atom.xml",title:"算法吧 Atom Feed"}],["link",{rel:"alternate",type:"application/json",href:"https://suanfa8.com/rss.xml",title:"算法吧 JSON Feed"}],["link",{rel:"alternate",type:"application/rss+xml",href:"https://suanfa8.com/rss.xml",title:"算法吧 RSS Feed"}]],pages:[{title:"第 2 章 二分查找、滑动窗口、双指针",frontmatter:{summary:"第 2 章 二分查找、滑动窗口、双指针 \x3c!-- 第 0 章 参考资料; 第 1 章 递归与时间复杂度; 第 2 章 循环不变量; 第 3 章 基础排序算法; 第 4 章 归并排序; 第 5 章 快速排序; 第 6 章 非比较排序算法; 第 7 章 二分查找; 第 8 章 滑动窗口; 第 9 章 双指针 --\x3e;",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 2 章 二分查找、滑动窗口、双指针"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/algorithm-basic/",relativePath:"algorithm-basic/README.md",key:"v-d67fac18",path:"/algorithm-basic/",readingTime:{minutes:.48,words:145},updateTime:"January 15, 2022 07:11",updateTimeStamp:1642230687e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"快来算法吧",frontmatter:{title:"快来算法吧",icon:"huanyingye",summary:"说明：这个网站的通知功能并不好，很多大家的留言我都不能及时看到，所以大家如果有什么问题急需我反馈的话，可以加我的微信 13671597056，平常聊聊天也是可以的。就是不要找我做新题（有好的问题推荐给我，我还是很欢迎的，就是不要给我推荐偏竞赛的，面试笔试都不会考的问题，我做这些问题、讲解这些问题意义不大），很多题目我都不会做。我只是更多时候站在初学者的角度讲",meta:[{property:"og:url",content:"https://suanfa8.com/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"快来算法吧"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/",relativePath:"README.md",key:"v-704ec0f6",path:"/",headers:[{level:2,title:"📝 变更日志",slug:"变更日志"},{level:3,title:"2022 年 6 月 16 日（星期四）",slug:"_2022-年-6-月-16-日-星期四"},{level:3,title:"2022 年 5 月 5 日（星期四）",slug:"_2022-年-5-月-5-日-星期四"},{level:3,title:"2022 年 5 月 1 日（星期日）",slug:"_2022-年-5-月-1-日-星期日"},{level:3,title:"2022 年 3 月 23 日（星期三）",slug:"_2022-年-3-月-23-日-星期三"},{level:3,title:"2022 年 3 月 8 日（星期二）",slug:"_2022-年-3-月-8-日-星期二"},{level:3,title:"2022 年 2 月 7 日（星期一）",slug:"_2022-年-2-月-7-日-星期一"},{level:3,title:"2022 年 1 月 26 日（星期三）",slug:"_2022-年-1-月-26-日-星期三"},{level:3,title:"2022 年 1 月 20 日（星期四）",slug:"_2022-年-1-月-20-日-星期四"},{level:3,title:"2022 年 1 月 13 日（星期四）",slug:"_2022-年-1-月-13-日-星期四"},{level:3,title:"2022 年 1 月 12 日（星期三）",slug:"_2022-年-1-月-12-日-星期三"},{level:3,title:"2021 年 12 月 28 日至 2022 年 1 月 11 日",slug:"_2021-年-12-月-28-日至-2022-年-1-月-11-日"},{level:3,title:"2021 年 12 月 28 日（星期一）",slug:"_2021-年-12-月-28-日-星期一"},{level:3,title:"2021 年 12 月 27 日（星期天）",slug:"_2021-年-12-月-27-日-星期天"},{level:3,title:"2021 年 12 月 25 日（星期六）",slug:"_2021-年-12-月-25-日-星期六"},{level:3,title:"2021 年 12 月 24 日（星期五）",slug:"_2021-年-12-月-24-日-星期五"},{level:3,title:"2021 年 12 月 23 日（星期四）",slug:"_2021-年-12-月-23-日-星期四"},{level:3,title:"2021 年 12 月 22 日（星期三）",slug:"_2021-年-12-月-22-日-星期三"},{level:3,title:"2021 年 12 月 21 日（星期二）",slug:"_2021-年-12-月-21-日-星期二"},{level:3,title:"2021 年 12 月 20 日（星期一）",slug:"_2021-年-12-月-20-日-星期一"},{level:3,title:"2021 年 12 月 19 日（星期天）",slug:"_2021-年-12-月-19-日-星期天"},{level:3,title:"2021 年 12 月 18 日（星期六）",slug:"_2021-年-12-月-18-日-星期六"},{level:3,title:"2021 年 12 月 17 日（星期五）",slug:"_2021-年-12-月-17-日-星期五"},{level:3,title:"2021 年 12 月 16 日（星期四）",slug:"_2021-年-12-月-16-日-星期四"},{level:3,title:"2021 年 12 月 15 日（星期三）",slug:"_2021-年-12-月-15-日-星期三"},{level:3,title:"2021 年 12 月 14 日（星期二）",slug:"_2021-年-12-月-14-日-星期二"},{level:3,title:"2021 年 12 月 13 日（星期一）",slug:"_2021-年-12-月-13-日-星期一"},{level:3,title:"2021 年 12 月 12 日（星期天）",slug:"_2021-年-12-月-12-日-星期天"},{level:3,title:"2021 年 12 月 11 日（星期六）",slug:"_2021-年-12-月-11-日-星期六"},{level:3,title:"2021 年 12 月 10 日（星期五）",slug:"_2021-年-12-月-10-日-星期五"},{level:3,title:"2021 年 12 月 8 日（星期三）",slug:"_2021-年-12-月-8-日-星期三"},{level:3,title:"2021 年 12 月 7 日（星期二）",slug:"_2021-年-12-月-7-日-星期二"},{level:2,title:"「力扣」主页签名",slug:"「力扣」主页签名"}],readingTime:{minutes:12.38,words:3713},updateTime:"August 8, 2022 06:58",updateTimeStamp:1659941882e3,createTime:"December 4, 2021 07:13",createTimeStamp:1638602e6,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:35},{name:"liweiwei1419",email:"121088825@qq.com",commits:20}]},{title:"第 3 章 基础排序算法",frontmatter:{summary:"第 3 章 基础排序算法",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/basic-sort/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 3 章 基础排序算法"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/algorithm-basic/basic-sort/",relativePath:"algorithm-basic/basic-sort/README.md",key:"v-64ad8634",path:"/algorithm-basic/basic-sort/",headers:[{level:2,title:"第 3 章 基础排序算法",slug:"第-3-章-基础排序算法"}],readingTime:{minutes:.03,words:9},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126707e3,createTime:"December 8, 2021 05:22",createTimeStamp:1638940951e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"2.4 冒泡排序的优化",frontmatter:{title:"2.4 冒泡排序的优化",icon:"yongyan",category:"排序算法",tags:["排序算法","减治思想"],summary:'优化的点 如果在一次循环中，都没有「冒泡」行为发生，整个排序任务就可以 提前终止。 可以设置布尔变量 sorted，假设每一轮循环开始假设数组是有序的；; 一旦在比较的过程中执行了交换，说明数组不是有序的，将 sorted 设置为 false；; 如果在一次循环中，都没有「冒泡」行为发生，才可以认为剩下的部分是有序的。; 参考代码： " 说明：该代码在「力扣',meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/basic-sort/bubble-optimization.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"2.4 冒泡排序的优化"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"减治思想"}]},regularPath:"/algorithm-basic/basic-sort/bubble-optimization.html",relativePath:"algorithm-basic/basic-sort/bubble-optimization.md",key:"v-7d90151b",path:"/algorithm-basic/basic-sort/bubble-optimization/",headers:[{level:2,title:"调试代码",slug:"调试代码"}],readingTime:{minutes:1.47,words:442},updateTime:"January 15, 2022 07:11",updateTimeStamp:1642230687e3,createTime:"December 8, 2021 05:22",createTimeStamp:1638940951e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4},{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"2.3 冒泡排序",frontmatter:{title:"2.3 冒泡排序",icon:"shipin",category:"排序算法",tags:["排序算法","减治思想"],summary:":tv: 视频教程 建议使用 1.5 倍速观看。 2-6 冒泡排序（06:26）。; 冒泡排序的基本思想 两两 比较 相邻 两个位置的元素，把较大的元素 交换 到上方；; 每一轮都会把当前最大的元素冒泡到数组的末尾。; 为了方便大家观察「冒泡排序」的执行过程，我们把数组竖着摆放。可以看到：值越大的越先冒泡上来。 冒泡排序思路简述 每一轮将一个「未排定部分」最",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/basic-sort/bubble.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"2.3 冒泡排序"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"减治思想"}]},regularPath:"/algorithm-basic/basic-sort/bubble.html",relativePath:"algorithm-basic/basic-sort/bubble.md",key:"v-372b66f6",path:"/algorithm-basic/basic-sort/bubble/",headers:[{level:2,title:"📺 视频教程",slug:"视频教程"},{level:2,title:"冒泡排序的基本思想",slug:"冒泡排序的基本思想"}],readingTime:{minutes:1.97,words:592},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126707e3,createTime:"December 8, 2021 05:22",createTimeStamp:1638940951e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"2.6 插入排序的意义",frontmatter:{title:"2.6 插入排序的意义",icon:"shipin",category:"排序算法",tags:["排序算法","减治思想"],summary:":tv: 视频教程 建议使用 1.5 倍速观看。 2-8 插入排序的重要意义（05:37）。; 插入排序有个特点非常重要：数据接近有序的时候，插入排序可以很快完成。「接近有序」的意思是：每个元素和它排序以后最终所在的位置不远。这一点需要和「选择排序」进行比较。 重点 「插入排序」是稳定排序，在数组的值 接近有序 的情况下，表现优异。 在数组「几乎有序」的前提",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/basic-sort/insertion-meaning.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"2.6 插入排序的意义"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"减治思想"}]},regularPath:"/algorithm-basic/basic-sort/insertion-meaning.html",relativePath:"algorithm-basic/basic-sort/insertion-meaning.md",key:"v-75e8440e",path:"/algorithm-basic/basic-sort/insertion-meaning/",headers:[{level:2,title:"📺 视频教程",slug:"视频教程"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:1.17,words:352},updateTime:"January 15, 2022 07:11",updateTimeStamp:1642230687e3,createTime:"December 8, 2021 05:22",createTimeStamp:1638940951e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4},{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"2.7 插入排序的优化",frontmatter:{title:"2.7 插入排序的优化",icon:"shipin",category:"排序算法",tags:["排序算法","减治思想"],summary:":tv: 视频教程 建议使用 1.5 倍速观看。 2-9 插入排序的优化（06:25）。; 说明： 本节内容来自《算法（第 4 版）》第 2 章 《排序》之「实验题 2.1.25」（中文版 P168）。 插入排序写法二：先暂存再后移 「将一个数字插入一个有序的数组」这一步，可以不使用逐步交换，使用先赋值给「临时变量」，然后「适当的元素」后移，空出一个位置，最",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/basic-sort/insertion-optimization.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"2.7 插入排序的优化"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"减治思想"}]},regularPath:"/algorithm-basic/basic-sort/insertion-optimization.html",relativePath:"algorithm-basic/basic-sort/insertion-optimization.md",key:"v-c6abb5b6",path:"/algorithm-basic/basic-sort/insertion-optimization/",headers:[{level:2,title:"📺 视频教程",slug:"视频教程"},{level:2,title:"插入排序写法二：先暂存再后移",slug:"插入排序写法二-先暂存再后移"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:2.67,words:801},updateTime:"January 15, 2022 07:11",updateTimeStamp:1642230687e3,createTime:"December 8, 2021 05:22",createTimeStamp:1638940951e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4},{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"2.5 插入排序",frontmatter:{title:"2.5 插入排序",icon:"shipin",category:"排序算法",tags:["排序算法","减治思想"],summary:":tv: 视频教程 建议使用 1.5 倍速观看。 2-7 插入排序（05:57）。; 插入排序的基本思想 插入排序每一次将一个元素 插入 到它前面的有序数组中。实际上有两种插入的方式： 逐个交换：待插入元素逐个交换到前面; 先暂存再后移：先暂存待插入元素，然后前面比暂存元素严格大的后移; 其实这种插入方式更像插入排序本来的样子。《算法导论》上的图更形象。 插",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/basic-sort/insertion.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"2.5 插入排序"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"减治思想"}]},regularPath:"/algorithm-basic/basic-sort/insertion.html",relativePath:"algorithm-basic/basic-sort/insertion.md",key:"v-3fd81b4e",path:"/algorithm-basic/basic-sort/insertion/",headers:[{level:2,title:"📺 视频教程",slug:"视频教程"},{level:2,title:"插入排序的基本思想",slug:"插入排序的基本思想"},{level:2,title:"插入排序写法一：基于交换",slug:"插入排序写法一-基于交换"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:1.34,words:403},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126707e3,createTime:"December 8, 2021 05:22",createTimeStamp:1638940951e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5},{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"2.1 排序算法简介",frontmatter:{title:"2.1 排序算法简介",icon:"yongyan",category:"排序算法",tags:["排序算法"],summary:"个人经历 我学习算法是从排序算法开始的，通过一遍又一遍地编写、调试，理解排序算法的思想和细节。可以从排序问题开始学习算法。 这一部分包含了 9 类排序算法，它们是： 选择排序、冒泡排序、插入排序、希尔排序：它们是排序算法的基础，其中插入排序很重要，希尔排序只需要知道思想；; 归并排序和快速排序：非常重要，它们是理解「递归」的很好的学习材料；; 堆排序暂时不涉",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/basic-sort/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"2.1 排序算法简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"}]},regularPath:"/algorithm-basic/basic-sort/intro.html",relativePath:"algorithm-basic/basic-sort/intro.md",key:"v-77c02b9f",path:"/algorithm-basic/basic-sort/intro/",readingTime:{minutes:1.16,words:349},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126707e3,createTime:"December 8, 2021 05:22",createTimeStamp:1638940951e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"2.2 选择排序",frontmatter:{title:"2.2 选择排序",icon:"shipin",category:"排序算法",tags:["排序算法","减治思想"],summary:"算法的入门，从排序算法开始。可以打开这个 网站，体验一下各种排序算法。 :tv: 视频教程 建议使用 1.5 倍速观看。 2-1 选择排序（03:53）；; 2-2 选择排序代码演示（03:27）；; 2-3 选择排序的时间复杂度（03:03）；; 2-4 数组具有随机访问的特性（05:08）；; 2-5 选择排序的特点和优化的方向（01:13）。; 选择排",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/basic-sort/selection.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"2.2 选择排序"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"减治思想"}]},regularPath:"/algorithm-basic/basic-sort/selection.html",relativePath:"algorithm-basic/basic-sort/selection.md",key:"v-6e1f31df",path:"/algorithm-basic/basic-sort/selection/",headers:[{level:2,title:"📺 视频教程",slug:"视频教程"},{level:2,title:"选择排序的基本思想",slug:"选择排序的基本思想"},{level:2,title:"选择排序的特点",slug:"选择排序的特点"},{level:3,title:"交换次数最少",slug:"交换次数最少"},{level:3,title:"交换次数与输入数组是否有序无关",slug:"交换次数与输入数组是否有序无关"},{level:2,title:"总结",slug:"总结"},{level:3,title:"算法思想：减治思想",slug:"算法思想-减治思想"},{level:2,title:"练习",slug:"练习"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:3.54,words:1061},updateTime:"January 15, 2022 07:11",updateTimeStamp:1642230687e3,createTime:"December 8, 2021 05:22",createTimeStamp:1638940951e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"3.8 排序算法练习",frontmatter:{title:"3.8 排序算法练习",icon:"yongyan",category:"排序算法",tags:["排序算法"],summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/basic-sort/practice.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"3.8 排序算法练习"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"}]},regularPath:"/algorithm-basic/basic-sort/practice.html",relativePath:"algorithm-basic/basic-sort/practice.md",key:"v-f5d87fb6",path:"/algorithm-basic/basic-sort/practice/",readingTime:{minutes:0,words:0},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126707e3,createTime:"December 8, 2021 05:22",createTimeStamp:1638940951e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"2.8 希尔排序",frontmatter:{title:"2.8 希尔排序",icon:"shipin",category:"排序算法",tags:["排序算法"],summary:"提示 希尔排序的理论有一定难度，不感兴趣的朋友不需要深入研究；; 本节内容高度概括 希尔排序是插入排序的优化，利用的是插入排序的重要意义：在小数组（几乎有序的数组）上表现良好；; 通过「分组插入排序」使得数组变得逐步有序；; 最后一轮执行标准的插入排序。; :tv: 视频教程 建议使用 1.5 倍速观看。 2-10 希尔排序的基本思想（04:46）；; 2-",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/basic-sort/shell.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"2.8 希尔排序"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"}]},regularPath:"/algorithm-basic/basic-sort/shell.html",relativePath:"algorithm-basic/basic-sort/shell.md",key:"v-24b9f9d2",path:"/algorithm-basic/basic-sort/shell/",headers:[{level:2,title:"📺 视频教程",slug:"视频教程"},{level:2,title:"希尔排序的基本思想",slug:"希尔排序的基本思想"},{level:2,title:"通过实例理解「希尔排序」的基本思想",slug:"通过实例理解「希尔排序」的基本思想"}],readingTime:{minutes:3.02,words:907},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126707e3,createTime:"December 8, 2021 05:22",createTimeStamp:1638940951e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"二分查找",frontmatter:{summary:"二分查找",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/binary-search/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"二分查找"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/algorithm-basic/binary-search/",relativePath:"algorithm-basic/binary-search/README.md",key:"v-998686ac",path:"/algorithm-basic/binary-search/",headers:[{level:2,title:"二分查找",slug:"二分查找"}],readingTime:{minutes:.01,words:4},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126707e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"3.1 二分查找习题分类",frontmatter:{title:"3.1 二分查找习题分类",icon:"shipin",category:"二分查找",tags:["减治思想"],summary:"这部分内容请见我在「导航栏」编写的「二分查找精讲」专栏： 这部分内容我把整个知识体系，二分查找的思想、细节、需要注意的地方，不同二分查找写法的比较都做了详细的讲解，并且逐步细化了每一节的内容，阅读起来不会很吃力。 可以我的 LeetBook 收看二分查找的知识点 讲解，免费；; 知识点讲解：写对二分查找不能靠模板，需要理解加练习 （附练习题，持续更新）、【视",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/binary-search/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"3.1 二分查找习题分类"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"减治思想"}]},regularPath:"/algorithm-basic/binary-search/intro.html",relativePath:"algorithm-basic/binary-search/intro.md",key:"v-0bed98a5",path:"/algorithm-basic/binary-search/intro/",headers:[{level:2,title:"题型一：二分求下标（在数组中查找符合条件的元素的下标）",slug:"题型一-二分求下标-在数组中查找符合条件的元素的下标"},{level:2,title:"题型二：二分答案（在一个有范围的区间里搜索一个整数）",slug:"题型二-二分答案-在一个有范围的区间里搜索一个整数"},{level:2,title:"题型三：二分答案的升级版（每一次缩小区间的时候都需要遍历数组）",slug:"题型三-二分答案的升级版-每一次缩小区间的时候都需要遍历数组"}],readingTime:{minutes:9.33,words:2798},updateTime:"January 15, 2022 07:11",updateTimeStamp:1642230687e3,createTime:"December 12, 2021 07:12",createTimeStamp:1639293167e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4},{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"1.7 循环不变量",frontmatter:{title:"1.7 循环不变量",icon:"shipin",category:"循环不变量",tags:["数组","循环不变量"],summary:"内容请见《循环不变量精讲》专栏。",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/loop-invariant/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"1.7 循环不变量"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数组"},{property:"article:tag",content:"循环不变量"}]},regularPath:"/algorithm-basic/loop-invariant/intro.html",relativePath:"algorithm-basic/loop-invariant/intro.md",key:"v-09229bab",path:"/algorithm-basic/loop-invariant/intro/",readingTime:{minutes:.06,words:17},updateTime:"January 15, 2022 07:11",updateTimeStamp:1642230687e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4},{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"2.9 归并排序（重点）",frontmatter:{title:"2.9 归并排序（重点）",icon:"yongyan",category:"排序算法",tags:["分而治之","归并排序"],summary:"请见《归并排序精讲》专栏。",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/merge-sort/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"2.9 归并排序（重点）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"分而治之"},{property:"article:tag",content:"归并排序"}]},regularPath:"/algorithm-basic/merge-sort/intro.html",relativePath:"algorithm-basic/merge-sort/intro.md",key:"v-4a7f66b3",path:"/algorithm-basic/merge-sort/intro/",readingTime:{minutes:.05,words:14},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126707e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"第 6 章 非比较排序",frontmatter:{summary:"第 6 章 非比较排序",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/non-comparison/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 6 章 非比较排序"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/algorithm-basic/non-comparison/",relativePath:"algorithm-basic/non-comparison/README.md",key:"v-84a78a34",path:"/algorithm-basic/non-comparison/",headers:[{level:2,title:"第 6 章 非比较排序",slug:"第-6-章-非比较排序"}],readingTime:{minutes:.03,words:8},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126707e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"2.28 桶排序（不重要，不用仔细看）",frontmatter:{title:"2.28 桶排序（不重要，不用仔细看）",icon:"yongyan",category:"排序算法",tags:["桶排序"],summary:"桶排序不是面试和笔试的考点，可以忽略。 基本思路 一个坑一个萝卜，也可以一个坑多个萝卜，对每个坑排序，再拿出来，整体就有序。 说明 本节的「参考代码」只是使用了「桶排序」的思想完成了「力扣」第 912 题，写法不唯一，仅供参考。 参考代码： 复杂度分析：（略，这部分内容不太重要，增加学习负担）",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/non-comparison/bucket-sort.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"2.28 桶排序（不重要，不用仔细看）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"桶排序"}]},regularPath:"/algorithm-basic/non-comparison/bucket-sort.html",relativePath:"algorithm-basic/non-comparison/bucket-sort.md",key:"v-dad451c6",path:"/algorithm-basic/non-comparison/bucket-sort/",readingTime:{minutes:1.2,words:359},updateTime:"January 15, 2022 07:11",updateTimeStamp:1642230687e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4},{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"2.26 计数排序（不重要，不用仔细看）",frontmatter:{title:"2.26 计数排序（不重要，不用仔细看）",icon:"yongyan",category:"排序算法",tags:["计数排序"],summary:"3 种「非比较」的排序算法（了解，如果是面向笔试，不要花时间去研究） 特别说明：这部分算法不建议花太多去仔细研究它们的细节。如果是面向面试，了解思想即可，用到了再学。 直接放弃我个人觉得完全可以。 学习资料是《算法导论》。下面是我根据《算法导论》上介绍的内容整理出来的。 这三种排序的区别与上面的排序的特点是：一个数该放在哪里，是由这个数本身的大小决定的，它不",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/non-comparison/count-sort.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"2.26 计数排序（不重要，不用仔细看）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"计数排序"}]},regularPath:"/algorithm-basic/non-comparison/count-sort.html",relativePath:"algorithm-basic/non-comparison/count-sort.md",key:"v-b70ca5f6",path:"/algorithm-basic/non-comparison/count-sort/",headers:[{level:2,title:"3 种「非比较」的排序算法（了解，如果是面向笔试，不要花时间去研究）",slug:"_3-种「非比较」的排序算法-了解-如果是面向笔试-不要花时间去研究"},{level:2,title:"计数排序（了解）",slug:"计数排序-了解"}],readingTime:{minutes:2.53,words:758},updateTime:"January 15, 2022 07:11",updateTimeStamp:1642230687e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"2.25 非比较排序算法简介",frontmatter:{title:"2.25 非比较排序算法简介",icon:"shipin",category:"排序算法",summary:"这部分内容初学的时候可以跳过，了解思想即可。 提示 「计数排序」「基数排序」「桶排序」是非比较排序，当我们看到一个数，就可以知道它放在什么地方，而不用与其它数比较。它们适用于 待排序的元素的数值在一个特殊的范围内。 有一个比较典型的问题，即「力扣」第 41 题，通过这个问题可以帮助理解「原地哈希」这个概念，对于这道题而言，一个桶只存放一个元素。 :tv: 典",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/non-comparison/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"2.25 非比较排序算法简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/algorithm-basic/non-comparison/intro.html",relativePath:"algorithm-basic/non-comparison/intro.md",key:"v-278cb0c7",path:"/algorithm-basic/non-comparison/intro/",headers:[{level:2,title:"📺 典型问题视频讲解",slug:"典型问题视频讲解"},{level:2,title:"其它问题",slug:"其它问题"}],readingTime:{minutes:.97,words:292},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126707e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"6.5 练习",frontmatter:{title:"6.5 练习",icon:"yongyan",category:"排序算法",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/non-comparison/practice.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"6.5 练习"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/algorithm-basic/non-comparison/practice.html",relativePath:"algorithm-basic/non-comparison/practice.md",key:"v-2b6a2ea5",path:"/algorithm-basic/non-comparison/practice/",readingTime:{minutes:0,words:0},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126707e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"2.27 基数排序（不重要，不用仔细看）",frontmatter:{title:"2.27 基数排序（不重要，不用仔细看）",icon:"yongyan",category:"排序算法",tags:["计数排序"],summary:"基本思路 也称为基于关键字的排序，例如针对数值排序，个位、十位、百位就是关键字。针对日期数据的排序：年、月、日、时、分、秒就是关键字。 「基数排序」用到了「计数排序」。 摘要：基数排序是一种基于「关键字」的排序方法，这里的「关键字」是每一个数位，重点在于理解结论：低位优先的有效性。 重点理解 基数排序的子过程：计数排序（因为要保证稳定性）。 --- 基数排序",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/non-comparison/radix-sort.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"2.27 基数排序（不重要，不用仔细看）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"计数排序"}]},regularPath:"/algorithm-basic/non-comparison/radix-sort.html",relativePath:"algorithm-basic/non-comparison/radix-sort.md",key:"v-42194f25",path:"/algorithm-basic/non-comparison/radix-sort/",headers:[{level:2,title:"基数排序简介",slug:"基数排序简介"},{level:2,title:"高位优先（不推荐）",slug:"高位优先-不推荐"},{level:3,title:"基数排序（高位优先）的基本思路",slug:"基数排序-高位优先-的基本思路"},{level:2,title:"低位优先（推荐）",slug:"低位优先-推荐"},{level:3,title:"低位优先的有效性",slug:"低位优先的有效性"},{level:2,title:"代码编写",slug:"代码编写"},{level:2,title:"总结",slug:"总结"},{level:2,title:"练习",slug:"练习"}],readingTime:{minutes:7.66,words:2299},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941866e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4},{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"2.10 快速排序（重点）",frontmatter:{title:"2.10 快速排序（重点）",icon:"yongyan",category:"快速排序",tags:["快速排序","分治算法"],summary:"请见《快速排序精讲》专栏。",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/quick-sort/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"2.10 快速排序（重点）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"快速排序"},{property:"article:tag",content:"分治算法"}]},regularPath:"/algorithm-basic/quick-sort/intro.html",relativePath:"algorithm-basic/quick-sort/intro.md",key:"v-ab3140c6",path:"/algorithm-basic/quick-sort/intro/",readingTime:{minutes:.05,words:14},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126707e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3}]},{title:"1.5 递归",frontmatter:{title:"1.5 递归",icon:"shipin",summary:"与递归相关的话题有： 温馨提示 我们需要在大量的练习中渐渐地理解递归，学习是一个循序渐进的过程，在编写了大量的「动态规划（记忆化递归）」「回溯算法」「深度优先遍历」「分治算法」的问题以后，相信我们一定会对递归有更深的理解。 算法基础：递归 初学的时候可以先有个印象，不用急于马上掌握，理解并熟练掌握「递归」需要一定时间；; 「递归」与「分治算法」（请见「归并排",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/recursion-time-complexity/recursion.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"1.5 递归"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/algorithm-basic/recursion-time-complexity/recursion.html",relativePath:"algorithm-basic/recursion-time-complexity/recursion.md",key:"v-f1419f76",path:"/algorithm-basic/recursion-time-complexity/recursion/",headers:[{level:2,title:"算法基础：递归",slug:"算法基础-递归"},{level:2,title:"📺 视频教程",slug:"视频教程"},{level:2,title:"📔 文字教程",slug:"文字教程"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:2.69,words:806},updateTime:"January 19, 2022 17:47",updateTimeStamp:1642614443e3,createTime:"December 7, 2021 16:24",createTimeStamp:1638894241e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4},{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"1.6 时间复杂度",frontmatter:{title:"1.6 时间复杂度",icon:"shipin",summary:"「时间复杂度」用于评估算法的好坏。它是一个渐进概念，需要用 动态 的观点去理解。 本节内容讲解了时间复杂度的严格定义（极限形式），以便大家理解时间复杂度的计算规则。并且还指出了：时间复杂度不是程序的运行时间，应该使用「空间换时间」，更多关注在优化「时间复杂度」。 :tv: 视频教程 建议使用 1.5 倍速观看。 1-4 初识时间复杂度；; 1-5 时间复杂度",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/recursion-time-complexity/time-complexity.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"1.6 时间复杂度"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/algorithm-basic/recursion-time-complexity/time-complexity.html",relativePath:"algorithm-basic/recursion-time-complexity/time-complexity.md",key:"v-d47751f6",path:"/algorithm-basic/recursion-time-complexity/time-complexity/",headers:[{level:2,title:"📺 视频教程",slug:"视频教程"},{level:2,title:"📔 文字教程",slug:"文字教程"}],readingTime:{minutes:1.39,words:417},updateTime:"January 15, 2022 07:11",updateTimeStamp:1642230687e3,createTime:"December 7, 2021 16:24",createTimeStamp:1638894241e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5},{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"第 0 章 参考资料",frontmatter:{summary:"第 0 章 参考资料",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/reference/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 0 章 参考资料"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/algorithm-basic/reference/",relativePath:"algorithm-basic/reference/README.md",key:"v-87d6a988",path:"/algorithm-basic/reference/",headers:[{level:2,title:"第 0 章 参考资料",slug:"第-0-章-参考资料"}],readingTime:{minutes:.02,words:7},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126707e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"1.4 如何提问",frontmatter:{title:"1.4 如何提问",icon:"tiwen",summary:"向他人提问的要点与态度 节约被提问者的时间；; 要让被提问者感受到 被尊重，没有人有义务帮助我们；; 不管问题是不是得到解决，都应该表示感谢。; 提问的智慧；; How do I ask a good question? - Help Center - Stack Overflow; 如果大家没有时间仔细看完，我这里帮各位总结几点注意事项： 几点建议 不要问",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/reference/how-to-ask-questions.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"1.4 如何提问"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/algorithm-basic/reference/how-to-ask-questions.html",relativePath:"algorithm-basic/reference/how-to-ask-questions.md",key:"v-5861af7a",path:"/algorithm-basic/reference/how-to-ask-questions/",headers:[{level:2,title:"几点建议",slug:"几点建议"},{level:2,title:"一个好的范例",slug:"一个好的范例"},{level:3,title:"贴代码的工具",slug:"贴代码的工具"}],readingTime:{minutes:1.28,words:383},updateTime:"January 16, 2022 03:41",updateTimeStamp:1642304464e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5},{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"1.3 书籍下载",frontmatter:{title:"1.3 书籍下载",icon:"yunxiazai",summary:"不会有一本教材是「完美」的。这里列出的只是对我很有帮助的学习资料，并给出一点理由和感想；; 「学习理论知识」和「刷题实践」缺一不可，不能只理论，不能只刷题；; 这里推荐的书籍作为刷题的辅助学习资料是很合适的。; 书籍 1. 《算法图解》（用于入门） 很小的一本入门书籍，可以用于培养学习算法与数据结构的兴趣；; 里面的 0-1 背包问题、动态规划的思想、BFS",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/reference/download.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"1.3 书籍下载"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/algorithm-basic/reference/download.html",relativePath:"algorithm-basic/reference/download.md",key:"v-334280bb",path:"/algorithm-basic/reference/download/",headers:[{level:2,title:"书籍",slug:"书籍"},{level:3,title:"1. 《算法图解》（用于入门）",slug:"_1-《算法图解》-用于入门"},{level:3,title:"2. 《算法（第 4 版）》（用于深入，不要死磕）",slug:"_2-《算法-第-4-版-》-用于深入-不要死磕"},{level:3,title:"3. 《算法导论》（用于深入，有针对性地学习即可）",slug:"_3-《算法导论》-用于深入-有针对性地学习即可"}],readingTime:{minutes:1.68,words:505},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126707e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3}]},{title:"1.2 如何看待《算法导论》",frontmatter:{title:"1.2 如何看待《算法导论》",icon:"weixin",summary:"说明 本文来自我于 2021 年 8 月 2 日 发送的公众号文章 我如何看待《算法导论》和《算法》。 今天要和大家分享的话题是如何看《算法（第 4 版）》和《算法导论（第 3 版）》。 《算法导论（第 3 版）》我也不知道是从哪儿听说的，名气很大，看到的比较多的观点是：不适合新手朋友（我基本同意）。《算法（第 4 版）》是我在知乎上看到别人推荐的，这本书对",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/reference/introduction-to-algorithms.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"1.2 如何看待《算法导论》"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/algorithm-basic/reference/introduction-to-algorithms.html",relativePath:"algorithm-basic/reference/introduction-to-algorithms.md",key:"v-2c4ec045",path:"/algorithm-basic/reference/introduction-to-algorithms/",headers:[{level:2,title:"1. 《算法图解》：入门书籍之一",slug:"_1-《算法图解》-入门书籍之一"},{level:2,title:"2.《算法（第 4 版）》：真正入门书籍",slug:"_2-《算法-第-4-版-》-真正入门书籍"},{level:2,title:"3.《算法导论（第 3 版）》：不是一点都看不懂",slug:"_3-《算法导论-第-3-版-》-不是一点都看不懂"}],readingTime:{minutes:7.94,words:2383},updateTime:"January 19, 2022 17:47",updateTimeStamp:1642614443e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4}]},{title:"1.1 参考资料与网站",frontmatter:{title:"1.1 参考资料与网站",icon:"tushu",summary:"声明 本站推荐的书籍与网站与本站均无商业合作关系，它们都是本人学习算法与数据结构的过程中使用过的学习材料。 :tv: 视频 视频：算法新手如何刷力扣（LeetCode）？【干货分享】 想深入学习算法与数据结构 《算法（第 4 版）》; 《算法导论》; 只想应付笔试和面试 没有参考书籍，直接刷题。可以在「力扣」做 LeetCode 热题 HOT 100，不懂的",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/reference/reference.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"1.1 参考资料与网站"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/algorithm-basic/reference/reference.html",relativePath:"algorithm-basic/reference/reference.md",key:"v-7e930965",path:"/algorithm-basic/reference/reference/",headers:[{level:2,title:"📺 视频",slug:"视频"},{level:2,title:"想深入学习算法与数据结构",slug:"想深入学习算法与数据结构"},{level:2,title:"只想应付笔试和面试",slug:"只想应付笔试和面试"},{level:2,title:"算法可视化学习网站",slug:"算法可视化学习网站"},{level:2,title:"竞赛",slug:"竞赛"}],readingTime:{minutes:.72,words:217},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126707e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"3.2 滑动窗口是什么",frontmatter:{title:"3.2 滑动窗口是什么",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"温馨提示 滑动窗口精讲 专栏里有更多习题讲解。 这一部分我们要和大家分享的内容是「滑动窗口」。翻开《算法（第 4 版）》《算法导论》，都没有看到「滑动窗口」的定义。唯一有点儿沾边的是《算法导论》讲到「滚动哈希」，其实就是固定长度的滑动窗口。 在我看来「滑动窗口」更像是一种 技巧，还不是编程思想，它的应用没有那么广泛，也就是说：使用「滑动窗口」解决的问题很有局",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/sliding-window/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"3.2 滑动窗口是什么"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/algorithm-basic/sliding-window/intro.html",relativePath:"algorithm-basic/sliding-window/intro.md",key:"v-6e20c47b",path:"/algorithm-basic/sliding-window/intro/",headers:[{level:2,title:"理解「滑动窗口」需要先理解「暴力解法」",slug:"理解「滑动窗口」需要先理解「暴力解法」"}],readingTime:{minutes:4.09,words:1226},updateTime:"January 15, 2022 07:11",updateTimeStamp:1642230687e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"3.3 滑动窗口的练习",frontmatter:{title:"3.3 滑动窗口的练习",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"重点问题： 题号 链接 题解 ---- ----------------------------------------------------------------------------------------------------------------------------------- ----------------------------",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/sliding-window/practice.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"3.3 滑动窗口的练习"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/algorithm-basic/sliding-window/practice.html",relativePath:"algorithm-basic/sliding-window/practice.md",key:"v-252a1ae5",path:"/algorithm-basic/sliding-window/practice/",readingTime:{minutes:4.89,words:1466},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126707e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"3.4 双指针简介与练习",frontmatter:{title:"3.4 双指针简介与练习",icon:"yongyan",category:"双指针",tags:["双指针"],summary:"温馨提示 双指针精讲 专栏里有更多习题讲解。 「双指针」问题其实也是朴素算法的优化，一下子排序掉很多不符合题意的解，「滑动窗口」技巧也是这样的。依然是分析为什么可以使用双指针是更重要的。 二分查找算法应用于查找下标也可以认为是双指针的解法。 题号 链接 题解 知识点 ---- -----------------------------------------",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-basic/two-pointers/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"3.4 双指针简介与练习"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"双指针"}]},regularPath:"/algorithm-basic/two-pointers/intro.html",relativePath:"algorithm-basic/two-pointers/intro.md",key:"v-958c3daa",path:"/algorithm-basic/two-pointers/intro/",readingTime:{minutes:1.04,words:311},updateTime:"January 15, 2022 07:11",updateTimeStamp:1642230687e3,createTime:"December 24, 2021 08:10",createTimeStamp:164033342e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"5.1 回溯算法简介",frontmatter:{title:"5.1 回溯算法简介",icon:"yongyan",author:"liweiwei1419",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历"],summary:"本节是对「回溯算法」内容的高度概括，理解这部分内容需要大家完成相关的练习。 回溯算法简介 「回溯算法」是解决很多算法问题的常见思想，它也是传统的人工智能的方法，其本质是 在树形问题中寻找解 。 回溯算法是在树形问题上执行一次深度优先遍历 重点概括 回溯算法是对题目中所隐含的「树形结构」执行一次 深度优先遍历。 以下是维基百科中「回溯算法」和「深度优先遍历」的",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-idea/backtracking/01-intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"5.1 回溯算法简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"}]},regularPath:"/algorithm-idea/backtracking/01-intro.html",relativePath:"algorithm-idea/backtracking/01-intro.md",key:"v-0ed7643a",path:"/algorithm-idea/backtracking/01-intro/",headers:[{level:2,title:"回溯算法是在树形问题上执行一次深度优先遍历",slug:"回溯算法是在树形问题上执行一次深度优先遍历"},{level:2,title:"树形问题",slug:"树形问题"},{level:2,title:"搜索与遍历",slug:"搜索与遍历"},{level:2,title:"遍历的实现方式是递归",slug:"遍历的实现方式是递归"},{level:2,title:"「深度优先遍历」有「回退」的过程",slug:"「深度优先遍历」有「回退」的过程"},{level:2,title:"「回溯算法」的模板代码",slug:"「回溯算法」的模板代码"},{level:2,title:"与动态规划的区别",slug:"与动态规划的区别"},{level:3,title:"共同点",slug:"共同点"},{level:3,title:"不同点",slug:"不同点"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:5,words:1500},updateTime:"January 14, 2022 06:42",updateTimeStamp:1642142571e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"5.2 树形问题",frontmatter:{title:"5.2 树形问题",icon:"yongyan",author:"liweiwei1419",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历"],summary:"第 2 节到第 4 节以「力扣」第 46 题为例，深入讲解「回溯算法」。 在树形问题中使用深度优先遍历 例题：「力扣」第 46 题：全排列 题目链接; 题解链接; 给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。 示例 1： 示例 2： 示例 3： 提示： 1 <= nums.length <= 6; -10",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-idea/backtracking/02-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"5.2 树形问题"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"}]},regularPath:"/algorithm-idea/backtracking/02-tree.html",relativePath:"algorithm-idea/backtracking/02-tree.md",key:"v-393158a5",path:"/algorithm-idea/backtracking/02-tree/",headers:[{level:2,title:"解题思路",slug:"解题思路"},{level:2,title:"设计状态变量",slug:"设计状态变量"},{level:2,title:"代码实现",slug:"代码实现"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:7.21,words:2163},updateTime:"January 14, 2022 06:42",updateTimeStamp:1642142571e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"5.3 理解回溯",frontmatter:{title:"5.3 理解回溯",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历"],summary:"通过打印输出来观察变量的执行过程，是理解「回溯算法」的重要方法。 理解回溯 从 [1, 2, 3] 到 [1, 3, 2] ，深度优先遍历是这样做的，从 [1, 2, 3] 回到 [1, 2] 的时候，需要撤销刚刚已经选择的数 3，因为在这一层只有一个数 3 我们已经尝试过了，因此程序回到上一层，需要撤销对 2 的选择，好让后面的程序知道，选择 3 了以后还",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-idea/backtracking/03-backtracking.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"5.3 理解回溯"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"}]},regularPath:"/algorithm-idea/backtracking/03-backtracking.html",relativePath:"algorithm-idea/backtracking/03-backtracking.md",key:"v-15ca0285",path:"/algorithm-idea/backtracking/03-backtracking/",headers:[{level:2,title:"月光宝盒",slug:"月光宝盒"},{level:2,title:"通过打印输出观察",slug:"通过打印输出观察"}],readingTime:{minutes:2.42,words:727},updateTime:"January 14, 2022 06:42",updateTimeStamp:1642142571e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"5.4 回溯算法的几点说明",frontmatter:{title:"5.4 回溯算法的几点说明",icon:"yongyan",author:"liweiwei1419",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历"],summary:"思考以下几个问题，更深入理解「回溯算法」。 几点说明帮助理解「回溯算法」 每一次尝试都「复制」，则不需要回溯 如果在每一个 非叶子结点 分支的尝试，都创建 新的变量 表示状态，那么 在回到上一层结点的时候不需要「回溯」；; 在递归终止的时候也不需要做拷贝。; 这样的做法虽然可以得到解，但也会创建很多中间变量，这些中间变量很多时候是我们不需要的，会有一定空间和",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-idea/backtracking/04-questions.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"5.4 回溯算法的几点说明"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"}]},regularPath:"/algorithm-idea/backtracking/04-questions.html",relativePath:"algorithm-idea/backtracking/04-questions.md",key:"v-1a9e8c1b",path:"/algorithm-idea/backtracking/04-questions/",headers:[{level:2,title:"每一次尝试都「复制」，则不需要回溯",slug:"每一次尝试都「复制」-则不需要回溯"},{level:2,title:"为什么不是广度优先遍历",slug:"为什么不是广度优先遍历"},{level:2,title:"不回溯可不可以",slug:"不回溯可不可以"}],readingTime:{minutes:4.04,words:1211},updateTime:"January 14, 2022 06:42",updateTimeStamp:1642142571e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"5.5 剪枝",frontmatter:{title:"5.5 剪枝",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历"],summary:"回溯算法会应用「剪枝」技巧达到以加快搜索速度。 剪枝 重点概括 「剪枝」有两个目的： 剪去不正确的分支；; 剪去不必要的分支。; 有些时候，需要做一些预处理工作（例如排序）才能达到剪枝的目的。预处理工作虽然也消耗时间，但能够剪枝节约的时间更多。 提示 剪枝是一种技巧，通常需要根据不同问题场景采用不同的剪枝策略，需要在做题的过程中不断总结。 由于回溯问题本身时",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-idea/backtracking/05-pruning.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"5.5 剪枝"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"}]},regularPath:"/algorithm-idea/backtracking/05-pruning.html",relativePath:"algorithm-idea/backtracking/05-pruning.md",key:"v-2624a525",path:"/algorithm-idea/backtracking/05-pruning/",readingTime:{minutes:.59,words:177},updateTime:"January 14, 2022 06:42",updateTimeStamp:1642142571e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"5.6  回溯算法总结",frontmatter:{title:"5.6  回溯算法总结",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历"],summary:"本节是对「回溯算法」的总结，把重点再和大家强调一下。 总结 做题的时候，建议 先画树形图 ，画图能帮助我们想清楚递归结构，想清楚如何剪枝。拿题目中的示例，想一想人是怎么做的，一般这样下来，这棵递归树都不难画出。 在画图的过程中思考清楚： 分支如何产生；; 题目需要的解在哪里？是在叶子结点、还是在非叶子结点、还是在从跟结点到叶子结点的路径？; 哪些搜索会产生不",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-idea/backtracking/06-summary.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"5.6  回溯算法总结"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"}]},regularPath:"/algorithm-idea/backtracking/06-summary.html",relativePath:"algorithm-idea/backtracking/06-summary.md",key:"v-207dcba5",path:"/algorithm-idea/backtracking/06-summary/",readingTime:{minutes:.69,words:208},updateTime:"January 14, 2022 06:42",updateTimeStamp:1642142571e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"5.7 回溯算法视频讲解以及练习列表",frontmatter:{title:"5.7 回溯算法视频讲解以及练习列表",icon:"shipin",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历"],summary:"下面提供一些我做过的「回溯」算法的问题，以便大家学习和理解「回溯」算法。 视频题解列表 题目链接 力扣 B 站 -------------------------------------------------------------------------- -------------------------------------------------",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-idea/backtracking/07-practice.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"5.7 回溯算法视频讲解以及练习列表"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"}]},regularPath:"/algorithm-idea/backtracking/07-practice.html",relativePath:"algorithm-idea/backtracking/07-practice.md",key:"v-4414c8b6",path:"/algorithm-idea/backtracking/07-practice/",headers:[{level:2,title:"视频题解列表",slug:"视频题解列表"},{level:2,title:"题型一：排列、组合、子集相关问题",slug:"题型一-排列、组合、子集相关问题"},{level:2,title:"题型二：字符串上的回溯问题",slug:"题型二-字符串上的回溯问题"},{level:2,title:"题型三：Flood Fill",slug:"题型三-flood-fill"},{level:2,title:"题型四：一些游戏问题",slug:"题型四-一些游戏问题"}],readingTime:{minutes:6.33,words:1898},updateTime:"January 14, 2022 06:42",updateTimeStamp:1642142571e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"第 17 章 回溯算法",frontmatter:{summary:"第 17 章 回溯算法",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-idea/backtracking/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 17 章 回溯算法"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/algorithm-idea/backtracking/",relativePath:"algorithm-idea/backtracking/README.md",key:"v-f7222b38",path:"/algorithm-idea/backtracking/",headers:[{level:2,title:"第 17 章 回溯算法",slug:"第-17-章-回溯算法"}],readingTime:{minutes:.02,words:7},updateTime:"January 14, 2022 06:42",updateTimeStamp:1642142571e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{frontmatter:{summary:"题解链接; 方法一：单向 BFS Java 代码： 方法二：双向 BFS Java 代码：",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-idea/breadth-first-search/0127-word-ladder.html"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/algorithm-idea/breadth-first-search/0127-word-ladder.html",relativePath:"algorithm-idea/breadth-first-search/0127-word-ladder.md",key:"v-e477b492",path:"/algorithm-idea/breadth-first-search/0127-word-ladder/",headers:[{level:2,title:"方法一：单向 BFS",slug:"方法一-单向-bfs"},{level:2,title:"方法二：双向 BFS",slug:"方法二-双向-bfs"}],readingTime:{minutes:1.94,words:582},updateTime:"January 14, 2022 06:42",updateTimeStamp:1642142571e3,createTime:"December 23, 2021 16:07",createTimeStamp:1640275629e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{frontmatter:{summary:"0752-打开转盘锁（单向、双向 BFS） 例 2：「力扣」第 752 题：打开转盘锁（中等） 你有一个带有四个圆形拨轮的转盘锁。每个拨轮都有 10 个数字： '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' 。每个拨轮可以自由旋转：例如把 '9' 变为 '0'，'0' 变为 '9' 。每次旋转都只能旋转一个拨",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-idea/breadth-first-search/0752-%E6%89%93%E5%BC%80%E8%BD%AC%E7%9B%98%E9%94%81%EF%BC%88%E5%8D%95%E5%90%91%E3%80%81%E5%8F%8C%E5%90%91%20BFS%EF%BC%89.html"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/algorithm-idea/breadth-first-search/0752-%E6%89%93%E5%BC%80%E8%BD%AC%E7%9B%98%E9%94%81%EF%BC%88%E5%8D%95%E5%90%91%E3%80%81%E5%8F%8C%E5%90%91%20BFS%EF%BC%89.html",relativePath:"algorithm-idea/breadth-first-search/0752-打开转盘锁（单向、双向 BFS）.md",key:"v-7e744542",path:"/algorithm-idea/breadth-first-search/0752-%E6%89%93%E5%BC%80%E8%BD%AC%E7%9B%98%E9%94%81%EF%BC%88%E5%8D%95%E5%90%91%E3%80%81%E5%8F%8C%E5%90%91%20BFS%EF%BC%89/",headers:[{level:3,title:"例 2：「力扣」第 752 题：打开转盘锁（中等）",slug:"例-2-「力扣」第-752-题-打开转盘锁-中等"}],readingTime:{minutes:2.21,words:663},updateTime:"January 14, 2022 06:42",updateTimeStamp:1642142571e3,createTime:"December 23, 2021 16:07",createTimeStamp:1640275629e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"第 18 章 广度优先遍历",frontmatter:{summary:"第 18 章 广度优先遍历",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-idea/breadth-first-search/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 18 章 广度优先遍历"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/algorithm-idea/breadth-first-search/",relativePath:"algorithm-idea/breadth-first-search/README.md",key:"v-0d4b8854",path:"/algorithm-idea/breadth-first-search/",headers:[{level:2,title:"第 18 章 广度优先遍历",slug:"第-18-章-广度优先遍历"}],readingTime:{minutes:.03,words:9},updateTime:"January 14, 2022 06:42",updateTimeStamp:1642142571e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"5.8 广度优先遍历简介",frontmatter:{title:"5.8 广度优先遍历简介",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历"],summary:"重点概括 「广度优先遍历」与「深度优先遍历」一样，都是遍历的方式，很多「树」的问题也可以使用「广度优先遍历」解决；; 「广度优先遍历」像水波纹、声波一样，每一层「同时」向外扩散；; 「广度优先遍历」可以用于求解 无权图的最短路径；; 「拓扑排序」的一种经典实现就是「广度优先遍历」。;",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-idea/breadth-first-search/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"5.8 广度优先遍历简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"}]},regularPath:"/algorithm-idea/breadth-first-search/intro.html",relativePath:"algorithm-idea/breadth-first-search/intro.md",key:"v-36ddfa76",path:"/algorithm-idea/breadth-first-search/intro/",readingTime:{minutes:.36,words:108},updateTime:"January 14, 2022 06:42",updateTimeStamp:1642142571e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"5.9 广度优先遍历 练习",frontmatter:{title:"5.9 广度优先遍历 练习",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历"],summary:"题号 链接 题解 ----- ------------------------------------------------------------------------------------------------ --------------------------------------------------------------------",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-idea/breadth-first-search/practice.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"5.9 广度优先遍历 练习"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"}]},regularPath:"/algorithm-idea/breadth-first-search/practice.html",relativePath:"algorithm-idea/breadth-first-search/practice.md",key:"v-1d2ea306",path:"/algorithm-idea/breadth-first-search/practice/",readingTime:{minutes:1.45,words:435},updateTime:"January 14, 2022 06:42",updateTimeStamp:1642142571e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"第 19 章 动态规划",frontmatter:{summary:"第 19 章 动态规划",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-idea/dynamic-programming/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 19 章 动态规划"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/algorithm-idea/dynamic-programming/",relativePath:"algorithm-idea/dynamic-programming/README.md",key:"v-916a2c74",path:"/algorithm-idea/dynamic-programming/",headers:[{level:2,title:"第 19 章 动态规划",slug:"第-19-章-动态规划"}],readingTime:{minutes:.02,words:7},updateTime:"January 14, 2022 06:42",updateTimeStamp:1642142571e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"5.11 动态规划练习",frontmatter:{title:"5.11 动态规划练习",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"说明：下面给出的典型问题还会添加（2020 年 12 月 2 日）。 一、入门问题 了解「自顶向下」记忆化递归与「自底向上」递推两种动态规划的方式。 题号 链接 题解 ---- ------------------------------------------------------------------------ ---- 509 斐波那契数（简单）",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-idea/dynamic-programming/practice.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"5.11 动态规划练习"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/algorithm-idea/dynamic-programming/practice.html",relativePath:"algorithm-idea/dynamic-programming/practice.md",key:"v-0e908b85",path:"/algorithm-idea/dynamic-programming/practice/",headers:[{level:2,title:"一、入门问题",slug:"一、入门问题"},{level:2,title:"二、重复子问题",slug:"二、重复子问题"},{level:2,title:"三、最优子结构",slug:"三、最优子结构"},{level:2,title:"四、无后效性",slug:"四、无后效性"},{level:2,title:"五、最大子段和",slug:"五、最大子段和"},{level:2,title:"六、最长上升子序列",slug:"六、最长上升子序列"},{level:2,title:"七、最长公共子串",slug:"七、最长公共子串"},{level:2,title:"八、区间 DP 与划分型 DP",slug:"八、区间-dp-与划分型-dp"},{level:2,title:"九、树形 DP",slug:"九、树形-dp"},{level:2,title:"十、背包问题",slug:"十、背包问题"}],readingTime:{minutes:6.32,words:1895},updateTime:"January 14, 2022 06:42",updateTimeStamp:1642142571e3,createTime:"December 8, 2021 05:22",createTimeStamp:1638940951e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"5.10 动态规划是什么",frontmatter:{title:"5.10 动态规划是什么",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"动态规划的两个重要思想： 穷举：动态规划没有为问题设计专门的算法，它考虑了完成一件事情所有的情况；; 空间换时间：记住了每一步求解的结果。; 动态规划的两个思考方向： 「自顶向下」记忆化递归：; 「自底向上」递推。; 可以使用动态规划的解决问题需要具备的三个条件： 重复子问题：在计算的过程中，有一些问题会重复计算，必须记住结果。没有重复子问题的话，可以「分而",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-idea/dynamic-programming/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"5.10 动态规划是什么"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/algorithm-idea/dynamic-programming/intro.html",relativePath:"algorithm-idea/dynamic-programming/intro.md",key:"v-e3593b96",path:"/algorithm-idea/dynamic-programming/intro/",readingTime:{minutes:1.29,words:388},updateTime:"January 14, 2022 06:42",updateTimeStamp:1642142571e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"5.12 贪心算法简介",frontmatter:{title:"5.12 贪心算法简介",icon:"yongyan",category:"贪心算法",tags:["贪心算法"],summary:"重点概括 可以使用贪心算法解决问题一般都需要严格的理论证明，但是一般面试和笔试对严格证明要求不高，所以面对一个问题，有「贪心算法」的直觉比较重要；; 贪心算法可以和动态规划算法进行比较，动态规划每一步需要求解所有的子问题，并且从中选择一个最优解。可以使用贪心算法解决问题，每一步只需要求解其中一个子问题，因此可以使用贪心算法解决的问题，时间复杂度一般为线性级别",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-idea/greedy/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"5.12 贪心算法简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"贪心算法"}]},regularPath:"/algorithm-idea/greedy/intro.html",relativePath:"algorithm-idea/greedy/intro.md",key:"v-08445945",path:"/algorithm-idea/greedy/intro/",headers:[{level:2,title:"学习建议",slug:"学习建议"}],readingTime:{minutes:1.01,words:302},updateTime:"January 14, 2022 06:42",updateTimeStamp:1642142571e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3}]},{title:"数组",frontmatter:{summary:"数组",meta:[{property:"og:url",content:"https://suanfa8.com/array/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"数组"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/array/",relativePath:"array/README.md",key:"v-43dd4fe2",path:"/array/",readingTime:{minutes:.01,words:2},updateTime:"January 1, 2022 11:46",updateTimeStamp:1641037611e3,createTime:"January 1, 2022 11:46",createTimeStamp:1641037611e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"5.13 贪心算法练习",frontmatter:{title:"5.13 贪心算法练习",icon:"yongyan",category:"贪心算法",tags:["贪心算法"],summary:"题号 链接 题解 ---- ------------------------------------------------------------------------------------------------------------- --------------------------------------------------------",meta:[{property:"og:url",content:"https://suanfa8.com/algorithm-idea/greedy/practice.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"5.13 贪心算法练习"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"贪心算法"}]},regularPath:"/algorithm-idea/greedy/practice.html",relativePath:"algorithm-idea/greedy/practice.md",key:"v-062f50f1",path:"/algorithm-idea/greedy/practice/",readingTime:{minutes:.6,words:179},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941866e3,createTime:"December 8, 2021 05:22",createTimeStamp:1638940951e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 8 题：字符串转换整数 (atoi)（中等）",frontmatter:{title:"「力扣」第 8 题：字符串转换整数 (atoi)（中等）",icon:"yongyan",category:"数组",tags:["字符串","数组"],summary:"题目链接：8. 字符串转换整数 (atoi)；; 题解链接：尽量不使用库函数、一次遍历（Java）。; 题目描述 请你来实现一个 myAtoi(string s) 函数，使其能将字符串转换成一个 32 位有符号整数（类似 C/C++ 中的 atoi 函数）。 函数 myAtoi(string s) 的算法如下： 读入字符串并丢弃无用的前导空格; 检查下一个字",meta:[{property:"og:url",content:"https://suanfa8.com/array/solutions/0008-string-to-integer-atoi.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 8 题：字符串转换整数 (atoi)（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"字符串"},{property:"article:tag",content:"数组"}]},regularPath:"/array/solutions/0008-string-to-integer-atoi.html",relativePath:"array/solutions/0008-string-to-integer-atoi.md",key:"v-114583e5",path:"/array/solutions/0008-string-to-integer-atoi/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:6.76,words:2029},updateTime:"January 14, 2022 01:51",updateTimeStamp:1642125115e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456182e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 13 题：罗马数字转整数（简单）",frontmatter:{title:"「力扣」第 13 题：罗马数字转整数（简单）",icon:"yongyan",category:"数组",tags:["数组","字符串"],summary:"题目链接：13. 罗马数字转整数；; 题解链接：通过哈希表查对应关系 + 特殊值处理（Python 代码、Java 代码）。; 题目描述 罗马数字包含以下七种字符: I， V， X， L，C，D 和 M。 例如， 罗马数字 2 写做 II ，即为两个并列的 1 。12 写做 XII ，即为 X + II 。 27 写做 XXVII, 即为 XX + V + ",meta:[{property:"og:url",content:"https://suanfa8.com/array/solutions/0013-roman-to-integer.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 13 题：罗马数字转整数（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数组"},{property:"article:tag",content:"字符串"}]},regularPath:"/array/solutions/0013-roman-to-integer.html",relativePath:"array/solutions/0013-roman-to-integer.md",key:"v-c2030536",path:"/array/solutions/0013-roman-to-integer/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:3.23,words:968},updateTime:"January 14, 2022 01:51",updateTimeStamp:1642125115e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456182e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 66 题：加 1（简单）",frontmatter:{title:"「力扣」第 66 题：加 1（简单）",icon:"yongyan",category:"数组",tags:["数组"],summary:"题目链接：66. 加一。; 题目描述 给定一个由 整数 组成的 非空 数组所表示的非负整数，在该数的基础上加一。 最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。 你可以假设除了整数 0 之外，这个整数不会以零开头。 示例 1： 示例 2： 示例 3： 提示： 1 <= digits.length <= 100; 0 <= digits[i] <",meta:[{property:"og:url",content:"https://suanfa8.com/array/solutions/0066-plus-one.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 66 题：加 1（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数组"}]},regularPath:"/array/solutions/0066-plus-one.html",relativePath:"array/solutions/0066-plus-one.md",key:"v-1ba63445",path:"/array/solutions/0066-plus-one/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"解题思路",slug:"解题思路"}],readingTime:{minutes:1.08,words:325},updateTime:"January 14, 2022 01:51",updateTimeStamp:1642125115e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456182e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 67 题：二进制求和（简单）",frontmatter:{title:"「力扣」第 67 题：二进制求和（简单）",icon:"yongyan",category:"数组",tags:["数组"],summary:"题目链接：67. 二进制求和；; 题解链接：模拟「二进制」竖式加法。; 题目描述 给你两个二进制字符串，返回它们的和（用二进制表示）。 输入为 非空 字符串且只包含数字 1 和 0。 示例 1: 示例 2: 提示： 每个字符串仅由字符 '0' 或 '1' 组成。; $1 \\le a.length, b.length \\le 10^4$; 字符串如果不是 \"0",meta:[{property:"og:url",content:"https://suanfa8.com/array/solutions/0067-add-binary.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 67 题：二进制求和（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数组"}]},regularPath:"/array/solutions/0067-add-binary.html",relativePath:"array/solutions/0067-add-binary.md",key:"v-3b491bb6",path:"/array/solutions/0067-add-binary/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"解题思路",slug:"解题思路"}],readingTime:{minutes:1.67,words:501},updateTime:"January 14, 2022 01:51",updateTimeStamp:1642125115e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456182e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 125 题：验证回文串（简单）",frontmatter:{title:"「力扣」第 125 题：验证回文串（简单）",icon:"yongyan",category:"数组",tags:["数组"],summary:"题目链接：125. 验证回文串。; 题目描述 给定一个字符串，验证它是否是回文串，只考虑字母和数字字符，可以忽略字母的大小写。 说明：本题中，我们将空字符串定义为有效的回文串。 示例 1: 示例 2: 提示： $1 \\le s.length \\le 2 * 10^5$; 字符串 s 由 ASCII 字符组成; 解题思路 使用指针对撞的思想。 参考代码 1： ",meta:[{property:"og:url",content:"https://suanfa8.com/array/solutions/0125-valid-palindrome.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 125 题：验证回文串（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数组"}]},regularPath:"/array/solutions/0125-valid-palindrome.html",relativePath:"array/solutions/0125-valid-palindrome.md",key:"v-4649cfe5",path:"/array/solutions/0125-valid-palindrome/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"解题思路",slug:"解题思路"}],readingTime:{minutes:.94,words:282},updateTime:"January 14, 2022 01:51",updateTimeStamp:1642125115e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456182e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 136 题：只出现一次的数字（简单）",frontmatter:{title:"「力扣」第 136 题：只出现一次的数字（简单）",icon:"yongyan",category:"数组",tags:["数组"],summary:"题目链接：136. 只出现一次的数字。; 题目描述 给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。 说明： 你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？ 示例 1: 示例 2: Example 3: Constraints: 1 <= nums.length <= 3 * 10^4;",meta:[{property:"og:url",content:"https://suanfa8.com/array/solutions/0136-single-number.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 136 题：只出现一次的数字（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数组"}]},regularPath:"/array/solutions/0136-single-number.html",relativePath:"array/solutions/0136-single-number.md",key:"v-4743751e",path:"/array/solutions/0136-single-number/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:.72,words:217},updateTime:"January 14, 2022 01:51",updateTimeStamp:1642125115e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456182e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 137 题：只出现一次的数字 II（中等）",frontmatter:{title:"「力扣」第 137 题：只出现一次的数字 II（中等）",icon:"yongyan",category:"数组",tags:["数组"],summary:"题目链接：137. 只出现一次的数字 II。; 题目描述 给你一个整数数组 nums ，除某个元素仅出现 一次 外，其余每个元素都恰出现 三次 。请你找出并返回那个只出现了一次的元素。 示例 1： 示例 2： 提示： 1 <= nums.length <= 3 * 10^4; -2^31 <= nums[i] <= 2^31 - 1; nums 中，除某个元",meta:[{property:"og:url",content:"https://suanfa8.com/array/solutions/0137-single-number-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 137 题：只出现一次的数字 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数组"}]},regularPath:"/array/solutions/0137-single-number-ii.html",relativePath:"array/solutions/0137-single-number-ii.md",key:"v-9473e536",path:"/array/solutions/0137-single-number-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:.71,words:212},updateTime:"January 14, 2022 01:51",updateTimeStamp:1642125115e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456182e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 189 题：生成旋转数组（中等）",frontmatter:{title:"「力扣」第 189 题：生成旋转数组（中等）",icon:"yongyan",category:"字符串",tags:["字符串"],summary:"题目链接：189. 旋转数组 。; 题目描述 给定一个数组，将数组中的元素向右移动 k 个位置，其中 k 是非负数。 示例 1: 示例 2: 提示： $1 \\le nums.length \\le 10^5$; $-2^{31} \\le nums[i] \\le 2^{31} - 1$; $0 \\le k \\le 10^5$; 说明: 尽可能想出更多的解决方案，",meta:[{property:"og:url",content:"https://suanfa8.com/array/solutions/0189-rotate-array.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 189 题：生成旋转数组（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"字符串"}]},regularPath:"/array/solutions/0189-rotate-array.html",relativePath:"array/solutions/0189-rotate-array.md",key:"v-32439385",path:"/array/solutions/0189-rotate-array/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.51,words:453},updateTime:"January 14, 2022 01:51",updateTimeStamp:1642125115e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456182e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 240 题：搜索二维矩阵 II（中等）",frontmatter:{title:"「力扣」第 240 题：搜索二维矩阵 II（中等）",icon:"yongyan",category:"分治算法",tags:["分治算法"],summary:"题目链接：240. 搜索二维矩阵 II；; 题解链接：减而治之、二分查找。; 题目描述 编写一个高效的算法来搜索 m x n 矩阵 matrix 中的一个目标值 target 。该矩阵具有以下特性： 每行的元素从左到右升序排列。; 每列的元素从上到下升序排列。; 示例 1： 示例 2： 提示： m == matrix.length; n == matrix[",meta:[{property:"og:url",content:"https://suanfa8.com/array/solutions/0240-search-a-2d-matrix-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 240 题：搜索二维矩阵 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"分治算法"}]},regularPath:"/array/solutions/0240-search-a-2d-matrix-ii.html",relativePath:"array/solutions/0240-search-a-2d-matrix-ii.md",key:"v-4f184e15",path:"/array/solutions/0240-search-a-2d-matrix-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：减而治之",slug:"方法一-减而治之"},{level:2,title:"方法二：二分查找",slug:"方法二-二分查找"}],readingTime:{minutes:5.88,words:1763},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941866e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456182e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 387 题：字符串中的第一个唯一字符（简单）",frontmatter:{title:"「力扣」第 387 题：字符串中的第一个唯一字符（简单）",icon:"yongyan",category:"数组",tags:["数组"],summary:"题目链接：387. 字符串中的第一个唯一字符。; 题目描述 给定一个字符串，找到它的第一个不重复的字符，并返回它的索引。如果不存在，则返回 -1。 Example 1: Example 2: Example 3: Constraints: 1 <= s.length <= 10^5; s consists of only lowercase English ",meta:[{property:"og:url",content:"https://suanfa8.com/array/solutions/0387-first-unique-character-in-a-string.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 387 题：字符串中的第一个唯一字符（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数组"}]},regularPath:"/array/solutions/0387-first-unique-character-in-a-string.html",relativePath:"array/solutions/0387-first-unique-character-in-a-string.md",key:"v-571c02b6",path:"/array/solutions/0387-first-unique-character-in-a-string/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:.54,words:161},updateTime:"January 14, 2022 01:51",updateTimeStamp:1642125115e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456182e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 448 题：找到所有数组中消失的数字（简单）",frontmatter:{title:"「力扣」第 448 题：找到所有数组中消失的数字（简单）",icon:"yongyan",category:"数组",tags:["数组","原地哈希"],summary:"题目链接：448. 找到所有数组中消失的数字；; 题解链接：桶排序 + 基于“异或运算”交换两个变量的值（Python 代码、Java 代码）。; 题目描述 给你一个含 n 个整数的数组 nums ，其中 nums[i] 在区间 [1, n] 内。请你找出所有在 [1, n] 范围内但没有出现在 nums 中的数字，并以数组的形式返回结果。 示例 1： 示例",meta:[{property:"og:url",content:"https://suanfa8.com/array/solutions/0448-find-all-numbers-disappeared-in-an-array.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 448 题：找到所有数组中消失的数字（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数组"},{property:"article:tag",content:"原地哈希"}]},regularPath:"/array/solutions/0448-find-all-numbers-disappeared-in-an-array.html",relativePath:"array/solutions/0448-find-all-numbers-disappeared-in-an-array.md",key:"v-23c4fd45",path:"/array/solutions/0448-find-all-numbers-disappeared-in-an-array/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"桶排序 + 基于“异或运算”交换两个变量的值（Python 代码、Java 代码）",slug:"桶排序-基于-异或运算-交换两个变量的值-python-代码、java-代码"},{level:3,title:"方法一：桶排序 + 基于“异或运算”交换两个变量的值",slug:"方法一-桶排序-基于-异或运算-交换两个变量的值"},{level:3,title:"方法二：位图（使用了 1 个额外空间，不符合题意，该方法仅作了解）",slug:"方法二-位图-使用了-1-个额外空间-不符合题意-该方法仅作了解"}],readingTime:{minutes:4,words:1200},updateTime:"January 14, 2022 01:51",updateTimeStamp:1642125115e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456182e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 836 题：矩形重叠（简单）",frontmatter:{title:"「力扣」第 836 题：矩形重叠（简单）",icon:"yongyan",category:"数组",tags:["数组"],summary:"题目链接：836. 矩形重叠。; 题目描述 矩形以列表 [x1, y1, x2, y2] 的形式表示，其中 (x1, y1) 为左下角的坐标，(x2, y2) 是右上角的坐标。矩形的上下边平行于 x 轴，左右边平行于 y 轴。 如果相交的面积为 正 ，则称两矩形重叠。需要明确的是，只在角或边接触的两个矩形不构成重叠。 给出两个矩形 rec1 和 rec2 。",meta:[{property:"og:url",content:"https://suanfa8.com/array/solutions/0836-rectangle-overlap.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 836 题：矩形重叠（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数组"}]},regularPath:"/array/solutions/0836-rectangle-overlap.html",relativePath:"array/solutions/0836-rectangle-overlap.md",key:"v-6529ff6d",path:"/array/solutions/0836-rectangle-overlap/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:1.06,words:319},updateTime:"January 14, 2022 01:51",updateTimeStamp:1642125115e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456182e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 461 题：汉明距离（简单）",frontmatter:{title:"「力扣」第 461 题：汉明距离（简单）",icon:"yongyan",category:"数组",tags:["数组"],summary:"题目链接：461. 汉明距离。; 题目描述 两个整数之间的 汉明距离 指的是这两个数字对应二进制位不同的位置的数目。 给你两个整数 x 和 y，计算并返回它们之间的汉明距离。 示例 1： 示例 2： 提示： 0 <= x, y <= 2^31 - 1; 参考代码： ```",meta:[{property:"og:url",content:"https://suanfa8.com/array/solutions/0461-hamming-distance.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 461 题：汉明距离（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数组"}]},regularPath:"/array/solutions/0461-hamming-distance.html",relativePath:"array/solutions/0461-hamming-distance.md",key:"v-f65d6d36",path:"/array/solutions/0461-hamming-distance/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.08,words:324},updateTime:"January 14, 2022 01:51",updateTimeStamp:1642125115e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456182e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"回溯算法重点概括",frontmatter:{title:"回溯算法重点概括",icon:"yongyan",category:"回溯算法",tags:["回溯算法","深度优先遍历"],summary:"回溯算法在一棵树上做深度优先遍历；; 需要知道传递引用与「复制」的区别；; 一开始比较陌生很正常，题目做多了就好了。;",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"回溯算法重点概括"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"深度优先遍历"}]},regularPath:"/backtracking/",relativePath:"backtracking/README.md",key:"v-7d755634",path:"/backtracking/",readingTime:{minutes:.16,words:48},updateTime:"December 23, 2021 10:16",updateTimeStamp:1640254575e3,createTime:"December 23, 2021 10:16",createTimeStamp:1640254575e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 17 题：电话号码的字母组合（中等）",frontmatter:{title:"「力扣」第 17 题：电话号码的字母组合（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","字符串"],summary:'" 以前我不知道算法和数据结构如此重要，只是为了准备面试才会去看「面试宝典」里的算法。「面试宝典」里讲的就只有选择排序和插入排序，学完一次忘记一次。其实在算法的世界，有很多知识要我们去学习。" 题目链接：17. 电话号码的字母组合；; 题解链接：回溯搜索（无显式回溯）、广度优先遍历（Java）。; 题目描述 给定一个仅包含数字 2-9 的字符串，返回所有它能',meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0017-letter-combinations-of-a-phone-number.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 17 题：电话号码的字母组合（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"字符串"}]},regularPath:"/backtracking/solutions/0017-letter-combinations-of-a-phone-number.html",relativePath:"backtracking/solutions/0017-letter-combinations-of-a-phone-number.md",key:"v-b9a480f6",path:"/backtracking/solutions/0017-letter-combinations-of-a-phone-number/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"方法一：回溯（特指使用深度优先遍历搜索所有的解）",slug:"方法一-回溯-特指使用深度优先遍历搜索所有的解"},{level:3,title:"方法二：广度优先遍历",slug:"方法二-广度优先遍历"}],readingTime:{minutes:2.75,words:826},updateTime:"August 8, 2022 06:54",updateTimeStamp:1659941686e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 22 题：括号生成（中等）",frontmatter:{title:"「力扣」第 22 题：括号生成（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","字符串"],summary:"题目链接：22. 括号生成；; 题解链接：回溯算法（深度优先遍历）+ 广度优先遍历（Java）。; 题目描述 数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。 示例 1： 示例 2： 提示： 1 <= n <= 8; --- 这一类问题是在一棵隐式的树上求解，可以用深度优先遍历，也可以用广度优先遍历。 一般用深度",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0022-generate-parentheses.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 22 题：括号生成（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"字符串"}]},regularPath:"/backtracking/solutions/0022-generate-parentheses.html",relativePath:"backtracking/solutions/0022-generate-parentheses.md",key:"v-7615423f",path:"/backtracking/solutions/0022-generate-parentheses/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"方法一：深度优先遍历",slug:"方法一-深度优先遍历"},{level:3,title:"方法二：广度优先遍历",slug:"方法二-广度优先遍历"}],readingTime:{minutes:6.46,words:1939},updateTime:"August 8, 2022 06:54",updateTimeStamp:1659941686e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 37 题：求解数独（困难）",frontmatter:{title:"「力扣」第 37 题：求解数独（困难）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","剪枝"],summary:"这是比 n 皇后问题更酷的问题，典型的人工智能的问题，自动来解决，递归加上回溯，有效剪枝，人工智能的开始章节一般就将搜索问题。 题目链接：37. 解数独。; 题目描述 编写一个程序，通过填充空格来解决数独问题。 数独的解法需 遵循如下规则： 1. 数字 1-9 在每一行只能出现一次。 2. 数字 1-9 在每一列只能出现一次。 3. 数字 1-9 在每一个以",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0037-sudoku-solver.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 37 题：求解数独（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"剪枝"}]},regularPath:"/backtracking/solutions/0037-sudoku-solver.html",relativePath:"backtracking/solutions/0037-sudoku-solver.md",key:"v-21acc425",path:"/backtracking/solutions/0037-sudoku-solver/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:3.59,words:1077},updateTime:"August 8, 2022 06:54",updateTimeStamp:1659941686e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5}]},{title:"「力扣」第 39 题：组合总和（中等）",frontmatter:{title:"「力扣」第 39 题：组合总和（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","剪枝"],summary:"题目链接：39. 组合总和；; 题解链接：回溯算法 + 剪枝（回溯经典例题详解）。; 题目描述 给你一个 无重复元素 的整数数组 candidates 和一个目标整数 target ，找出 candidates 中可以使数字和为目标数 target 的 所有不同组合 ，并以列表形式返回。你可以按 任意顺序 返回这些组合。 candidates 中的 同一个 ",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0039-combination-sum.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 39 题：组合总和（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"剪枝"}]},regularPath:"/backtracking/solutions/0039-combination-sum.html",relativePath:"backtracking/solutions/0039-combination-sum.md",key:"v-28d09be5",path:"/backtracking/solutions/0039-combination-sum/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"画出树形图",slug:"画出树形图"},{level:3,title:"针对具体例子分析重复路径产生的原因（难点）",slug:"针对具体例子分析重复路径产生的原因-难点"},{level:3,title:"剪枝提速",slug:"剪枝提速"},{level:2,title:"总结",slug:"总结"},{level:3,title:"什么时候使用 used 数组，什么时候使用 begin 变量",slug:"什么时候使用-used-数组-什么时候使用-begin-变量"},{level:3,title:"补充说明",slug:"补充说明"}],readingTime:{minutes:11.56,words:3468},updateTime:"August 8, 2022 06:54",updateTimeStamp:1659941686e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 40 题：组合总和 II（中等）",frontmatter:{title:"「力扣」第 40 题：组合总和 II（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","剪枝"],summary:"题目链接：40. 组合总和 II；; 题解链接：回溯算法 + 剪枝（Java、Python）。; 题目描述 给定一个数组 candidates 和一个目标数 target ，找出 candidates 中所有可以使数字和为 target 的组合。 candidates 中的每个数字在每个组合中只能使用一次。 注意：解集不能包含重复的组合。 示例 1: 示例 ",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0040-combination-sum-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 40 题：组合总和 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"剪枝"}]},regularPath:"/backtracking/solutions/0040-combination-sum-ii.html",relativePath:"backtracking/solutions/0040-combination-sum-ii.md",key:"v-2a9cc73b",path:"/backtracking/solutions/0040-combination-sum-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"与第 39 题（组合之和）的差别",slug:"与第-39-题-组合之和-的差别"},{level:2,title:"如何去掉重复的集合（重点）",slug:"如何去掉重复的集合-重点"}],readingTime:{minutes:5.5,words:1649},updateTime:"August 8, 2022 06:54",updateTimeStamp:1659941686e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 46 题：全排列（中等）",frontmatter:{title:"「力扣」第 46 题：全排列（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","深度优先遍历","递归","树形问题"],summary:"题目链接：46. 全排列；; 题解链接：回溯算法入门级详解 + 练习（持续更新）。; 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。 示",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0046-permutations.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 46 题：全排列（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"}]},regularPath:"/backtracking/solutions/0046-permutations.html",relativePath:"backtracking/solutions/0046-permutations.md",key:"v-6a86c3a6",path:"/backtracking/solutions/0046-permutations/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"思考以下问题：",slug:"思考以下问题"}],readingTime:{minutes:6.22,words:1866},updateTime:"August 8, 2022 06:54",updateTimeStamp:1659941686e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 47 题：全排列 II（中等）",frontmatter:{title:"「力扣」第 47 题：全排列 II（中等）",icon:"shipin",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历"],summary:"题目链接：47. 全排列 II；; 题解链接：回溯搜索 + 剪枝（Java、Python）（含视频讲解）。; 视频讲解 :tv: 这道题在 题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 给定一个可包含重复数字的序列 nums ，按任意顺序 返回所有不重复的全排列。 示",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0047-permutations-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 47 题：全排列 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"}]},regularPath:"/backtracking/solutions/0047-permutations-ii.html",relativePath:"backtracking/solutions/0047-permutations-ii.md",key:"v-efda7436",path:"/backtracking/solutions/0047-permutations-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"解题思路",slug:"解题思路"},{level:2,title:"补充说明",slug:"补充说明"}],readingTime:{minutes:6.12,words:1835},updateTime:"August 8, 2022 06:54",updateTimeStamp:1659941686e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5}]},{title:"「力扣」第 51 题：N 皇后（困难）",frontmatter:{title:"「力扣」第 51 题：N 皇后（困难）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","剪枝"],summary:"题目链接：51. N 皇后；; 题解链接：回溯算法（转换成全排列问题 + 剪枝）- 题解后有相关问题。; 题目描述 n 皇后问题 研究的是如何将 n 个皇后放置在 n×n 的棋盘上，并且使皇后彼此之间不能相互攻击。 给你一个整数 n ，返回所有不同的 n 皇后问题 的解决方案。 每一种解法包含一个不同的 n 皇后问题 的棋子放置方案，该方案中 'Q' 和 '",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0051-n-queens.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 51 题：N 皇后（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"剪枝"}]},regularPath:"/backtracking/solutions/0051-n-queens.html",relativePath:"backtracking/solutions/0051-n-queens.md",key:"v-497adc6b",path:"/backtracking/solutions/0051-n-queens/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"解题思路",slug:"解题思路"}],readingTime:{minutes:12.23,words:3669},updateTime:"August 8, 2022 06:54",updateTimeStamp:1659941686e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:7}]},{title:"「力扣」第 60 题：第 k 个排列（困难）",frontmatter:{title:"「力扣」第 60 题：第 k 个排列（困难）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","剪枝"],summary:'题目链接：60. 排列序列；; 题解链接：深度优先遍历 + 剪枝、有序数组模拟。; 题目描述 给出集合 [1, 2, 3, …, n]，其所有元素共有 $n!$ 种排列。 按大小顺序列出所有排列情况，并一一标记，当 n = 3 时, 所有排列如下： 1. "123" 2. "132" 3. "213" 4. "231" 5. "312" 6. "321" 给',meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0060-permutation-sequence.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 60 题：第 k 个排列（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"剪枝"}]},regularPath:"/backtracking/solutions/0060-permutation-sequence.html",relativePath:"backtracking/solutions/0060-permutation-sequence.md",key:"v-e6214e32",path:"/backtracking/solutions/0060-permutation-sequence/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:6.65,words:1995},updateTime:"August 8, 2022 06:54",updateTimeStamp:1659941686e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5}]},{title:"「力扣」第 77 题：组合（中等）",frontmatter:{title:"「力扣」第 77 题：组合（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","剪枝"],summary:"题目链接：77. 组合；; 题解链接：回溯算法 + 剪枝（Java）。; 题目描述 给定两个整数 n 和 k，返回范围 [1, n] 中所有可能的 k 个数的组合。 你可以按 任何顺序 返回答案。 示例 1： 示例 2： 提示： 1 <= n <= 20; 1 <= k <= n; --- 重点概括： 如果解决一个问题有多个步骤，每一个步骤有多种方法，题目又",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0077-combinations.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 77 题：组合（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"剪枝"}]},regularPath:"/backtracking/solutions/0077-combinations.html",relativePath:"backtracking/solutions/0077-combinations.md",key:"v-3b2bfbfb",path:"/backtracking/solutions/0077-combinations/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"方法一：根据搜索起点画出二叉树",slug:"方法一-根据搜索起点画出二叉树"},{level:3,title:"优化：分析搜索起点的上界进行剪枝",slug:"优化-分析搜索起点的上界进行剪枝"},{level:2,title:"方法二：按照每一个数选与不选画出二叉树",slug:"方法二-按照每一个数选与不选画出二叉树"}],readingTime:{minutes:9.67,words:2902},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 78 题：子集（中等）",frontmatter:{title:"「力扣」第 78 题：子集（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","剪枝"],summary:"题目链接：78. 子集；; 题解链接：回溯 + 位运算技巧（Java、Python）（含视频讲解）。; 视频讲解 :tv: 这道题在 题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 给你一个整数数组 nums ，数组中的元素 互不相同 。返回该数组所有可能的子集（幂集）",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0078-subsets.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 78 题：子集（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"剪枝"}]},regularPath:"/backtracking/solutions/0078-subsets.html",relativePath:"backtracking/solutions/0078-subsets.md",key:"v-30fb5a76",path:"/backtracking/solutions/0078-subsets/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:3.99,words:1197},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5}]},{title:"「力扣」第 79 题：单词搜索（中等）",frontmatter:{title:"「力扣」第 79 题：单词搜索（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","字符串"],summary:"题目链接：79. 单词搜索；; 题解链接：回溯算法（Java）。; 题目描述 给定一个 m x n 二维字符网格 board 和一个字符串单词 word 。如果 word 存在于网格中，返回 true ；否则，返回 false 。 单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0079-word-search.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 79 题：单词搜索（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"字符串"}]},regularPath:"/backtracking/solutions/0079-word-search.html",relativePath:"backtracking/solutions/0079-word-search.md",key:"v-69145925",path:"/backtracking/solutions/0079-word-search/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.13,words:338},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6}]},{title:"「力扣」第 90 题：子集 II（中等）",frontmatter:{title:"「力扣」第 90 题：子集 II（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","剪枝"],summary:"题目链接：90. 子集 II；; 视频讲解：B 站。; 视频讲解 :tv: 这道题在 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 给你一个整数数组 nums ，其中可能包含重复元素，请你返回该数组所有可能的子集（幂集）。 解集 不能 包含重复的子集。返回的解集中，子集可以按 ",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0090-subsets-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 90 题：子集 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"剪枝"}]},regularPath:"/backtracking/solutions/0090-subsets-ii.html",relativePath:"backtracking/solutions/0090-subsets-ii.md",key:"v-361e118e",path:"/backtracking/solutions/0090-subsets-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:2.91,words:874},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6}]},{title:"「力扣」第 93 题：复原 IP 地址（中等）",frontmatter:{title:"「力扣」第 93 题：复原 IP 地址（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","字符串"],summary:'题目链接：93. 复原 IP 地址；; 题解链接：回溯算法（画图分析剪枝条件）。; 题目描述 有效 IP 地址 正好由四个整数（每个整数位于 0 到 255 之间组成，且不能含有前导 0），整数之间用 \'.\' 分隔。 例如："0.1.2.201" 和 "192.168.1.1" 是 有效 IP 地址，但是 "0.011.255.245"、"192.168.1',meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0093-restore-ip-addresses.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 93 题：复原 IP 地址（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"字符串"}]},regularPath:"/backtracking/solutions/0093-restore-ip-addresses.html",relativePath:"backtracking/solutions/0093-restore-ip-addresses.md",key:"v-69cd5401",path:"/backtracking/solutions/0093-restore-ip-addresses/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:6.02,words:1805},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 113 题：路径总和 II（中等）",frontmatter:{title:"「力扣」第 113 题：路径总和 II（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历"],summary:"题目链接：113. 路径总和 II；; 题解链接：回溯算法（Java）。; 题目描述 给你二叉树的根节点 root 和一个整数目标和 targetSum ，找出所有 从根节点到叶子节点 路径总和等于给定目标和的路径。 叶子节点 是指没有子节点的节点。 示例 1： 示例 2： 示例 3： 提示： 树中节点总数在范围 [0, 5000] 内; -1000 <= ",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0113-path-sum-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 113 题：路径总和 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"}]},regularPath:"/backtracking/solutions/0113-path-sum-ii.html",relativePath:"backtracking/solutions/0113-path-sum-ii.md",key:"v-738c4125",path:"/backtracking/solutions/0113-path-sum-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"总结",slug:"总结"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:6.56,words:1967},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 126 题：单词接龙 II（困难）",frontmatter:{title:"「力扣」第 126 题：单词接龙 II（困难）",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历","回溯算法"],summary:"题目链接：126. 单词接龙 II；; 题解链接：广度优先遍历建图 + 深度优先遍历找到所有解（Java）。; 题目描述 给定两个单词（beginWord 和 endWord）和一个字典 wordList，找出所有从 beginWord 到 endWord 的最短转换序列。转换需遵循如下规则： 1. 每次转换只能改变一个字母。 2. 转换过程中的中间单词必须",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0126-word-ladder-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 126 题：单词接龙 II（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"},{property:"article:tag",content:"回溯算法"}]},regularPath:"/backtracking/solutions/0126-word-ladder-ii.html",relativePath:"backtracking/solutions/0126-word-ladder-ii.md",key:"v-2df88ffd",path:"/backtracking/solutions/0126-word-ladder-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"解题思路",slug:"解题思路"},{level:3,title:"练习：LeetCode 第 126 题：单词接龙 II",slug:"练习-leetcode-第-126-题-单词接龙-ii"}],readingTime:{minutes:12.24,words:3671},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 131 题：分割回文串（中等）",frontmatter:{title:"「力扣」第 131 题：分割回文串（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法"],summary:"题目链接：131. 分割回文串；; 题解链接：回溯算法、优化（使用动态规划预处理数组）。; 题目描述 给你一个字符串 s，请你将 s 分割成一些子串，使每个子串都是 回文串 。返回 s 所有可能的分割方案。 回文串 是正着读和反着读都一样的字符串。 示例 1： 示例 2： 提示： 1 <= s.length <= 16; s 仅由小写英文字母组成; 思路分析",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0131-palindrome-partitioning.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 131 题：分割回文串（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"}]},regularPath:"/backtracking/solutions/0131-palindrome-partitioning.html",relativePath:"backtracking/solutions/0131-palindrome-partitioning.md",key:"v-39b2ee36",path:"/backtracking/solutions/0131-palindrome-partitioning/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:3,title:"方法一：回溯算法",slug:"方法一-回溯算法"},{level:3,title:"方法二：回溯的优化（使用动态规划得到所有子串是否是回文）",slug:"方法二-回溯的优化-使用动态规划得到所有子串是否是回文"}],readingTime:{minutes:5.47,words:1642},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 130 题：被围绕的区域",frontmatter:{title:"「力扣」第 130 题：被围绕的区域",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","广度优先遍历","并查集","flood fill"],summary:"题目链接：130. 被围绕的区域；; 题解链接：深度优先遍历、广度优先遍历、并查集（Java）。; 题目描述 给你一个 m x n 的矩阵 board ，由若干字符 'X' 和 'O' ，找到所有被 'X' 围绕的区域，并将这些区域里所有的 'O' 用 'X' 填充。 示例 1： 示例 2： 提示： m == board.length; n == board",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0130-surrounded-regions.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 130 题：被围绕的区域"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"广度优先遍历"},{property:"article:tag",content:"并查集"},{property:"article:tag",content:"flood fill"}]},regularPath:"/backtracking/solutions/0130-surrounded-regions.html",relativePath:"backtracking/solutions/0130-surrounded-regions.md",key:"v-0a54f2a1",path:"/backtracking/solutions/0130-surrounded-regions/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"方法一：深度优先遍历",slug:"方法一-深度优先遍历"},{level:3,title:"方法二：广度优先遍历",slug:"方法二-广度优先遍历"},{level:3,title:"方法三：并查集",slug:"方法三-并查集"}],readingTime:{minutes:5.3,words:1590},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 132 题：分割回文串 II（困难）",frontmatter:{title:"「力扣」第 132 题：分割回文串 II（困难）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：132. 分割回文串 II；; 题解链接：动态规划（Java、Python）。; 题目描述 给你一个字符串 s，请你将 s 分割成一些子串，使每个子串都是回文。 返回符合要求的 最少分割次数 。 示例 1： 示例 2： 示例 3： 提示： 1 <= s.length <= 2000; s 仅由小写英文字母组成; 方法一：动态规划 步骤 1：思考状态",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0132-palindrome-partitioning-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 132 题：分割回文串 II（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/backtracking/solutions/0132-palindrome-partitioning-ii.html",relativePath:"backtracking/solutions/0132-palindrome-partitioning-ii.md",key:"v-19dbad41",path:"/backtracking/solutions/0132-palindrome-partitioning-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"方法一：动态规划",slug:"方法一-动态规划"},{level:3,title:"方法二：动态规划（优化）",slug:"方法二-动态规划-优化"}],readingTime:{minutes:4.49,words:1348},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 140 题：单词拆分 II（困难）",frontmatter:{title:"「力扣」第 140 题：单词拆分 II（困难）",icon:"yongyan",category:"回溯算法",tags:["动态规划","回溯算法"],summary:"题目链接：140. 单词拆分 II; 题解链接：动态规划求是否有解、回溯算法求所有具体解（Java）; 题目描述 概述： 本题是「力扣」第 139 题 单词拆分 的追问，本题解基于该问题的题解 动态规划（Java） 编写而成；; 题目如果问「一个问题的所有的具体解」，一般而言使用回溯算法完成。; --- 思路： 动态规划得到了原始输入字符串的任意长度的 前缀",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0140-word-break-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 140 题：单词拆分 II（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"},{property:"article:tag",content:"回溯算法"}]},regularPath:"/backtracking/solutions/0140-word-break-ii.html",relativePath:"backtracking/solutions/0140-word-break-ii.md",key:"v-70fe4685",path:"/backtracking/solutions/0140-word-break-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:2.88,words:865},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 200 题：岛屿的个数（中等）",frontmatter:{title:"「力扣」第 200 题：岛屿的个数（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历"],summary:'题目链接：200. 岛屿数量；; 题解链接：深度优先遍历、广度优先遍历、并查集（Java 代码）。; 题目描述 " 给定一个由 \'1\'（陆地）和 \'0\'（水）组成的的二维网格，计算岛屿的数量。一个岛被水包围，并且它是通过水平方向或垂直方向上相邻的陆地连接而成的。你可以假设网格的四个边均被水包围。" "" " 示例 1:" "" " " "" " 示例 2:"',meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0200-number-of-islands.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 200 题：岛屿的个数（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"}]},regularPath:"/backtracking/solutions/0200-number-of-islands.html",relativePath:"backtracking/solutions/0200-number-of-islands.md",key:"v-1cd977f6",path:"/backtracking/solutions/0200-number-of-islands/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"方法一：深度优先遍历",slug:"方法一-深度优先遍历"},{level:3,title:"方法二：广度优先遍历",slug:"方法二-广度优先遍历"},{level:3,title:"方法三：并查集",slug:"方法三-并查集"},{level:3,title:"方法一：深度优先遍历（回溯算法）",slug:"方法一-深度优先遍历-回溯算法"},{level:3,title:"方法二：广度优先遍历",slug:"方法二-广度优先遍历-2"},{level:3,title:"方法三：并查集",slug:"方法三-并查集-2"}],readingTime:{minutes:9.58,words:2873},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 216 题：组合总和 III（中等）",frontmatter:{title:"「力扣」第 216 题：组合总和 III（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历"],summary:"题目链接：216. 组合总和 III；; 题解链接：回溯 + 剪枝（Java）。; 题目描述 找出所有相加之和为 _n_ 的 k 个数的组合。组合中只允许含有 1 - 9 的正整数，并且每种组合中不存在重复的数字。 说明： 所有数字都是正整数。; 解集不能包含重复的组合。; 示例 1： 示例 2： Example 3: Constraints: 2 <= k",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0216-combination-sum-iii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 216 题：组合总和 III（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"}]},regularPath:"/backtracking/solutions/0216-combination-sum-iii.html",relativePath:"backtracking/solutions/0216-combination-sum-iii.md",key:"v-04027205",path:"/backtracking/solutions/0216-combination-sum-iii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:3,title:"解题思路：",slug:"解题思路"}],readingTime:{minutes:6.86,words:2059},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5}]},{title:"「力扣」第 306 题：累加数（中等）",frontmatter:{title:"「力扣」第 306 题：累加数（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历"],summary:"题目链接：「力扣」第 306 题：累加数（中等）。; 题目描述 累加数是一个字符串，组成它的数字可以形成累加序列。 一个有效的累加序列必须至少包含 3 个数。除了最开始的两个数以外，字符串中的其他数都等于它之前两个数相加的和。 给定一个只包含数字 '0'-'9' 的字符串，编写一个算法来判断给定输入是否是累加数。 说明: 累加序列里的数不会以 0 开头，所以",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0306-additive-number.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 306 题：累加数（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"}]},regularPath:"/backtracking/solutions/0306-additive-number.html",relativePath:"backtracking/solutions/0306-additive-number.md",key:"v-5d7afbe5",path:"/backtracking/solutions/0306-additive-number/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法：回溯 + 剪枝",slug:"方法-回溯-剪枝"}],readingTime:{minutes:1.21,words:362},updateTime:"January 14, 2022 01:51",updateTimeStamp:16421251e5,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 401 题：二进制手表问题",frontmatter:{title:"「力扣」第 401 题：二进制手表问题",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","字符串"],summary:"题目链接：401. 二进制手表。; 题目描述 二进制手表顶部有 4 个 LED 代表小时（0-11），底部的 6 个 LED 代表分钟（0-59）。 每个 LED 代表一个 0 或 1，最低位在右侧。 例如，上面的二进制手表读取 “3:25”。 给定一个非负整数 n 代表当前 LED 亮着的数量，返回所有可能的时间。 案例: 注意事项: 输出的顺序没有要求。",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0401-binary-watch.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 401 题：二进制手表问题"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"字符串"}]},regularPath:"/backtracking/solutions/0401-binary-watch.html",relativePath:"backtracking/solutions/0401-binary-watch.md",key:"v-994592f2",path:"/backtracking/solutions/0401-binary-watch/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.43,words:429},updateTime:"January 14, 2022 01:51",updateTimeStamp:16421251e5,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 417 题：太平洋大西洋水流问题（中等）",frontmatter:{title:"「力扣」第 417 题：太平洋大西洋水流问题（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历"],summary:"题目链接：417. 太平洋大西洋水流问题。; 题目描述 给定一个 m x n 的非负整数矩阵来表示一片大陆上各个单元格的高度。“太平洋”处于大陆的左边界和上边界，而“大西洋于大陆的右边界和下边界。 规定水流只能按照上、下、左、右四个方向流动，且只能从高到低或者在同等高度上流动。 请找出那些水流既可以流动到“太平洋”，又能流动到“大西洋”的陆地单元的坐标。 提",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0417-pacific-atlantic-water-flow.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 417 题：太平洋大西洋水流问题（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"}]},regularPath:"/backtracking/solutions/0417-pacific-atlantic-water-flow.html",relativePath:"backtracking/solutions/0417-pacific-atlantic-water-flow.md",key:"v-162c9265",path:"/backtracking/solutions/0417-pacific-atlantic-water-flow/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"深度优先遍历",slug:"深度优先遍历"}],readingTime:{minutes:1.64,words:493},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 529 题：扫雷问题（中等）",frontmatter:{title:"「力扣」第 529 题：扫雷问题（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","广度优先遍历"],summary:"题目链接：529. 扫雷游戏。; 题目描述 让我们一起来玩扫雷游戏！ 给你一个大小为 m x n 二维字符矩阵 board ，表示扫雷游戏的盘面，其中： 'M' 代表一个 未挖出的 地雷，; 'E' 代表一个 未挖出的 空方块，; 'B' 代表没有相邻（上，下，左，右，和所有 4 个对角线）地雷的 已挖出的 空白方块，; 数字（'1' 到 '8'）表示有多少",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0529-minesweeper.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 529 题：扫雷问题（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"广度优先遍历"}]},regularPath:"/backtracking/solutions/0529-minesweeper.html",relativePath:"backtracking/solutions/0529-minesweeper.md",key:"v-2e7f0376",path:"/backtracking/solutions/0529-minesweeper/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：深度优先遍历",slug:"方法一-深度优先遍历"},{level:2,title:"方法二：广度优先遍历",slug:"方法二-广度优先遍历"}],readingTime:{minutes:3.44,words:1031},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 491 题：递增子序列（中等）",frontmatter:{title:"「力扣」第 491 题：递增子序列（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法"],summary:"题目链接：491. 递增子序列。; 题目描述 典型的使用「回溯算法」解决问题的问法：找到所有。 题目中的关键字：子序列（不要求连续）、不重复，所以想到使用哈希表去重。 方法一：二叉树 前额叶没长好的题解。 方法二：多叉树",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0491-increasing-subsequences.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 491 题：递增子序列（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"}]},regularPath:"/backtracking/solutions/0491-increasing-subsequences.html",relativePath:"backtracking/solutions/0491-increasing-subsequences.md",key:"v-544f57f6",path:"/backtracking/solutions/0491-increasing-subsequences/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"方法一：二叉树",slug:"方法一-二叉树"},{level:3,title:"方法二：多叉树",slug:"方法二-多叉树"}],readingTime:{minutes:1.09,words:327},updateTime:"January 14, 2022 01:51",updateTimeStamp:16421251e5,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 784 题：字母大小写全排列（中等）",frontmatter:{title:"「力扣」第 784 题：字母大小写全排列（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","字符串"],summary:"题目链接：784. 字母大小写全排列；; 题解链接：回溯算法（深度优先遍历，Java）。; 题目描述 给定一个字符串S，通过将字符串 S 中的每个字母转变大小写，我们可以获得一个新的字符串。返回所有可能得到的字符串集合。 示例： 提示： S 的长度不超过 12。; S 仅由数字和字母组成。; --- 思路分析： 这一类搜索问题是在一个隐式的树上进行的搜索问题",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0784-letter-case-permutation.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 784 题：字母大小写全排列（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"字符串"}]},regularPath:"/backtracking/solutions/0784-letter-case-permutation.html",relativePath:"backtracking/solutions/0784-letter-case-permutation.md",key:"v-3b75c1e5",path:"/backtracking/solutions/0784-letter-case-permutation/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:2.51,words:754},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 842 题：将数组拆分成斐波那契序列（中等）",frontmatter:{title:"「力扣」第 842 题：将数组拆分成斐波那契序列（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历"],summary:'题目链接：842. 将数组拆分成斐波那契序列。; 题目描述 给定一个数字字符串 S，比如 S = "123456579"，我们可以将它分成斐波那契式的序列 [123, 456, 579]。 形式上，斐波那契式序列是一个非负整数列表 F，且满足： 0 <= F[i] <= 2^31 - 1，（也就是说，每个整数都符合 32 位有符号整数类型）；; F.leng',meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0842-split-array-into-fibonacci-sequence.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 842 题：将数组拆分成斐波那契序列（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"}]},regularPath:"/backtracking/solutions/0842-split-array-into-fibonacci-sequence.html",relativePath:"backtracking/solutions/0842-split-array-into-fibonacci-sequence.md",key:"v-2180fa85",path:"/backtracking/solutions/0842-split-array-into-fibonacci-sequence/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:1.74,words:523},updateTime:"January 14, 2022 01:51",updateTimeStamp:16421251e5,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 1020 题：飞地的数量（中等）",frontmatter:{title:"「力扣」第 1020 题：飞地的数量（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","广度优先遍历"],summary:"题目链接：1020. 飞地的数量。; 题目描述 给出一个二维数组 A，每个单元格为 0（代表海）或 1（代表陆地）。 移动是指在陆地上从一个地方走到另一个地方（朝四个方向之一）或离开网格的边界。 返回网格中 无法 在任意次数的移动中离开网格边界的陆地单元格的数量。 示例 1： 示例 2： 提示： 1. 1 <= A.length <= 500 2. 1 <=",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/1020-number-of-enclaves.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1020 题：飞地的数量（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"广度优先遍历"}]},regularPath:"/backtracking/solutions/1020-number-of-enclaves.html",relativePath:"backtracking/solutions/1020-number-of-enclaves.md",key:"v-ee451ea2",path:"/backtracking/solutions/1020-number-of-enclaves/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：深度优先遍历",slug:"方法一-深度优先遍历"},{level:2,title:"方法二：广度优先遍历",slug:"方法二-广度优先遍历"}],readingTime:{minutes:2.38,words:713},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 1034 题：边界着色（中等）",frontmatter:{title:"「力扣」第 1034 题：边界着色（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","广度优先遍历"],summary:"题目链接：1034. 边界着色。; 题目描述 给你一个大小为 m x n 的整数矩阵 grid ，表示一个网格。另给你三个整数 row、col 和 color 。网格中的每个值表示该位置处的网格块的颜色。 两个网格块属于同一 连通分量 需满足下述全部条件： 两个网格块颜色相同; 在上、下、左、右任意一个方向上相邻; 连通分量的边界 是指连通分量中满足下述条件",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/1034-coloring-a-border.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1034 题：边界着色（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"广度优先遍历"}]},regularPath:"/backtracking/solutions/1034-coloring-a-border.html",relativePath:"backtracking/solutions/1034-coloring-a-border.md",key:"v-244a2d05",path:"/backtracking/solutions/1034-coloring-a-border/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：深度优先遍历",slug:"方法一-深度优先遍历"},{level:2,title:"方法二：广度优先遍历",slug:"方法二-广度优先遍历"}],readingTime:{minutes:2.91,words:873},updateTime:"January 14, 2022 01:51",updateTimeStamp:16421251e5,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 1079 题：活字印刷（中等）",frontmatter:{title:"「力扣」第 1079 题：活字印刷（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","字符串"],summary:"题目链接：1079. 活字印刷；; 题解链接：回溯算法（设计递归函数的返回值）; 题目描述 你有一套活字字模 tiles，其中每个字模上都刻有一个字母 tiles[i]。返回你可以印出的非空字母序列的数目。 注意：本题中，每个活字字模只能使用一次。 示例 1： 示例 2： 提示： 1. 1 <= tiles.length <= 7 2. tiles 由大写英",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/1079-letter-tile-possibilities.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1079 题：活字印刷（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"字符串"}]},regularPath:"/backtracking/solutions/1079-letter-tile-possibilities.html",relativePath:"backtracking/solutions/1079-letter-tile-possibilities.md",key:"v-52654585",path:"/backtracking/solutions/1079-letter-tile-possibilities/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法：回溯算法",slug:"方法-回溯算法"}],readingTime:{minutes:2.81,words:844},updateTime:"January 14, 2022 01:51",updateTimeStamp:16421251e5,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 1254 题：统计封闭岛屿的数目（中等）",frontmatter:{title:"「力扣」第 1254 题：统计封闭岛屿的数目（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","广度优先遍历"],summary:"题目链接：1254. 统计封闭岛屿的数目。; 题目描述 有一个二维矩阵 grid ，每个位置要么是陆地（记号为 0 ）要么是水域（记号为 1 ）。 我们从一块陆地出发，每次可以往上下左右 4 个方向相邻区域走，能走到的所有陆地区域，我们将其称为一座「岛屿」。 如果一座岛屿 完全 由水域包围，即陆地边缘上下左右所有相邻区域都是水域，那么我们将其称为 「封闭岛屿",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/1254-number-of-closed-islands.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1254 题：统计封闭岛屿的数目（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"广度优先遍历"}]},regularPath:"/backtracking/solutions/1254-number-of-closed-islands.html",relativePath:"backtracking/solutions/1254-number-of-closed-islands.md",key:"v-a32c4436",path:"/backtracking/solutions/1254-number-of-closed-islands/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：深度优先遍历",slug:"方法一-深度优先遍历"},{level:2,title:"方法二：广度优先遍历",slug:"方法二-广度优先遍历"}],readingTime:{minutes:2.72,words:815},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 733 题：图像渲染（简单）",frontmatter:{title:"「力扣」第 733 题：图像渲染（简单）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","广度优先遍历","并查集","flood fill"],summary:"题目链接：733. 图像渲染。; 题目描述 有一幅以二维整数数组表示的图画，每一个整数表示该图画的像素值大小，数值在 0 到 65535 之间。 给你一个坐标 (sr, sc) 表示图像渲染开始的像素值（行 ，列）和一个新的颜色值 newColor，让你重新上色这幅图像。 为了完成上色工作，从初始坐标开始，记录初始坐标的上下左右四个方向上像素值与初始坐标相同",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/0733-flood-fill.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 733 题：图像渲染（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"广度优先遍历"},{property:"article:tag",content:"并查集"},{property:"article:tag",content:"flood fill"}]},regularPath:"/backtracking/solutions/0733-flood-fill.html",relativePath:"backtracking/solutions/0733-flood-fill.md",key:"v-0bf045a6",path:"/backtracking/solutions/0733-flood-fill/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：深度优先遍历",slug:"方法一-深度优先遍历"},{level:2,title:"方法二：广度优先遍历",slug:"方法二-广度优先遍历"},{level:2,title:"方法三：并查集",slug:"方法三-并查集"}],readingTime:{minutes:3.72,words:1115},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 1329 题：将矩阵按对角线排序（中等）",frontmatter:{title:"「力扣」第 1329 题：将矩阵按对角线排序（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法"],summary:"题目链接：1329. 将矩阵按对角线排序；; 题解链接：暴力解法。; 题目描述 矩阵对角线 是一条从矩阵最上面行或者最左侧列中的某个元素开始的对角线，沿右下方向一直到矩阵末尾的元素。例如，矩阵 mat 有 6 行 3 列，从 mat[2][0] 开始的 矩阵对角线 将会经过 mat[2][0]、mat[3][1] 和 mat[4][2] 。 给你一个 m n",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/1329-sort-the-matrix-diagonally.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1329 题：将矩阵按对角线排序（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"}]},regularPath:"/backtracking/solutions/1329-sort-the-matrix-diagonally.html",relativePath:"backtracking/solutions/1329-sort-the-matrix-diagonally.md",key:"v-4e65b80f",path:"/backtracking/solutions/1329-sort-the-matrix-diagonally/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.36,words:707},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 1391 题：检查网格中是否存在有效路径（中等）",frontmatter:{title:"「力扣」第 1391 题：检查网格中是否存在有效路径（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历"],summary:"题目链接：1391. 检查网格中是否存在有效路径。; 题目描述 给你一个 m x n 的网格 grid。网格里的每个单元都代表一条街道。grid[i][j] 的街道可以是： 1 表示连接左单元格和右单元格的街道。; 2 表示连接上单元格和下单元格的街道。; 3 表示连接左单元格和下单元格的街道。; 4 表示连接右单元格和下单元格的街道。; 5 表示连接左单元",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/1391-check-if-there-is-a-valid-path-in-a-grid.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1391 题：检查网格中是否存在有效路径（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"}]},regularPath:"/backtracking/solutions/1391-check-if-there-is-a-valid-path-in-a-grid.html",relativePath:"backtracking/solutions/1391-check-if-there-is-a-valid-path-in-a-grid.md",key:"v-2b09ae7b",path:"/backtracking/solutions/1391-check-if-there-is-a-valid-path-in-a-grid/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法：深度优先遍历",slug:"方法-深度优先遍历"}],readingTime:{minutes:2.63,words:789},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 1593 题：拆分字符串使唯一子字符串的数目最大（中等）",frontmatter:{title:"「力扣」第 1593 题：拆分字符串使唯一子字符串的数目最大（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历"],summary:"题目链接：1593. 拆分字符串使唯一子字符串的数目最大。; 题目描述 给你一个字符串 s ，请你拆分该字符串，并返回拆分后唯一子字符串的最大数目。 字符串 s 拆分后可以得到若干 非空子字符串 ，这些子字符串连接后应当能够还原为原字符串。但是拆分出来的每个子字符串都必须是 唯一的 。 注意：子字符串 是字符串中的一个连续字符序列。 示例 1： 示例 2： ",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/1593-split-a-string-into-the-max-number-of-unique-substrings.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1593 题：拆分字符串使唯一子字符串的数目最大（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"}]},regularPath:"/backtracking/solutions/1593-split-a-string-into-the-max-number-of-unique-substrings.html",relativePath:"backtracking/solutions/1593-split-a-string-into-the-max-number-of-unique-substrings.md",key:"v-7f545425",path:"/backtracking/solutions/1593-split-a-string-into-the-max-number-of-unique-substrings/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.39,words:418},updateTime:"January 14, 2022 01:51",updateTimeStamp:16421251e5,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 1631 题：最小体力消耗路径（中等）",frontmatter:{title:"「力扣」第 1631 题：最小体力消耗路径（中等）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","广度优先遍历","二分查找","flood fill"],summary:"题目链接：1631. 最小体力消耗路径; 题目描述 你准备参加一场远足活动。给你一个二维 rows x columns 的地图 heights ，其中 heights[row][col] 表示格子 (row, col) 的高度。一开始你在最左上角的格子 (0, 0) ，且你希望去最右下角的格子 (rows-1, columns-1) （注意下标从 0 开始编",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/1631-path-with-minimum-effort.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1631 题：最小体力消耗路径（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"广度优先遍历"},{property:"article:tag",content:"二分查找"},{property:"article:tag",content:"flood fill"}]},regularPath:"/backtracking/solutions/1631-path-with-minimum-effort.html",relativePath:"backtracking/solutions/1631-path-with-minimum-effort.md",key:"v-675d38b5",path:"/backtracking/solutions/1631-path-with-minimum-effort/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：二分查找 + DFS",slug:"方法一-二分查找-dfs"},{level:2,title:"方法二：二分查找 + BFS",slug:"方法二-二分查找-bfs"}],readingTime:{minutes:3.18,words:953},updateTime:"August 8, 2022 06:53",updateTimeStamp:1659941637e3,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"剑指 Offer 38. 字符串的排列",frontmatter:{title:"剑指 Offer 38. 字符串的排列",icon:"yongyan",category:"回溯算法",tags:["回溯算法"],summary:"题目链接：剑指 Offer 38. 字符串的排列；; 题解链接：回溯算法（Java）。; 题目描述 输入一个字符串，打印出该字符串中字符的所有排列。 你可以以任意顺序返回这个字符串数组，但里面不能有重复元素。 示例: 限制： --- 这道题其实就是字符上的全排列问题，使用回溯算法就可以完成。 参考题解： 「力扣」第 46 题题解：从全排列问题开始理解「回溯搜",meta:[{property:"og:url",content:"https://suanfa8.com/backtracking/solutions/38-zi-fu-chuan-de-pai-lie-lcof.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"剑指 Offer 38. 字符串的排列"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"}]},regularPath:"/backtracking/solutions/38-zi-fu-chuan-de-pai-lie-lcof.html",relativePath:"backtracking/solutions/38-zi-fu-chuan-de-pai-lie-lcof.md",key:"v-08d9baa5",path:"/backtracking/solutions/38-zi-fu-chuan-de-pai-lie-lcof/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:2.02,words:605},updateTime:"January 14, 2022 01:51",updateTimeStamp:16421251e5,createTime:"January 5, 2022 14:19",createTimeStamp:1641392394e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"第 1 节 二分查找的基本思想",frontmatter:{title:"第 1 节 二分查找的基本思想",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"友情提示 所有的「二分查找」都只有一个逻辑，逐渐缩小搜索区间 （减而治之），二分查找没有难到解决不了，无从下手。虽然网上提供了很多二分查找的「模板」，但是 写算法问题不是背模板，并往里面填空；; 如果你对什么时候设置 right = len 还是 right = len - 1，向左边走还是向右边走不清楚，这些需要从题目中得出，不看题目凭空想是没有用的；; ",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/01.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 1 节 二分查找的基本思想"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/01.html",relativePath:"binary-search/01.md",key:"v-47aa5819",path:"/binary-search/01/",headers:[{level:2,title:"生活中的二分查找",slug:"生活中的二分查找"},{level:2,title:"可以使用「二分查找」的前提",slug:"可以使用「二分查找」的前提"},{level:2,title:"学习「二分查找」的最基本问题",slug:"学习「二分查找」的最基本问题"},{level:3,title:"例：「力扣」第 704 题：二分查找（简单）",slug:"例-「力扣」第-704-题-二分查找-简单"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:6.03,words:1810},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 11, 2021 03:27",createTimeStamp:1639193248e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:6},{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"第 2 节 「力扣」上一类问题的特点（极其重要）",frontmatter:{title:"第 2 节 「力扣」上一类问题的特点（极其重要）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"这一节的内容非常重要，只有知道了问题的本质，才能理解「模板」到底是怎么回事。请大家一定仔细挖掘「力扣」第 34 题、第 35 题和第 69 题的特点，这三道问题非常典型。 下面这段描述非常重要，需要结合本节给出的例题（「力扣」第 34 题、第 35 题和第 69 题）进行理解 「力扣」上有一些问题具有这样的特点。问题的答案可能是 mid 位置的值。具体来说，",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/02.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 2 节 「力扣」上一类问题的特点（极其重要）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/02.html",relativePath:"binary-search/02.md",key:"v-4b3883d7",path:"/binary-search/02/",headers:[{level:2,title:"例 1：「力扣」第 34 题：在排序数组中查找元素的第一个和最后一个位置",slug:"例-1-「力扣」第-34-题-在排序数组中查找元素的第一个和最后一个位置"},{level:2,title:"例 2：「力扣」第 35 题：搜索插入位置",slug:"例-2-「力扣」第-35-题-搜索插入位置"},{level:2,title:"例 3：「力扣」第 69 题：平方根（简单）",slug:"例-3-「力扣」第-69-题-平方根-简单"}],readingTime:{minutes:4.63,words:1390},updateTime:"December 24, 2021 10:03",updateTimeStamp:1640340186e3,createTime:"December 11, 2021 03:27",createTimeStamp:1639193248e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"第 3 节 把区间分成两个部分",frontmatter:{title:"第 3 节 把区间分成两个部分",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"温馨提示 本节的重点内容是：把区间分成两个部分，去掉一定不存在目标元素的区间，只在有可能存在目标元素的区间里查找。这样当 left 与 right 重合的时候，我们才可以确定找到了目标元素（或者确定搜索区间里不存在目标元素）。 上一节我们讲解了「力扣」上一类二分查找问题的共同特点，这一节我们讲解针对这一类问题的解法。第 3 节和第 4 节是重点，但 绝对不是",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/03.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 3 节 把区间分成两个部分"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/03.html",relativePath:"binary-search/03.md",key:"v-4ec6af95",path:"/binary-search/03/",readingTime:{minutes:1.49,words:448},updateTime:"January 19, 2022 17:48",updateTimeStamp:164261449e4,createTime:"December 11, 2021 03:27",createTimeStamp:1639193248e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:6},{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"第 7 节  while (left < right) 一定表示左闭右开吗？",frontmatter:{title:"第 7 节  while (left < right) 一定表示左闭右开吗？",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"网上有教程提到 while (left < right) 表示定义的搜索区间 [left..right) 左闭右开区间，这种说法不完全正确。while 里面的条件只表示什么时候循环终止。 「左闭右开」还是「左闭右闭」这一点 完全由编码的人决定。其实「左闭右闭」还是「左闭右开」是一件很简单的事情，下面我们分别进行说明。 把区间定义成 [left..right)",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/07.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 7 节  while (left < right) 一定表示左闭右开吗？"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/07.html",relativePath:"binary-search/07.md",key:"v-5cff5e8d",path:"/binary-search/07/",headers:[{level:2,title:"什么是「左闭右闭」",slug:"什么是「左闭右闭」"},{level:2,title:"什么是「左闭右开」",slug:"什么是「左闭右开」"},{level:2,title:"使用「二分查找」解决的问题应该做好以下几点",slug:"使用「二分查找」解决的问题应该做好以下几点"}],readingTime:{minutes:2.2,words:659},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 11, 2021 03:27",createTimeStamp:1639193248e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:7},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"第 8 节  三种二分查找模板对比",frontmatter:{title:"第 8 节  三种二分查找模板对比",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"我知道二分查找常见有 3 种写法，是在「力扣」的「学习」板块的「LeetBook」里，有一本叫「二分查找」的 LeetBook。 如果你使用英文版的 LeetCode，「学习」版块叫「explore」。 我简单解释一下大家常见的三个模板，它们区分的标志是 while 里面写什么。 模板 1：while (left <= right); 模板 2：while ",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/08.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 8 节  三种二分查找模板对比"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/08.html",relativePath:"binary-search/08.md",key:"v-608d8a4b",path:"/binary-search/08/",headers:[{level:2,title:"模板 1：while (left <= right)",slug:"模板-1-while-left-right"},{level:2,title:"模板 2：while (left < right)",slug:"模板-2-while-left-right"},{level:2,title:"模板 3：while (left + 1 < right)",slug:"模板-3-while-left-1-right"},{level:2,title:"我用什么模板",slug:"我用什么模板"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:8.12,words:2435},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 11, 2021 03:27",createTimeStamp:1639193248e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:9},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"第 10 节 从学习「二分查找」窥见算法学习的一般方法",frontmatter:{title:"第 10 节 从学习「二分查找」窥见算法学习的一般方法",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"提示 这一节的内容也适用于绝大多数算法与数据结构问题的学习。不能保证所有的问题都可以得到解决，但是为大家提供了一个学习和解决问题的思路。方向需要正确，态度也要对，不能指望凡事都有捷径，需要踏实、努力。 不迷信模板 「模板」是基于对知识和题型的掌握比较熟悉的情况下，并且是在竞速类的算法竞赛问题中，才有用的东西，也是一个「黑话」，请大家正确看待模板的作用和意义。",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/10.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 10 节 从学习「二分查找」窥见算法学习的一般方法"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/10.html",relativePath:"binary-search/10.md",key:"v-9b590f46",path:"/binary-search/10/",headers:[{level:2,title:"不迷信模板",slug:"不迷信模板"},{level:2,title:"认真看题",slug:"认真看题"},{level:2,title:"编码需要做到语义清晰",slug:"编码需要做到语义清晰"},{level:2,title:"调试",slug:"调试"},{level:2,title:"思考",slug:"思考"},{level:2,title:"总结与输出",slug:"总结与输出"},{level:2,title:"不要完美主义",slug:"不要完美主义"}],readingTime:{minutes:2.34,words:702},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 12, 2021 08:14",createTimeStamp:1639296865e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"第 9 节  写对「二分查找」的经验",frontmatter:{title:"第 9 节  写对「二分查找」的经验",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"认真看题目、认真审题 这是我在这个专题里写过很多次的，我写题解的时候总会花一定篇幅写理解题意，「二分查找」的问题，仔细看题，理解题目的意思很关键。 认真审题无比重要 经常看到有朋友说，不知道向左边走还是向右边走，左边界变量和有边界变量如何设置，right 设置成 len 还是 len - 1。重要的事情说三遍： 这些问题一定要回到题目中寻找答案，不看题是得不",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/09.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 9 节  写对「二分查找」的经验"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/09.html",relativePath:"binary-search/09.md",key:"v-641bb609",path:"/binary-search/09/",headers:[{level:2,title:"认真看题目、认真审题",slug:"认真看题目、认真审题"},{level:2,title:"找到问题的「单调性」或者「可以逐步缩小搜索区间」的原因",slug:"找到问题的「单调性」或者「可以逐步缩小搜索区间」的原因"},{level:2,title:"一定要弄清楚要找的元素满足什么性质",slug:"一定要弄清楚要找的元素满足什么性质"},{level:2,title:"从反面思考不容易错（重点）",slug:"从反面思考不容易错-重点"}],readingTime:{minutes:1.97,words:592},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 11, 2021 03:27",createTimeStamp:1639193248e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:6},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{frontmatter:{summary:"「二分查找精讲」专栏介绍 「二分查找」是一个思想很简单的算法：逐步缩小搜索区间。「二分查找」是重点，但绝对不是难点；; 本专栏详细讲解了大家在学习「二分查找」的过程中遇到的问题；; 我们分成了 10 个小节向大家介绍「二分查找」的全部内容，这 10 个部分阅读的难度都不大，甚至内容是很浅显的。如果你还有疑问，请带着疑问去完成「力扣」上「二分查找」的问题。; ",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/binary-search/",relativePath:"binary-search/README.md",key:"v-b0421f28",path:"/binary-search/",readingTime:{minutes:.98,words:295},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 11, 2021 03:27",createTimeStamp:1639193248e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:10},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"二分查找习题列表",frontmatter:{title:"二分查找习题列表",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"在 这里 和「力扣」第 35 题的题解 写对二分查找不是套模板并往里面填空，需要仔细分析题意 里我都罗列了一些问题，这些问题都可以帮助大家更好地理解「二分查找」。",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/practice.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"二分查找习题列表"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/practice.html",relativePath:"binary-search/practice.md",key:"v-7a9f58a5",path:"/binary-search/practice/",readingTime:{minutes:.32,words:95},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 16, 2021 08:57",createTimeStamp:1639645035e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 4 题：寻找两个有序数组的中位数（困难）",frontmatter:{title:"「力扣」第 4 题：寻找两个有序数组的中位数（困难）",icon:"shipin",category:"二分查找",tags:["二分查找"],summary:"题目链接：4. 寻找两个正序数组的中位数；; 题解链接：二分查找定位短数组的「分割线」（Java ）。; 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 给定两个大小分别为 m 和 n 的正序（从小到大）数组 nums1 和 nums2",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-index/0004-median-of-two-sorted-arrays.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 4 题：寻找两个有序数组的中位数（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-index/0004-median-of-two-sorted-arrays.html",relativePath:"binary-search/solutions/find-index/0004-median-of-two-sorted-arrays.md",key:"v-2344e425",path:"/binary-search/solutions/find-index/0004-median-of-two-sorted-arrays/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"题意分析",slug:"题意分析"},{level:2,title:"思路分析",slug:"思路分析"},{level:3,title:"方法一：暴力解法：合并以、排序、得到中位数",slug:"方法一-暴力解法-合并以、排序、得到中位数"},{level:3,title:"方法二：实现归并排序、得到中位数",slug:"方法二-实现归并排序、得到中位数"},{level:3,title:"方法三：二分查找",slug:"方法三-二分查找"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:11.71,words:3512},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941845e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6}]},{title:"「力扣」第 33 题：搜索旋转排序数组（中等）",frontmatter:{title:"「力扣」第 33 题：搜索旋转排序数组（中等）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接：33. 搜索旋转排序数组；; 题解链接：二分查找（Java）。; 题目描述 整数数组 nums 按升序排列，数组中的值 互不相同 。 在传递给函数之前，nums 在预先未知的某个下标 k（0 <= k < nums.length）上进行了 旋转，使数组变为 [nums[k], nums[k+1], ..., nums[n-1], nums[0], ",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-index/0033-search-in-rotated-sorted-array.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 33 题：搜索旋转排序数组（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-index/0033-search-in-rotated-sorted-array.html",relativePath:"binary-search/solutions/find-index/0033-search-in-rotated-sorted-array.md",key:"v-4b649519",path:"/binary-search/solutions/find-index/0033-search-in-rotated-sorted-array/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：遍历（时间复杂度不符合题目要求）",slug:"方法一-遍历-时间复杂度不符合题目要求"},{level:2,title:"方法二：二分查找",slug:"方法二-二分查找"}],readingTime:{minutes:6.12,words:1836},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941845e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6}]},{title:"「力扣」第 34 题：在排序数组中查找元素的第一个和最后一个位置（中等）",frontmatter:{title:"「力扣」第 34 题：在排序数组中查找元素的第一个和最后一个位置（中等）",icon:"shipin",category:"二分查找",tags:["二分查找"],summary:"温馨提示 查找第一个元素和最后一个元素的代码不是背出来的，仔细分析就不难写出代码，关键是要认真。二分查找不是难点，也不是重点。 题目链接：34. 在排序数组中查找元素的第一个和最后一个位置。; :tv: 「力扣」第 34 题视频题解 建议使用 1.5 倍速观看。 B 站。; 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-index/0034-find-first-and-last-position-of-element-in-sorted-array.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 34 题：在排序数组中查找元素的第一个和最后一个位置（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-index/0034-find-first-and-last-position-of-element-in-sorted-array.html",relativePath:"binary-search/solutions/find-index/0034-find-first-and-last-position-of-element-in-sorted-array.md",key:"v-c508b776",path:"/binary-search/solutions/find-index/0034-find-first-and-last-position-of-element-in-sorted-array/",headers:[{level:2,title:"📺 「力扣」第 34 题视频题解",slug:"「力扣」第-34-题视频题解"},{level:2,title:"📔 「力扣」第 34 题文字题解",slug:"「力扣」第-34-题文字题解"},{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"对参考代码的说明",slug:"对参考代码的说明"}],readingTime:{minutes:4.57,words:1371},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 35 题：搜索插入位置（简单）",frontmatter:{title:"「力扣」第 35 题：搜索插入位置（简单）",icon:"shipin",category:"二分查找",tags:["二分查找"],summary:"题目链接：35. 搜索插入位置；; 题解链接：写对二分查找不是套模板并往里面填空，需要仔细分析题意。; 题目描述 给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。 你可以假设数组中无重复元素。 示例 1： 示例 2： 示例 3： 示例 4： 示例 5: 关键 写对「二分查找」的重点，从来",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-index/0035-search-insert-position.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 35 题：搜索插入位置（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-index/0035-search-insert-position.html",relativePath:"binary-search/solutions/find-index/0035-search-insert-position.md",key:"v-f7e08266",path:"/binary-search/solutions/find-index/0035-search-insert-position/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"题意分析",slug:"题意分析"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:4.56,words:1367},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 81 题：搜索旋转排序数组 II（中等）",frontmatter:{title:"「力扣」第 81 题：搜索旋转排序数组 II（中等）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接：81. 搜索旋转排序数组 II；; 题解地址：二分查找（Python 代码、Java 代码）。; 题目描述 已知存在一个按非降序排列的整数数组 nums ，数组中的值不必互不相同。 在传递给函数之前，nums 在预先未知的某个下标 k（0 <= k < nums.length）上进行了 旋转 ，使数组变为 [nums[k], nums[k+1], ",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-index/0081-search-in-rotated-sorted-array-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 81 题：搜索旋转排序数组 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-index/0081-search-in-rotated-sorted-array-ii.html",relativePath:"binary-search/solutions/find-index/0081-search-in-rotated-sorted-array-ii.md",key:"v-d4e67cb6",path:"/binary-search/solutions/find-index/0081-search-in-rotated-sorted-array-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:3.19,words:958},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 153 题：旋转排序数组的最小值（中等）",frontmatter:{title:"「力扣」第 153 题：旋转排序数组的最小值（中等）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目地址：153. 寻找旋转排序数组中的最小值；; 题解地址：二分法 + 分治法（Python 代码、Java 代码）。; 题目描述 已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,2,4,5,6,7] 在变化后可能得到： 若旋转 4 次，则可以得到 [4,5,6,7,0,1,",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-index/0153-find-minimum-in-rotated-sorted-array.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 153 题：旋转排序数组的最小值（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-index/0153-find-minimum-in-rotated-sorted-array.html",relativePath:"binary-search/solutions/find-index/0153-find-minimum-in-rotated-sorted-array.md",key:"v-e5bd521a",path:"/binary-search/solutions/find-index/0153-find-minimum-in-rotated-sorted-array/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：暴力法",slug:"方法一-暴力法"},{level:2,title:"方法二：二分查找",slug:"方法二-二分查找"},{level:2,title:"方法三：分治法",slug:"方法三-分治法"}],readingTime:{minutes:6,words:1800},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 154 题：旋转排序数组的最小值 II（困难）",frontmatter:{title:"「力扣」第 154 题：旋转排序数组的最小值 II（困难）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目地址：154. 寻找旋转排序数组中的最小值 II；; 题解地址：二分法 + 分治法（Python 代码、Java 代码）。; 题目描述 已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次 旋转 后，得到输入数组。例如，原数组 nums = [0,1,4,4,5,6,7] 在变化后可能得到： 若旋转 4 次，则可以得到 [4,5,6,7,0",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-index/0154-find-minimum-in-rotated-sorted-array-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 154 题：旋转排序数组的最小值 II（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-index/0154-find-minimum-in-rotated-sorted-array-ii.html",relativePath:"binary-search/solutions/find-index/0154-find-minimum-in-rotated-sorted-array-ii.md",key:"v-2ef83476",path:"/binary-search/solutions/find-index/0154-find-minimum-in-rotated-sorted-array-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"理解题意",slug:"理解题意"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：二分法",slug:"方法一-二分法"},{level:2,title:"方法二：分治法",slug:"方法二-分治法"}],readingTime:{minutes:5.02,words:1507},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 162 题：寻找峰值（中等）",frontmatter:{title:"「力扣」第 162 题：寻找峰值（中等）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接：162. 寻找峰值；; 题解链接：减而治之，二分查找。; 题目描述 峰值元素是指其值严格大于左右相邻值的元素。 给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。 你可以假设 nums[-1] = nums[n] = -∞ 。 你必须实现时间复杂度为 O(log n) 的算法",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-index/0162-find-peak-element.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 162 题：寻找峰值（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-index/0162-find-peak-element.html",relativePath:"binary-search/solutions/find-index/0162-find-peak-element.md",key:"v-65b73105",path:"/binary-search/solutions/find-index/0162-find-peak-element/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.09,words:628},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 20, 2021 12:53",createTimeStamp:1640004789e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6}]},{title:"「力扣」第 275 题：H 指数 II（中等）",frontmatter:{title:"「力扣」第 275 题：H 指数 II（中等）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接：275. H 指数 II；; 题解链接：二分查找猜论文篇数（Java）。; 题目描述 给你一个整数数组 citations ，其中 citations[i] 表示研究者的第 i 篇论文被引用的次数，citations 已经按照 升序排列 。计算并返回该研究者的 h 指数。 h 指数的定义：h 代表“高引用次数”（high citations），一名",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-index/0275-h-index-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 275 题：H 指数 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-index/0275-h-index-ii.html",relativePath:"binary-search/solutions/find-index/0275-h-index-ii.md",key:"v-0f4fd9f9",path:"/binary-search/solutions/find-index/0275-h-index-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"理解题意",slug:"理解题意"}],readingTime:{minutes:5.56,words:1668},updateTime:"May 2, 2022 05:22",updateTimeStamp:1651468927e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6}]},{title:"「力扣」第 436 题：寻找右区间（中等）",frontmatter:{title:"「力扣」第 436 题：寻找右区间（中等）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接：436. 寻找右区间；; 题解链接：二分查找、二分搜索树。; 题目描述 给你一个区间数组 intervals ，其中 intervals[i] = [starti, endi] ，且每个 starti 都 不同 。 区间 i 的 右侧区间 可以记作区间 j ，并满足 startj >= endi ，且 startj` 最小化 。 返回一个由每个区间",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-index/0436-find-right-interval.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 436 题：寻找右区间（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-index/0436-find-right-interval.html",relativePath:"binary-search/solutions/find-index/0436-find-right-interval.md",key:"v-78593305",path:"/binary-search/solutions/find-index/0436-find-right-interval/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"解题思路",slug:"解题思路"},{level:2,title:"方法一：排序预处理 + 二分查找",slug:"方法一-排序预处理-二分查找"},{level:2,title:"方法二：使用二分搜索树",slug:"方法二-使用二分搜索树"}],readingTime:{minutes:3.54,words:1061},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 611 题：有效三角形的个数（中等）",frontmatter:{title:"「力扣」第 611 题：有效三角形的个数（中等）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接：611. 有效三角形的个数；; 题解链接：排序以后找第 1 个大于等于两边之和的下标（Java）。; 题目描述 给定一个包含非负整数的数组，你的任务是统计其中可以组成三角形三条边的三元组个数。 示例 1： 注意: 1. 数组长度不超过 1000。 2. 数组里整数的范围为 [0, 1000]。 数据范围： 1 <= nums.length <= 1",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-index/0611-valid-triangle-number.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 611 题：有效三角形的个数（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-index/0611-valid-triangle-number.html",relativePath:"binary-search/solutions/find-index/0611-valid-triangle-number.md",key:"v-2145d7f6",path:"/binary-search/solutions/find-index/0611-valid-triangle-number/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.84,words:851},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 744 题：寻找比目标字母大的最小字母（简单）",frontmatter:{title:"「力扣」第 744 题：寻找比目标字母大的最小字母（简单）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接：744. 寻找比目标字母大的最小字母；; 题解链接：转换为第 35 题，找第 1 个严格大于 target 元素的位置（模板写法）。; 题目描述 给你一个排序后的字符列表 letters ，列表中只包含小写英文字母。另给出一个目标字母 target，请你寻找在这一有序列表里比目标字母大的最小字母。 在比较时，字母是依序循环出现的。举个例子： 如果目",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-index/0744-find-smallest-letter-greater-than-target.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 744 题：寻找比目标字母大的最小字母（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-index/0744-find-smallest-letter-greater-than-target.html",relativePath:"binary-search/solutions/find-index/0744-find-smallest-letter-greater-than-target.md",key:"v-76b6c84d",path:"/binary-search/solutions/find-index/0744-find-smallest-letter-greater-than-target/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.81,words:844},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"January 5, 2022 14:25",createTimeStamp:1641392728e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 658 题：找到 K 个最接近的元素（中等）",frontmatter:{title:"「力扣」第 658 题：找到 K 个最接近的元素（中等）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接：658. 找到 K 个最接近的元素；; 题解链接：排除法（双指针） + 二分法（Python 代码、Java 代码）。; 题目描述 给定一个排序好的数组 arr ，两个整数 k 和 x ，从数组中找到最靠近 x（两数之差最小）的 k 个数。返回的结果必须要是按升序排好的。 整数 a 比整数 b 更接近 x 需要满足： a - x < b - x 或",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-index/0658-find-k-closest-elements.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 658 题：找到 K 个最接近的元素（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-index/0658-find-k-closest-elements.html",relativePath:"binary-search/solutions/find-index/0658-find-k-closest-elements.md",key:"v-3965f7b6",path:"/binary-search/solutions/find-index/0658-find-k-closest-elements/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"排除法（双指针） + 二分法（Python 代码、Java 代码）",slug:"排除法-双指针-二分法-python-代码、java-代码"},{level:2,title:"方法一：排除法（双指针）",slug:"方法一-排除法-双指针"},{level:2,title:"方法二：二分查找最优区间的左边界",slug:"方法二-二分查找最优区间的左边界"}],readingTime:{minutes:9.57,words:2871},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"January 5, 2022 14:25",createTimeStamp:1641392728e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 852 题：山脉数组的峰顶索引（简单）",frontmatter:{title:"「力扣」第 852 题：山脉数组的峰顶索引（简单）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接：852. 山脉数组的峰顶索引。; 题目描述 符合下列属性的数组 arr 称为 山脉数组 ： arr.length >= 3; 存在 i（0 < i < arr.length - 1）使得：; arr[0] < arr[1] < ... arr[i-1] < arr[i]; arr[i] > arr[i+1] > ... > arr[arr.leng",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-index/0852-peak-index-in-a-mountain-array.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 852 题：山脉数组的峰顶索引（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-index/0852-peak-index-in-a-mountain-array.html",relativePath:"binary-search/solutions/find-index/0852-peak-index-in-a-mountain-array.md",key:"v-edc16f8a",path:"/binary-search/solutions/find-index/0852-peak-index-in-a-mountain-array/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:1.39,words:417},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 1095 题：山脉数组中查找目标值（ 中等）",frontmatter:{title:"「力扣」第 1095 题：山脉数组中查找目标值（ 中等）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目地址：1095. 山脉数组中查找目标值；; 题解地址：二分查找（Java）。; 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 （这是一个 交互式问题 ） 给你一个 山脉数组 mountainArr，请你返回能够使得 mountai",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-index/1095-find-in-mountain-array.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1095 题：山脉数组中查找目标值（ 中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-index/1095-find-in-mountain-array.html",relativePath:"binary-search/solutions/find-index/1095-find-in-mountain-array.md",key:"v-2c7e9f15",path:"/binary-search/solutions/find-index/1095-find-in-mountain-array/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"题解题意",slug:"题解题意"},{level:3,title:"什么是「山脉数组」？",slug:"什么是「山脉数组」"},{level:2,title:"方法：二分查找法",slug:"方法-二分查找法"}],readingTime:{minutes:3.95,words:1186},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 69 题：x 的平方根（简单）",frontmatter:{title:"「力扣」第 69 题：x 的平方根（简单）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接：69. Sqrt(x); 题解链接：二分查找（Java）。; 题目描述 实现 int sqrt(int x) 函数。 计算并返回 x 的平方根，其中 x 是非负整数。 由于返回类型是整数，结果只保留整数的部分，小数部分将被舍去。 示例 1： 示例 2： 提示： $0 \\le x \\le 2^{31} - 1$; 题意分析 这道题要求我们实现平方根函",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-integer/0069-sqrtx.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 69 题：x 的平方根（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-integer/0069-sqrtx.html",relativePath:"binary-search/solutions/find-integer/0069-sqrtx.md",key:"v-4db48f76",path:"/binary-search/solutions/find-integer/0069-sqrtx/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"题意分析",slug:"题意分析"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"问题：mid 为什么要加 1？",slug:"问题-mid-为什么要加-1"}],readingTime:{minutes:4.62,words:1387},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941845e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 287 题：数组中的重复数字（中等）",frontmatter:{title:"「力扣」第 287 题：数组中的重复数字（中等）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接：寻找重复数；; 题解链接：使用二分法查找一个有范围的整数（结合抽屉原理）。; 题目描述 给定一个包含 n + 1 个整数的数组 nums ，其数字都在 1 到 n 之间（包括 1 和 n），可知至少存在一个重复的整数。 假设 nums 只有 一个重复的整数 ，找出 这个重复的数 。 你设计的解决方案必须不修改数组 nums 且只用常量级 O(1) ",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-integer/0287-find-the-duplicate-number.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 287 题：数组中的重复数字（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-integer/0287-find-the-duplicate-number.html",relativePath:"binary-search/solutions/find-integer/0287-find-the-duplicate-number.md",key:"v-0d3d20e5",path:"/binary-search/solutions/find-integer/0287-find-the-duplicate-number/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"题意分析",slug:"题意分析"},{level:2,title:"解题思路",slug:"解题思路"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:5.15,words:1545},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 367 题：有效的完全平方数（中等）",frontmatter:{title:"「力扣」第 367 题：有效的完全平方数（中等）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接：367. 有效的完全平方数。; 题目描述 给定一个 正整数 num ，编写一个函数，如果 num 是一个完全平方数，则返回 true ，否则返回 false 。 进阶：不要 使用任何内置的库函数，如 sqrt 。 示例 1： 示例 2： 提示： $1 \\le num \\le 2^{31} - 1$; 思路分析 这是一个简单的问题，只存在一个正整数，",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-integer/0367-valid-perfect-square.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 367 题：有效的完全平方数（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-integer/0367-valid-perfect-square.html",relativePath:"binary-search/solutions/find-integer/0367-valid-perfect-square.md",key:"v-684f5166",path:"/binary-search/solutions/find-integer/0367-valid-perfect-square/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:.88,words:263},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 25, 2021 11:51",createTimeStamp:1640433074e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 374 题：猜数字大小（简单）",frontmatter:{title:"「力扣」第 374 题：猜数字大小（简单）",icon:"jingxuan",category:"二分查找",tags:["二分查找"],summary:"题目地址：374. 猜数字大小；; 题解地址：借本题说一说取中位数的写法（Python 代码、Java 代码）。; 题目描述 猜数字游戏的规则如下： 每轮游戏，我都会从 1 到 _n_ 随机选择一个数字。 请你猜选出的是哪个数字。; 如果你猜错了，我会告诉你，你猜测的数字比我选出的数字是大了还是小了。; 你可以通过调用一个预先定义好的接口 int guess",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-integer/0374-guess-number-higher-or-lower.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 374 题：猜数字大小（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-integer/0374-guess-number-higher-or-lower.html",relativePath:"binary-search/solutions/find-integer/0374-guess-number-higher-or-lower.md",key:"v-707dec93",path:"/binary-search/solutions/find-integer/0374-guess-number-higher-or-lower/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"借本题说一说取中间数的写法（Python 代码、Java 代码）",slug:"借本题说一说取中间数的写法-python-代码、java-代码"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:4.4,words:1321},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941845e3,createTime:"December 20, 2021 12:21",createTimeStamp:1640002884e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 378 题：有序矩阵中第 K 小的元素（中等）",frontmatter:{title:"「力扣」第 378 题：有序矩阵中第 K 小的元素（中等）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接 （中等）; 题目描述 给你一个 n x n 矩阵 matrix ，其中每行和每列元素均按升序排序，找到矩阵中第 k 小的元素。 请注意，它是 排序后 的第 k 小元素，而不是第 k 个 不同 的元素。 示例 1： 示例 2： 提示： n == matrix.length; n == matrix[i].length; 1 <= n <= 300; ",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-integer/0378-kth-smallest-element-in-a-sorted-matrix.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 378 题：有序矩阵中第 K 小的元素（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-integer/0378-kth-smallest-element-in-a-sorted-matrix.html",relativePath:"binary-search/solutions/find-integer/0378-kth-smallest-element-in-a-sorted-matrix.md",key:"v-5b8cdfa5",path:"/binary-search/solutions/find-integer/0378-kth-smallest-element-in-a-sorted-matrix/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:3.98,words:1195},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 719 题：找出第 k 小的距离对（困难）",frontmatter:{title:"「力扣」第 719 题：找出第 k 小的距离对（困难）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"同时使用了「二分查找」与「滑动窗口」的一道问题 在准备滑动窗口的过程中，做到了一道不错的问题，在这里和大家分享一下。这道题是：「力扣」第 719 题：找出第 k 小的距离对，难度标记为「困难」。 题目描述 给定一个整数数组，返回所有数对之间的第 k 个最小 距离。一对 (A, B) 的距离被定义为 A 和 B 之间的绝对差值。 示例 1： 示例 2： 示例 ",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-integer/0719-find-k-th-smallest-pair-distance.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 719 题：找出第 k 小的距离对（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/binary-search/solutions/find-integer/0719-find-k-th-smallest-pair-distance.html",relativePath:"binary-search/solutions/find-integer/0719-find-k-th-smallest-pair-distance.md",key:"v-19c35345",path:"/binary-search/solutions/find-integer/0719-find-k-th-smallest-pair-distance/",headers:[{level:2,title:"同时使用了「二分查找」与「滑动窗口」的一道问题",slug:"同时使用了「二分查找」与「滑动窗口」的一道问题"},{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"1. 解释题意",slug:"_1-解释题意"},{level:2,title:"2. 暴力解法",slug:"_2-暴力解法"},{level:2,title:"3. 思路分析",slug:"_3-思路分析"},{level:2,title:"4. 为什么想到「滑动窗口」？",slug:"_4-为什么想到「滑动窗口」"},{level:2,title:"5. 如何使用「滑动窗口」找到「距离」小于等于某个值的所有数对的个数",slug:"_5-如何使用「滑动窗口」找到「距离」小于等于某个值的所有数对的个数"},{level:2,title:"为什么「二分查找」一定保证了找到的值在距离数组中？",slug:"为什么「二分查找」一定保证了找到的值在距离数组中"},{level:2,title:"为什么二分查找分三种情况讨论的结果需要合并？",slug:"为什么二分查找分三种情况讨论的结果需要合并"},{level:2,title:"相关问题",slug:"相关问题"}],readingTime:{minutes:9.26,words:2779},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941845e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 1276 题：不浪费原料的汉堡制作方案（简单）",frontmatter:{title:"「力扣」第 1276 题：不浪费原料的汉堡制作方案（简单）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接：1276. 不浪费原料的汉堡制作方案；; 题解链接：消元法解二元一次方程、二分查找（Java）。; 题目描述 圣诞活动预热开始啦，汉堡店推出了全新的汉堡套餐。为了避免浪费原料，请你帮他们制定合适的制作计划。 给你两个整数 tomatoSlices 和 cheeseSlices，分别表示番茄片和奶酪片的数目。不同汉堡的原料搭配如下： 巨无霸汉堡：4 ",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-integer/1276-number-of-burgers-with-no-waste-of-ingredients.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1276 题：不浪费原料的汉堡制作方案（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-integer/1276-number-of-burgers-with-no-waste-of-ingredients.html",relativePath:"binary-search/solutions/find-integer/1276-number-of-burgers-with-no-waste-of-ingredients.md",key:"v-47c411d7",path:"/binary-search/solutions/find-integer/1276-number-of-burgers-with-no-waste-of-ingredients/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：消元法解二元一次方程",slug:"方法一-消元法解二元一次方程"},{level:2,title:"方法二：二分查找",slug:"方法二-二分查找"}],readingTime:{minutes:2.69,words:807},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941845e3,createTime:"January 5, 2022 14:25",createTimeStamp:1641392728e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 1300 题：转变数组后最接近目标值的数组和（中等）",frontmatter:{title:"「力扣」第 1300 题：转变数组后最接近目标值的数组和（中等）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接：1300. 转变数组后最接近目标值的数组和；; 题解链接：二分查找（附相关练习）。; 题目描述 给你一个整数数组 arr 和一个目标值 target ，请你返回一个整数 value ，使得将数组中所有大于 value 的值变成 value 后，数组的和最接近 target （最接近表示两者之差的绝对值最小）。 如果有多种使得和最接近 target ",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/find-integer/1300-sum-of-mutated-array-closest-to-target.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1300 题：转变数组后最接近目标值的数组和（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/find-integer/1300-sum-of-mutated-array-closest-to-target.html",relativePath:"binary-search/solutions/find-integer/1300-sum-of-mutated-array-closest-to-target.md",key:"v-88936716",path:"/binary-search/solutions/find-integer/1300-sum-of-mutated-array-closest-to-target/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"练习",slug:"练习"},{level:3,title:"知识点 1：如果题目要我们找一个整数，这个整数我们明确知道范围，可以用二分查找",slug:"知识点-1-如果题目要我们找一个整数-这个整数我们明确知道范围-可以用二分查找"},{level:3,title:"知识点 2：判别函数得写一个函数去做的问题",slug:"知识点-2-判别函数得写一个函数去做的问题"},{level:2,title:"二分查找问题的视频题解",slug:"二分查找问题的视频题解"}],readingTime:{minutes:5.87,words:1762},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941845e3,createTime:"January 5, 2022 14:25",createTimeStamp:1641392728e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 410 题：分割数组的最大值（困难）",frontmatter:{title:"「力扣」第 410 题：分割数组的最大值（困难）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接：410. 分割数组的最大值; 题解链接：动态规划、二分查找（Java）; 题目描述 给定一个非负整数数组 nums 和一个整数 m ，你需要将这个数组分成 m 个非空的连续子数组。 设计一个算法使得这 m 个子数组各自和的最大值最小。 示例 1： 示例 2： 示例 3： 提示： $1 \\le nums.length \\le 1000$; $0 \\l",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/maximum-minimization/0410-split-array-largest-sum.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 410 题：分割数组的最大值（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/maximum-minimization/0410-split-array-largest-sum.html",relativePath:"binary-search/solutions/maximum-minimization/0410-split-array-largest-sum.md",key:"v-5fe644c5",path:"/binary-search/solutions/maximum-minimization/0410-split-array-largest-sum/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"题意分析",slug:"题意分析"},{level:2,title:"关键字分析",slug:"关键字分析"},{level:2,title:"解题思路的直觉来源",slug:"解题思路的直觉来源"},{level:2,title:"挖掘单调性",slug:"挖掘单调性"},{level:2,title:"注意事项",slug:"注意事项"},{level:3,title:"代码实现",slug:"代码实现"}],readingTime:{minutes:5.94,words:1783},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 875 题：爱吃香蕉的珂珂（中等）",frontmatter:{title:"「力扣」第 875 题：爱吃香蕉的珂珂（中等）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接：875. 爱吃香蕉的珂珂; 题解链接：二分查找定位速度（最大值最小化问题，Java）; 题目描述 珂珂喜欢吃香蕉。这里有 N 堆香蕉，第 i 堆中有 piles[i] 根香蕉。警卫已经离开了，将在 H 小时后回来。 珂珂可以决定她吃香蕉的速度 K （单位：根/小时）。每个小时，她将会选择一堆香蕉，从中吃掉 K 根。如果这堆香蕉少于 K 根，她将吃掉",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/maximum-minimization/0875-koko-eating-bananas.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 875 题：爱吃香蕉的珂珂（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/maximum-minimization/0875-koko-eating-bananas.html",relativePath:"binary-search/solutions/maximum-minimization/0875-koko-eating-bananas.md",key:"v-4f822e45",path:"/binary-search/solutions/maximum-minimization/0875-koko-eating-bananas/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"题意分析",slug:"题意分析"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:3.52,words:1055},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 1011 题：在 D 天内送达包裹的能力（中等）",frontmatter:{title:"「力扣」第 1011 题：在 D 天内送达包裹的能力（中等）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接：1011. 在 D 天内送达包裹的能力。; 题目描述 传送带上的包裹必须在 days 天内从一个港口运送到另一个港口。 传送带上的第 i 个包裹的重量为 weights[i]。每一天，我们都会按给出重量（weights）的顺序往传送带上装载包裹。我们装载的重量不会超过船的最大运载重量。 返回能在 days 天内将传送带上的所有包裹送达的船的最低运载",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/maximum-minimization/1011-capacity-to-ship-packages-within-d-days.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1011 题：在 D 天内送达包裹的能力（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/maximum-minimization/1011-capacity-to-ship-packages-within-d-days.html",relativePath:"binary-search/solutions/maximum-minimization/1011-capacity-to-ship-packages-within-d-days.md",key:"v-aa5c4cb6",path:"/binary-search/solutions/maximum-minimization/1011-capacity-to-ship-packages-within-d-days/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"分析题意",slug:"分析题意"}],readingTime:{minutes:2.59,words:778},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941845e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5}]},{title:"「力扣」第 1283 题：使结果不超过阈值的最小除数（中等）",frontmatter:{title:"「力扣」第 1283 题：使结果不超过阈值的最小除数（中等）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接：1283. 使结果不超过阈值的最小除数；; 题解链接：二分查找定位除数。; 题目描述 给你一个整数数组 nums 和一个正整数 threshold ，你需要选择一个正整数作为除数，然后将数组里每个数都除以它，并对除法结果求和。 请你找出能够使上述结果小于等于阈值 threshold 的除数中 最小 的那个。 每个数除以除数后都向上取整，比方说 7/",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/maximum-minimization/1283-find-the-smallest-divisor-given-a-threshold.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1283 题：使结果不超过阈值的最小除数（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/maximum-minimization/1283-find-the-smallest-divisor-given-a-threshold.html",relativePath:"binary-search/solutions/maximum-minimization/1283-find-the-smallest-divisor-given-a-threshold.md",key:"v-2d288045",path:"/binary-search/solutions/maximum-minimization/1283-find-the-smallest-divisor-given-a-threshold/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:3.46,words:1039},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941845e3,createTime:"January 5, 2022 14:25",createTimeStamp:1641392728e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 1482 题：制作 m 束花所需的最少天数（中等）",frontmatter:{title:"「力扣」第 1482 题：制作 m 束花所需的最少天数（中等）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接：1482. 制作 m 束花所需的最少天数。; 题目描述 给你一个整数数组 bloomDay，以及两个整数 m 和 k 。 现需要制作 m 束花。制作花束时，需要使用花园中 相邻的 k 朵花 。 花园中有 n 朵花，第 i 朵花会在 bloomDay[i] 时盛开，恰好 可以用于 一束 花中。 请你返回从花园中摘 m 束花需要等待的最少的天数。如果不",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/maximum-minimization/1482-minimum-number-of-days-to-make-m-bouquets.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1482 题：制作 m 束花所需的最少天数（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/maximum-minimization/1482-minimum-number-of-days-to-make-m-bouquets.html",relativePath:"binary-search/solutions/maximum-minimization/1482-minimum-number-of-days-to-make-m-bouquets.md",key:"v-75672a25",path:"/binary-search/solutions/maximum-minimization/1482-minimum-number-of-days-to-make-m-bouquets/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"题意分析",slug:"题意分析"}],readingTime:{minutes:3.04,words:913},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941845e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5}]},{title:"「力扣」第 1552 题：两球之间的磁力（中等）",frontmatter:{title:"「力扣」第 1552 题：两球之间的磁力（中等）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接：1552. 两球之间的磁力。; 题目描述 在代号为 C-137 的地球上，Rick 发现如果他将两个球放在他新发明的篮子里，它们之间会形成特殊形式的磁力。Rick 有 n 个空的篮子，第 i 个篮子的位置在 position[i] ，Morty 想把 m 个球放到这些篮子里，使得任意两球间 最小磁力 最大。 已知两个球如果分别位于 x 和 y ，那",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/maximum-minimization/1552-magnetic-force-between-two-balls.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1552 题：两球之间的磁力（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/maximum-minimization/1552-magnetic-force-between-two-balls.html",relativePath:"binary-search/solutions/maximum-minimization/1552-magnetic-force-between-two-balls.md",key:"v-503294bb",path:"/binary-search/solutions/maximum-minimization/1552-magnetic-force-between-two-balls/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"题意分析",slug:"题意分析"}],readingTime:{minutes:1.55,words:466},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941845e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"最大值最小化简介",frontmatter:{title:"最大值最小化简介",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"这一类问题的原形是「木棍分割」问题，大家可以在互联网上搜索一下。我们基于「力扣」第 410 题「分割数组的最大值」开始说起，其实是一样的。 我第一次接触到这个问题的时候也觉得很绕，因此今天花一点时间和大家做一个总结。 总结 这道题让我们「查找一个有范围的整数」，以后遇到类似问题，要想到可以尝试使用「二分」；; 遇到类似使「最大值」最小化，这样的题目描述，可以",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/maximum-minimization/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"最大值最小化简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/maximum-minimization/intro.html",relativePath:"binary-search/solutions/maximum-minimization/intro.md",key:"v-510f9ac1",path:"/binary-search/solutions/maximum-minimization/intro/",headers:[{level:2,title:"总结",slug:"总结"},{level:2,title:"练习",slug:"练习"}],readingTime:{minutes:2.27,words:681},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」2020 年春季团体赛第 3 题：LCP 12. 小张刷题计划",frontmatter:{title:"「力扣」2020 年春季团体赛第 3 题：LCP 12. 小张刷题计划",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"题目链接：LCP 12. 小张刷题计划; 题目描述 为了提高自己的代码能力，小张制定了 LeetCode 刷题计划，他选中了 LeetCode 题库中的 n 道题，编号从 0 到 n-1，并计划在 m 天内按照题目编号顺序刷完所有的题目（注意，小张不能用多天完成同一题）。 在小张刷题计划中，小张需要用 time[i] 的时间完成编号 i 的题目。此外，小张还",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/solutions/maximum-minimization/%E5%B0%8F%E5%BC%A0%E5%88%B7%E9%A2%98%E8%AE%A1%E5%88%92.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」2020 年春季团体赛第 3 题：LCP 12. 小张刷题计划"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/solutions/maximum-minimization/%E5%B0%8F%E5%BC%A0%E5%88%B7%E9%A2%98%E8%AE%A1%E5%88%92.html",relativePath:"binary-search/solutions/maximum-minimization/小张刷题计划.md",key:"v-35f1d79a",path:"/binary-search/solutions/maximum-minimization/%E5%B0%8F%E5%BC%A0%E5%88%B7%E9%A2%98%E8%AE%A1%E5%88%92/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"题意分析",slug:"题意分析"}],readingTime:{minutes:1.87,words:560},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"第 1 节 二分查找的基本思想",frontmatter:{title:"第 1 节 二分查找的基本思想",icon:"shipin",category:"二分查找",tags:["二分查找"],summary:"Your browser does not support the video tag.",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/videos/01.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 1 节 二分查找的基本思想"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/videos/01.html",relativePath:"binary-search/videos/01.md",key:"v-3e724785",path:"/binary-search/videos/01/",readingTime:{minutes:.08,words:24},updateTime:"May 2, 2022 05:22",updateTimeStamp:1651468927e3,createTime:"January 19, 2022 17:49",createTimeStamp:1642614553e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"第 2 节 为什么取中间",frontmatter:{title:"第 2 节 为什么取中间",icon:"shipin",category:"二分查找",tags:["二分查找"],summary:"Your browser does not support the video tag.",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/videos/02.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 2 节 为什么取中间"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/videos/02.html",relativePath:"binary-search/videos/02.md",key:"v-840247b6",path:"/binary-search/videos/02/",readingTime:{minutes:.08,words:24},updateTime:"May 2, 2022 05:22",updateTimeStamp:1651468927e3,createTime:"January 19, 2022 17:49",createTimeStamp:1642614553e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"第 3 节 把区间分成两个部分（重要）",frontmatter:{title:"第 3 节 把区间分成两个部分（重要）",icon:"shipin",category:"二分查找",tags:["二分查找"],summary:"Your browser does not support the video tag.",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/videos/03.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 3 节 把区间分成两个部分（重要）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/videos/03.html",relativePath:"binary-search/videos/03.md",key:"v-3d8b70c5",path:"/binary-search/videos/03/",readingTime:{minutes:.08,words:24},updateTime:"May 2, 2022 05:22",updateTimeStamp:1651468927e3,createTime:"January 19, 2022 17:49",createTimeStamp:1642614553e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"第 4 节 为什么需要上取整",frontmatter:{title:"第 4 节 为什么需要上取整",icon:"shipin",category:"二分查找",tags:["二分查找"],summary:"Your browser does not support the video tag.",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/videos/04.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 4 节 为什么需要上取整"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/videos/04.html",relativePath:"binary-search/videos/04.md",key:"v-85cff536",path:"/binary-search/videos/04/",readingTime:{minutes:.08,words:24},updateTime:"May 2, 2022 05:22",updateTimeStamp:1651468927e3,createTime:"January 19, 2022 17:49",createTimeStamp:1642614553e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"第 5 节 写分支逻辑的经验",frontmatter:{title:"第 5 节 写分支逻辑的经验",icon:"shipin",category:"二分查找",tags:["二分查找"],summary:"Your browser does not support the video tag.",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/videos/05.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 5 节 写分支逻辑的经验"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/videos/05.html",relativePath:"binary-search/videos/05.md",key:"v-3ca49a05",path:"/binary-search/videos/05/",readingTime:{minutes:.08,words:24},updateTime:"May 2, 2022 05:22",updateTimeStamp:1651468927e3,createTime:"January 19, 2022 17:49",createTimeStamp:1642614553e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"第 6 节 二分查找的应用",frontmatter:{title:"第 6 节 二分查找的应用",icon:"shipin",category:"二分查找",tags:["二分查找"],summary:"Your browser does not support the video tag.",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/videos/06.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 6 节 二分查找的应用"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/videos/06.html",relativePath:"binary-search/videos/06.md",key:"v-879da2b6",path:"/binary-search/videos/06/",readingTime:{minutes:.08,words:24},updateTime:"May 2, 2022 05:22",updateTimeStamp:1651468927e3,createTime:"January 19, 2022 17:49",createTimeStamp:1642614553e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"第 7 节 几种二分查找的写法比较",frontmatter:{title:"第 7 节 几种二分查找的写法比较",icon:"shipin",category:"二分查找",tags:["二分查找"],summary:"Your browser does not support the video tag.",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/videos/07.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 7 节 几种二分查找的写法比较"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/videos/07.html",relativePath:"binary-search/videos/07.md",key:"v-3bbdc345",path:"/binary-search/videos/07/",readingTime:{minutes:.08,words:24},updateTime:"May 2, 2022 05:22",updateTimeStamp:1651468927e3,createTime:"January 19, 2022 17:49",createTimeStamp:1642614553e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」问题回答",frontmatter:{title:"「力扣」问题回答",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"本文是在这篇 帖子 下我的回答。 回答 1：取 mid 为什么要加 1 int mid = left + (right - left) / 2 + 1; （+1 也可以写在括号里面，目的是为了改变整数除法默认下取整的行为）只出现在 while (left < right) 这种写法里，因为这种写法要求我们一定要弄清楚 mid 位置的值是保留还是剔除： 如果保",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E5%9B%9E%E7%AD%94%E9%97%AE%E9%A2%98.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」问题回答"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E5%9B%9E%E7%AD%94%E9%97%AE%E9%A2%98.html",relativePath:"binary-search/「力扣」回答问题.md",key:"v-bcb118d8",path:"/binary-search/%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E5%9B%9E%E7%AD%94%E9%97%AE%E9%A2%98/",readingTime:{minutes:4.5,words:1349},updateTime:"December 22, 2021 01:18",updateTimeStamp:164013589e4,createTime:"December 11, 2021 03:27",createTimeStamp:1639193248e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"关于这部分视频的说明",frontmatter:{title:"关于这部分视频的说明",icon:"shipin",category:"二分查找",tags:["二分查找"],summary:"因为 B 站发视频要有连贯性，中间的一些视频还没有来得及录制。这一系列视频目前（2022 年 1 月 20 日）只在「算法吧」能看到；; 「视频部分」和「文字部分」讲的内容是一样的，大家选择自己喜欢的形式阅读就可以。;",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/videos/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"关于这部分视频的说明"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/videos/intro.html",relativePath:"binary-search/videos/intro.md",key:"v-70c9179e",path:"/binary-search/videos/intro/",readingTime:{minutes:.27,words:82},updateTime:"January 19, 2022 17:49",updateTimeStamp:1642614553e3,createTime:"January 19, 2022 17:49",createTimeStamp:1642614553e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"位运算",frontmatter:{title:"位运算",icon:"yongyan",category:"位运算",tags:["位运算"],summary:'知识点整理 二进制原码、反码、补码最好的解释 1、为什么要有原码。 " 为了解决“正负相加等于0”的问题，在“原码”的基础上，人们发明了“反码”。" 在计算机的世界里，只有 1 和 0。 原码是为了表示负数而引入的一种编码表示方式。 规则：最高位作为符号位：0 表示正数， 1 表示负数。 但是有如下问题： （1）此时数字 $0$ 的表示出现了二义性。 例如：',meta:[{property:"og:url",content:"https://suanfa8.com/bit-manipulation/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"位运算"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"位运算"}]},regularPath:"/bit-manipulation/",relativePath:"bit-manipulation/README.md",key:"v-099226c6",path:"/bit-manipulation/",headers:[{level:2,title:"知识点整理",slug:"知识点整理"},{level:2,title:"例题",slug:"例题"},{level:3,title:"LeetCode 第 136 题：只出现一次的数字",slug:"leetcode-第-136-题-只出现一次的数字"},{level:3,title:"LeetCode 第 201 题：数字范围按位与",slug:"leetcode-第-201-题-数字范围按位与"},{level:3,title:"LeetCode 第 477 题：汉明距离总和",slug:"leetcode-第-477-题-汉明距离总和"},{level:3,title:"《剑指 Offer 》（第 2 版）第 56 题：数组中只出现一次的两个数字",slug:"《剑指-offer-》-第-2-版-第-56-题-数组中只出现一次的两个数字"},{level:3,title:"LeetCode 第 421 题：数组中两个数的最大异或值",slug:"leetcode-第-421-题-数组中两个数的最大异或值"},{level:3,title:"LeetCode 第 868 题：二进制间距",slug:"leetcode-第-868-题-二进制间距"},{level:2,title:"位运算问题",slug:"位运算问题-2"},{level:2,title:"知识点整理",slug:"知识点整理-2"},{level:2,title:"例题",slug:"例题-2"}],readingTime:{minutes:8.43,words:2529},updateTime:"January 6, 2022 08:11",updateTimeStamp:1641456717e3,createTime:"January 1, 2022 11:46",createTimeStamp:1641037611e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 50 题：Pow(x, n)",frontmatter:{title:"「力扣」第 50 题：Pow(x, n)",icon:"yongyan",category:"位运算",tags:["位运算"],summary:"题目链接：50. Pow(x, n)；; 题解链接：自顶向下（递归）与自顶向上（递推）。; 今天要和大家分享的是「力扣」第 50 题：Pow(x, n)。这题有一个名称叫「快速幂」，我们这里只分享「递归」和「非递归」的写法，其中 「递归」对应「当指数为奇数时，把指数分解成偶数 + 1，当指数为偶数时，把指数除以 2」，「非递归」对应把指数转化成二进制。「快速",meta:[{property:"og:url",content:"https://suanfa8.com/bit-manipulation/solutions/0050-powx-n.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 50 题：Pow(x, n)"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"位运算"}]},regularPath:"/bit-manipulation/solutions/0050-powx-n.html",relativePath:"bit-manipulation/solutions/0050-powx-n.md",key:"v-0e098ff9",path:"/bit-manipulation/solutions/0050-powx-n/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"把指数部分看做二进制数（Python 代码）",slug:"把指数部分看做二进制数-python-代码"}],readingTime:{minutes:1.94,words:582},updateTime:"January 13, 2022 16:24",updateTimeStamp:1642091075e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456232e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 52 题：N-Queens II（困难）",frontmatter:{title:"「力扣」第 52 题：N-Queens II（困难）",icon:"yongyan",category:"位运算",tags:["回溯算法","位运算"],summary:"题目链接：52. N 皇后 II；; 题解链接：根据第 46 题“全排列”的“回溯算法”思路使用位图作为状态。; 题目描述 n 皇后问题 研究的是如何将 n 个皇后放置在 n × n 的棋盘上，并且使皇后彼此之间不能相互攻击。 给你一个整数 n ，返回 n 皇后问题 不同的解决方案的数量。 示例 1： 示例 2： 提示： 1 <= n <= 9; 方法一：根",meta:[{property:"og:url",content:"https://suanfa8.com/bit-manipulation/solutions/0052-n-queens-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 52 题：N-Queens II（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"位运算"}]},regularPath:"/bit-manipulation/solutions/0052-n-queens-ii.html",relativePath:"bit-manipulation/solutions/0052-n-queens-ii.md",key:"v-dbce8436",path:"/bit-manipulation/solutions/0052-n-queens-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：根据第 46 题“全排列”的“回溯算法”思路使用位图作为状态",slug:"方法一-根据第-46-题-全排列-的-回溯算法-思路使用位图作为状态"},{level:2,title:"方法二：“不回溯”并且充分利用二进制位图的思想和二进制技巧",slug:"方法二-不回溯-并且充分利用二进制位图的思想和二进制技巧"}],readingTime:{minutes:6.22,words:1867},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941866e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456232e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 67 题：二进制求和（简单）",frontmatter:{title:"「力扣」第 67 题：二进制求和（简单）",icon:"yongyan",category:"位运算",tags:["位运算"],summary:"题目链接：67. 二进制求和；; 题解链接：模拟「二进制」竖式加法。; 题目描述 给你两个二进制字符串，返回它们的和（用二进制表示）。 输入为 非空 字符串且只包含数字 1 和 0。 示例 1: 示例 2: 提示： 每个字符串仅由字符 '0' 或 '1' 组成。; 1 <= a.length, b.length <= 10^4; 字符串如果不是 \"0\" ，就",meta:[{property:"og:url",content:"https://suanfa8.com/bit-manipulation/solutions/0067-add-binary.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 67 题：二进制求和（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"位运算"}]},regularPath:"/bit-manipulation/solutions/0067-add-binary.html",relativePath:"bit-manipulation/solutions/0067-add-binary.md",key:"v-76f03e6d",path:"/bit-manipulation/solutions/0067-add-binary/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:3.57,words:1072},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941866e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456232e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 136 题：只出现一次的数字",frontmatter:{title:"「力扣」第 136 题：只出现一次的数字",icon:"yongyan",category:"位运算",tags:["位运算"],summary:"题目链接：136. 只出现一次的数字。; 题目描述 给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。 说明： 你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？ 示例 1: 示例 2: Example 3: Constraints: 1 <= nums.length <= 3 * 10^4;",meta:[{property:"og:url",content:"https://suanfa8.com/bit-manipulation/solutions/0136-single-number.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 136 题：只出现一次的数字"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"位运算"}]},regularPath:"/bit-manipulation/solutions/0136-single-number.html",relativePath:"bit-manipulation/solutions/0136-single-number.md",key:"v-558e7565",path:"/bit-manipulation/solutions/0136-single-number/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.92,words:576},updateTime:"January 13, 2022 16:24",updateTimeStamp:1642091075e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456232e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 201 题：数字范围按位与",frontmatter:{title:"「力扣」第 201 题：数字范围按位与",icon:"yongyan",category:"位运算",tags:["位运算"],summary:"题目链接：201. 数字范围按位与。; 题目描述 给你两个整数 left 和 right ，表示区间 [left, right] ，返回此区间内所有数字 按位与 的结果（包含 left 、right 端点）。 示例 1： 示例 2： 示例 3： 提示： $0 \\le left \\le right \\le 2^{31} - 1$; 分析：位运算的问题，干脆就把",meta:[{property:"og:url",content:"https://suanfa8.com/bit-manipulation/solutions/0201-bitwise-and-of-numbers-range.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 201 题：数字范围按位与"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"位运算"}]},regularPath:"/bit-manipulation/solutions/0201-bitwise-and-of-numbers-range.html",relativePath:"bit-manipulation/solutions/0201-bitwise-and-of-numbers-range.md",key:"v-5bf25e5f",path:"/bit-manipulation/solutions/0201-bitwise-and-of-numbers-range/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:.91,words:273},updateTime:"January 13, 2022 16:24",updateTimeStamp:1642091075e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456232e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 342 题：4 的幂",frontmatter:{title:"「力扣」第 342 题：4 的幂",icon:"yongyan",category:"位运算",tags:["位运算"],summary:"题目链接：342. 4 的幂。; 题目描述 给定一个整数，写一个函数来判断它是否是 4 的幂次方。如果是，返回 true ；否则，返回 false 。 整数 n 是 4 的幂次方需满足：存在整数 x 使得 n == 4^x 示例 1： 示例 2： 示例 3： 提示： $-2^{31} \\le n \\le 2^{31} - 1$;",meta:[{property:"og:url",content:"https://suanfa8.com/bit-manipulation/solutions/0342-power-of-four.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 342 题：4 的幂"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"位运算"}]},regularPath:"/bit-manipulation/solutions/0342-power-of-four.html",relativePath:"bit-manipulation/solutions/0342-power-of-four.md",key:"v-61d11f05",path:"/bit-manipulation/solutions/0342-power-of-four/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:.38,words:115},updateTime:"January 13, 2022 16:24",updateTimeStamp:1642091075e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456232e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 442 题：数组中重复的数据",frontmatter:{title:"「力扣」第 442 题：数组中重复的数据",icon:"yongyan",category:"位运算",tags:["位运算"],summary:"题目链接：442. 数组中重复的数据；; 题解链接：“抽屉原理” + 基于“异或运算”交换两个变量的值。; 题目描述 给你一个长度为 n 的整数数组 nums ，其中 nums 的所有整数都在范围 [1, n] 内，且每个整数出现 一次 或 两次 。请你找出所有出现 两次 的整数，并以数组形式返回。 你必须设计并实现一个时间复杂度为 O(n) 且仅使用常量额",meta:[{property:"og:url",content:"https://suanfa8.com/bit-manipulation/solutions/0442-find-all-duplicates-in-an-array.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 442 题：数组中重复的数据"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"位运算"}]},regularPath:"/bit-manipulation/solutions/0442-find-all-duplicates-in-an-array.html",relativePath:"bit-manipulation/solutions/0442-find-all-duplicates-in-an-array.md",key:"v-b4716336",path:"/bit-manipulation/solutions/0442-find-all-duplicates-in-an-array/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"特别注意：基于“异或运算”交换两个变量的值，这种操作仅仅只是用于解题，千万不要在工作中使用这样的代码，会有一些坑，重点是：使得代码难以阅读和被他人理解。没有必要为了节约空间去牺牲代码的可读性。",slug:"特别注意-基于-异或运算-交换两个变量的值-这种操作仅仅只是用于解题-千万不要在工作中使用这样的代码-会有一些坑-重点是-使得代码难以阅读和被他人理解。没有必要为了节约空间去牺牲代码的可读性。"},{level:2,title:"",slug:"br"}],readingTime:{minutes:4.74,words:1423},updateTime:"January 13, 2022 16:24",updateTimeStamp:1642091075e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456232e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 421 题：数组中两个数的最大异或值（中等）",frontmatter:{title:"「力扣」第 421 题：数组中两个数的最大异或值（中等）",icon:"yongyan",category:"位运算",tags:["位运算"],summary:"题目链接：421. 数组中两个数的最大异或值；; 题解链接：利用异或运算的性质 + 贪心算法（Python 代码、Java 代码） 。; 题目描述 给你一个整数数组 nums ，返回 nums[i] XOR nums[j] 的最大运算结果，其中 0 ≤ i ≤ j < n 。 进阶：你可以在 O(n) 的时间解决这个问题吗？ 示例 1： 示例 2： 示例 3",meta:[{property:"og:url",content:"https://suanfa8.com/bit-manipulation/solutions/0421-maximum-xor-of-two-numbers-in-an-array.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 421 题：数组中两个数的最大异或值（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"位运算"}]},regularPath:"/bit-manipulation/solutions/0421-maximum-xor-of-two-numbers-in-an-array.html",relativePath:"bit-manipulation/solutions/0421-maximum-xor-of-two-numbers-in-an-array.md",key:"v-51c8d8ff",path:"/bit-manipulation/solutions/0421-maximum-xor-of-two-numbers-in-an-array/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"异或运算的性质",slug:"异或运算的性质"},{level:2,title:"如何应用到本题？",slug:"如何应用到本题"}],readingTime:{minutes:5.28,words:1585},updateTime:"January 13, 2022 16:24",updateTimeStamp:1642091075e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456232e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 477 题：汉明距离总和（中等）",frontmatter:{title:"「力扣」第 477 题：汉明距离总和（中等）",icon:"yongyan",category:"位运算",tags:["位运算"],summary:"题目链接：477. 汉明距离总和。; 题目描述 两个整数的 汉明距离 指的是这两个数字的二进制数对应位不同的数量。 给你一个整数数组 nums，请你计算并返回 nums 中任意两个数之间 汉明距离的总和 。 示例 1： 示例 2： 提示： 1 <= nums.length <= 10^4; 0 <= nums[i] <= 10^9; 给定输入的对应答案符合 ",meta:[{property:"og:url",content:"https://suanfa8.com/bit-manipulation/solutions/0477-total-hamming-distance.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 477 题：汉明距离总和（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"位运算"}]},regularPath:"/bit-manipulation/solutions/0477-total-hamming-distance.html",relativePath:"bit-manipulation/solutions/0477-total-hamming-distance.md",key:"v-6e4e9549",path:"/bit-manipulation/solutions/0477-total-hamming-distance/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.04,words:312},updateTime:"January 13, 2022 16:24",updateTimeStamp:1642091075e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456232e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 868 题：二进制间距（简单）",frontmatter:{title:"「力扣」第 868 题：二进制间距（简单）",icon:"yongyan",category:"位运算",tags:["位运算"],summary:'题目链接：868. 二进制间距。; 题目描述 给定一个正整数 n，找到并返回 n 的二进制表示中两个 相邻 1 之间的 最长距离 。如果不存在两个相邻的 1，返回 0 。 如果只有 0 将两个 1 分隔开（可能不存在 0 ），则认为这两个 1 彼此 相邻 。两个 1 之间的距离是它们的二进制表示中位置的绝对差。例如，"1001" 中的两个 1 的距离为 3 ',meta:[{property:"og:url",content:"https://suanfa8.com/bit-manipulation/solutions/0868-binary-gap.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 868 题：二进制间距（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"位运算"}]},regularPath:"/bit-manipulation/solutions/0868-binary-gap.html",relativePath:"bit-manipulation/solutions/0868-binary-gap.md",key:"v-9bad55f6",path:"/bit-manipulation/solutions/0868-binary-gap/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.47,words:440},updateTime:"January 13, 2022 16:24",updateTimeStamp:1642091075e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456232e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 1128 题：等价多米诺骨牌对的数量（简单）",frontmatter:{title:"「力扣」第 1128 题：等价多米诺骨牌对的数量（简单）",icon:"shipin",category:"位运算",tags:["位运算"],summary:"题目链接：1128. 等价多米诺骨牌对的数量。; 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 给你一个由一些多米诺骨牌组成的列表 dominoes。 如果其中某一张多米诺骨牌可以通过旋转 0 度或 180 度得到另一张多米诺骨牌，我",meta:[{property:"og:url",content:"https://suanfa8.com/bit-manipulation/solutions/1128-number-of-equivalent-domino-pairs.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1128 题：等价多米诺骨牌对的数量（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"位运算"}]},regularPath:"/bit-manipulation/solutions/1128-number-of-equivalent-domino-pairs.html",relativePath:"bit-manipulation/solutions/1128-number-of-equivalent-domino-pairs.md",key:"v-0d2d8e76",path:"/bit-manipulation/solutions/1128-number-of-equivalent-domino-pairs/",readingTime:{minutes:1.07,words:322},updateTime:"January 14, 2022 06:41",updateTimeStamp:1642142506e3,createTime:"January 14, 2022 06:41",createTimeStamp:1642142506e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 1457 题： 二叉树中的伪回文路径（中等）",frontmatter:{title:"「力扣」第 1457 题： 二叉树中的伪回文路径（中等）",icon:"yongyan",category:"位运算",tags:["位运算"],summary:"题目地址：1457. 二叉树中的伪回文路径。; 题目描述 给你一棵二叉树，每个节点的值为 1 到 9 。我们称二叉树中的一条路径是 「伪回文」的，当它满足：路径经过的所有节点值的排列中，存在一个回文序列。 请你返回从根到叶子节点的所有路径中 伪回文 路径的数目。 示例 1： 示例 2： 示例 3： 提示： 给定二叉树的节点数目在 1 到 10^5 之间。; ",meta:[{property:"og:url",content:"https://suanfa8.com/bit-manipulation/solutions/1457-pseudo-palindromic-paths-in-a-binary-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1457 题： 二叉树中的伪回文路径（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"位运算"}]},regularPath:"/bit-manipulation/solutions/1457-pseudo-palindromic-paths-in-a-binary-tree.html",relativePath:"bit-manipulation/solutions/1457-pseudo-palindromic-paths-in-a-binary-tree.md",key:"v-075ddcb6",path:"/bit-manipulation/solutions/1457-pseudo-palindromic-paths-in-a-binary-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.04,words:611},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941866e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456232e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 1371 题：每个元音包含偶数次的最长子字符串（中等）",frontmatter:{title:"「力扣」第 1371 题：每个元音包含偶数次的最长子字符串（中等）",icon:"yongyan",category:"位运算",tags:["位运算"],summary:"题目链接：1371. 每个元音包含偶数次的最长子字符串。; 今天要和大家分享的是「状态压缩」的两道问题。我再准备一段时间，再和大家分享「动态规划」里「状压 dp」相关的问题，这两道问题是一个热身。 题目描述 给你一个字符串 s ，请你返回满足以下条件的最长子字符串的长度：每个元音字母，即 'a'，'e'，'i'，'o'，'u' ，在子字符串中都恰好出现了偶数",meta:[{property:"og:url",content:"https://suanfa8.com/bit-manipulation/solutions/1371-find-the-longest-substring-containing-vowels-in-even-counts.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1371 题：每个元音包含偶数次的最长子字符串（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"位运算"}]},regularPath:"/bit-manipulation/solutions/1371-find-the-longest-substring-containing-vowels-in-even-counts.html",relativePath:"bit-manipulation/solutions/1371-find-the-longest-substring-containing-vowels-in-even-counts.md",key:"v-badbbe36",path:"/bit-manipulation/solutions/1371-find-the-longest-substring-containing-vowels-in-even-counts/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"算法思想",slug:"算法思想"},{level:3,title:"思路分析：",slug:"思路分析"}],readingTime:{minutes:3.63,words:1089},updateTime:"January 13, 2022 16:24",updateTimeStamp:1642091075e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456232e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"《剑指 Offer》（第 2 版）面试题56 - I. 数组中数字出现的次数",frontmatter:{title:"《剑指 Offer》（第 2 版）面试题56 - I. 数组中数字出现的次数",icon:"yongyan",category:"位运算",tags:["位运算"],summary:"题目链接：剑指 Offer 56 - I. 数组中数字出现的次数。; 题目描述 一个整型数组 nums 里除两个数字之外，其他数字都出现了两次。请写程序找出这两个只出现一次的数字。要求时间复杂度是 $O(n)$，空间复杂度是 $O(1)$。 示例 1： 示例 2： 限制： 2 <= nums <= 10000; 参考代码： ` `",meta:[{property:"og:url",content:"https://suanfa8.com/bit-manipulation/solutions/56-1-shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"《剑指 Offer》（第 2 版）面试题56 - I. 数组中数字出现的次数"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"位运算"}]},regularPath:"/bit-manipulation/solutions/56-1-shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof.html",relativePath:"bit-manipulation/solutions/56-1-shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof.md",key:"v-26f997b6",path:"/bit-manipulation/solutions/56-1-shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.74,words:521},updateTime:"January 13, 2022 16:24",updateTimeStamp:1642091075e3,createTime:"January 6, 2022 08:03",createTimeStamp:1641456232e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"广度优先遍历直观",frontmatter:{title:"广度优先遍历直观",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历"],summary:"「广度优先遍历」在直观上是「声波」「水波」的传播。「广度优先遍历」的一个重要作用是：寻找无权图的单元最短路径。",meta:[{property:"og:url",content:"https://suanfa8.com/breadth-first-search/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"广度优先遍历直观"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"}]},regularPath:"/breadth-first-search/",relativePath:"breadth-first-search/README.md",key:"v-bd433a34",path:"/breadth-first-search/",readingTime:{minutes:.17,words:50},updateTime:"January 5, 2022 12:19",updateTimeStamp:1641385198e3,createTime:"December 26, 2021 06:18",createTimeStamp:1640499482e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 127 题：单词接龙（困难）",frontmatter:{title:"「力扣」第 127 题：单词接龙（困难）",icon:"shipin",category:"广度优先遍历",tags:["广度优先遍历"],summary:"题目链接：127. 单词接龙；; 题解链接：广度优先遍历、双向广度优先遍历（Java、Python）。; 视频讲解 :tv: 这道题在 题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 字典 wordList 中从单词 beginWord 和 endWord 的 转换序列",meta:[{property:"og:url",content:"https://suanfa8.com/breadth-first-search/solutions/0127-word-ladder.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 127 题：单词接龙（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"}]},regularPath:"/breadth-first-search/solutions/0127-word-ladder.html",relativePath:"breadth-first-search/solutions/0127-word-ladder.md",key:"v-b96c6e36",path:"/breadth-first-search/solutions/0127-word-ladder/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:3,title:"一句话题解",slug:"一句话题解"},{level:2,title:"方法一：广度优先遍历",slug:"方法一-广度优先遍历"},{level:2,title:"方法二：双向 BFS",slug:"方法二-双向-bfs"}],readingTime:{minutes:6.69,words:2008},updateTime:"January 13, 2022 14:43",updateTimeStamp:1642085009e3,createTime:"December 27, 2021 13:57",createTimeStamp:1640613471e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 200 题：岛屿数量（中等）",frontmatter:{title:"「力扣」第 200 题：岛屿数量（中等）",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历","深度优先遍历","并查集"],summary:"题目地址：200. 岛屿数量；; 题解地址：DFS + BFS + 并查集（Python 代码、Java 代码）。; 题目描述 给你一个由 '1'（陆地）和 '0'（水）组成的的二维网格，请你计算网格中岛屿的数量。 岛屿总是被水包围，并且每座岛屿只能由水平方向和/或竖直方向上相邻的陆地连接形成。 此外，你可以假设该网格的四条边均被水包围。 示例 1： 示例 ",meta:[{property:"og:url",content:"https://suanfa8.com/breadth-first-search/solutions/0200-number-of-islands.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 200 题：岛屿数量（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"并查集"}]},regularPath:"/breadth-first-search/solutions/0200-number-of-islands.html",relativePath:"breadth-first-search/solutions/0200-number-of-islands.md",key:"v-4c296805",path:"/breadth-first-search/solutions/0200-number-of-islands/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法：广度优先遍历",slug:"方法-广度优先遍历"}],readingTime:{minutes:7.64,words:2293},updateTime:"January 13, 2022 14:43",updateTimeStamp:1642085009e3,createTime:"December 27, 2021 13:57",createTimeStamp:1640613471e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 207 题：课程表（中等）",frontmatter:{title:"「力扣」第 207 题：课程表（中等）",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历","拓扑排序"],summary:"题目链接：207. 课程表；; 题解链接：拓扑排序、深度优先遍历。; 题目描述 你这个学期必须选修 numCourses 门课程，记为 0 到 numCourses - 1 。 在选修某些课程之前需要一些先修课程。 先修课程按数组 prerequisites 给出，其中 prerequisites[i] = [ai, bi]，表示如果要学习课程 ai 则 必",meta:[{property:"og:url",content:"https://suanfa8.com/breadth-first-search/solutions/0207-course-schedule.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 207 题：课程表（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"},{property:"article:tag",content:"拓扑排序"}]},regularPath:"/breadth-first-search/solutions/0207-course-schedule.html",relativePath:"breadth-first-search/solutions/0207-course-schedule.md",key:"v-066d6876",path:"/breadth-first-search/solutions/0207-course-schedule/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：拓扑排序（Kahn 算法，其实就是广度优先遍历的思路）",slug:"方法一-拓扑排序-kahn-算法-其实就是广度优先遍历的思路"},{level:2,title:"方法二：深度优先遍历（参考）",slug:"方法二-深度优先遍历-参考"}],readingTime:{minutes:10.3,words:3089},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941816e3,createTime:"January 15, 2022 07:10",createTimeStamp:1642230625e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 210 题：课程表 II（中等）",frontmatter:{title:"「力扣」第 210 题：课程表 II（中等）",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历","拓扑排序"],summary:"题目链接：210. 课程表 II；; 题解链接：拓扑排序（广度优先遍历） + 深度优先遍历（Java、Python）。; 题目描述 现在你总共有 numCourses 门课需要选，记为 0 到 numCourses - 1。给你一个数组 prerequisites ，其中 prerequisites[i] = [ai, bi] ，表示在选修课程 ai 前 必",meta:[{property:"og:url",content:"https://suanfa8.com/breadth-first-search/solutions/0210-course-schedule-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 210 题：课程表 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"},{property:"article:tag",content:"拓扑排序"}]},regularPath:"/breadth-first-search/solutions/0210-course-schedule-ii.html",relativePath:"breadth-first-search/solutions/0210-course-schedule-ii.md",key:"v-598a9dad",path:"/breadth-first-search/solutions/0210-course-schedule-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：拓扑排序（Kahn 算法、类似广度优先遍历的思路）",slug:"方法一-拓扑排序-kahn-算法、类似广度优先遍历的思路"},{level:2,title:"方法二：深度优先遍历（不用掌握，因为要检测环，代码中会做一些处理，代码没有参考价值）",slug:"方法二-深度优先遍历-不用掌握-因为要检测环-代码中会做一些处理-代码没有参考价值"}],readingTime:{minutes:11.07,words:3321},updateTime:"January 15, 2022 07:10",updateTimeStamp:1642230625e3,createTime:"January 15, 2022 07:10",createTimeStamp:1642230625e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 279 题：完全平方式（中等）",frontmatter:{title:"「力扣」第 279 题：完全平方式（中等）",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历"],summary:"题目链接：279. 完全平方数。; 题目描述 给定正整数 n，找到若干个完全平方数（比如 1, 4, 9, 16, ...）使得它们的和等于 n。你需要让组成和的完全平方数的个数最少。 给你一个整数 n ，返回和为 n 的完全平方数的 最少数量 。 完全平方数 是一个整数，其值等于另一个整数的平方；换句话说，其值等于一个整数自乘的积。例如，1、4、9 和 1",meta:[{property:"og:url",content:"https://suanfa8.com/breadth-first-search/solutions/0279-perfect-squares.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 279 题：完全平方式（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"}]},regularPath:"/breadth-first-search/solutions/0279-perfect-squares.html",relativePath:"breadth-first-search/solutions/0279-perfect-squares.md",key:"v-097014c5",path:"/breadth-first-search/solutions/0279-perfect-squares/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"方法二：动态规划",slug:"方法二-动态规划"}],readingTime:{minutes:2.79,words:838},updateTime:"January 13, 2022 14:43",updateTimeStamp:1642085009e3,createTime:"December 27, 2021 13:57",createTimeStamp:1640613471e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 310 题：最小高度树（中等）",frontmatter:{title:"「力扣」第 310 题：最小高度树（中等）",icon:"yongyan",category:"广度优先遍历",tags:["拓扑排序"],summary:"题目链接：310. 最小高度树；; 题解链接：拓扑排序（广度优先遍历，Java、Python）。; 题目描述 树是一个无向图，其中任何两个顶点只通过一条路径连接。 换句话说，一个任何没有简单环路的连通图都是一棵树。 给你一棵包含 n 个节点的树，标记为 0 到 n - 1 。给定数字 n 和一个有 n - 1 条无向边的 edges 列表（每一个边都是一对标",meta:[{property:"og:url",content:"https://suanfa8.com/breadth-first-search/solutions/0310-minimum-height-trees.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 310 题：最小高度树（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"拓扑排序"}]},regularPath:"/breadth-first-search/solutions/0310-minimum-height-trees.html",relativePath:"breadth-first-search/solutions/0310-minimum-height-trees.md",key:"v-7756224a",path:"/breadth-first-search/solutions/0310-minimum-height-trees/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:4.02,words:1205},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941816e3,createTime:"January 15, 2022 07:10",createTimeStamp:1642230625e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 365 题：水壶问题（中等）",frontmatter:{title:"「力扣」第 365 题：水壶问题（中等）",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历"],summary:"题目链接：365. 水壶问题；; 题解链接：图的广度优先遍历（Java）。; 题目描述 有两个容量分别为 x升 和 y升 的水壶以及无限多的水。请判断能否通过使用这两个水壶，从而可以得到恰好 z升 的水？ 如果可以，最后请用以上水壶中的一或两个来盛放取得的 z 升 水。 你允许： 装满任意一个水壶; 清空任意一个水壶; 从一个水壶向另外一个水壶倒水，直到装满",meta:[{property:"og:url",content:"https://suanfa8.com/breadth-first-search/solutions/0365-water-and-jug-problem.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 365 题：水壶问题（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"}]},regularPath:"/breadth-first-search/solutions/0365-water-and-jug-problem.html",relativePath:"breadth-first-search/solutions/0365-water-and-jug-problem.md",key:"v-2a8019c5",path:"/breadth-first-search/solutions/0365-water-and-jug-problem/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:6.29,words:1887},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941816e3,createTime:"January 5, 2022 12:19",createTimeStamp:1641385198e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 433 题：最小基因变化（中等）",frontmatter:{title:"「力扣」第 433 题：最小基因变化（中等）",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历"],summary:'题目链接：433. 最小基因变化。; 题目描述 一条基因序列由一个带有 $8$ 个字符的字符串表示，其中每个字符都属于 "A", "C", "G", "T"中的任意一个。 假设我们要调查一个基因序列的变化。一次基因变化意味着这个基因序列中的一个字符发生了变化。 例如，基因序列由"AACCGGTT" 变化至 "AACCGGTA" 即发生了一次基因变化。 与此同',meta:[{property:"og:url",content:"https://suanfa8.com/breadth-first-search/solutions/0433-minimum-genetic-mutation.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 433 题：最小基因变化（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"}]},regularPath:"/breadth-first-search/solutions/0433-minimum-genetic-mutation.html",relativePath:"breadth-first-search/solutions/0433-minimum-genetic-mutation.md",key:"v-470a84fa",path:"/breadth-first-search/solutions/0433-minimum-genetic-mutation/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：单向广度优先遍历",slug:"方法一-单向广度优先遍历"},{level:2,title:"方法二：双向广度优先遍历",slug:"方法二-双向广度优先遍历"}],readingTime:{minutes:2.34,words:702},updateTime:"January 13, 2022 14:43",updateTimeStamp:1642085009e3,createTime:"December 27, 2021 13:57",createTimeStamp:1640613471e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 542 题：01 矩阵（中等）",frontmatter:{title:"「力扣」第 542 题：01 矩阵（中等）",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历","队列","单调队列"],summary:"题目链接：542. 01 矩阵。; 题目描述 给定一个由 0 和 1 组成的矩阵 mat ，请输出一个大小相同的矩阵，其中每一个格子是 mat 中对应位置元素到最近的 0 的距离。 两个相邻元素间的距离为 1 。 示例 1： 示例 2： 提示： m == mat.length; n == mat[i].length; 1 <= m, n <= 104; 1 ",meta:[{property:"og:url",content:"https://suanfa8.com/breadth-first-search/solutions/0542-01-matrix.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 542 题：01 矩阵（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"},{property:"article:tag",content:"队列"},{property:"article:tag",content:"单调队列"}]},regularPath:"/breadth-first-search/solutions/0542-01-matrix.html",relativePath:"breadth-first-search/solutions/0542-01-matrix.md",key:"v-058a1e76",path:"/breadth-first-search/solutions/0542-01-matrix/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:2.06,words:617},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941816e3,createTime:"December 27, 2021 13:57",createTimeStamp:1640613471e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6}]},{title:"「力扣」第 690 题：员工的重要性（中等）",frontmatter:{title:"「力扣」第 690 题：员工的重要性（中等）",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历","深度优先遍历"],summary:"题目链接：690. 员工的重要性；; 题解链接：深度优先遍历、广度优先遍历（Java、Python）。; 题目描述 给定一个保存员工信息的数据结构，它包含了员工 唯一的 id ，重要度 和 直系下属的 id 。 比如，员工 1 是员工 2 的领导，员工 2 是员工 3 的领导。他们相应的重要度为 15 , 10 , 5 。那么员工 1 的数据结构是 [1, ",meta:[{property:"og:url",content:"https://suanfa8.com/breadth-first-search/solutions/0690-employee-importance.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 690 题：员工的重要性（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"},{property:"article:tag",content:"深度优先遍历"}]},regularPath:"/breadth-first-search/solutions/0690-employee-importance.html",relativePath:"breadth-first-search/solutions/0690-employee-importance.md",key:"v-57be6a05",path:"/breadth-first-search/solutions/0690-employee-importance/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：深度优先遍历",slug:"方法一-深度优先遍历"},{level:2,title:"方法二：广度优先遍历",slug:"方法二-广度优先遍历"}],readingTime:{minutes:3.8,words:1141},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941816e3,createTime:"January 5, 2022 12:19",createTimeStamp:1641385198e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 752 题：打开转盘锁（中等）",frontmatter:{title:"「力扣」第 752 题：打开转盘锁（中等）",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历"],summary:"题目链接：752. 打开转盘锁。; 题目描述 你有一个带有四个圆形拨轮的转盘锁。每个拨轮都有 10 个数字： '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' 。每个拨轮可以自由旋转：例如把 '9' 变为 '0'，'0' 变为 '9' 。每次旋转都只能旋转一个拨轮的一位数字。 锁的初始数字为 '0000' ，一",meta:[{property:"og:url",content:"https://suanfa8.com/breadth-first-search/solutions/0752-open-the-lock.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 752 题：打开转盘锁（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"}]},regularPath:"/breadth-first-search/solutions/0752-open-the-lock.html",relativePath:"breadth-first-search/solutions/0752-open-the-lock.md",key:"v-741e92f6",path:"/breadth-first-search/solutions/0752-open-the-lock/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:2.33,words:700},updateTime:"January 13, 2022 14:43",updateTimeStamp:1642085009e3,createTime:"January 5, 2022 12:19",createTimeStamp:1641385198e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 773 题：滑动谜题（困难）",frontmatter:{title:"「力扣」第 773 题：滑动谜题（困难）",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历"],summary:"题目链接：773. 滑动谜题。; 说明 因时间和精力关系，本题没有写详解，只给出了参考代码。读者可以在「力扣」这道题的评论区和题解区找到适合自己的思路分析和代码。如果确实需要我编写具体的解题思路，可以发邮件到 liweiwei1419@gmail.com。",meta:[{property:"og:url",content:"https://suanfa8.com/breadth-first-search/solutions/0773-sliding-puzzle.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 773 题：滑动谜题（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"}]},regularPath:"/breadth-first-search/solutions/0773-sliding-puzzle.html",relativePath:"breadth-first-search/solutions/0773-sliding-puzzle.md",key:"v-0f40a07f",path:"/breadth-first-search/solutions/0773-sliding-puzzle/",readingTime:{minutes:.32,words:97},updateTime:"January 13, 2022 14:43",updateTimeStamp:1642085009e3,createTime:"January 5, 2022 12:19",createTimeStamp:1641385198e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 802 题：找到最终的安全状态（中等）",frontmatter:{title:"「力扣」第 802 题：找到最终的安全状态（中等）",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历","拓扑排序"],summary:"这是今天（2021 年 8 月 5 日）的每日一题，主要考察了图的遍历。在充分理解题意的基础上，如果有一定知识储备和题量积累，有思路其实并不难。然后就是编写代码、仔细调试。 题目描述 在有向图中，我们从某个节点和每个转向处开始，沿着图的有向边走。 如果我们到达的节点是终点 (即它没有连出的有向边)，我们停止。 现在，如果我们最后能走到终点，那么我们的起始节点",meta:[{property:"og:url",content:"https://suanfa8.com/breadth-first-search/solutions/0802-find-eventual-safe-states.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 802 题：找到最终的安全状态（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"},{property:"article:tag",content:"拓扑排序"}]},regularPath:"/breadth-first-search/solutions/0802-find-eventual-safe-states.html",relativePath:"breadth-first-search/solutions/0802-find-eventual-safe-states.md",key:"v-2db55da5",path:"/breadth-first-search/solutions/0802-find-eventual-safe-states/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"理解题意",slug:"理解题意"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：深度优先遍历",slug:"方法一-深度优先遍历"},{level:2,title:"方法二：广度优先遍历（拓扑排序）",slug:"方法二-广度优先遍历-拓扑排序"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:5.8,words:1741},updateTime:"January 15, 2022 07:10",updateTimeStamp:1642230625e3,createTime:"January 15, 2022 07:10",createTimeStamp:1642230625e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 994 题：腐烂的橘子（中等）",frontmatter:{title:"「力扣」第 994 题：腐烂的橘子（中等）",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历"],summary:"题目链接：994. 腐烂的橘子。; 题目描述 在给定的网格中，每个单元格可以有以下三个值之一： 值 0 代表空单元格；; 值 1 代表新鲜橘子；; 值 2 代表腐烂的橘子。; 每分钟，任何与腐烂的橘子（在 4 个正方向上）相邻的新鲜橘子都会腐烂。 返回直到单元格中没有新鲜橘子为止所必须经过的最小分钟数。如果不可能，返回 -1。 示例 1： 示例 2： 示例 ",meta:[{property:"og:url",content:"https://suanfa8.com/breadth-first-search/solutions/0994-rotting-oranges.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 994 题：腐烂的橘子（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"}]},regularPath:"/breadth-first-search/solutions/0994-rotting-oranges.html",relativePath:"breadth-first-search/solutions/0994-rotting-oranges.md",key:"v-1e6c3ca5",path:"/breadth-first-search/solutions/0994-rotting-oranges/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.67,words:500},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941816e3,createTime:"January 5, 2022 12:19",createTimeStamp:1641385198e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 1162 题：地图分析（中等）",frontmatter:{title:"「力扣」第 1162 题：地图分析（中等）",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历"],summary:"题目链接：1162. 地图分析；; 题解链接：广度优先遍历（Java）。; 题目链接 你现在手里有一份大小为 N x N 的 网格 grid，上面的每个 单元格 都用 0 和 1 标记好了。其中 0 代表海洋，1 代表陆地，请你找出一个海洋单元格，这个海洋单元格到离它最近的陆地单元格的距离是最大的。 我们这里说的距离是「曼哈顿距离」（ Manhattan D",meta:[{property:"og:url",content:"https://suanfa8.com/breadth-first-search/solutions/1162-as-far-from-land-as-possible.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1162 题：地图分析（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"}]},regularPath:"/breadth-first-search/solutions/1162-as-far-from-land-as-possible.html",relativePath:"breadth-first-search/solutions/1162-as-far-from-land-as-possible.md",key:"v-5746cbf3",path:"/breadth-first-search/solutions/1162-as-far-from-land-as-possible/",headers:[{level:2,title:"题目链接",slug:"题目链接"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"解读题目中的「最远」和「最近」",slug:"解读题目中的「最远」和「最近」"},{level:2,title:"编写广度优先遍历算法的注意事项",slug:"编写广度优先遍历算法的注意事项"},{level:2,title:"使用「广度优先遍历」算法的问题",slug:"使用「广度优先遍历」算法的问题"}],readingTime:{minutes:6.53,words:1958},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941816e3,createTime:"January 5, 2022 12:19",createTimeStamp:1641385198e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 1203 题：项目管理（困难）",frontmatter:{title:"「力扣」第 1203 题：项目管理（困难）",icon:"shipin",category:"广度优先遍历",tags:["广度优先遍历","拓扑排序"],summary:"题目链接：1203. 项目管理（困难）；; :tv: 题解链接：视频题解与文字题解。; 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 公司共有 n 个项目和 m 个小组，每个项目要不没有归属，要不就由其中的一个小组负责。 我们用 gr",meta:[{property:"og:url",content:"https://suanfa8.com/breadth-first-search/solutions/1203-sort-items-by-groups-respecting-dependencies.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1203 题：项目管理（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"},{property:"article:tag",content:"拓扑排序"}]},regularPath:"/breadth-first-search/solutions/1203-sort-items-by-groups-respecting-dependencies.html",relativePath:"breadth-first-search/solutions/1203-sort-items-by-groups-respecting-dependencies.md",key:"v-7e32e276",path:"/breadth-first-search/solutions/1203-sort-items-by-groups-respecting-dependencies/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.95,words:585},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941816e3,createTime:"January 15, 2022 07:10",createTimeStamp:1642230625e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 1306 题：跳跃游戏 III（中等）",frontmatter:{title:"「力扣」第 1306 题：跳跃游戏 III（中等）",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历"],summary:"题目链接：1306. 跳跃游戏 III；; 题解链接：广度优先遍历。; 题目描述 这里有一个非负整数数组 arr，你最开始位于该数组的起始下标 start 处。当你位于下标 i 处时，你可以跳到 i + arr[i] 或者 i - arr[i]。 请你判断自己是否能够跳到对应元素值为 0 的 任一 下标处。 注意，不管是什么情况下，你都无法跳到数组之外。 示",meta:[{property:"og:url",content:"https://suanfa8.com/breadth-first-search/solutions/1306-jump-game-iii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1306 题：跳跃游戏 III（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"}]},regularPath:"/breadth-first-search/solutions/1306-jump-game-iii.html",relativePath:"breadth-first-search/solutions/1306-jump-game-iii.md",key:"v-3e805425",path:"/breadth-first-search/solutions/1306-jump-game-iii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:1.86,words:558},updateTime:"January 13, 2022 14:43",updateTimeStamp:1642085009e3,createTime:"January 5, 2022 12:19",createTimeStamp:1641385198e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 1315 题：祖父节点值为偶数的节点和（中等）",frontmatter:{title:"「力扣」第 1315 题：祖父节点值为偶数的节点和（中等）",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历"],summary:"题目链接：1315. 祖父节点值为偶数的节点和；; 题解链接：层序遍历。; 题目描述 给你一棵二叉树，请你返回满足以下条件的所有节点的值之和： 该节点的祖父节点的值为偶数。（一个节点的祖父节点是指该节点的父节点的父节点。）; 如果不存在祖父节点值为偶数的节点，那么返回 0 。 示例 1： Example 2: 提示： 树中节点的数目在 1 到 10^4 之间",meta:[{property:"og:url",content:"https://suanfa8.com/breadth-first-search/solutions/1315-sum-of-nodes-with-even-valued-grandparent.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1315 题：祖父节点值为偶数的节点和（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"}]},regularPath:"/breadth-first-search/solutions/1315-sum-of-nodes-with-even-valued-grandparent.html",relativePath:"breadth-first-search/solutions/1315-sum-of-nodes-with-even-valued-grandparent.md",key:"v-0867e1f6",path:"/breadth-first-search/solutions/1315-sum-of-nodes-with-even-valued-grandparent/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.07,words:620},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941816e3,createTime:"January 5, 2022 12:19",createTimeStamp:1641385198e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"拓扑排序简介",frontmatter:{title:"拓扑排序简介",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历","拓扑排序"],summary:"知识点精讲 「拓扑排序」没有新的知识点，最少需要知道： 「拓扑排序」可以用于判断有向图是否存在环，如果不存在环，可以给出其中一种拓扑排序的结果；; 「拓扑排序」可以使用「广度优先遍历」实现，也可以使用「深度优先遍历」实现。一般而言，需要掌握「广度优先遍历」，而「深度优先遍历」绝大多数情况下不需要掌握。; 拓扑排序并非一种排序算法，它能得到一个 AOV 网络的",meta:[{property:"og:url",content:"https://suanfa8.com/breadth-first-search/solutions/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"拓扑排序简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"},{property:"article:tag",content:"拓扑排序"}]},regularPath:"/breadth-first-search/solutions/intro.html",relativePath:"breadth-first-search/solutions/intro.md",key:"v-9bbf3216",path:"/breadth-first-search/solutions/intro/",headers:[{level:2,title:"「拓扑排序」的步骤",slug:"「拓扑排序」的步骤"}],readingTime:{minutes:1.54,words:461},updateTime:"January 15, 2022 07:10",updateTimeStamp:1642230625e3,createTime:"January 15, 2022 07:10",createTimeStamp:1642230625e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「闲谈」板块简介",frontmatter:{title:"「闲谈」板块简介",icon:"yongyan",category:"闲谈",tags:["闲谈"],summary:"这部分内容是一些笔记和闲聊，绝大多数内容是站长自己看的。",meta:[{property:"og:url",content:"https://suanfa8.com/chat/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「闲谈」板块简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"闲谈"}]},regularPath:"/chat/",relativePath:"chat/README.md",key:"v-538dfb26",path:"/chat/",readingTime:{minutes:.09,words:26},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126662e3,createTime:"December 22, 2021 02:02",createTimeStamp:1640138547e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「闲谈」简介",frontmatter:{title:"「闲谈」简介",icon:"yongyan",category:"闲谈",tags:["闲谈"],summary:"这部分内容是一些非正式的、没有调整过格式的文章。",meta:[{property:"og:url",content:"https://suanfa8.com/chat/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「闲谈」简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"闲谈"}]},regularPath:"/chat/intro.html",relativePath:"chat/intro.md",key:"v-599d1da7",path:"/chat/intro/",readingTime:{minutes:.07,words:22},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126662e3,createTime:"December 22, 2021 02:02",createTimeStamp:1640138547e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"一些无处安放的链接",frontmatter:{title:"一些无处安放的链接",icon:"yongyan",category:"闲聊",tags:["闲聊"],summary:"Python 可视化 https://pythontutor.com/visualize.html#mode=edit 算法游乐场 https://the-algorithms.com/zh_Hans",meta:[{property:"og:url",content:"https://suanfa8.com/chat/%E4%B8%80%E4%BA%9B%E6%97%A0%E5%A4%84%E5%AE%89%E6%94%BE%E7%9A%84%E9%93%BE%E6%8E%A5.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"一些无处安放的链接"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"闲聊"}]},regularPath:"/chat/%E4%B8%80%E4%BA%9B%E6%97%A0%E5%A4%84%E5%AE%89%E6%94%BE%E7%9A%84%E9%93%BE%E6%8E%A5.html",relativePath:"chat/一些无处安放的链接.md",key:"v-dc604366",path:"/chat/%E4%B8%80%E4%BA%9B%E6%97%A0%E5%A4%84%E5%AE%89%E6%94%BE%E7%9A%84%E9%93%BE%E6%8E%A5/",headers:[{level:2,title:"Python 可视化",slug:"python-可视化"},{level:2,title:"算法游乐场",slug:"算法游乐场"}],readingTime:{minutes:.06,words:18},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126662e3,createTime:"December 22, 2021 10:21",createTimeStamp:1640168517e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{frontmatter:{summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/chat/%E4%BD%A0%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E5%8F%AF%E8%83%BD%E6%B2%A1%E6%9C%89%E7%94%A8.html"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/chat/%E4%BD%A0%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E5%8F%AF%E8%83%BD%E6%B2%A1%E6%9C%89%E7%94%A8.html",relativePath:"chat/你学习算法可能没有用.md",key:"v-770626e8",path:"/chat/%E4%BD%A0%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E5%8F%AF%E8%83%BD%E6%B2%A1%E6%9C%89%E7%94%A8/",readingTime:{minutes:0,words:0},updateTime:"December 22, 2021 02:02",updateTimeStamp:1640138547e3,createTime:"December 22, 2021 02:02",createTimeStamp:1640138547e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"关于我在「力扣」上回答问题的点点滴滴",frontmatter:{title:"关于我在「力扣」上回答问题的点点滴滴",date:"2021-08-11T18:27:21.000Z",icon:"yongyan",category:"闲聊",tags:["闲聊"],summary:"这是我昨天在「力扣」的运营活动「有 BUG 我来帮」帖子下的回答，有比较大篇幅的修改。 因为官方的活动，浏览的人比较多，我一直觉得需要给大家一个正面、积极的形象，所以初稿去掉了一些我个人觉得会让人有不好的联想的地方。 但是在我的公众号里，我想和大家聊一聊心里的话。大家就当看看热闹，说得不对，也欢迎大家拍砖。 我为什么会在「力扣」回答问题 能帮助到别人感觉到有",meta:[{property:"og:url",content:"https://suanfa8.com/chat/%E5%85%B3%E4%BA%8E%E6%88%91%E5%9C%A8%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E4%B8%8A%E5%9B%9E%E7%AD%94%E9%97%AE%E9%A2%98%E7%9A%84%E7%82%B9%E7%82%B9%E6%BB%B4%E6%BB%B4.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"关于我在「力扣」上回答问题的点点滴滴"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"闲聊"},{property:"article:published_time",content:"2021-08-11T18:27:21.000Z"}]},regularPath:"/chat/%E5%85%B3%E4%BA%8E%E6%88%91%E5%9C%A8%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E4%B8%8A%E5%9B%9E%E7%AD%94%E9%97%AE%E9%A2%98%E7%9A%84%E7%82%B9%E7%82%B9%E6%BB%B4%E6%BB%B4.html",relativePath:"chat/关于我在「力扣」上回答问题的点点滴滴.md",key:"v-6c63cba9",path:"/chat/%E5%85%B3%E4%BA%8E%E6%88%91%E5%9C%A8%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E4%B8%8A%E5%9B%9E%E7%AD%94%E9%97%AE%E9%A2%98%E7%9A%84%E7%82%B9%E7%82%B9%E6%BB%B4%E6%BB%B4/",headers:[{level:2,title:"我为什么会在「力扣」回答问题",slug:"我为什么会在「力扣」回答问题"},{level:3,title:"能帮助到别人感觉到有意义",slug:"能帮助到别人感觉到有意义"},{level:2,title:"为什么我现在很少回答问题",slug:"为什么我现在很少回答问题"},{level:2,title:"一些留言不回复的原因",slug:"一些留言不回复的原因"},{level:3,title:"有一些问题不回答真的没有关系",slug:"有一些问题不回答真的没有关系"},{level:3,title:"有一些问题挺不走心的",slug:"有一些问题挺不走心的"},{level:3,title:"真的没有看到",slug:"真的没有看到"},{level:2,title:"一、提出问题",slug:"一、提出问题"},{level:3,title:"可以写代码验证的问题不必提问",slug:"可以写代码验证的问题不必提问"},{level:3,title:"尽量不要把自己写的有 bug 的代码交给别人看",slug:"尽量不要把自己写的有-bug-的代码交给别人看"},{level:3,title:"如果一定要让别人看代码，请注意可读性",slug:"如果一定要让别人看代码-请注意可读性"},{level:2,title:"二、回答问题",slug:"二、回答问题"}],readingTime:{minutes:7.23,words:2169},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126662e3,createTime:"December 22, 2021 10:21",createTimeStamp:1640168517e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"剑指 Offer（第 2 版）与「力扣」问题的对应关系",frontmatter:{title:"剑指 Offer（第 2 版）与「力扣」问题的对应关系",icon:"yongyan",category:"闲聊",tags:["闲聊"],summary:"剑指 Offer 力扣题号 ------------------------------------------------------------ ---- 剑指 Offer II 001. 整数除法 29 剑指 Offer II 002. 二进制加法 67 剑指 Offer II 003. 前 n 个数字二进制中 1 的个数 338 剑指 Offer I",meta:[{property:"og:url",content:"https://suanfa8.com/chat/%E5%89%91%E6%8C%87%20Offer%EF%BC%88%E7%AC%AC%202%20%E7%89%88%EF%BC%89%E4%B8%8E%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E9%97%AE%E9%A2%98%E7%9A%84%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"剑指 Offer（第 2 版）与「力扣」问题的对应关系"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"闲聊"}]},regularPath:"/chat/%E5%89%91%E6%8C%87%20Offer%EF%BC%88%E7%AC%AC%202%20%E7%89%88%EF%BC%89%E4%B8%8E%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E9%97%AE%E9%A2%98%E7%9A%84%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB.html",relativePath:"chat/剑指 Offer（第 2 版）与「力扣」问题的对应关系.md",key:"v-0e908365",path:"/chat/%E5%89%91%E6%8C%87%20Offer%EF%BC%88%E7%AC%AC%202%20%E7%89%88%EF%BC%89%E4%B8%8E%E3%80%8C%E5%8A%9B%E6%89%A3%E3%80%8D%E9%97%AE%E9%A2%98%E7%9A%84%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB/",readingTime:{minutes:5.96,words:1789},updateTime:"December 22, 2021 10:21",updateTimeStamp:1640168517e3,createTime:"December 22, 2021 10:21",createTimeStamp:1640168517e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"学习算法没有捷径",frontmatter:{title:"学习算法没有捷径",icon:"yongyan",category:"闲聊",tags:["闲聊"],summary:"说点轻松的 大家假期愉快。今天我们不讲知识点，讲一些方法论的东西。 很轻松，希望能对大家有一点点用处。欢迎大家能帮我点点「在看」，谢谢大家。 本期应一位读者评论要求应该安排「滑动窗口」的，但是今天早上突然想起来，想写写二分查找，但是 觉得扯二分查找的细节也没意思，就来说说怎么学习算法与数据结构吧。事实上，「动态规划」我还有一些话没说完，也不可能说得完，以后都",meta:[{property:"og:url",content:"https://suanfa8.com/chat/%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E6%B2%A1%E6%9C%89%E6%8D%B7%E5%BE%84.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"学习算法没有捷径"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"闲聊"}]},regularPath:"/chat/%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E6%B2%A1%E6%9C%89%E6%8D%B7%E5%BE%84.html",relativePath:"chat/学习算法没有捷径.md",key:"v-1a2b3877",path:"/chat/%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E6%B2%A1%E6%9C%89%E6%8D%B7%E5%BE%84/",headers:[{level:2,title:"说点轻松的",slug:"说点轻松的"},{level:2,title:"二分查找很难吗",slug:"二分查找很难吗"},{level:2,title:"从二分查找说怎样写代码",slug:"从二分查找说怎样写代码"},{level:2,title:"我是如何学习二分查找的",slug:"我是如何学习二分查找的"},{level:2,title:"遇到问题怎么办",slug:"遇到问题怎么办"},{level:2,title:"我如何看待二分查找的模板",slug:"我如何看待二分查找的模板"},{level:2,title:"总结的作用",slug:"总结的作用"}],readingTime:{minutes:7.5,words:2249},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126662e3,createTime:"December 22, 2021 02:02",createTimeStamp:1640138547e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"我对算法「题」的偏见",frontmatter:{title:"我对算法「题」的偏见",date:"2021-08-11T04:07:24.000Z",icon:"yongyan",category:"闲聊",tags:["闲聊"],summary:"先说在前面。 这里标题里有「题」这个字，我对算法本身是没有偏见的，我觉得算法是有用的，算法是有意思的；; 我讲这些话依然很主观，仅供各位参考；; 我以自己为背景（非计算机专业，算法零基础），基于这样的立场。计算机专业，算法大佬不在这个范围内，请忽略我。; 有一点情绪，请大家谅解。; 如果你现在是很年轻的学生，做算法问题可以让你获得很好的工作机会，可以进大厂，",meta:[{property:"og:url",content:"https://suanfa8.com/chat/%E6%88%91%E5%AF%B9%E7%AE%97%E6%B3%95%E3%80%8C%E9%A2%98%E3%80%8D%E7%9A%84%E5%81%8F%E8%A7%81.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"我对算法「题」的偏见"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"闲聊"},{property:"article:published_time",content:"2021-08-11T04:07:24.000Z"}]},regularPath:"/chat/%E6%88%91%E5%AF%B9%E7%AE%97%E6%B3%95%E3%80%8C%E9%A2%98%E3%80%8D%E7%9A%84%E5%81%8F%E8%A7%81.html",relativePath:"chat/我对算法「题」的偏见.md",key:"v-b07c07fe",path:"/chat/%E6%88%91%E5%AF%B9%E7%AE%97%E6%B3%95%E3%80%8C%E9%A2%98%E3%80%8D%E7%9A%84%E5%81%8F%E8%A7%81/",headers:[{level:3,title:"如果没有背景、没有工作经验、只会做题可能一点用都没有",slug:"如果没有背景、没有工作经验、只会做题可能一点用都没有"},{level:3,title:"学习算法是有用的",slug:"学习算法是有用的"},{level:3,title:"一直做算法题可能没什么用",slug:"一直做算法题可能没什么用"},{level:3,title:"有难度的算法问题在考察技巧",slug:"有难度的算法问题在考察技巧"},{level:3,title:"不想成为「做题家」",slug:"不想成为「做题家」"},{level:3,title:"美好的期望",slug:"美好的期望"}],readingTime:{minutes:2.6,words:781},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126662e3,createTime:"December 22, 2021 10:21",createTimeStamp:1640168517e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"梦想破碎的2021年",frontmatter:{title:"梦想破碎的2021年",icon:"yongyan",category:"闲聊",tags:["闲聊"],summary:"今天听到了一首在今年 4 月份听到的歌曲，想起了那个时候的工作的心情，沮丧、恶心、失落。 那个时候心情很差，一方面来自于工作，我在工作上得不到正向的肯定、激励，没有遇见与我志同道合的人。同时，我审视了自己的工作内容，然后否定了自己工作的意义，然后我就辞职了。 所以在那个时间段，我给自己的公众号起名字叫「算法不好玩」，我是一个讲算法的人，但是我反感做算法题。 ",meta:[{property:"og:url",content:"https://suanfa8.com/chat/%E6%A2%A6%E6%83%B3%E7%A0%B4%E7%A2%8E%E7%9A%842021%E5%B9%B4.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"梦想破碎的2021年"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"闲聊"}]},regularPath:"/chat/%E6%A2%A6%E6%83%B3%E7%A0%B4%E7%A2%8E%E7%9A%842021%E5%B9%B4.html",relativePath:"chat/梦想破碎的2021年.md",key:"v-0b760be8",path:"/chat/%E6%A2%A6%E6%83%B3%E7%A0%B4%E7%A2%8E%E7%9A%842021%E5%B9%B4/",headers:[{level:3,title:"我不当老师的原因",slug:"我不当老师的原因"},{level:3,title:"我讨厌算法的原因",slug:"我讨厌算法的原因"}],readingTime:{minutes:1.38,words:414},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126662e3,createTime:"December 22, 2021 10:21",createTimeStamp:1640168517e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"模板不重要（转载）",frontmatter:{title:"模板不重要（转载）",icon:"yongyan",category:"闲聊",tags:["闲聊"],summary:"本文来自 liuyubobobo 老师的公众号「是不是很酷」于 2020 年 8 月 19 日的分享 模板不重要。 我也写过一篇公众号文章，叫 如何看待「算法模板」，一起分享给大家。",meta:[{property:"og:url",content:"https://suanfa8.com/chat/%E6%A8%A1%E6%9D%BF%E4%B8%8D%E9%87%8D%E8%A6%81%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"模板不重要（转载）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"闲聊"}]},regularPath:"/chat/%E6%A8%A1%E6%9D%BF%E4%B8%8D%E9%87%8D%E8%A6%81%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89.html",relativePath:"chat/模板不重要（转载）.md",key:"v-039a658b",path:"/chat/%E6%A8%A1%E6%9D%BF%E4%B8%8D%E9%87%8D%E8%A6%81%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89/",readingTime:{minutes:.22,words:66},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126662e3,createTime:"December 22, 2021 04:19",createTimeStamp:1640146755e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"软件工程师和算法竞赛（转载）",frontmatter:{title:"软件工程师和算法竞赛（转载）",icon:"yongyan",category:"闲聊",tags:["闲聊"],summary:"本文来自 liuyubobobo 老师的公众号「是不是很酷」于 2021 年 6 月 30 日的分享 软件工程师和算法竞赛。 重点摘抄 大家不需要成为算法竞赛高手，也能感受算法的魅力； 不需要成为算法竞赛高手，也可以在实际工作中使用算法，甚至做算法相关工作； 更不需要成为竞赛高手，才能在计算机领域做出成绩。 这是竞赛大佬说的话，希望能对大家有所启迪。我不否认",meta:[{property:"og:url",content:"https://suanfa8.com/chat/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%92%8C%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"软件工程师和算法竞赛（转载）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"闲聊"}]},regularPath:"/chat/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%92%8C%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89.html",relativePath:"chat/软件工程师和算法竞赛（转载）.md",key:"v-c11cccce",path:"/chat/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%92%8C%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%EF%BC%88%E8%BD%AC%E8%BD%BD%EF%BC%89/",readingTime:{minutes:.61,words:184},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126662e3,createTime:"December 22, 2021 04:24",createTimeStamp:1640147051e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"谋生的路上不抛弃良知",frontmatter:{title:"谋生的路上不抛弃良知",icon:"yongyan",category:"闲聊",tags:["闲聊"],summary:"这里分享一个鸡汤，个人感觉不是「人民日报」写的，但是话还是「好听」的。",meta:[{property:"og:url",content:"https://suanfa8.com/chat/%E8%B0%8B%E7%94%9F%E7%9A%84%E8%B7%AF%E4%B8%8A%E4%B8%8D%E6%8A%9B%E5%BC%83%E8%89%AF%E7%9F%A5.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"谋生的路上不抛弃良知"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"闲聊"}]},regularPath:"/chat/%E8%B0%8B%E7%94%9F%E7%9A%84%E8%B7%AF%E4%B8%8A%E4%B8%8D%E6%8A%9B%E5%BC%83%E8%89%AF%E7%9F%A5.html",relativePath:"chat/谋生的路上不抛弃良知.md",key:"v-5a460e56",path:"/chat/%E8%B0%8B%E7%94%9F%E7%9A%84%E8%B7%AF%E4%B8%8A%E4%B8%8D%E6%8A%9B%E5%BC%83%E8%89%AF%E7%9F%A5/",readingTime:{minutes:.11,words:34},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126662e3,createTime:"December 22, 2021 03:11",createTimeStamp:1640142667e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{frontmatter:{summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/chat/%E9%A2%98%E5%8D%95.html"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/chat/%E9%A2%98%E5%8D%95.html",relativePath:"chat/题单.md",key:"v-50505c44",path:"/chat/%E9%A2%98%E5%8D%95/",readingTime:{minutes:0,words:0},updateTime:"December 22, 2021 04:24",updateTimeStamp:1640147051e3,createTime:"December 22, 2021 04:24",createTimeStamp:1640147051e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"高级程序员不是追求的目标（雷军）",frontmatter:{title:"高级程序员不是追求的目标（雷军）",icon:"yongyan",category:"闲聊",tags:["闲聊"],summary:"原文链接：雷军自述：我十年的程序员生涯; 有的人学习编程技术，是把高级程序员做为追求的目标，甚至是终身的奋斗目标。后来参与了真正的商品化软件开发后，反而困惑了，茫然了。 一个人只要有韧性和灵性，有机会接触并学习电脑的编程技术，就会成为一个不错的程序员。刚开始写程序，这时候学得多的人写的好，到了后来，大家都上了一个层次，谁写的好只取决于这个人是否细心、有韧性、",meta:[{property:"og:url",content:"https://suanfa8.com/chat/%E9%AB%98%E7%BA%A7%E7%A8%8B%E5%BA%8F%E5%91%98%E4%B8%8D%E6%98%AF%E8%BF%BD%E6%B1%82%E7%9A%84%E7%9B%AE%E6%A0%87%EF%BC%88%E9%9B%B7%E5%86%9B%EF%BC%89.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"高级程序员不是追求的目标（雷军）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"闲聊"}]},regularPath:"/chat/%E9%AB%98%E7%BA%A7%E7%A8%8B%E5%BA%8F%E5%91%98%E4%B8%8D%E6%98%AF%E8%BF%BD%E6%B1%82%E7%9A%84%E7%9B%AE%E6%A0%87%EF%BC%88%E9%9B%B7%E5%86%9B%EF%BC%89.html",relativePath:"chat/高级程序员不是追求的目标（雷军）.md",key:"v-46e7f6f6",path:"/chat/%E9%AB%98%E7%BA%A7%E7%A8%8B%E5%BA%8F%E5%91%98%E4%B8%8D%E6%98%AF%E8%BF%BD%E6%B1%82%E7%9A%84%E7%9B%AE%E6%A0%87%EF%BC%88%E9%9B%B7%E5%86%9B%EF%BC%89/",readingTime:{minutes:1.06,words:317},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126662e3,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"精选题解",frontmatter:{title:"精选题解",icon:"jingxuan",summary:"这部分内容待添加。 说明 「精选题解」不是「力扣」官方标注的精选题解，而是我自己在编写的过程中投入时间和精力较多、且有充分讨论的题解，这些题解相对我自己的其它笔记、题解来说有较多的知识点。",meta:[{property:"og:url",content:"https://suanfa8.com/choice/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"精选题解"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/choice/",relativePath:"choice/README.md",key:"v-356e54c6",path:"/choice/",readingTime:{minutes:.28,words:83},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142619e3,createTime:"December 11, 2021 03:27",createTimeStamp:1639193248e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"请见专栏「二分查找精讲」",frontmatter:{title:"请见专栏「二分查找精讲」",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"请见「二分查找精讲」",meta:[{property:"og:url",content:"https://suanfa8.com/choice/binary-search/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"请见专栏「二分查找精讲」"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/choice/binary-search/intro.html",relativePath:"choice/binary-search/intro.md",key:"v-ddfed96a",path:"/choice/binary-search/intro/",readingTime:{minutes:.04,words:12},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142619e3,createTime:"December 17, 2021 10:15",createTimeStamp:163973611e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 236 题：二叉树的最近公共祖先（后序遍历、分治思想）",frontmatter:{title:"「力扣」第 236 题：二叉树的最近公共祖先（后序遍历、分治思想）",icon:"yongyan",category:"树",tags:["二叉树"],summary:"题目链接：; 题目描述",meta:[{property:"og:url",content:"https://suanfa8.com/choice/tree/0236-lowest-common-ancestor-of-a-binary-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 236 题：二叉树的最近公共祖先（后序遍历、分治思想）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"}]},regularPath:"/choice/tree/0236-lowest-common-ancestor-of-a-binary-tree.html",relativePath:"choice/tree/0236-lowest-common-ancestor-of-a-binary-tree.md",key:"v-753c3d65",path:"/choice/tree/0236-lowest-common-ancestor-of-a-binary-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:.03,words:8},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142619e3,createTime:"December 20, 2021 02:30",createTimeStamp:163996744e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 993 题：二叉树的堂兄弟节点",frontmatter:{summary:'「力扣」第 993 题：二叉树的堂兄弟节点 链接：993. 二叉树的堂兄弟节点；; 题解链接：深度优先遍历、广度优先遍历。; " 在二叉树中，根节点位于深度 0 处，每个深度为 k 的节点的子节点位于深度 k + 1 处。" "" " 如果二叉树的两个节点深度相同，但父节点不同，则它们是一对堂兄弟节点。" "" " 我们给出了具有唯一值的二叉树的根节点 ro',meta:[{property:"og:url",content:"https://suanfa8.com/choice/tree/0993-cousins-in-binary-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 993 题：二叉树的堂兄弟节点"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/choice/tree/0993-cousins-in-binary-tree.html",relativePath:"choice/tree/0993-cousins-in-binary-tree.md",key:"v-087d3ca5",path:"/choice/tree/0993-cousins-in-binary-tree/",headers:[{level:2,title:"「力扣」第 993 题：二叉树的堂兄弟节点",slug:"「力扣」第-993-题-二叉树的堂兄弟节点"},{level:3,title:"方法一：深度优先遍历",slug:"方法一-深度优先遍历"},{level:3,title:"方法二：广度优先遍历",slug:"方法二-广度优先遍历"}],readingTime:{minutes:4.42,words:1327},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142619e3,createTime:"December 20, 2021 12:21",createTimeStamp:1640002884e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"6.12 树状数组概述（视频讲解）",frontmatter:{title:"6.12 树状数组概述（视频讲解）",icon:"shipin",category:"树状数组",tags:["树状数组"],summary:"提示 「树状数组」是算法竞赛的考点，绝大多数算法面试都不会考，可以不学习。 :tv: 视频讲解 树状数组的知识讲解和写法可以请见：树状数组（Java、Python）。 说明：建议倍速观看视频（视频右下角第 2 个按钮）。由于时间和水平有限，没有做剪辑和修饰，有一些口误，请大家理解。 视频讲解 :tv: 这道题在 B 站 可以收看视频讲解，可以点击下面的视频右",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-advance/fenwick-tree/01.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"6.12 树状数组概述（视频讲解）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"树状数组"}]},regularPath:"/data-structure-advance/fenwick-tree/01.html",relativePath:"data-structure-advance/fenwick-tree/01.md",key:"v-0d2a3409",path:"/data-structure-advance/fenwick-tree/01/",headers:[{level:2,title:"📺 视频讲解",slug:"视频讲解"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:5.84,words:1753},updateTime:"January 14, 2022 01:59",updateTimeStamp:164212559e4,createTime:"December 13, 2021 08:05",createTimeStamp:1639382702e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3}]},{title:"6.13 预备知识：前缀和数组",frontmatter:{title:"6.13 预备知识：前缀和数组",icon:"yongyan",category:"树状数组",tags:["树状数组"],summary:"「树状数组」也叫 Binary Indexed Tree，二进制索引树，很好地表示了「树状数组」处理数据的思路：「树状数组」里某个元素管理了原始输入数组多少数据是由下标决定的。 预备知识 知道前缀和就可以求区间和，这是因为不同规模的区间和有重复的部分，相减以后就得到了区间和。; 如图所示：红色部分的和 = 绿色部分的和 - 黄色部分的和。 可以定义：前缀和 ",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-advance/fenwick-tree/02.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"6.13 预备知识：前缀和数组"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"树状数组"}]},regularPath:"/data-structure-advance/fenwick-tree/02.html",relativePath:"data-structure-advance/fenwick-tree/02.md",key:"v-48a9ae87",path:"/data-structure-advance/fenwick-tree/02/",headers:[{level:2,title:"预备知识",slug:"预备知识"},{level:2,title:"组织成树形结构",slug:"组织成树形结构"},{level:3,title:"线段树是一棵二叉树",slug:"线段树是一棵二叉树"},{level:3,title:"树状数组是多叉树",slug:"树状数组是多叉树"}],readingTime:{minutes:2.87,words:861},updateTime:"January 13, 2022 20:06",updateTimeStamp:16421044e5,createTime:"December 13, 2021 08:05",createTimeStamp:1639382702e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"6.14 「树状数组」如何组织原始输入数据的结构",frontmatter:{title:"6.14 「树状数组」如何组织原始输入数据的结构",icon:"yongyan",category:"树状数组",tags:["树状数组"],summary:"和「堆」一样，树状数组的 $0$ 号下标不放置元素，从 $1$ 号下标开始使用。从上图可以观察到，与数组 C 的某个结点有关的数组 A 的某些结点，它们的下标之间有如下关系。 数组 C 的值由数组 A 的哪些元素而来 数组 A 的元素个数 ------------------------------------------------------------",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-advance/fenwick-tree/03.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"6.14 「树状数组」如何组织原始输入数据的结构"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"树状数组"}]},regularPath:"/data-structure-advance/fenwick-tree/03.html",relativePath:"data-structure-advance/fenwick-tree/03.md",key:"v-f7adadf6",path:"/data-structure-advance/fenwick-tree/03/",readingTime:{minutes:1.69,words:506},updateTime:"January 13, 2022 20:06",updateTimeStamp:16421044e5,createTime:"December 13, 2021 08:05",createTimeStamp:1639382702e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"6.15 详解 lowbit 函数",frontmatter:{title:"6.15 详解 lowbit 函数",icon:"yongyan",category:"树状数组",tags:["树状数组"],summary:"这样命名的含义是截取一个正整数的二进制表示里的最低位的 $1$ 和它后面的所有的 $0$。lowbit 的定义如下： 说明： 这里 x 一定是正整数，即 x >= 1；; 这里 & 表示按位与运算；; -x 也可以写成 (~x + 1) ，这里 ~ 表示「按位取反」。这是负数的定义，负数用补码表示，它的值等于这个负数的绝对值按位取反以后再加 $1$，因此 l",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-advance/fenwick-tree/04.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"6.15 详解 lowbit 函数"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"树状数组"}]},regularPath:"/data-structure-advance/fenwick-tree/04.html",relativePath:"data-structure-advance/fenwick-tree/04.md",key:"v-80aeb8fa",path:"/data-structure-advance/fenwick-tree/04/",headers:[{level:2,title:"复习负数和补码的相关知识（熟悉的朋友可以忽略）",slug:"复习负数和补码的相关知识-熟悉的朋友可以忽略"},{level:2,title:"lowbit 运算解释",slug:"lowbit-运算解释"}],readingTime:{minutes:1.82,words:547},updateTime:"January 13, 2022 20:06",updateTimeStamp:16421044e5,createTime:"December 13, 2021 08:05",createTimeStamp:1639382702e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"6.16 「单点更新」与「前缀和查询」",frontmatter:{title:"6.16 「单点更新」与「前缀和查询」",icon:"yongyan",category:"树状数组",tags:["树状数组"],summary:"单点更新 「单点更新」从孩子结点到父亲结点，沿途所有的结点都需要更新；; 从孩子结点到父亲结点，就是不断加上当前下标的 lowbit 值，产生进位。; 参考代码： 前缀和查询 我们使用记号 preSum[7] 表示查询 A[1] + A[2] + ... + A[7]。依然是考虑 $7$ 的二进制 $(0111)_2$分解： $$ 7 = 1 \\times ",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-advance/fenwick-tree/05.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"6.16 「单点更新」与「前缀和查询」"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"树状数组"}]},regularPath:"/data-structure-advance/fenwick-tree/05.html",relativePath:"data-structure-advance/fenwick-tree/05.md",key:"v-09afc3fe",path:"/data-structure-advance/fenwick-tree/05/",headers:[{level:2,title:"单点更新",slug:"单点更新"},{level:2,title:"前缀和查询",slug:"前缀和查询"},{level:2,title:"树状数组的初始化",slug:"树状数组的初始化"},{level:2,title:"「树状数组」的完整代码",slug:"「树状数组」的完整代码"}],readingTime:{minutes:2.63,words:788},updateTime:"January 13, 2022 20:06",updateTimeStamp:16421044e5,createTime:"December 13, 2021 08:05",createTimeStamp:1639382702e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"6.18 例 2：「力扣」第 315 题：计算右侧小于当前元素的个数（困难）",frontmatter:{title:"6.18 例 2：「力扣」第 315 题：计算右侧小于当前元素的个数（困难）",icon:"yongyan",category:"树状数组",tags:["树状数组"],summary:"「力扣」第 315 题：计算右侧小于当前元素的个数 题目地址：「力扣」第 315 题：计算右侧小于当前元素的个数; :tv: 视频教程 建议使用 1.5 倍速观看。 在「力扣」的题解里可以观看视频：归并排序 + 索引数组（Java、Python）;; B 站视频。; 离散化 首先对数组元素做预处理，这一步叫「离散化」。 考虑到「树状数组」的底层是数组（线性结",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-advance/fenwick-tree/07.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"6.18 例 2：「力扣」第 315 题：计算右侧小于当前元素的个数（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"树状数组"}]},regularPath:"/data-structure-advance/fenwick-tree/07.html",relativePath:"data-structure-advance/fenwick-tree/07.md",key:"v-722712fd",path:"/data-structure-advance/fenwick-tree/07/",headers:[{level:2,title:"📺 视频教程",slug:"视频教程"},{level:3,title:"离散化",slug:"离散化"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:5.84,words:1751},updateTime:"January 13, 2022 20:06",updateTimeStamp:16421044e5,createTime:"December 13, 2021 08:05",createTimeStamp:1639382702e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"6.17 例 1：计算逆序数",frontmatter:{title:"6.17 例 1：计算逆序数",icon:"yongyan",category:"树状数组",tags:["树状数组"],summary:"以下内容来自文字题解：暴力解法、分治思想、树状数组。 方法三：树状数组 这部分内容如果是准备普通公司的算法面试，不建议花时间掌握。写在这里是为了知识的完整性和知识点的科普。 用树状数组解决逆序数问题，也是一个经典的做法。; 树状数组是一种实现了高效查询「前缀和」与「单点更新」操作的数据结构，在「力扣」第 315 题：计算右侧小于当前元素的个数 的 题解 里有",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-advance/fenwick-tree/06.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"6.17 例 1：计算逆序数"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"树状数组"}]},regularPath:"/data-structure-advance/fenwick-tree/06.html",relativePath:"data-structure-advance/fenwick-tree/06.md",key:"v-36a7987f",path:"/data-structure-advance/fenwick-tree/06/",headers:[{level:3,title:"方法三：树状数组",slug:"方法三-树状数组"}],readingTime:{minutes:3.09,words:927},updateTime:"January 13, 2022 20:06",updateTimeStamp:16421044e5,createTime:"December 13, 2021 08:05",createTimeStamp:1639382702e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{frontmatter:{summary:"写在前面： 「树状数组」属于高级的数据结构，如果是非竞赛选手和普通公司面试，可以不用掌握（这条意见仅供参考）。但我个人认为「树状数组」的构造是很巧妙的，希望我的介绍能给大家带来一点帮助和思考；; 「树状数组」这个数据结构用于高效地解决「前缀和查询」与「单点更新」问题；; 本题解只介绍「树状数组」的基础知识。;",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-advance/fenwick-tree/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/data-structure-advance/fenwick-tree/",relativePath:"data-structure-advance/fenwick-tree/README.md",key:"v-1fc74288",path:"/data-structure-advance/fenwick-tree/",readingTime:{minutes:.42,words:127},updateTime:"January 13, 2022 20:06",updateTimeStamp:16421044e5,createTime:"December 11, 2021 03:27",createTimeStamp:1639193248e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"6.8 线段树是原始数组的一个预处理数组",frontmatter:{title:"6.8 线段树是原始数组的一个预处理数组",icon:"yongyan",category:"线段树",tags:["线段树"],summary:"提示 「线段树」是算法竞赛的考点，绝大多数算法面试都不会考，可以不学习。 线段树（segment tree）是一棵二叉树；; 线段树又称「区间树」，是一个高级数据结构，应用的对象是「数组」；; 线段树是一种实现了高效的「区间查询」与「区间更新」的数据结构。; 前置知识：理解「前缀和」数组 preSum[i] 表示 nums[0..i - 1] 里全部元素的和",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-advance/segment-tree/01.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"6.8 线段树是原始数组的一个预处理数组"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"线段树"}]},regularPath:"/data-structure-advance/segment-tree/01.html",relativePath:"data-structure-advance/segment-tree/01.md",key:"v-89870f96",path:"/data-structure-advance/segment-tree/01/",headers:[{level:2,title:"前置知识：理解「前缀和」数组",slug:"前置知识-理解「前缀和」数组"},{level:2,title:"「前缀和数组」与「线段树」都是原始数组的预处理数组",slug:"「前缀和数组」与「线段树」都是原始数组的预处理数组"},{level:2,title:"例 1：「力扣」第 303 题：区域和检索 - 数组不可变",slug:"例-1-「力扣」第-303-题-区域和检索-数组不可变"},{level:3,title:"思路分析",slug:"思路分析"},{level:2,title:"例 2：「力扣」第 307 题：区域和检索 - 数组可修改",slug:"例-2-「力扣」第-307-题-区域和检索-数组可修改"},{level:3,title:"思路分析",slug:"思路分析-2"},{level:2,title:"使用「遍历」与使用「线段树」对于「区间更新」与「区间查询」操作的复杂度",slug:"使用「遍历」与使用「线段树」对于「区间更新」与「区间查询」操作的复杂度"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:3.09,words:928},updateTime:"January 13, 2022 20:06",updateTimeStamp:16421044e5,createTime:"December 13, 2021 05:22",createTimeStamp:1639372925e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"6.9 写出预处理数组的结构",frontmatter:{title:"6.9 写出预处理数组的结构",icon:"yongyan",category:"线段树",tags:["线段树"],summary:"由于「线段树」是平衡二叉树，因此可以使用数组表示 以前我们学习过「堆」，知道「堆」是一棵「完全二叉树」，因此「堆」可以用数组表示。基于此，我们很自然地想到可以用数组表示「线段树」；; 完全二叉树的定义：除了最后一层以外，其余各层的结点数达到最大，并且最后一层所有的结点都连续地、集中地存储在最左边；; 线段树虽然不是完全二叉树，但 线段树是平衡二叉树 ，依然也",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-advance/segment-tree/02.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"6.9 写出预处理数组的结构"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"线段树"}]},regularPath:"/data-structure-advance/segment-tree/02.html",relativePath:"data-structure-advance/segment-tree/02.md",key:"v-12881a9a",path:"/data-structure-advance/segment-tree/02/",headers:[{level:2,title:"由于「线段树」是平衡二叉树，因此可以使用数组表示",slug:"由于「线段树」是平衡二叉树-因此可以使用数组表示"},{level:2,title:"如何构建线段树、如何实现区间查询、如何实现区间更新",slug:"如何构建线段树、如何实现区间查询、如何实现区间更新"},{level:2,title:"需要多少空间",slug:"需要多少空间"},{level:2,title:"线段树是一颗「平衡二叉树」",slug:"线段树是一颗「平衡二叉树」"},{level:2,title:"例题：「力扣」第 303 题：区域和检索 - 数组不可变",slug:"例题-「力扣」第-303-题-区域和检索-数组不可变"}],readingTime:{minutes:6.65,words:1995},updateTime:"January 13, 2022 20:06",updateTimeStamp:16421044e5,createTime:"December 13, 2021 05:22",createTimeStamp:1639372925e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"6.10 创建线段树与区间查询",frontmatter:{title:"6.10 创建线段树与区间查询",icon:"yongyan",category:"线段树",tags:["线段树"],summary:"根据原始数组创建线段树 这一节的目标是：我们把员工的信息输入一棵线段树，让这棵线段树组织出领导架构。即已知 data 数组，要把 tree 数组构建出来。 分析递归结构，重点体会：二叉树每做一次分支都是「一分为二」进行的，因此线段树是一棵二叉树；; 递归到底的时候，这个区间只有 $1$ 个元素。; 设计私有函数，我们需要考虑： 我们要创建的线段树的根结点的下",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-advance/segment-tree/03.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"6.10 创建线段树与区间查询"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"线段树"}]},regularPath:"/data-structure-advance/segment-tree/03.html",relativePath:"data-structure-advance/segment-tree/03.md",key:"v-323b6d31",path:"/data-structure-advance/segment-tree/03/",headers:[{level:2,title:"根据原始数组创建线段树",slug:"根据原始数组创建线段树"},{level:2,title:"区间查询",slug:"区间查询"}],readingTime:{minutes:3.82,words:1145},updateTime:"January 13, 2022 20:06",updateTimeStamp:16421044e5,createTime:"December 13, 2021 05:22",createTimeStamp:1639372925e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"6.1 Trie 的思想与基本结构",frontmatter:{title:"6.1 Trie 的思想与基本结构",icon:"yongyan",category:"Trie",tags:["Trie"],summary:'Trie 树又称「字典树」「前缀树」，音同 Tree，它的典型应用对象是字符串，可以用于保存、统计。 其特点是：用边表示字符。当走到叶子结点的时候，沿途所经过的边组成了一个字符串。 其优点是：利用字符串的公共前缀来减少查询时间，最大限度地减少无谓的字符串比较，查询效率比哈希表高。 以下是根据示例： "bad"、 "dad"、 "mad" 组建的 Trie 树',meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-advance/trie/01.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"6.1 Trie 的思想与基本结构"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"Trie"}]},regularPath:"/data-structure-advance/trie/01.html",relativePath:"data-structure-advance/trie/01.md",key:"v-ee47900e",path:"/data-structure-advance/trie/01/",headers:[{level:2,title:"Trie 的设计思想",slug:"trie-的设计思想"}],readingTime:{minutes:1.65,words:494},updateTime:"January 14, 2022 01:59",updateTimeStamp:164212559e4,createTime:"December 13, 2021 04:59",createTimeStamp:1639371597e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"线段树北美讲题大纲",frontmatter:{title:"线段树北美讲题大纲",icon:"yongyan",category:"线段树",tags:["线段树"],summary:"北美讲题大纲 线段树入门 时间：2020 年 6 月 6 日 只介绍「线段树」基础知识，不做深入讨论；; 参考资料：liuyubobobo 老师的 GitHub 《玩转数据结构》代码仓库。; 为什么介绍线段树？谷歌公司要考，它思想简单，代码实现有一点复杂。 --- 1. 前置知识：前缀和数组 preSum[i] 表示 nums[0..i] 里全部元素的和（一",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-advance/segment-tree/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"线段树北美讲题大纲"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"线段树"}]},regularPath:"/data-structure-advance/segment-tree/intro.html",relativePath:"data-structure-advance/segment-tree/intro.md",key:"v-10bac8f6",path:"/data-structure-advance/segment-tree/intro/",headers:[{level:2,title:"线段树入门",slug:"线段树入门"},{level:2,title:"1. 前置知识：前缀和数组",slug:"_1-前置知识-前缀和数组"},{level:2,title:"2. 线段树",slug:"_2-线段树"},{level:3,title:"2.1 线段树的用途",slug:"_2-1-线段树的用途"},{level:3,title:"2.2 前缀和数组与线段树都是原始数组的预处理数组",slug:"_2-2-前缀和数组与线段树都是原始数组的预处理数组"},{level:3,title:"2.3 如何构建线段树、如何实现区间查询、如何实现区间更新",slug:"_2-3-如何构建线段树、如何实现区间查询、如何实现区间更新"},{level:3,title:"2.4 线段树总结（与已有知识的联系）",slug:"_2-4-线段树总结-与已有知识的联系"},{level:3,title:"2.5 练习",slug:"_2-5-练习"},{level:3,title:"2.6 扩展",slug:"_2-6-扩展"}],readingTime:{minutes:2.04,words:612},updateTime:"January 13, 2022 20:06",updateTimeStamp:16421044e5,createTime:"January 6, 2022 08:04",createTimeStamp:164145627e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"6.2 Trie 的添加与查询",frontmatter:{title:"6.2 Trie 的添加与查询",icon:"yongyan",category:"Trie",tags:["Trie"],summary:"Trie 的添加操作 基本思想：从上到下，先查询，如果没有就添加。 参考代码： Trie 的查询操作 理解 Trie 的查询只与 待查询的字符串的长度 有关。 下面这个方法查询整个单词在 Trie 中是否存在，所以在路径匹配完成以后，一定不要忘了判断匹配到的那个结点的 isWord 属性，如果它是一个单词的结尾，才返回 True。 参考代码：",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-advance/trie/02.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"6.2 Trie 的添加与查询"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"Trie"}]},regularPath:"/data-structure-advance/trie/02.html",relativePath:"data-structure-advance/trie/02.md",key:"v-3ca1fd12",path:"/data-structure-advance/trie/02/",headers:[{level:2,title:"Trie 的添加操作",slug:"trie-的添加操作"},{level:2,title:"Trie 的查询操作",slug:"trie-的查询操作"}],readingTime:{minutes:.71,words:212},updateTime:"January 14, 2022 01:59",updateTimeStamp:164212559e4,createTime:"December 13, 2021 04:59",createTimeStamp:1639371597e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"6.3 Trie 的前缀查询操作",frontmatter:{title:"6.3 Trie 的前缀查询操作",icon:"yongyan",category:"Trie",tags:["Trie"],summary:"前缀查询是相对简单的，不需要判断 isWord 属性的值，只需要判断从树的根结点是不是很顺利地都能匹配单词的每一个字符。 参考代码： 例题：「力扣」第 208 题",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-advance/trie/03.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"6.3 Trie 的前缀查询操作"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"Trie"}]},regularPath:"/data-structure-advance/trie/03.html",relativePath:"data-structure-advance/trie/03.md",key:"v-3a81caf5",path:"/data-structure-advance/trie/03/",readingTime:{minutes:.45,words:135},updateTime:"January 14, 2022 01:59",updateTimeStamp:164212559e4,createTime:"December 13, 2021 04:59",createTimeStamp:1639371597e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"6.4 简单的模式匹配",frontmatter:{title:"6.4 简单的模式匹配",icon:"yongyan",category:"Trie",tags:["Trie"],summary:"本节内容就一个例题。 例题：「力扣」第 211 题",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-advance/trie/04.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"6.4 简单的模式匹配"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"Trie"}]},regularPath:"/data-structure-advance/trie/04.html",relativePath:"data-structure-advance/trie/04.md",key:"v-d956d71a",path:"/data-structure-advance/trie/04/",readingTime:{minutes:.05,words:16},updateTime:"January 14, 2022 01:59",updateTimeStamp:164212559e4,createTime:"December 13, 2021 04:59",createTimeStamp:1639371597e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"6.5 使用 Trie 实现字符串映射",frontmatter:{title:"6.5 使用 Trie 实现字符串映射",icon:"yongyan",category:"Trie",tags:["Trie"],summary:"例题：「力扣」第 677 题：Map Sum Pairs",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-advance/trie/05.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"6.5 使用 Trie 实现字符串映射"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"Trie"}]},regularPath:"/data-structure-advance/trie/05.html",relativePath:"data-structure-advance/trie/05.md",key:"v-27b1441e",path:"/data-structure-advance/trie/05/",headers:[{level:2,title:"例题：「力扣」第 677 题：Map Sum Pairs",slug:"例题-「力扣」第-677-题-map-sum-pairs"}],readingTime:{minutes:.03,words:10},updateTime:"January 14, 2022 01:59",updateTimeStamp:164212559e4,createTime:"December 13, 2021 04:59",createTimeStamp:1639371597e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"6.6 并查集基础问题",frontmatter:{title:"6.6 并查集基础问题",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"说明：并查集属于高级数据结构，本身很有意思，但是并不是绝大多数公司面试和笔试的考点，如果时间有限，且对算法与数据结构不感兴趣，完全可以跳过。但不排除少数面试官和公司会考这个数据结构。 并查集知识点的【视频讲解】在第 990 题和第 399 题的视频题解里。 基础且常见的问题有： 题号 链接 题解 ---- --------------------------",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-advance/union-find/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"6.6 并查集基础问题"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/data-structure-advance/union-find/intro.html",relativePath:"data-structure-advance/union-find/intro.md",key:"v-04c98825",path:"/data-structure-advance/union-find/intro/",headers:[{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:1.64,words:493},updateTime:"January 14, 2022 01:59",updateTimeStamp:164212559e4,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"第 15 章 二分搜索树",frontmatter:{summary:"第 15 章 二分搜索树",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/binary-search-tree/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 15 章 二分搜索树"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/data-structure-basic/binary-search-tree/",relativePath:"data-structure-basic/binary-search-tree/README.md",key:"v-42463f2a",path:"/data-structure-basic/binary-search-tree/",readingTime:{minutes:.03,words:8},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142638e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"6.7 并查集进阶问题",frontmatter:{title:"6.7 并查集进阶问题",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"「并查集」进阶问题有： 题号 链接 题解 ---- ------------------------------------------------------------------------------------------------------------ ---------------------------------------------",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-advance/union-find/practice.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"6.7 并查集进阶问题"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/data-structure-advance/union-find/practice.html",relativePath:"data-structure-advance/union-find/practice.md",key:"v-384ad102",path:"/data-structure-advance/union-find/practice/",readingTime:{minutes:.55,words:164},updateTime:"January 14, 2022 01:59",updateTimeStamp:164212559e4,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"第 15 章 二叉搜索树",frontmatter:{title:"第 15 章 二叉搜索树",icon:"yongyan",category:"二叉搜索树",tags:["二叉搜索树"],summary:"本章节内容合并到 第 14 章 二叉树。",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/binary-search-tree/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 15 章 二叉搜索树"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉搜索树"}]},regularPath:"/data-structure-basic/binary-search-tree/intro.html",relativePath:"data-structure-basic/binary-search-tree/intro.md",key:"v-4128a0a5",path:"/data-structure-basic/binary-search-tree/intro/",readingTime:{minutes:.06,words:17},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142638e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"4.11 哈希表简介",frontmatter:{title:"4.11 哈希表简介",icon:"yongyan",category:"哈希表",tags:["哈希表"],summary:"哈希表是非常典型的 空间换时间 思想的应用，与哈希表经常一起出现的知识点是 前缀和。",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/hash-table/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"4.11 哈希表简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"哈希表"}]},regularPath:"/data-structure-basic/hash-table/intro.html",relativePath:"data-structure-basic/hash-table/intro.md",key:"v-739759a5",path:"/data-structure-basic/hash-table/intro/",readingTime:{minutes:.12,words:37},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142638e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"第 16 章 哈希表",frontmatter:{summary:"第 16 章 哈希表",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/hash-table/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 16 章 哈希表"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/data-structure-basic/hash-table/",relativePath:"data-structure-basic/hash-table/README.md",key:"v-51e9c23a",path:"/data-structure-basic/hash-table/",headers:[{level:2,title:"第 16 章 哈希表",slug:"第-16-章-哈希表"}],readingTime:{minutes:.02,words:6},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142638e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"4.12 哈希表练习",frontmatter:{title:"4.12 哈希表练习",icon:"yongyan",category:"哈希表",tags:["哈希表"],summary:"题号 链接 题解 ---- --------------------------------------------------------------------------------- ------------------------------------------------------------------------------------",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/hash-table/practice.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"4.12 哈希表练习"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"哈希表"}]},regularPath:"/data-structure-basic/hash-table/practice.html",relativePath:"data-structure-basic/hash-table/practice.md",key:"v-42f76c97",path:"/data-structure-basic/hash-table/practice/",readingTime:{minutes:.66,words:197},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142638e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"第 13 章 优先队列（堆）",frontmatter:{summary:"第 13 章 优先队列（堆）",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/heap/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 13 章 优先队列（堆）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/data-structure-basic/heap/",relativePath:"data-structure-basic/heap/README.md",key:"v-4a339040",path:"/data-structure-basic/heap/",headers:[{level:2,title:"第 13 章 优先队列（堆）",slug:"第-13-章-优先队列-堆"}],readingTime:{minutes:.03,words:8},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142638e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"6.11 区间更新（单点更新）",frontmatter:{title:"6.11 区间更新（单点更新）",icon:"yongyan",category:"线段树",tags:["线段树"],summary:"区间更新（单点更新） 想一想更新的步骤，根据画图分析。从树的根开始更新，先把数据更新了，再更新 tree。set方法 的设计与实现，其实是程式化的，这个过程熟悉了以后写起来，就会比较自然。最后不要忘记 merge 一下，从叶子结点开始，父辈结点，祖辈结点，直到根结点都要更新。 Java 代码： Java 代码： 例题：「力扣」第 307 问题：区域和检索 -",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-advance/segment-tree/04.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"6.11 区间更新（单点更新）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"线段树"}]},regularPath:"/data-structure-advance/segment-tree/04.html",relativePath:"data-structure-advance/segment-tree/04.md",key:"v-6dbae7af",path:"/data-structure-advance/segment-tree/04/",headers:[{level:2,title:"区间更新（单点更新）",slug:"区间更新-单点更新"},{level:2,title:"例题：「力扣」第 307 问题：区域和检索 - 数组可修改",slug:"例题-「力扣」第-307-问题-区域和检索-数组可修改"},{level:3,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:4.95,words:1486},updateTime:"January 13, 2022 20:06",updateTimeStamp:16421044e5,createTime:"December 13, 2021 05:22",createTimeStamp:1639372925e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"4.7 优先队列是什么",frontmatter:{title:"4.7 优先队列是什么",icon:"yongyan",category:"优先队列",tags:["优先队列"],summary:"温馨提示 优先队列精讲 专栏里有更多习题讲解。 了解「堆」作为「优先队列」的实现是有必要的，有助于理解 remove() 、replace() 这些编码的细节，使用堆的时候才会更加有效。 应用：动态 选取当前队列中优先级最高的元素，重点理解「动态」的含义。",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/heap/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"4.7 优先队列是什么"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"优先队列"}]},regularPath:"/data-structure-basic/heap/intro.html",relativePath:"data-structure-basic/heap/intro.md",key:"v-613becc5",path:"/data-structure-basic/heap/intro/",readingTime:{minutes:.32,words:95},updateTime:"January 15, 2022 07:11",updateTimeStamp:16422307e5,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"4.8 优先队列的练习",frontmatter:{title:"4.8 优先队列的练习",icon:"yongyan",category:"优先队列",tags:["优先队列"],summary:"题号 链接 题解 ---- ------------------------------------------------------------------------------------------------------------------ ---------------------------------------------------",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/heap/practice.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"4.8 优先队列的练习"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"优先队列"}]},regularPath:"/data-structure-basic/heap/practice.html",relativePath:"data-structure-basic/heap/practice.md",key:"v-57ec3f51",path:"/data-structure-basic/heap/practice/",readingTime:{minutes:.91,words:273},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142638e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"第 4 节 二分查找万能模板",frontmatter:{title:"第 4 节 二分查找万能模板",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"说明 while (left < right) 表示当 left 与 right 重合的时候停止搜索，这样我们就不用思考返回 left 还是 right；; while 里面只写两个分支，即只有 if 和 else，表示：非此即彼，把其中一种情况考虑好，不满足这种情况的区间就是上一个区间的反面区间。; 这一节只需要大家消化一个知识点：只有分成两个区间，退出循",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/04.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 4 节 二分查找万能模板"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/04.html",relativePath:"binary-search/04.md",key:"v-5254db53",path:"/binary-search/04/",headers:[{level:2,title:"为什么二分查找分三种情况讨论的结果需要合并",slug:"为什么二分查找分三种情况讨论的结果需要合并"}],readingTime:{minutes:1.81,words:543},updateTime:"January 19, 2022 17:48",updateTimeStamp:164261449e4,createTime:"December 11, 2021 03:27",createTimeStamp:1639193248e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:7},{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"第 10 章 链表",frontmatter:{summary:"第 10 章 链表",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/linked-list/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 10 章 链表"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/data-structure-basic/linked-list/",relativePath:"data-structure-basic/linked-list/README.md",key:"v-7253af26",path:"/data-structure-basic/linked-list/",headers:[{level:2,title:"第 10 章 链表",slug:"第-10-章-链表"}],readingTime:{minutes:.02,words:5},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142638e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"4.2 链表的练习",frontmatter:{title:"4.2 链表的练习",icon:"yongyan",category:"链表",tags:["链表"],summary:"题型一：基本的链表指针指向问题 注意：有一些问题需要使用「虚拟头结点」，以避免对链表第一个结点的复杂的分类讨论逻辑。这个思想在数组里我们见过，叫「哨兵」。 使用递归函数，避免复杂的更改指针变量指向操作，使得求解问题变得简单。 题号 链接 题解 ---- -----------------------------------------------------",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/linked-list/practice.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"4.2 链表的练习"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"}]},regularPath:"/data-structure-basic/linked-list/practice.html",relativePath:"data-structure-basic/linked-list/practice.md",key:"v-e34eb3b6",path:"/data-structure-basic/linked-list/practice/",headers:[{level:2,title:"题型一：基本的链表指针指向问题",slug:"题型一-基本的链表指针指向问题"},{level:2,title:"题型二：快慢指针技巧",slug:"题型二-快慢指针技巧"},{level:2,title:"题型三：设计数据结构",slug:"题型三-设计数据结构"}],readingTime:{minutes:3.01,words:903},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142638e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"前缀和",frontmatter:{summary:"前缀和",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/prefix-sum/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"前缀和"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/data-structure-basic/prefix-sum/",relativePath:"data-structure-basic/prefix-sum/README.md",key:"v-57420f38",path:"/data-structure-basic/prefix-sum/",headers:[{level:2,title:"前缀和",slug:"前缀和"}],readingTime:{minutes:.01,words:3},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142638e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"第 18 章 前缀和与哈希表",frontmatter:{summary:"第 18 章 前缀和与哈希表 题号 链接 题解 ---- ----------------------------------------------------------------------------------------------- -------------------------------------------------------",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/prefix-sum/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 18 章 前缀和与哈希表"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/data-structure-basic/prefix-sum/intro.html",relativePath:"data-structure-basic/prefix-sum/intro.md",key:"v-3f73a885",path:"/data-structure-basic/prefix-sum/intro/",headers:[{level:3,title:"第 18 章 前缀和与哈希表",slug:"第-18-章-前缀和与哈希表"}],readingTime:{minutes:.37,words:110},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142638e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"4.1 链表简介",frontmatter:{title:"4.1 链表简介",icon:"yongyan",category:"链表",tags:["链表"],summary:"温馨提示 链表精讲 专栏里有更多习题讲解。 解决链表问题，很实用的技巧是「画图」。其它算法问题的分析和讲解（和面试官讲解）也是这样。 可以为链表编写测试函数，方便调试。建议实现的方法有： 通过数组创建一个单链表；; 根据当前结点打印当前结点以及后面的结点。这两个方法可以非常方便地帮助我们调试关于链表的程序。;",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/linked-list/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"4.1 链表简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"}]},regularPath:"/data-structure-basic/linked-list/intro.html",relativePath:"data-structure-basic/linked-list/intro.md",key:"v-1119beef",path:"/data-structure-basic/linked-list/intro/",readingTime:{minutes:.46,words:138},updateTime:"January 15, 2022 07:11",updateTimeStamp:16422307e5,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"第 12 章 队列",frontmatter:{summary:"第 12 章 队列",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/queue/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 12 章 队列"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/data-structure-basic/queue/",relativePath:"data-structure-basic/queue/README.md",key:"v-a3ce5af4",path:"/data-structure-basic/queue/",headers:[{level:2,title:"第 12 章 队列",slug:"第-12-章-队列"}],readingTime:{minutes:.02,words:5},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142638e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"4.6 队列的问题",frontmatter:{title:"4.6 队列的问题",icon:"yongyan",category:"队列",tags:["队列"],summary:"题型一：基本的使用队列解决的问题 所有的使用广度优先遍历解决的问题，都使用了队列。 题号 题目序号 题解 ---- ---------------------------------------------------------------------------------- ---------------------------------------",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/queue/practice.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"4.6 队列的问题"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"队列"}]},regularPath:"/data-structure-basic/queue/practice.html",relativePath:"data-structure-basic/queue/practice.md",key:"v-2f140f76",path:"/data-structure-basic/queue/practice/",headers:[{level:2,title:"题型一：基本的使用队列解决的问题",slug:"题型一-基本的使用队列解决的问题"},{level:2,title:"题型二：单调队列",slug:"题型二-单调队列"}],readingTime:{minutes:1.09,words:327},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142638e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"4.5 队列简介",frontmatter:{title:"4.5 队列简介",icon:"yongyan",category:"队列",tags:["队列"],summary:"温馨提示 队列精讲 专栏里有更多习题讲解。 单独考查队列的问题不多，通常是在「广度优先遍历」中使用「队列」。",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/queue/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"4.5 队列简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"队列"}]},regularPath:"/data-structure-basic/queue/intro.html",relativePath:"data-structure-basic/queue/intro.md",key:"v-1e0e94f1",path:"/data-structure-basic/queue/intro/",readingTime:{minutes:.16,words:48},updateTime:"January 15, 2022 07:11",updateTimeStamp:16422307e5,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"第 11 章 栈",frontmatter:{summary:"第 11 章 栈",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/stack/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 11 章 栈"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/data-structure-basic/stack/",relativePath:"data-structure-basic/stack/README.md",key:"v-500b9fb4",path:"/data-structure-basic/stack/",headers:[{level:2,title:"第 11 章 栈",slug:"第-11-章-栈"}],readingTime:{minutes:.01,words:4},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142638e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"4.3 栈的简介",frontmatter:{title:"4.3 栈的简介",icon:"yongyan",category:"栈",tags:["栈"],summary:"温馨提示 栈的精讲 专栏里有更多习题讲解。 栈是抽象的概念，栈可以用「数组」或者「链表」实现。 提示 使用「数组」实现的栈，删除和添加元素发生在数组的末尾；; 使用「链表」实现的栈，删除和添加元素发生在数组的开头；;",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/stack/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"4.3 栈的简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"}]},regularPath:"/data-structure-basic/stack/intro.html",relativePath:"data-structure-basic/stack/intro.md",key:"v-1d65a0c3",path:"/data-structure-basic/stack/intro/",readingTime:{minutes:.3,words:90},updateTime:"January 15, 2022 07:11",updateTimeStamp:16422307e5,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"4.4 栈的练习",frontmatter:{title:"4.4 栈的练习",icon:"yongyan",category:"栈",tags:["栈"],summary:"题型一：基本的使用栈解决的问题 下面的问题非常基础，一定需要掌握： 题号 链接 题解 ---- -------------------------------------------------------------------------------------- ---------------------------------------------",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/stack/practice.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"4.4 栈的练习"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"}]},regularPath:"/data-structure-basic/stack/practice.html",relativePath:"data-structure-basic/stack/practice.md",key:"v-5f981865",path:"/data-structure-basic/stack/practice/",headers:[{level:2,title:"题型一：基本的使用栈解决的问题",slug:"题型一-基本的使用栈解决的问题"},{level:3,title:"练习：",slug:"练习"},{level:2,title:"题型二：单调栈",slug:"题型二-单调栈"},{level:3,title:"练习：",slug:"练习-2"}],readingTime:{minutes:2.36,words:709},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142638e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"第 13 章 二叉树",frontmatter:{summary:"第 13 章 二叉树",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/tree/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 13 章 二叉树"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/data-structure-basic/tree/",relativePath:"data-structure-basic/tree/README.md",key:"v-4461025c",path:"/data-structure-basic/tree/",headers:[{level:2,title:"第 13 章 二叉树",slug:"第-13-章-二叉树"}],readingTime:{minutes:.02,words:6},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142638e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"4.9 树的简介",frontmatter:{title:"4.9 树的简介",icon:"yongyan",category:"树",tags:["树"],summary:"在「力扣」上有很多关于「树」的问题。解决这些问题很多时候需要遍历，即： 深度优先遍历；; 广度优先遍历。; 其中，深度优先遍历又分为「前序遍历」「中序遍历」「后序遍历」，很多问题其实都是「后序遍历」。 「力扣」二叉树题单 地址 。;",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/tree/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"4.9 树的简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"树"}]},regularPath:"/data-structure-basic/tree/intro.html",relativePath:"data-structure-basic/tree/intro.md",key:"v-c3e4bbf6",path:"/data-structure-basic/tree/intro/",headers:[{level:2,title:"「力扣」二叉树题单",slug:"「力扣」二叉树题单"}],readingTime:{minutes:.3,words:91},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142638e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"4.10 树的练习",frontmatter:{title:"4.10 树的练习",icon:"yongyan",category:"树",tags:["树"],summary:"提示 通过这一章节的练习，请大家体会「递归」的应用，尤其是「深度优先遍历」的「后序遍历」思想。 题号 题目序号 题解 ---- --------------------------------------------------------------------------------------------------------------------",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure-basic/tree/practice.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"4.10 树的练习"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"树"}]},regularPath:"/data-structure-basic/tree/practice.html",relativePath:"data-structure-basic/tree/practice.md",key:"v-600cd396",path:"/data-structure-basic/tree/practice/",readingTime:{minutes:1.59,words:476},updateTime:"January 14, 2022 06:43",updateTimeStamp:1642142638e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"差分",frontmatter:{summary:"差分",meta:[{property:"og:url",content:"https://suanfa8.com/difference/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"差分"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/difference/",relativePath:"difference/README.md",key:"v-05cf5f74",path:"/difference/",headers:[{level:2,title:"差分",slug:"差分"}],readingTime:{minutes:.01,words:2},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125603e3,createTime:"January 1, 2022 11:46",createTimeStamp:1641037611e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 1109 题：航班预订统计（中等）",frontmatter:{title:"「力扣」第 1109 题：航班预订统计（中等）",icon:"yongyan",category:"差分",tags:["差分"],summary:"题目链接。; 题目描述 这里有 n 个航班，它们分别从 1 到 n 进行编号。 有一份航班预订表 bookings ，表中第 i 条预订记录 bookings[i] = [firsti, lasti, seatsi] 意味着在从 firsti 到 lasti （包含 firsti 和 lasti ）的 每个航班 上预订了 seatsi 个座位。 请你返回一个",meta:[{property:"og:url",content:"https://suanfa8.com/difference/1109-corporate-flight-bookings.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1109 题：航班预订统计（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"差分"}]},regularPath:"/difference/1109-corporate-flight-bookings.html",relativePath:"difference/1109-corporate-flight-bookings.md",key:"v-6213a2c5",path:"/difference/1109-corporate-flight-bookings/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"差分知识点",slug:"差分知识点"}],readingTime:{minutes:2.39,words:716},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941866e3,createTime:"January 1, 2022 11:46",createTimeStamp:1641037611e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"第 1 节 什么是动态规划",frontmatter:{title:"第 1 节 什么是动态规划",icon:"shoucang",category:"动态规划",tags:["动态规划"],summary:"动态规划可以写的内容有很多，在这里先写出最关键的思想的部分，其它的知识点大家可以在做题的过程中慢慢思考和总结。 什么是动态规划 在计算机的世界里，有很多名词让初学者感到非常困惑。例如「套接字」「句柄」「锚点」「回溯算法」、Word 软件里的「宏」。还有一个东西叫「鲁棒性」。这是神马玩意儿啊？ 我们回到「动态规划」。维基百科「动态规划」词条给出的定义如下： 动",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/01.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 1 节 什么是动态规划"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/01.html",relativePath:"dynamic-programming/01.md",key:"v-5c83ab87",path:"/dynamic-programming/01/",headers:[{level:2,title:"什么是动态规划",slug:"什么是动态规划"},{level:2,title:"表格法",slug:"表格法"}],readingTime:{minutes:1.47,words:442},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"December 12, 2021 19:28",createTimeStamp:1639337335e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"第 2 节 动态规划用于解决怎样的问题",frontmatter:{title:"第 2 节 动态规划用于解决怎样的问题",icon:"shoucang",category:"动态规划",tags:["动态规划"],summary:"解决有大量重复子问题的特定问题 我们学习的很多算法与数据结构，都是用于解决特定的问题。动态规划也不例外。 那么，动态规划用于解决怎样的问题呢。动态规划解决的子问题有一个非常明显的特点：有大量重复子问题。大家可以做一做动态规划的入门问题：斐波拉契数列（「力扣」第 509 题）。 空间换时间 把重复求解的子问题的结果记录下来，这是很自然且普遍的做法，用空间换时间",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/02.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 2 节 动态规划用于解决怎样的问题"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/02.html",relativePath:"dynamic-programming/02.md",key:"v-332e77f6",path:"/dynamic-programming/02/",headers:[{level:2,title:"解决有大量重复子问题的特定问题",slug:"解决有大量重复子问题的特定问题"},{level:2,title:"通常只问「最优值」而不问「最优解是什么」",slug:"通常只问「最优值」而不问「最优解是什么」"}],readingTime:{minutes:1.71,words:512},updateTime:"December 14, 2021 18:03",updateTimeStamp:1639504985e3,createTime:"December 12, 2021 19:28",createTimeStamp:1639337335e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"第 3 节 「动态规划」的算法设计思想",frontmatter:{title:"第 3 节 「动态规划」的算法设计思想",icon:"shoucang",category:"动态规划",tags:["动态规划"],summary:"空间换时间 由于求解的过程会遇到大量重复的子问题，我们需要记录下来，这是「空间换时间」的思想。 穷举（枚举、遍历） 由于需要解决一个问题的 所有 子问题，这是「穷举」的思想。大家可以百度或者谷歌一下，穷举法看起来「笨笨的」，但是它确实很有用。 「维基百科」上说：数字计算机的普及大大提升了穷举法的易用性。我是这么理解的，人类不擅长的就是干简单重复的事情，但是计",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/03.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 3 节 「动态规划」的算法设计思想"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/03.html",relativePath:"dynamic-programming/03.md",key:"v-704ddc83",path:"/dynamic-programming/03/",headers:[{level:2,title:"空间换时间",slug:"空间换时间"},{level:2,title:"穷举（枚举、遍历）",slug:"穷举-枚举、遍历"}],readingTime:{minutes:1.34,words:403},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"December 12, 2021 19:28",createTimeStamp:1639337335e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"第 4 节 自顶向下与自底向上",frontmatter:{title:"第 4 节 自顶向下与自底向上",icon:"shoucang",category:"动态规划",tags:["动态规划"],summary:"如果我们能够把「自顶向下」和「自底向上」理解清楚了，能更好地理解递归。 「递推」是从「问题边界」开始的正向推导，「递归」是从原问题开始到「问题边界」的反向推导。 求解一个问题有两个不同的方向：自顶向下与自底向上。 自顶向下：记忆化递归 自顶向下：我们在解决问题的时候 对原问题进行拆分。 拆分成不同规模的子问题，再对每一个子问题进行拆分。直到它们不能够再拆分为",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/04.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 4 节 自顶向下与自底向上"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/04.html",relativePath:"dynamic-programming/04.md",key:"v-0b9a15fe",path:"/dynamic-programming/04/",headers:[{level:2,title:"自顶向下：记忆化递归",slug:"自顶向下-记忆化递归"},{level:2,title:"自底向上：递推",slug:"自底向上-递推"}],readingTime:{minutes:1.35,words:405},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"December 12, 2021 19:28",createTimeStamp:1639337335e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"第 5 节 状态与状态转移方程",frontmatter:{title:"第 5 节 状态与状态转移方程",icon:"shoucang",category:"动态规划",tags:["动态规划"],summary:"定义状态：定义子问题 我们在拆分子问题的时候，会想到一个问题：如何描述子问题。而描述子问题这件事情就叫做 定义状态。 PS：我也不知道为什么定义子问题要叫成定义状态，真的初学的时候很难懂（哭泣）。 状态的定义一定要非常精准，例如： dp[i] 表示 [0..i] 里所有元素的和；; dp[i] 表示 [0..i) 里所有元素的和。; 这两件事情是完全不一样的",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/05.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 5 节 状态与状态转移方程"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/05.html",relativePath:"dynamic-programming/05.md",key:"v-f7cfe502",path:"/dynamic-programming/05/",headers:[{level:2,title:"定义状态：定义子问题",slug:"定义状态-定义子问题"},{level:2,title:"推导状态转移方程：描述不同规模子问题之间的关系",slug:"推导状态转移方程-描述不同规模子问题之间的关系"}],readingTime:{minutes:1.26,words:378},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"December 12, 2021 19:28",createTimeStamp:1639337335e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"第 7 节 阶段、状态、选择",frontmatter:{title:"第 7 节 阶段、状态、选择",icon:"shoucang",category:"动态规划",tags:["动态规划"],summary:"上一节说到：求解问题的过程构成了一张有向无环图。「阶段」「状态」「选择」这三个概念可以帮助我们写出代码，理清代码的逻辑。 以后如果我们会讲解具体的动态规划问题，会在代码中强调这 3 个部分。暂时不太理解它们也完全没有关系，这些概念也不是完全割裂开来的。 阶段 阶段描述了当前问题求解到了什么样的规模。 状态 状态具体描述了子问题是什么。 选择 根据较小规模的子",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/07.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 7 节 阶段、状态、选择"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/07.html",relativePath:"dynamic-programming/07.md",key:"v-d03b830a",path:"/dynamic-programming/07/",headers:[{level:2,title:"阶段",slug:"阶段"},{level:2,title:"状态",slug:"状态"},{level:2,title:"选择",slug:"选择"}],readingTime:{minutes:.58,words:173},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"December 12, 2021 19:28",createTimeStamp:1639337335e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"第 6 节 最优子结构、重复子问题、无后效性",frontmatter:{title:"第 6 节 最优子结构、重复子问题、无后效性",icon:"shoucang",category:"动态规划",tags:["动态规划"],summary:"最优子结构 即，较小规模的子问题的可以构成较大规模的子问题。这部分和「状态转移方程」一样去理解就好。 重复子问题 由于有很多重复子问题，所以子问题的结果需要记录下来。 无后效性（无比重要） 学习「动态规划」，一定须要深刻理解「无后效性」。「无后效性」这个概念超级超级重要。 很遗憾，在《算法导论》里都没有找到关于「无后效性」的解释。在李煜东的《算法竞赛进阶指南",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/06.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 6 节 最优子结构、重复子问题、无后效性"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/06.html",relativePath:"dynamic-programming/06.md",key:"v-0dfd25fd",path:"/dynamic-programming/06/",headers:[{level:2,title:"最优子结构",slug:"最优子结构"},{level:2,title:"重复子问题",slug:"重复子问题"},{level:2,title:"无后效性（无比重要）",slug:"无后效性-无比重要"}],readingTime:{minutes:1.4,words:420},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"December 12, 2021 19:28",createTimeStamp:1639337335e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"第 8 节 超级重要的动态规划问题",frontmatter:{title:"第 8 节 超级重要的动态规划问题",icon:"shoucang",category:"动态规划",tags:["动态规划"],summary:"「力扣」第 509 题：斐波拉契数列、第 70 题：爬楼梯 这两道问题是动态规划的入门问题。爬楼梯子问题之间的关系和斐波拉契数列是一模一样的。大家可以用「记忆化递归」和「递推」的方式都写一下，后面给出的问题可以只用「递推」实现。 描述清楚状态最重要，其它信息可以在在代码当中得到体现。 「力扣」第 198 题：打家劫舍 这是一道很经典的动态规划问题。定义子问题",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/08.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 8 节 超级重要的动态规划问题"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/08.html",relativePath:"dynamic-programming/08.md",key:"v-21c756f9",path:"/dynamic-programming/08/",headers:[{level:2,title:"「力扣」第 509 题：斐波拉契数列、第 70 题：爬楼梯",slug:"「力扣」第-509-题-斐波拉契数列、第-70-题-爬楼梯"},{level:2,title:"「力扣」第 198 题：打家劫舍",slug:"「力扣」第-198-题-打家劫舍"},{level:2,title:"「力扣」第 300 题：最长上升子序列（无比重要的一道问题）",slug:"「力扣」第-300-题-最长上升子序列-无比重要的一道问题"},{level:2,title:"「力扣」第 53 题：最大子段和",slug:"「力扣」第-53-题-最大子段和"},{level:2,title:"「力扣」第 5 题：最长回文子串",slug:"「力扣」第-5-题-最长回文子串"},{level:2,title:"其它问题",slug:"其它问题"}],readingTime:{minutes:2.66,words:798},updateTime:"December 12, 2021 19:28",updateTimeStamp:1639337335e3,createTime:"December 12, 2021 19:28",createTimeStamp:1639337335e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"第 9 节 总结",frontmatter:{title:"第 9 节 总结",icon:"shoucang",category:"动态规划",tags:["动态规划"],summary:"动态规划在「力扣」上虽然只有一个标签，但是它其实是有多个标签的，大家在学习的过程中需要掌握不同类型的动态规划问题，当然不需要全部掌握，优先掌握面试中考察的动态规划问题；; 初学的时候，可以先掌握「自顶向下」的「记忆化递归」，再慢慢熟悉「自底向上」的「递推」写法；; 如果在题解区或者讨论区看到一些代码用的变量很少，这样的代码是空间优化的写法，不是很好理解，我们",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/09.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 9 节 总结"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/09.html",relativePath:"dynamic-programming/09.md",key:"v-a8a72112",path:"/dynamic-programming/09/",readingTime:{minutes:1.42,words:425},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"December 12, 2021 19:28",createTimeStamp:1639337335e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{frontmatter:{summary:"动态规划的问题有很多，不可能全部做完，挑自己觉得重要的问题做。一定要有思考和总结，不能记住答案，还需要多复习。",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/dynamic-programming/",relativePath:"dynamic-programming/README.md",key:"v-c954eb04",path:"/dynamic-programming/",readingTime:{minutes:.16,words:49},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"December 11, 2021 03:27",createTimeStamp:1639193248e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 5 题：最长回文子串（中等）",frontmatter:{title:"「力扣」第 5 题：最长回文子串（中等）",icon:"shipin",category:"动态规划",tags:["动态规划","区间 DP"],summary:"通过这道题体会「动态规划」问题「自底向上」「填表」的思路和一些细节。 题目链接：5. 最长回文子串；; 题解链接：动态规划、中心扩散、Manacher 算法。; 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 给你一个字符串 s，找到 ",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0005-longest-palindromic-substring.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 5 题：最长回文子串（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"},{property:"article:tag",content:"区间 DP"}]},regularPath:"/dynamic-programming/solutions/0005-longest-palindromic-substring.html",relativePath:"dynamic-programming/solutions/0005-longest-palindromic-substring.md",key:"v-d87bc53e",path:"/dynamic-programming/solutions/0005-longest-palindromic-substring/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:4.05,words:1214},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"December 18, 2021 03:28",createTimeStamp:1639798095e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 10 题：正则表达式（困难）",frontmatter:{title:"「力扣」第 10 题：正则表达式（困难）",icon:"yongyan",category:"动态规划",tags:["动态规划","递归"],summary:"题目描述 给你一个字符串 s 和一个字符规律 p，请你来实现一个支持 '.' 和 '*' 的正则表达式匹配。 '.' 匹配任意单个字符; '*' 匹配零个或多个前面的那一个元素; 所谓匹配，是要涵盖 整个 字符串 s的，而不是部分字符串。 示例 1： 示例 2: 示例 3： 示例 4： 示例 5： 提示： 1 <= s.length <= 20; 1 <= ",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0010-regular-expression-matching.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 10 题：正则表达式（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"},{property:"article:tag",content:"递归"}]},regularPath:"/dynamic-programming/solutions/0010-regular-expression-matching.html",relativePath:"dynamic-programming/solutions/0010-regular-expression-matching.md",key:"v-12e9780e",path:"/dynamic-programming/solutions/0010-regular-expression-matching/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"方法一：递归",slug:"方法一-递归"},{level:3,title:"方法二：动态规划",slug:"方法二-动态规划"}],readingTime:{minutes:3.5,words:1049},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{frontmatter:{summary:"视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0046.html"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/dynamic-programming/solutions/0046.html",relativePath:"dynamic-programming/solutions/0046.md",key:"v-1a80215b",path:"/dynamic-programming/solutions/0046/",readingTime:{minutes:.41,words:124},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 14, 2022 06:33",createTimeStamp:1642141992e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 62 题：不同路径（中等）",frontmatter:{title:"「力扣」第 62 题：不同路径（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"二维动态规划的基础问题，可以当做例题来学习。 重点理解「无后效性」的两层含义： 1. 即后面的状态参考了前面的结果，而不管前面的状态是怎么来的； 2. 后面阶段的选择不会影响到前面阶段的选择。 题目链接：62. 不同路径。; 题目描述 一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为“Start” ）。 机器人每次只能向下或者向右移动一步",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0062-unique-paths.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 62 题：不同路径（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0062-unique-paths.html",relativePath:"dynamic-programming/solutions/0062-unique-paths.md",key:"v-67b200b6",path:"/dynamic-programming/solutions/0062-unique-paths/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：动态规划",slug:"方法一-动态规划"},{level:2,title:"方法二：数学方法（用组合数公式）",slug:"方法二-数学方法-用组合数公式"},{level:2,title:"方法三：记忆化递归",slug:"方法三-记忆化递归"}],readingTime:{minutes:5.42,words:1627},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"December 18, 2021 03:28",createTimeStamp:1639798095e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 53 题：最大子序和（中等）",frontmatter:{title:"「力扣」第 53 题：最大子序和（中等）",icon:"shipin",category:"动态规划",tags:["动态规划","分治算法"],summary:"提示 这是一道很经典的「动态规划」问题，一定要掌握：设置合适的子问题（状态定义），便于发现不同规模问题之间的联系（状态转移方程），这些子问题的解求得问题需要的答案。 动态规划告诉我们可以不用直接去解决题目，而是去发现这个问题最开始的样子，通过「状态」转移；，每一步参考了之前计算的结果，得到最终的答案。 题目链接：53. 最大子序和；; 题解链接：经典动态规划",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0053-maximum-subarray.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 53 题：最大子序和（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"},{property:"article:tag",content:"分治算法"}]},regularPath:"/dynamic-programming/solutions/0053-maximum-subarray.html",relativePath:"dynamic-programming/solutions/0053-maximum-subarray.md",key:"v-5defb7e5",path:"/dynamic-programming/solutions/0053-maximum-subarray/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：动态规划",slug:"方法一-动态规划"},{level:3,title:"关键 1：理解题意",slug:"关键-1-理解题意"},{level:3,title:"关键 2：如何定义子问题（如何定义状态）",slug:"关键-2-如何定义子问题-如何定义状态"},{level:3,title:"一、定义状态（定义子问题）",slug:"一、定义状态-定义子问题"},{level:3,title:"二、状态转移方程（描述子问题之间的联系）",slug:"二、状态转移方程-描述子问题之间的联系"},{level:3,title:"三、思考初始值",slug:"三、思考初始值"},{level:3,title:"四、思考输出",slug:"四、思考输出"},{level:3,title:"五、可以优化空间吗",slug:"五、可以优化空间吗"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:16,words:4799},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 63 题：不同路径 II（中等）",frontmatter:{title:"「力扣」第 63 题：不同路径 II（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"这题是动态规划的经典问题：理解「无后效性」： 1. 表格复用：具体讲解一下，奇数行和偶数行交替使用； 2. 哨兵技巧，回避边界条件的讨论； 3. 数学方法； 4. 只能向下和只能向右，说明符合动态规划的无后效性。 题目链接：63. 不同路径 II。; 题目描述 一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为“Start” ）。 机器人每",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0063-unique-paths-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 63 题：不同路径 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0063-unique-paths-ii.html",relativePath:"dynamic-programming/solutions/0063-unique-paths-ii.md",key:"v-465d6cc9",path:"/dynamic-programming/solutions/0063-unique-paths-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：动态规划",slug:"方法一-动态规划"},{level:2,title:"方法二：记忆化递归",slug:"方法二-记忆化递归"}],readingTime:{minutes:2.83,words:848},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"December 18, 2021 03:28",createTimeStamp:1639798095e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 64 题：最小路径和（中等）",frontmatter:{title:"「力扣」第 64 题：最小路径和（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"很简单的「动态规划」问题，熟悉「自底向上」求解问题的思路。 题目链接：64. 最小路径和。; 题目描述 给定一个包含非负整数的 m x n 网格 grid ，请找出一条从左上角到右下角的路径，使得路径上的数字总和为最小。 说明：每次只能向下或者向右移动一步。 示例 1： 示例 2： 提示： m == grid.length; n == grid[i].len",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0064-minimum-path-sum.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 64 题：最小路径和（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0064-minimum-path-sum.html",relativePath:"dynamic-programming/solutions/0064-minimum-path-sum.md",key:"v-1f4cdb65",path:"/dynamic-programming/solutions/0064-minimum-path-sum/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法：动态规划",slug:"方法-动态规划"}],readingTime:{minutes:2.35,words:705},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"December 18, 2021 03:28",createTimeStamp:1639798095e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 70 题：爬楼梯（简单）",frontmatter:{title:"「力扣」第 70 题：爬楼梯（简单）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"斐波拉契数列，画出树形结构，发现大量重叠子问题。「动态规划」告诉我们「自顶向上」求解问题的思路。 题目链接：70. 爬楼梯。; 题目描述 假设你正在爬楼梯。需要 n 阶你才能到达楼顶。 每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？ 注意：给定 n 是一个正整数。 示例 1： 示例 2： Constraints（约束）: 1 <= n",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0070-climbing-stairs.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 70 题：爬楼梯（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0070-climbing-stairs.html",relativePath:"dynamic-programming/solutions/0070-climbing-stairs.md",key:"v-3be3c79a",path:"/dynamic-programming/solutions/0070-climbing-stairs/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：记忆化递归",slug:"方法一-记忆化递归"},{level:2,title:"方法二：动态规划",slug:"方法二-动态规划"}],readingTime:{minutes:2.65,words:795},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 72 题：编辑距离（困难）",frontmatter:{title:"「力扣」第 72 题：编辑距离（困难）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：72. 编辑距离；; 题解链接：动态规划（Java，最后有同类问题列表）。; 题目描述 给你两个单词 word1 和 word2，请你计算出将 word1 转换成 word2 所使用的最少操作数 。 你可以对一个单词进行如下三种操作： 1. 插入一个字符 2. 删除一个字符 3. 替换一个字符 示例 1： 示例 2： 提示： 0 <= word1.",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0072-edit-distance.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 72 题：编辑距离（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0072-edit-distance.html",relativePath:"dynamic-programming/solutions/0072-edit-distance.md",key:"v-731f18d3",path:"/dynamic-programming/solutions/0072-edit-distance/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"第 1 步：定义状态",slug:"第-1-步-定义状态"},{level:3,title:"第 2 步：推导状态转移方程",slug:"第-2-步-推导状态转移方程"},{level:3,title:"第 3 步：考虑初始化",slug:"第-3-步-考虑初始化"},{level:3,title:"第 4 步：考虑输出",slug:"第-4-步-考虑输出"},{level:3,title:"第 5 步：思考空间优化",slug:"第-5-步-思考空间优化"},{level:2,title:"同类问题",slug:"同类问题"}],readingTime:{minutes:6.3,words:1890},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 91 题：解码方法（中等）",frontmatter:{title:"「力扣」第 91 题：解码方法（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划","字符串"],summary:'" 1、画图；2、分类（用加法）、分步（用乘法）" 题目链接：91. 解码方法；; 题解链接：动态规划（Java、Python）。; 题目描述 一条包含字母 A-Z 的消息通过以下映射进行了 编码 ： 要 解码 已编码的消息，所有数字必须基于上述映射的方法，反向映射回字母（可能有多种方法）。例如，"11106" 可以映射为： 示例 1： 示例 2： --- ',meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0091-decode-ways.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 91 题：解码方法（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"},{property:"article:tag",content:"字符串"}]},regularPath:"/dynamic-programming/solutions/0091-decode-ways.html",relativePath:"dynamic-programming/solutions/0091-decode-ways.md",key:"v-3ae678fa",path:"/dynamic-programming/solutions/0091-decode-ways/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"方法一：动态规划",slug:"方法一-动态规划"},{level:3,title:"方法二：基于方法一修改状态定义",slug:"方法二-基于方法一修改状态定义"}],readingTime:{minutes:5.22,words:1565},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"December 18, 2021 03:28",createTimeStamp:1639798095e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 96 题：不同的二叉搜索树（中等）",frontmatter:{title:"「力扣」第 96 题：不同的二叉搜索树（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：96. 不同的二叉搜索树。; 题目描述 给你一个整数 n ，求恰由 n 个节点组成且节点值从 1 到 n 互不相同的 二叉搜索树 有多少种？返回满足题意的二叉搜索树的种数。 示例 1： 示例 2： 提示： 1 <= n <= 19; 方法一：动态规划 这里 j 表示左子树的元素个数，最小是 0 ，最大是 i - 1。 注意：这里 $0$ 个结点构成",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0096-unique-binary-search-trees.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 96 题：不同的二叉搜索树（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0096-unique-binary-search-trees.html",relativePath:"dynamic-programming/solutions/0096-unique-binary-search-trees.md",key:"v-1bc59805",path:"/dynamic-programming/solutions/0096-unique-binary-search-trees/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：动态规划",slug:"方法一-动态规划"},{level:2,title:"方法二：动态规划的优化",slug:"方法二-动态规划的优化"}],readingTime:{minutes:1.72,words:516},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 120 题： 三角形最小路径和（中等）",frontmatter:{title:"「力扣」第 120 题： 三角形最小路径和（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"掌握如何定义「状态」和写出「状态转移方程」。 题目链接：120. 三角形最小路径和。; 题目描述 给定一个三角形 triangle ，找出自顶向下的最小路径和。 每一步只能移动到下一行中相邻的结点上。相邻的结点 在这里指的是 下标 与 上一层结点下标 相同或者等于 上一层结点下标 + 1 的两个结点。也就是说，如果正位于当前行的下标 i ，那么下一步可以移动",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0120-triangle.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 120 题： 三角形最小路径和（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0120-triangle.html",relativePath:"dynamic-programming/solutions/0120-triangle.md",key:"v-78e5c005",path:"/dynamic-programming/solutions/0120-triangle/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"「力扣」第 120 题： 三角形最小路径和（中等）",slug:"「力扣」第-120-题-三角形最小路径和-中等"}],readingTime:{minutes:4.1,words:1231},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"December 18, 2021 03:28",createTimeStamp:1639798095e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 122 题：买卖股票的最佳时机 II（简单）",frontmatter:{title:"「力扣」第 122 题：买卖股票的最佳时机 II（简单）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：122. 买卖股票的最佳时机 II；; 题解链接：暴力搜索、贪心算法、动态规划（Java）。; 题目描述 给定一个数组 prices ，其中 prices[i] 是一支给定股票第 i 天的价格。 设计一个算法来计算你所能获取的最大利润。你可以尽可能地完成更多的交易（多次买卖一支股票）。 注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0122-best-time-to-buy-and-sell-stock-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 122 题：买卖股票的最佳时机 II（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0122-best-time-to-buy-and-sell-stock-ii.html",relativePath:"dynamic-programming/solutions/0122-best-time-to-buy-and-sell-stock-ii.md",key:"v-34646645",path:"/dynamic-programming/solutions/0122-best-time-to-buy-and-sell-stock-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：暴力搜索（超时）",slug:"方法一-暴力搜索-超时"},{level:2,title:"方法二：动态规划（通用）",slug:"方法二-动态规划-通用"},{level:3,title:"第 1 步：定义状态",slug:"第-1-步-定义状态"},{level:3,title:"第 2 步：思考状态转移方程",slug:"第-2-步-思考状态转移方程"},{level:3,title:"第 3 步：确定初始值",slug:"第-3-步-确定初始值"},{level:3,title:"第 4 步：确定输出值",slug:"第-4-步-确定输出值"},{level:3,title:"第 5 步：考虑优化空间",slug:"第-5-步-考虑优化空间"},{level:2,title:"方法三：贪心算法（针对这道问题的特殊解法）",slug:"方法三-贪心算法-针对这道问题的特殊解法"}],readingTime:{minutes:10.27,words:3082},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 121 题：买卖股票的最佳时机（简单）",frontmatter:{title:"「力扣」第 121 题：买卖股票的最佳时机（简单）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：121. 买卖股票的最佳时机；; 题解链接：暴力解法、动态规划（Java）。; 题目描述 给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。 你只能选择 某一天 买入这只股票，并选择在 未来的某一个不同的日子 卖出该股票。设计一个算法来计算你所能获取的最大利润。 返回你可以从这笔交易中获取的最大",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0121-best-time-to-buy-and-sell-stock.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 121 题：买卖股票的最佳时机（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0121-best-time-to-buy-and-sell-stock.html",relativePath:"dynamic-programming/solutions/0121-best-time-to-buy-and-sell-stock.md",key:"v-7d82fb5a",path:"/dynamic-programming/solutions/0121-best-time-to-buy-and-sell-stock/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"方法一：暴力解法",slug:"方法一-暴力解法"},{level:3,title:"方法二：动态规划",slug:"方法二-动态规划"},{level:2,title:"无后效性的解释",slug:"无后效性的解释"}],readingTime:{minutes:8.44,words:2533},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 123 题：买卖股票的最佳时机 III（困难）",frontmatter:{title:"「力扣」第 123 题：买卖股票的最佳时机 III（困难）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：123. 买卖股票的最佳时机 III；; 题解链接：动态规划（Java）。; 题目描述 给定一个数组，它的第 i 个元素是一支给定的股票在第 i 天的价格。 设计一个算法来计算你所能获取的最大利润。你最多可以完成 两笔 交易。 注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。 示例 1: 示例 2： 示例 3： 示例 4： 提示",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0123-best-time-to-buy-and-sell-stock-iii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 123 题：买卖股票的最佳时机 III（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0123-best-time-to-buy-and-sell-stock-iii.html",relativePath:"dynamic-programming/solutions/0123-best-time-to-buy-and-sell-stock-iii.md",key:"v-39634e52",path:"/dynamic-programming/solutions/0123-best-time-to-buy-and-sell-stock-iii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"方法一：动态规划",slug:"方法一-动态规划"}],readingTime:{minutes:7.36,words:2208},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 124 题：二叉树中的最大路径和（困难）",frontmatter:{title:"「力扣」第 124 题：二叉树中的最大路径和（困难）",icon:"yongyan",category:"动态规划",tags:["动态规划","树形 DP"],summary:"题目链接：124. 二叉树中的最大路径和。; 题目描述 路径 被定义为一条从树中任意节点出发，沿父节点-子节点连接，达到任意节点的序列。同一个节点在一条路径序列中 至多出现一次 。该路径 至少包含一个 节点，且不一定经过根节点。 路径和 是路径中各节点值的总和。 给你一个二叉树的根节点 root ，返回其 最大路径和 。 示例 1： 示例 2： 提示： 树中",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0124-binary-tree-maximum-path-sum.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 124 题：二叉树中的最大路径和（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"},{property:"article:tag",content:"树形 DP"}]},regularPath:"/dynamic-programming/solutions/0124-binary-tree-maximum-path-sum.html",relativePath:"dynamic-programming/solutions/0124-binary-tree-maximum-path-sum.md",key:"v-1aeb0de5",path:"/dynamic-programming/solutions/0124-binary-tree-maximum-path-sum/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"明确什么是「路径」（非常重要）",slug:"明确什么是「路径」-非常重要"},{level:3,title:"无后效性",slug:"无后效性"},{level:2,title:"状态定义",slug:"状态定义"},{level:2,title:"为什么是「后序遍历」",slug:"为什么是「后序遍历」"},{level:2,title:"题目问的结果在求解子问题的过程中得到",slug:"题目问的结果在求解子问题的过程中得到"},{level:2,title:"总结",slug:"总结"},{level:2,title:"同类问题",slug:"同类问题"}],readingTime:{minutes:6.72,words:2016},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 139 题：单词拆分（中等）",frontmatter:{title:"「力扣」第 139 题：单词拆分（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：139. 单词拆分；; 题解链接：动态规划（Java）。; 题目描述 给你一个字符串 s 和一个字符串列表 wordDict 作为字典。请你判断是否可以利用字典中出现的单词拼接出 s 。 注意：不要求字典中出现的单词全部都使用，并且字典中的单词可以重复使用。 示例 1： 示例 2： 示例 3： 提示： 1 <= s.length <= 300; 1",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0139-word-break.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 139 题：单词拆分（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0139-word-break.html",relativePath:"dynamic-programming/solutions/0139-word-break.md",key:"v-01463076",path:"/dynamic-programming/solutions/0139-word-break/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"分析最优子结构",slug:"分析最优子结构"},{level:2,title:"方法一：动态规划",slug:"方法一-动态规划"},{level:2,title:"方法二：动态规划（与方法一只是状态定义与初始化不一样）",slug:"方法二-动态规划-与方法一只是状态定义与初始化不一样"}],readingTime:{minutes:4.58,words:1374},updateTime:"January 9, 2022 18:24",updateTimeStamp:1641752675e3,createTime:"December 18, 2021 03:28",createTimeStamp:1639798095e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 152 题：乘积最大子序列（中等）",frontmatter:{title:"「力扣」第 152 题：乘积最大子序列（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：152. 乘积最大子数组；; 题解链接：二维动态规划。; 题目描述 给你一个整数数组 nums ，请你找出数组中乘积最大的连续子数组（该子数组中至少包含一个数字），并返回该子数组所对应的乘积。 示例 1： 示例 2： Constraints: 1 <= nums.length <= 2 * 104; -10 <= nums[i] <= 10; Th",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0152-maximum-product-subarray.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 152 题：乘积最大子序列（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0152-maximum-product-subarray.html",relativePath:"dynamic-programming/solutions/0152-maximum-product-subarray.md",key:"v-41f86cb6",path:"/dynamic-programming/solutions/0152-maximum-product-subarray/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:4.22,words:1265},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 188 题：买卖股票的最佳时机 IV（困难）",frontmatter:{title:"「力扣」第 188 题：买卖股票的最佳时机 IV（困难）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：188. 买卖股票的最佳时机 IV；; 题解链接：动态规划（「力扣」更新过用例，只有优化空间的版本可以 AC）。; 题目描述 给定一个整数数组 prices ，它的第 i 个元素 prices[i] 是一支给定的股票在第 i 天的价格。 设计一个算法来计算你所能获取的最大利润。你最多可以完成 k 笔交易。 注意：你不能同时参与多笔交易（你必须在再次",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0188-best-time-to-buy-and-sell-stock-iv.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 188 题：买卖股票的最佳时机 IV（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0188-best-time-to-buy-and-sell-stock-iv.html",relativePath:"dynamic-programming/solutions/0188-best-time-to-buy-and-sell-stock-iv.md",key:"v-42ac88b6",path:"/dynamic-programming/solutions/0188-best-time-to-buy-and-sell-stock-iv/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：动态规划（最原始版本，超出内存限制）",slug:"方法一-动态规划-最原始版本-超出内存限制"},{level:2,title:"方法二：动态规划（优化空间，可以通过）",slug:"方法二-动态规划-优化空间-可以通过"}],readingTime:{minutes:5.66,words:1698},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 198 题：打家劫舍（简单）",frontmatter:{title:"「力扣」第 198 题：打家劫舍（简单）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"熟悉定义状态和状态转移，掌握「动态规划」的「自底向上」，递推去求解问题的方法。不是直接针对问题求解，而是把小规模的问题都解决了，再解决大问题。 题目链接：198. 打家劫舍；; 题解链接：回溯算法 + 剪枝（回溯经典例题详解）。; 题目描述 你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相连通的防",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0198-house-robber.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 198 题：打家劫舍（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0198-house-robber.html",relativePath:"dynamic-programming/solutions/0198-house-robber.md",key:"v-7bae3d45",path:"/dynamic-programming/solutions/0198-house-robber/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法：动态规划（掌握「自底向上」思考问题的过程）",slug:"方法-动态规划-掌握「自底向上」思考问题的过程"}],readingTime:{minutes:3.8,words:1140},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"December 18, 2021 03:28",createTimeStamp:1639798095e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 221 题：最大正方形（中等）",frontmatter:{title:"「力扣」第 221 题：最大正方形（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：221. 最大正方形。; 题目描述 在一个由 '0' 和 '1' 组成的二维矩阵内，找到只包含 '1' 的最大正方形，并返回其面积。 示例 1： 示例 2： 示例 3： 提示： m == matrix.length; n == matrix[i].length; 1 <= m, n <= 300; matrix[i][j] 为 '0' 或 '1';",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0221-maximal-square.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 221 题：最大正方形（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0221-maximal-square.html",relativePath:"dynamic-programming/solutions/0221-maximal-square.md",key:"v-29d015a5",path:"/dynamic-programming/solutions/0221-maximal-square/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.24,words:673},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"December 18, 2021 03:28",createTimeStamp:1639798095e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 233 题：数字 1 的个数（困难）",frontmatter:{title:"「力扣」第 233 题：数字 1 的个数（困难）",icon:"yongyan",category:"动态规划",tags:["动态规划","数位 DP"],summary:"题目链接：233. 数字 1 的个数；; 题解链接：数位 DP（Java）。; 题目描述 给定一个整数 n，计算所有小于等于 n 的非负整数中数字 1 出现的个数。 示例 1： 示例 2： 提示： $0 \\le n \\le 10^9$; 阅读提示 目前（2021 年 8 月）绝大多数面试、笔试都不会要求做出这个解法；; 由于编写题解时间、精力有限，编写的过程",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0233-number-of-digit-one.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 233 题：数字 1 的个数（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"},{property:"article:tag",content:"数位 DP"}]},regularPath:"/dynamic-programming/solutions/0233-number-of-digit-one.html",relativePath:"dynamic-programming/solutions/0233-number-of-digit-one.md",key:"v-c2e1f8e6",path:"/dynamic-programming/solutions/0233-number-of-digit-one/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"阅读提示",slug:"阅读提示"},{level:2,title:"定义状态 1（与结果间接相关）",slug:"定义状态-1-与结果间接相关"},{level:2,title:"定义状态 2（与结果直接相关）",slug:"定义状态-2-与结果直接相关"}],readingTime:{minutes:7.67,words:2300},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 238 题：除自身以外数组的乘积（中等）",frontmatter:{title:"「力扣」第 238 题：除自身以外数组的乘积（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目地址：238. 除自身以外数组的乘积。; 题目描述 给你一个长度为 n 的整数数组 nums，其中 n > 1，返回输出数组 output ，其中 output[i] 等于 nums 中除 nums[i] 之外其余各元素的乘积。 示例: 提示：题目数据保证数组之中任意元素的全部前缀元素和后缀（甚至是整个数组）的乘积都在 32 位整数范围内。 说明: 请不",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0238-product-of-array-except-self.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 238 题：除自身以外数组的乘积（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0238-product-of-array-except-self.html",relativePath:"dynamic-programming/solutions/0238-product-of-array-except-self.md",key:"v-3c356305",path:"/dynamic-programming/solutions/0238-product-of-array-except-self/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.25,words:374},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 279 题：完全平方数（中等）",frontmatter:{title:"「力扣」第 279 题：完全平方数（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：完全平方数。; 题目描述 给定正整数 n，找到若干个完全平方数（比如 1, 4, 9, 16, ...）使得它们的和等于 n。你需要让组成和的完全平方数的个数最少。 给你一个整数 n ，返回和为 n 的完全平方数的 最少数量 。 完全平方数 是一个整数，其值等于另一个整数的平方；换句话说，其值等于一个整数自乘的积。例如，1、4、9 和 16 都是完",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0279-perfect-squares.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 279 题：完全平方数（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0279-perfect-squares.html",relativePath:"dynamic-programming/solutions/0279-perfect-squares.md",key:"v-6b6bd0c5",path:"/dynamic-programming/solutions/0279-perfect-squares/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：动态规划",slug:"方法一-动态规划"},{level:2,title:"方法二：广度优先遍历",slug:"方法二-广度优先遍历"}],readingTime:{minutes:3.54,words:1061},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"December 18, 2021 03:28",createTimeStamp:1639798095e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 292 题：Nim 游戏（简单）",frontmatter:{title:"「力扣」第 292 题：Nim 游戏（简单）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：292. Nim 游戏；; 题解链接：记忆化递归、动态规划、观察规律（Java）。; 题目描述 你和你的朋友，两个人一起玩 Nim 游戏： 桌子上有一堆石头。; 你们轮流进行自己的回合，你作为先手。; 每一回合，轮到的人拿掉 1 - 3 块石头。; 拿掉最后一块石头的人就是获胜者。; 假设你们每一步都是最优解。请编写一个函数，来判断你是否可以在给定",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0292-nim-game.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 292 题：Nim 游戏（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0292-nim-game.html",relativePath:"dynamic-programming/solutions/0292-nim-game.md",key:"v-78f1cf25",path:"/dynamic-programming/solutions/0292-nim-game/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：记忆化递归（超出内存限制）",slug:"方法一-记忆化递归-超出内存限制"},{level:2,title:"方法二：动态规划（超出内存限制）",slug:"方法二-动态规划-超出内存限制"},{level:2,title:"方法三：数学方法（观察规律得到，可以通过）",slug:"方法三-数学方法-观察规律得到-可以通过"}],readingTime:{minutes:3.61,words:1082},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 300 题：最长上升子序列（中等）",frontmatter:{title:"「力扣」第 300 题：最长上升子序列（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:'" 经典的「动态规划」问题，不同的定义状态的方式，可以得到不同复杂度的求解方法。" 题目链接：300. 最长递增子序列；; 题解链接：动态规划 （包含 O (N log N) 解法的状态定义以及解释）。; 题目描述 给你一个整数数组 nums ，找到其中最长严格递增子序列的长度。 子序列是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺',meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0300-longest-increasing-subsequence.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 300 题：最长上升子序列（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0300-longest-increasing-subsequence.html",relativePath:"dynamic-programming/solutions/0300-longest-increasing-subsequence.md",key:"v-5b91a785",path:"/dynamic-programming/solutions/0300-longest-increasing-subsequence/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:5.2,words:1560},updateTime:"May 2, 2022 05:23",updateTimeStamp:1651468996e3,createTime:"December 18, 2021 03:28",createTimeStamp:1639798095e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 309 题：最佳买卖股票时机含冷冻期（中等）",frontmatter:{title:"「力扣」第 309 题：最佳买卖股票时机含冷冻期（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目理解：309. 最佳买卖股票时机含冷冻期;; 题解链接：动态规划（Java）。; 题目描述 给定一个整数数组，其中第 i 个元素代表了第 i 天的股票价格 。 设计一个算法计算出最大利润。在满足以下约束条件下，你可以尽可能地完成更多的交易（多次买卖一支股票）: 你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。; 卖出股票后，你无法在第二天买",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0309-best-time-to-buy-and-sell-stock-with-cooldown.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 309 题：最佳买卖股票时机含冷冻期（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0309-best-time-to-buy-and-sell-stock-with-cooldown.html",relativePath:"dynamic-programming/solutions/0309-best-time-to-buy-and-sell-stock-with-cooldown.md",key:"v-816a889e",path:"/dynamic-programming/solutions/0309-best-time-to-buy-and-sell-stock-with-cooldown/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"第 1 步：状态定义",slug:"第-1-步-状态定义"},{level:3,title:"第 2 步：推导状态转移方程",slug:"第-2-步-推导状态转移方程"}],readingTime:{minutes:6.86,words:2057},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 337 题：打家劫舍 III（中等）",frontmatter:{title:"「力扣」第 337 题：打家劫舍 III（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划","树形 DP"],summary:"题目链接：337. 打家劫舍 III; 题解链接：树形 dp 入门问题（理解「无后效性」和「后序遍历」）; 题目描述 在上次打劫完一条街道之后和一圈房屋后，小偷又发现了一个新的可行窃的地区。这个地区只有一个入口，我们称之为“根”。 除了“根”之外，每栋房子有且只有一个“父“房子与之相连。一番侦察之后，聪明的小偷意识到“这个地方的所有房屋的排列类似于一棵二叉树",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0337-house-robber-iii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 337 题：打家劫舍 III（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"},{property:"article:tag",content:"树形 DP"}]},regularPath:"/dynamic-programming/solutions/0337-house-robber-iii.html",relativePath:"dynamic-programming/solutions/0337-house-robber-iii.md",key:"v-a88b2f36",path:"/dynamic-programming/solutions/0337-house-robber-iii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"先说重点",slug:"先说重点"},{level:3,title:"第 1 步：状态定义",slug:"第-1-步-状态定义"},{level:3,title:"第 2 步： 推导状态转移方程",slug:"第-2-步-推导状态转移方程"},{level:3,title:"第 3 步： 初始化",slug:"第-3-步-初始化"},{level:3,title:"第 4 步： 输出",slug:"第-4-步-输出"},{level:3,title:"第 5 步： 思考优化空间",slug:"第-5-步-思考优化空间"},{level:3,title:"同类问题",slug:"同类问题"}],readingTime:{minutes:4.75,words:1424},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 322 题：零钱兑换（中等）",frontmatter:{title:"「力扣」第 322 题：零钱兑换（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划","背包问题","完全背包"],summary:"满足「完全背包问题」的背景。 1. 每个硬币可以使用多次； 2. 不计算顺序； 3. 并且有「最优子结构」。 要求的是恰好填满「背包」，所以初始化的时候需要赋值为一个不可能的值： amount + 1。只有在有「正常值」的时候，「状态转移」才可以正常发生。 题目链接：322. 零钱兑换；; 题解链接：动态规划、完全背包、BFS（包含完全背包问题公式推导）; ",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0322-coin-change.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 322 题：零钱兑换（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"},{property:"article:tag",content:"背包问题"},{property:"article:tag",content:"完全背包"}]},regularPath:"/dynamic-programming/solutions/0322-coin-change.html",relativePath:"dynamic-programming/solutions/0322-coin-change.md",key:"v-57e8509b",path:"/dynamic-programming/solutions/0322-coin-change/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"方法一：动态规划与记忆化递归",slug:"方法一-动态规划与记忆化递归"},{level:3,title:"方法二：广度优先遍历",slug:"方法二-广度优先遍历"},{level:3,title:"方法三：套「完全背包」问题的公式",slug:"方法三-套「完全背包」问题的公式"}],readingTime:{minutes:8.78,words:2634},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 343 题：整数拆分（中等）",frontmatter:{title:"「力扣」第 343 题：整数拆分（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划","贪心算法"],summary:"题目链接：343. 整数拆分；; 题解链接：记忆化递归、动态规划 、贪心算法（Java、Python）。; 题目描述 给定一个正整数 n，将其拆分为至少两个正整数的和，并使这些整数的乘积最大化。 返回你可以获得的最大乘积。 示例 1: 示例 2: 说明: 你可以假设 n 不小于 2 且不大于 58。 Constraints: 2 <= n <= 58; 思路",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0343-integer-break.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 343 题：整数拆分（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"},{property:"article:tag",content:"贪心算法"}]},regularPath:"/dynamic-programming/solutions/0343-integer-break.html",relativePath:"dynamic-programming/solutions/0343-integer-break.md",key:"v-fa3545d6",path:"/dynamic-programming/solutions/0343-integer-break/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：回溯（暴力搜索）",slug:"方法一-回溯-暴力搜索"},{level:2,title:"方法二：记忆化递归",slug:"方法二-记忆化递归"},{level:2,title:"方法三：动态规划",slug:"方法三-动态规划"},{level:2,title:"方法四：贪心算法",slug:"方法四-贪心算法"}],readingTime:{minutes:5.45,words:1634},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 368 题：最大整除子集（中等）",frontmatter:{title:"「力扣」第 368 题：最大整除子集（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:'题目链接：368. 最大整除子集。; " 说明：本题我参与了官方题解的编写，所以本文内容与官方题解一致。" 题目描述 给你一个由 无重复 正整数组成的集合 nums ，请你找出并返回其中最大的整除子集 answer ，子集中每一元素对 (answer[i], answer[j]) 都应当满足： answer[i] % answer[j] == 0 ，或; a',meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0368-largest-divisible-subset.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 368 题：最大整除子集（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0368-largest-divisible-subset.html",relativePath:"dynamic-programming/solutions/0368-largest-divisible-subset.md",key:"v-cb5092b6",path:"/dynamic-programming/solutions/0368-largest-divisible-subset/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:7.26,words:2179},updateTime:"January 9, 2022 18:24",updateTimeStamp:1641752675e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 376 题：摆动序列（中等）",frontmatter:{title:"「力扣」第 376 题：摆动序列（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：376. 摆动序列。; 题目描述 如果连续数字之间的差严格地在正数和负数之间交替，则数字序列称为摆动序列。第一个差（如果存在的话）可能是正数或负数。少于两个元素的序列也是摆动序列。 例如， [1,7,4,9,2,5] 是一个摆动序列，因为差值 (6,-3,5,-7,3) 是正负交替出现的。相反, [1,4,7,2,5] 和 [1,7,4,5,5] ",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0376-wiggle-subsequence.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 376 题：摆动序列（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0376-wiggle-subsequence.html",relativePath:"dynamic-programming/solutions/0376-wiggle-subsequence.md",key:"v-4f4da7c5",path:"/dynamic-programming/solutions/0376-wiggle-subsequence/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：动态规划",slug:"方法一-动态规划"},{level:2,title:"方法二：贪心算法",slug:"方法二-贪心算法"}],readingTime:{minutes:3.95,words:1185},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"December 18, 2021 03:28",createTimeStamp:1639798095e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 377 题：组合总和 Ⅳ（中等）",frontmatter:{title:"「力扣」第 377 题：组合总和 Ⅳ（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：377. 组合总和 Ⅳ；; 题解链接：动态规划。; 题目描述 给你一个由 不同 整数组成的数组 nums ，和一个目标整数 target 。请你从 nums 中找出并返回总和为 target 的元素组合的个数。 题目数据保证答案符合 32 位整数范围。 示例 1： 示例 2： 提示： 1 <= nums.length <= 200; 1 <= nu",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0377-combination-sum-iv.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 377 题：组合总和 Ⅳ（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0377-combination-sum-iv.html",relativePath:"dynamic-programming/solutions/0377-combination-sum-iv.md",key:"v-b4cae9b6",path:"/dynamic-programming/solutions/0377-combination-sum-iv/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法：动态规划",slug:"方法-动态规划"},{level:2,title:"方法：动态规划",slug:"方法-动态规划-2"}],readingTime:{minutes:4.47,words:1342},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"December 18, 2021 03:28",createTimeStamp:1639798095e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 413 题：等差数列划分（中等）",frontmatter:{title:"「力扣」第 413 题：等差数列划分（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：等差数列划分；; 题解链接：滑动窗口、动态规划（Java）。; 题目描述 如果一个数列 至少有三个元素 ，并且任意两个相邻元素之差相同，则称该数列为等差数列。 例如，[1, 3, 5, 7, 9]、[7, 7, 7, 7] 和 [3, -1, -5, -9] 都是等差数列。; 给你一个整数数组 nums ，返回数组 nums 中所有为等差数组的 子",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0413-arithmetic-slices.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 413 题：等差数列划分（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0413-arithmetic-slices.html",relativePath:"dynamic-programming/solutions/0413-arithmetic-slices.md",key:"v-9a89b336",path:"/dynamic-programming/solutions/0413-arithmetic-slices/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"理解题意",slug:"理解题意"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：滑动窗口",slug:"方法一-滑动窗口"},{level:2,title:"方法二：动态规划",slug:"方法二-动态规划"}],readingTime:{minutes:6.02,words:1807},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 416 题：分割等和子集（中等）",frontmatter:{title:"「力扣」第 416 题：分割等和子集（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划","背包问题","0-1 背包问题"],summary:"题目链接：416. 分割等和子集；; 题解链接：动态规划（转换为 0-1 背包问题）。; 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 给你一个 只包含正整数 的 非空 数组 nums 。请你判断是否可以将这个数组分割成两个子集，使得",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0416-partition-equal-subset-sum.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 416 题：分割等和子集（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"},{property:"article:tag",content:"背包问题"},{property:"article:tag",content:"0-1 背包问题"}]},regularPath:"/dynamic-programming/solutions/0416-partition-equal-subset-sum.html",relativePath:"dynamic-programming/solutions/0416-partition-equal-subset-sum.md",key:"v-02bc83f6",path:"/dynamic-programming/solutions/0416-partition-equal-subset-sum/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"转换为 「0 - 1」 背包问题",slug:"转换为-「0-1」-背包问题"},{level:2,title:"「0 - 1」 背包问题的思路",slug:"「0-1」-背包问题的思路"},{level:2,title:"状态与状态转移方程",slug:"状态与状态转移方程"},{level:2,title:"解释设置 dp[0][0] = true 的合理性（重点）",slug:"解释设置-dp-0-0-true-的合理性-重点"},{level:2,title:"考虑空间优化（重要）",slug:"考虑空间优化-重要"},{level:2,title:"总结",slug:"总结"},{level:2,title:"相关问题",slug:"相关问题"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:10.69,words:3208},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 474 题：一和零（中等）",frontmatter:{title:"「力扣」第 474 题：一和零（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"二维背包问题，数组有三维，可以降到一维。 题目链接：474. 一和零。; 题目描述 给你一个二进制字符串数组 strs 和两个整数 m 和 n 。 请你找出并返回 strs 的最大子集的长度，该子集中 最多 有 m 个 0 和 n 个 1 。 如果 x 的所有元素也是 y 的元素，集合 x 是集合 y 的 子集 。 示例 1： 示例 2： 提示： 1 <= ",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0474-ones-and-zeroes.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 474 题：一和零（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0474-ones-and-zeroes.html",relativePath:"dynamic-programming/solutions/0474-ones-and-zeroes.md",key:"v-75956bc2",path:"/dynamic-programming/solutions/0474-ones-and-zeroes/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.38,words:415},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 486 题：预测赢家（中等）",frontmatter:{title:"「力扣」第 486 题：预测赢家（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：486. 预测赢家；; 题解链接：记忆化递归、动态规划（Java）。; 题目描述 给你一个整数数组 nums 。玩家 1 和玩家 2 基于这个数组设计了一个游戏。玩家 1 和玩家 2 轮流进行自己的回合，玩家 1 先手。开始时，两个玩家的初始分值都是 0 。每一回合，玩家从数组的任意一端取一个数字（即，nums[0] 或 nums[nums.len",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0486-predict-the-winner.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 486 题：预测赢家（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0486-predict-the-winner.html",relativePath:"dynamic-programming/solutions/0486-predict-the-winner.md",key:"v-278ecdc5",path:"/dynamic-programming/solutions/0486-predict-the-winner/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：记忆化递归",slug:"方法一-记忆化递归"},{level:2,title:"方法二：动态规划",slug:"方法二-动态规划"}],readingTime:{minutes:4.35,words:1306},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 494 题：目标和（中等）",frontmatter:{title:"「力扣」第 494 题：目标和（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：494. 目标和。; 题目描述 给你一个整数数组 nums 和一个整数 target 。 向数组中的每个整数前添加 '+' 或 '-' ，然后串联起所有整数，可以构造一个 表达式 ： 例如，nums = [2, 1] ，可以在 2 之前添加 '+' ，在 1 之前添加 '-' ，然后串联起来得到表达式 \"+2-1\" 。; 返回可以通过上述方法构造的",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0494-target-sum.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 494 题：目标和（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0494-target-sum.html",relativePath:"dynamic-programming/solutions/0494-target-sum.md",key:"v-024cae65",path:"/dynamic-programming/solutions/0494-target-sum/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.02,words:305},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 509 题：斐波拉契数列（简单）",frontmatter:{title:"「力扣」第 509 题：斐波拉契数列（简单）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"提示：「斐波拉契数列」是入门「动态规划」的典型的问题。 题目描述 斐波那契数，通常用 F(n) 表示，形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是： 给你 n ，请计算 F(n) 。 示例 1： 示例 2： 示例 3： 提示： 0 <= n <= 30; 思路分析 斐波那契数列是通过「递归」定义的，",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0509-fibonacci-number.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 509 题：斐波拉契数列（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0509-fibonacci-number.html",relativePath:"dynamic-programming/solutions/0509-fibonacci-number.md",key:"v-7ad03125",path:"/dynamic-programming/solutions/0509-fibonacci-number/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"什么是「记忆化搜索」",slug:"什么是「记忆化搜索」"},{level:2,title:"「自顶向下」与「自底向上」",slug:"「自顶向下」与「自底向上」"},{level:2,title:"「动态规划」的官方定义",slug:"「动态规划」的官方定义"},{level:3,title:"「动态规划」问题的一般思考路径",slug:"「动态规划」问题的一般思考路径"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:4.8,words:1439},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 516 题：最长回文子序列（中等）",frontmatter:{title:"「力扣」第 516 题：最长回文子序列（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：516. 最长回文子序列；; 题解链接：动态规划（Java）。; 题目描述 给你一个字符串 s ，找出其中最长的回文子序列，并返回该序列的长度。 子序列定义为：不改变剩余字符顺序的情况下，删除某些字符或者不删除任何字符形成的一个序列。 示例 1： 示例 2： 提示： 1 <= s.length <= 1000; s 仅由小写英文字母组成; 理解题意",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0516-longest-palindromic-subsequence.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 516 题：最长回文子序列（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0516-longest-palindromic-subsequence.html",relativePath:"dynamic-programming/solutions/0516-longest-palindromic-subsequence.md",key:"v-65768937",path:"/dynamic-programming/solutions/0516-longest-palindromic-subsequence/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"理解题意",slug:"理解题意"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:5.33,words:1599},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"December 18, 2021 03:28",createTimeStamp:1639798095e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 518 题：零钱兑换 II（中等）",frontmatter:{title:"「力扣」第 518 题：零钱兑换 II（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"1. 借这个题学习一下「完全背包」问题； 2. 需要清楚的一点是：当前行参考的是当前行左边的值。 题目链接：518. 零钱兑换 II；; 题解链接：动态规划（完全背包问题，有公式推导）。; 题目描述 给你一个整数数组 coins 表示不同面额的硬币，另给一个整数 amount 表示总金额。 请你计算并返回可以凑成总金额的硬币组合数。如果任何硬币组合都无法凑出",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0518-coin-change-2.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 518 题：零钱兑换 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0518-coin-change-2.html",relativePath:"dynamic-programming/solutions/0518-coin-change-2.md",key:"v-0b4d643f",path:"/dynamic-programming/solutions/0518-coin-change-2/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"与「力扣」「力扣」 第 377 题（组合总和 Ⅳ）的区别",slug:"与「力扣」「力扣」-第-377-题-组合总和-iv-的区别"},{level:2,title:"复习「完全背包」问题",slug:"复习「完全背包」问题"},{level:2,title:"思考状态和状态转移方程",slug:"思考状态和状态转移方程"},{level:2,title:"优化状态转移方程（重点）",slug:"优化状态转移方程-重点"},{level:2,title:"考虑空间优化（重要）",slug:"考虑空间优化-重要"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:9.15,words:2744},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"完全背包公式推导",frontmatter:{title:"完全背包公式推导",icon:"yongyan",category:"动态规划",tags:["动态规划","完全背包"],summary:"完全背包问题学习笔记 有 $N$件物品和一个容量是 $V$ 的背包。每件物品只能使用一次，每种物品都有无限件可用。第 $i$ 件物品的体积是 $wi$，价值是 $vi$。求将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。输出最大价值。 分析：「完全背包问题」的重点在于 每种物品都有无限件可用；; 一个元素可以使用多个，且不计算顺序。; ",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0518-%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"完全背包公式推导"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"},{property:"article:tag",content:"完全背包"}]},regularPath:"/dynamic-programming/solutions/0518-%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC.html",relativePath:"dynamic-programming/solutions/0518-完全背包公式推导.md",key:"v-2ac03de6",path:"/dynamic-programming/solutions/0518-%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC/",headers:[{level:2,title:"完全背包问题学习笔记",slug:"完全背包问题学习笔记"},{level:3,title:"优化「状态转移方程」（重点）",slug:"优化「状态转移方程」-重点"},{level:3,title:"比较「0-1 背包」与「完全背包」问题的状态转移方程（重点）",slug:"比较「0-1-背包」与「完全背包」问题的状态转移方程-重点"},{level:3,title:"练习",slug:"练习"},{level:2,title:"总结",slug:"总结"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:6.49,words:1948},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 664 题：奇怪的打印机（困难）",frontmatter:{title:"「力扣」第 664 题：奇怪的打印机（困难）",icon:"yongyan",category:"动态规划",tags:["动态规划","区间 DP"],summary:"本题重点： 「动态规划」没有为一个问题设计专门的算法，考虑了一个问题所有的情况，其实也是「暴力解法」或者称用到了穷举的思想；; 处理一个连续的区间的事情，我们常常定义状态是二维的；; 区间 DP 问题要做的事情最像「填表」；; 计算顺序很重要，正确的计算顺序，叫保证了求解过程具有「无后效性」。; --- 题目链接：664. 奇怪的打印机。; 题目描述 有台奇",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0644-strange-printer.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 664 题：奇怪的打印机（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"},{property:"article:tag",content:"区间 DP"}]},regularPath:"/dynamic-programming/solutions/0644-strange-printer.html",relativePath:"dynamic-programming/solutions/0644-strange-printer.md",key:"v-64b5f45b",path:"/dynamic-programming/solutions/0644-strange-printer/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"题目中的关键信息",slug:"题目中的关键信息"},{level:2,title:"定义子问题（定义状态）",slug:"定义子问题-定义状态"},{level:2,title:"找到子问题之间的关系（状态转移方程）",slug:"找到子问题之间的关系-状态转移方程"}],readingTime:{minutes:3.02,words:907},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 543 题：二叉树的直径（简单）",frontmatter:{title:"「力扣」第 543 题：二叉树的直径（简单）",icon:"yongyan",category:"动态规划",tags:["动态规划","树形 DP"],summary:"题目描述 给定一棵二叉树，你需要计算它的直径长度。一棵二叉树的直径长度是任意两个结点路径长度中的最大值。这条路径可能穿过也可能不穿过根结点。 示例 : 给定二叉树 返回 3, 它的长度是路径 [4, 2, 1, 3] 或者 [5, 2, 1, 3]。 注意：两结点之间的路径长度是以它们之间边的数目表示。 Constraints: The number of ",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0543-diameter-of-binary-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 543 题：二叉树的直径（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"},{property:"article:tag",content:"树形 DP"}]},regularPath:"/dynamic-programming/solutions/0543-diameter-of-binary-tree.html",relativePath:"dynamic-programming/solutions/0543-diameter-of-binary-tree.md",key:"v-30f251ee",path:"/dynamic-programming/solutions/0543-diameter-of-binary-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"理解什么是二叉树的直径",slug:"理解什么是二叉树的直径"},{level:2,title:"无后效性",slug:"无后效性"},{level:2,title:"状态定义",slug:"状态定义"},{level:2,title:"为什么是「后序遍历」",slug:"为什么是「后序遍历」"},{level:2,title:"题目问的结果在求解子问题的过程中得到",slug:"题目问的结果在求解子问题的过程中得到"},{level:2,title:"总结",slug:"总结"},{level:2,title:"练习",slug:"练习"}],readingTime:{minutes:7.86,words:2358},updateTime:"August 8, 2022 06:56",updateTimeStamp:1659941787e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 687 题：最长同值路径（中等）",frontmatter:{title:"「力扣」第 687 题：最长同值路径（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划","树形 DP"],summary:"题目链接：687. 最长同值路径。; 题目描述 给定一个二叉树，找到最长的路径，这个路径中的每个节点具有相同值。 这条路径可以经过也可以不经过根节点。 注意：两个节点之间的路径长度由它们之间的边数表示。 示例 1: 输入: 输出: 示例 2: 输入: 输出: 注意: 给定的二叉树不超过 10000 个结点。 树的高度不超过 1000。 Constraints",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0687-longest-univalue-path.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 687 题：最长同值路径（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"},{property:"article:tag",content:"树形 DP"}]},regularPath:"/dynamic-programming/solutions/0687-longest-univalue-path.html",relativePath:"dynamic-programming/solutions/0687-longest-univalue-path.md",key:"v-5c00375a",path:"/dynamic-programming/solutions/0687-longest-univalue-path/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.16,words:348},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 714 题：买卖股票的最佳时机含手续费（中等）",frontmatter:{title:"「力扣」第 714 题：买卖股票的最佳时机含手续费（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：714. 买卖股票的最佳时机含手续费；; 题解链接：动态规划（Java）。; 题目描述 给定一个整数数组 prices，其中第 i 个元素代表了第 i 天的股票价格 ；整数 fee 代表了交易股票的手续费用。 你可以无限次地完成交易，但是你每笔交易都需要付手续费。如果你已经购买了一个股票，在卖出它之前你就不能再继续购买股票了。 返回获得利润的最大值",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0714-best-time-to-buy-and-sell-stock-with-transaction-fee.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 714 题：买卖股票的最佳时机含手续费（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0714-best-time-to-buy-and-sell-stock-with-transaction-fee.html",relativePath:"dynamic-programming/solutions/0714-best-time-to-buy-and-sell-stock-with-transaction-fee.md",key:"v-0afa5c36",path:"/dynamic-programming/solutions/0714-best-time-to-buy-and-sell-stock-with-transaction-fee/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"第 1 步：状态定义",slug:"第-1-步-状态定义"},{level:2,title:"第 2 步：推导状态转移方程：",slug:"第-2-步-推导状态转移方程"},{level:2,title:"第 3 步：思考初始化",slug:"第-3-步-思考初始化"},{level:2,title:"第 4 步：思考输出",slug:"第-4-步-思考输出"},{level:2,title:"第 5 步：思考空间优化",slug:"第-5-步-思考空间优化"}],readingTime:{minutes:6.84,words:2052},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 746 题：使用最小花费爬楼梯（简单）",frontmatter:{title:"「力扣」第 746 题：使用最小花费爬楼梯（简单）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：746. 使用最小花费爬楼梯；; 题解链接：动态规划。; 题目描述 给你一个整数数组 cost ，其中 cost[i] 是从楼梯第 i 个台阶向上爬需要支付的费用。一旦你支付此费用，即可选择向上爬一个或者两个台阶。 你可以选择从下标为 0 或下标为 1 的台阶开始爬楼梯。 请你计算并返回达到楼梯顶部的最低花费。 示例 1： 示例 2： 提示： 2 ",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0746-min-cost-climbing-stairs.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 746 题：使用最小花费爬楼梯（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0746-min-cost-climbing-stairs.html",relativePath:"dynamic-programming/solutions/0746-min-cost-climbing-stairs.md",key:"v-6adb0465",path:"/dynamic-programming/solutions/0746-min-cost-climbing-stairs/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:3.13,words:938},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 865 题：具有所有最深节点的最小子树（中等）",frontmatter:{title:"「力扣」第 865 题：具有所有最深节点的最小子树（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划","树形 DP"],summary:"题目链接：865. 具有所有最深节点的最小子树。; 题目描述 给定一个根为 root 的二叉树，每个节点的深度是 该节点到根的最短距离 。 如果一个节点在 整个树 的任意节点之间具有最大的深度，则该节点是 最深的 。 一个节点的 子树 是该节点加上它的所有后代的集合。 返回能满足 以该节点为根的子树中包含所有最深的节点 这一条件的具有最大深度的节点。 注意：",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0865-smallest-subtree-with-all-the-deepest-nodes.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 865 题：具有所有最深节点的最小子树（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"},{property:"article:tag",content:"树形 DP"}]},regularPath:"/dynamic-programming/solutions/0865-smallest-subtree-with-all-the-deepest-nodes.html",relativePath:"dynamic-programming/solutions/0865-smallest-subtree-with-all-the-deepest-nodes.md",key:"v-a8e064da",path:"/dynamic-programming/solutions/0865-smallest-subtree-with-all-the-deepest-nodes/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.66,words:497},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 877 题：石子游戏（中等）",frontmatter:{title:"「力扣」第 877 题：石子游戏（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：877. 石子游戏；; 题解链接：记忆化递归、动态规划、数学解（Java）。; 题目描述 Alice 和 Bob 用几堆石子在做游戏。一共有偶数堆石子，排成一行；每堆都有 正 整数颗石子，数目为 piles[i] 。 游戏以谁手中的石子最多来决出胜负。石子的 总数 是 奇数 ，所以没有平局。 Alice 和 Bob 轮流进行，Alice 先开始 。",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0877-stone-game.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 877 题：石子游戏（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0877-stone-game.html",relativePath:"dynamic-programming/solutions/0877-stone-game.md",key:"v-f175e3b6",path:"/dynamic-programming/solutions/0877-stone-game/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：记忆化递归",slug:"方法一-记忆化递归"},{level:2,title:"方法二：动态规划",slug:"方法二-动态规划"},{level:2,title:"方法三：数学方法",slug:"方法三-数学方法"}],readingTime:{minutes:5.57,words:1671},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 918 题：环形子数组的最大和（中等）",frontmatter:{title:"「力扣」第 918 题：环形子数组的最大和（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：918. 环形子数组的最大和；; 题解链接：动态规划（最大子段和） + 分治思想。; 题目描述 给定一个由整数数组 A 表示的环形数组 C，求 C 的非空子数组的最大可能和。 在此处，环形数组意味着数组的末端将会与开头相连呈环状。（形式上，当0 = 0 时 C[i+A.length] = C[i]） 此外，子数组最多只能包含固定缓冲区 A 中的每个",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0918-maximum-sum-circular-subarray.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 918 题：环形子数组的最大和（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0918-maximum-sum-circular-subarray.html",relativePath:"dynamic-programming/solutions/0918-maximum-sum-circular-subarray.md",key:"v-f6eac32e",path:"/dynamic-programming/solutions/0918-maximum-sum-circular-subarray/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:4.56,words:1367},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 968 题：监控二叉树（困难）",frontmatter:{title:"「力扣」第 968 题：监控二叉树（困难）",icon:"yongyan",category:"动态规划",tags:["动态规划","树形 DP"],summary:"题目链接：968. 监控二叉树。; 题目描述 给定一个二叉树，我们在树的节点上安装摄像头。 节点上的每个摄影头都可以监视其父对象、自身及其直接子对象。 计算监控树的所有节点所需的最小摄像头数量。 示例 1： 示例 2： 提示： 1. 给定树的节点数的范围是 [1, 1000]。 2. 每个节点的值都是 0。 Constraints: The number o",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0968-binary-tree-cameras.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 968 题：监控二叉树（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"},{property:"article:tag",content:"树形 DP"}]},regularPath:"/dynamic-programming/solutions/0968-binary-tree-cameras.html",relativePath:"dynamic-programming/solutions/0968-binary-tree-cameras.md",key:"v-637acbcd",path:"/dynamic-programming/solutions/0968-binary-tree-cameras/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.27,words:381},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 983 题：最低票价（中等）",frontmatter:{title:"「力扣」第 983 题：最低票价（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：983. 最低票价。; 题目描述 在一个火车旅行很受欢迎的国度，你提前一年计划了一些火车旅行。在接下来的一年里，你要旅行的日子将以一个名为 ys 的数组给出。每一项是一个从 1 到 365 的整数。 火车票有三种不同的销售方式： 一张为期一天的通行证售价为 costs[0] 美元；; 一张为期七天的通行证售价为 costs[1] 美元；; 一张为期",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/0983-minimum-cost-for-tickets.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 983 题：最低票价（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/0983-minimum-cost-for-tickets.html",relativePath:"dynamic-programming/solutions/0983-minimum-cost-for-tickets.md",key:"v-d273b6b6",path:"/dynamic-programming/solutions/0983-minimum-cost-for-tickets/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法：动态规划",slug:"方法-动态规划"}],readingTime:{minutes:2.79,words:836},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"December 18, 2021 03:28",createTimeStamp:1639798095e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 1025 题：除数博弈（简单）",frontmatter:{title:"「力扣」第 1025 题：除数博弈（简单）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：1025. 除数博弈；; 题解链接：记忆化递归、动态规划、数学方法（Java）。; 题目描述 爱丽丝和鲍勃一起玩游戏，他们轮流行动。爱丽丝先手开局。 最初，黑板上有一个数字 N 。在每个玩家的回合，玩家需要执行以下操作： 选出任一 x，满足 0 < x < N 且 N % x == 0 。; 用 N - x 替换黑板上的数字 N 。; 如果玩家无法",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/1025-divisor-game.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1025 题：除数博弈（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/1025-divisor-game.html",relativePath:"dynamic-programming/solutions/1025-divisor-game.md",key:"v-b127db76",path:"/dynamic-programming/solutions/1025-divisor-game/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:3,title:"方法一：记忆化递归",slug:"方法一-记忆化递归"},{level:3,title:"方法二：动态规划",slug:"方法二-动态规划"},{level:3,title:"方法三：数学方法",slug:"方法三-数学方法"},{level:3,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:4.03,words:1210},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 1140 题：石子游戏 II（中等）",frontmatter:{title:"「力扣」第 1140 题：石子游戏 II（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：1140. 石子游戏 II；; 题解链接：记忆化递归（Java）。; 题目描述 亚历克斯和李继续他们的石子游戏。许多堆石子 排成一行，每堆都有正整数颗石子 piles[i]。游戏以谁手中的石子最多来决出胜负。 亚历克斯和李轮流进行，亚历克斯先开始。最初，M = 1。 在每个玩家的回合中，该玩家可以拿走剩下的 前 X 堆的所有石子，其中 1 <= X",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/1140-stone-game-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1140 题：石子游戏 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/1140-stone-game-ii.html",relativePath:"dynamic-programming/solutions/1140-stone-game-ii.md",key:"v-72039f9b",path:"/dynamic-programming/solutions/1140-stone-game-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:3,title:"方法一：记忆化递归",slug:"方法一-记忆化递归"},{level:3,title:"方法二：动态规划",slug:"方法二-动态规划"}],readingTime:{minutes:5.6,words:1679},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 1372 题：二叉树中的最长交错路径（中等）",frontmatter:{title:"「力扣」第 1372 题：二叉树中的最长交错路径（中等）",icon:"yongyan",category:"动态规划",tags:["动态规划","树形 DP"],summary:"题目链接：1372. 二叉树中的最长交错路径。; 题目描述 给你一棵以 root 为根的二叉树，二叉树中的交错路径定义如下： 选择二叉树中 任意 节点和一个方向（左或者右）。; 如果前进方向为右，那么移动到当前节点的的右子节点，否则移动到它的左子节点。; 改变前进方向：左变右或者右变左。; 重复第二步和第三步，直到你在树中无法继续移动。; 交错路径的长度定义",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/1372-longest-zigzag-path-in-a-binary-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1372 题：二叉树中的最长交错路径（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"},{property:"article:tag",content:"树形 DP"}]},regularPath:"/dynamic-programming/solutions/1372-longest-zigzag-path-in-a-binary-tree.html",relativePath:"dynamic-programming/solutions/1372-longest-zigzag-path-in-a-binary-tree.md",key:"v-82ab1976",path:"/dynamic-programming/solutions/1372-longest-zigzag-path-in-a-binary-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.4,words:420},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 1143 题：最长公共子序列（中等）",frontmatter:{title:"「力扣」第 1143 题：最长公共子序列（中等）",icon:"shipin",category:"动态规划",tags:["动态规划"],summary:'题目链接： 1143. 最长公共子序列。; 题目描述 给定两个字符串 text1 和 text2，返回这两个字符串的最长 公共子序列 的长度。如果不存在 公共子序列 ，返回 0 。 一个字符串的 子序列 是指这样一个新的字符串：它是由原字符串在不改变字符的相对顺序的情况下删除某些字符（也可以不删除任何字符）后组成的新字符串。 例如，"ace" 是 "abcd',meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/1143-longest-common-subsequence.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1143 题：最长公共子序列（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/1143-longest-common-subsequence.html",relativePath:"dynamic-programming/solutions/1143-longest-common-subsequence.md",key:"v-32568ff6",path:"/dynamic-programming/solutions/1143-longest-common-subsequence/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.44,words:733},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 1449 题：数位成本和为目标值的最大数字",frontmatter:{title:"「力扣」第 1449 题：数位成本和为目标值的最大数字",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"题目链接：1449. 数位成本和为目标值的最大数字。; 题目描述 给你一个整数数组 cost 和一个整数 target 。请你返回满足如下规则可以得到的 最大 整数： 给当前结果添加一个数位（i + 1）的成本为 cost[i] （cost 数组下标从 0 开始）。; 总成本必须恰好等于 target 。; 添加的数位中没有数字 0 。; 由于答案可能会很大",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/1449-form-largest-integer-with-digits-that-add-up-to-target.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1449 题：数位成本和为目标值的最大数字"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/1449-form-largest-integer-with-digits-that-add-up-to-target.html",relativePath:"dynamic-programming/solutions/1449-form-largest-integer-with-digits-that-add-up-to-target.md",key:"v-0c4ce425",path:"/dynamic-programming/solutions/1449-form-largest-integer-with-digits-that-add-up-to-target/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:3,title:"状态定义：",slug:"状态定义"},{level:3,title:"状态转移方程：",slug:"状态转移方程"},{level:3,title:"初始化",slug:"初始化"},{level:2,title:"总结",slug:"总结"},{level:3,title:"二维写法",slug:"二维写法"},{level:3,title:"状态转移方程",slug:"状态转移方程-2"}],readingTime:{minutes:9.47,words:2840},updateTime:"January 9, 2022 18:24",updateTimeStamp:1641752675e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"第 2 章 练习题精讲简介（先看这里）",frontmatter:{title:"第 2 章 练习题精讲简介（先看这里）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"会陆续往这里添加一些经典的问题，精选一些问题和练习。 在这里还没有东西之前，请大家先看看上一章的第 8 节 《超级重要的动态规划问题》里的 5 个问题吧。",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/practice.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 2 章 练习题精讲简介（先看这里）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/practice.html",relativePath:"dynamic-programming/solutions/practice.md",key:"v-2baeefe9",path:"/dynamic-programming/solutions/practice/",readingTime:{minutes:.22,words:65},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"树形 DP 简介",frontmatter:{title:"树形 DP 简介",icon:"yongyan",category:"动态规划",tags:["动态规划","树形 DP"],summary:"今天要和大家分享的是「树形 DP」，也就是在树的问题上进行「动态规划」。 先说结论。如果一个树的问题和树当中的路径相关，只问最优值，并不问这个最优值是怎么来的，那么这样的问题很可能需要使用动态规划的思想解决。 具体来说会用到以下两个思想： 后序遍历：树的问题很多时候需要遍历，而后序遍历有这样的特点：从叶子结点开始一层一层向上汇报；; 无后效性：无后效性是动态",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"树形 DP 简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"},{property:"article:tag",content:"树形 DP"}]},regularPath:"/dynamic-programming/solutions/tree.html",relativePath:"dynamic-programming/solutions/tree.md",key:"v-1c718b23",path:"/dynamic-programming/solutions/tree/",readingTime:{minutes:2.19,words:658},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"（公众号文章）再讲「树形 DP」是个什么玩意儿",frontmatter:{title:"（公众号文章）再讲「树形 DP」是个什么玩意儿",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"今天我们通过另一道问题，再和大家谈一谈「后序遍历」以及「无后效性」在解决一类树的问题中的应用。希望今天的介绍能够让大家有一点点感觉。 例：「力扣」第 543 题：二叉树的直径 给定一棵二叉树，你需要计算它的直径长度。一棵二叉树的直径长度是任意两个结点路径长度中的最大值。这条路径可能穿过也可能不穿过根结点。 示例 : 给定二叉树 返回 3, 它的长度是路径 [",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/%E5%86%8D%E8%AE%B2%E3%80%8C%E6%A0%91%E5%BD%A2%20DP%E3%80%8D%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E7%8E%A9%E6%84%8F%E5%84%BF.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"（公众号文章）再讲「树形 DP」是个什么玩意儿"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/%E5%86%8D%E8%AE%B2%E3%80%8C%E6%A0%91%E5%BD%A2%20DP%E3%80%8D%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E7%8E%A9%E6%84%8F%E5%84%BF.html",relativePath:"dynamic-programming/solutions/再讲「树形 DP」是个什么玩意儿.md",key:"v-9a786500",path:"/dynamic-programming/solutions/%E5%86%8D%E8%AE%B2%E3%80%8C%E6%A0%91%E5%BD%A2%20DP%E3%80%8D%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E7%8E%A9%E6%84%8F%E5%84%BF/",readingTime:{minutes:.69,words:206},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"（公众号文章）树形 DP  是个什么玩意儿",frontmatter:{title:"（公众号文章）树形 DP  是个什么玩意儿",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"例：「力扣」第 124 题：二叉树中的最大路径和（困难） 路径 被定义为一条从树中任意节点出发，沿父节点-子节点连接，达到任意节点的序列。同一个节点在一条路径序列中 至多出现一次 。该路径 至少包含一个 节点，且不一定经过根节点。 路径和 是路径中各节点值的总和。 给你一个二叉树的根节点 root ，返回其 最大路径和 。 示例 1： 示例 2： 提示： 树",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/solutions/%E6%A0%91%E5%BD%A2%20DP%20%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E7%8E%A9%E6%84%8F%E5%84%BF.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"（公众号文章）树形 DP  是个什么玩意儿"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/solutions/%E6%A0%91%E5%BD%A2%20DP%20%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E7%8E%A9%E6%84%8F%E5%84%BF.html",relativePath:"dynamic-programming/solutions/树形 DP 是个什么玩意儿.md",key:"v-5a3170aa",path:"/dynamic-programming/solutions/%E6%A0%91%E5%BD%A2%20DP%20%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E7%8E%A9%E6%84%8F%E5%84%BF/",readingTime:{minutes:4.75,words:1424},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"January 6, 2022 07:56",createTimeStamp:1641455784e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"（公众号文章）从「最大子段和」问题谈如何设计状态（定义子问题）",frontmatter:{title:"（公众号文章）从「最大子段和」问题谈如何设计状态（定义子问题）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"「力扣」第 53 题（最大子序和）是「力扣」第 124 题（二叉树的最大路径和）的线性版本，它们的状态设计思想和状态转移是类似的，希望大家能够通过今天的分享能够进一步体会状态是如何想到的（即子问题的定义需要从哪些方面考虑）。 今天的分享的重点在「关键 1：理解题意」和「关键 2：如何定义子问题（如何定义状态）」和「最后再谈谈「无后效性」。 「力扣」第 53 ",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/%E4%BB%8E%E3%80%8C%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C%E3%80%8D%E9%97%AE%E9%A2%98%E8%B0%88%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E7%8A%B6%E6%80%81%EF%BC%88%E5%AE%9A%E4%B9%89%E5%AD%90%E9%97%AE%E9%A2%98%EF%BC%89.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"（公众号文章）从「最大子段和」问题谈如何设计状态（定义子问题）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/%E4%BB%8E%E3%80%8C%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C%E3%80%8D%E9%97%AE%E9%A2%98%E8%B0%88%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E7%8A%B6%E6%80%81%EF%BC%88%E5%AE%9A%E4%B9%89%E5%AD%90%E9%97%AE%E9%A2%98%EF%BC%89.html",relativePath:"dynamic-programming/从「最大子段和」问题谈如何设计状态（定义子问题）.md",key:"v-686a3bdb",path:"/dynamic-programming/%E4%BB%8E%E3%80%8C%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C%E3%80%8D%E9%97%AE%E9%A2%98%E8%B0%88%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E7%8A%B6%E6%80%81%EF%BC%88%E5%AE%9A%E4%B9%89%E5%AD%90%E9%97%AE%E9%A2%98%EF%BC%89/",headers:[{level:2,title:"关键 1：理解题意",slug:"关键-1-理解题意"},{level:2,title:"关键 2：如何定义子问题（如何定义状态）",slug:"关键-2-如何定义子问题-如何定义状态"},{level:2,title:"动态规划题解",slug:"动态规划题解"},{level:3,title:"定义状态（定义子问题）",slug:"定义状态-定义子问题"},{level:3,title:"状态转移方程（描述子问题之间的联系）",slug:"状态转移方程-描述子问题之间的联系"},{level:3,title:"思考初始值",slug:"思考初始值"},{level:3,title:"思考输出",slug:"思考输出"},{level:3,title:"可以优化空间吗",slug:"可以优化空间吗"},{level:2,title:"最后再谈谈「无后效性」",slug:"最后再谈谈「无后效性」"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:12.84,words:3852},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"December 12, 2021 19:28",createTimeStamp:1639337335e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"（公众号文章）「动态规划」为什么叫「动态规划」",frontmatter:{title:"（公众号文章）「动态规划」为什么叫「动态规划」",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"今天这篇推文回答一个问题，「动态规划」为什么叫「动态规划」？ 今天还是闲聊，内容很主观，是不能写在书里的。严格说起来，很多观点都经不起推敲。所以大家看看就好，可能我有一部分理解和你的是重合的，有一部分并不一样。大家感兴趣的话，可以聊聊。 「动态规划」这个名字我个人觉得挺不好的（也有可能是翻译的锅，哈哈哈），因为这个名字根本不知道它是干嘛的。我们看看其它算法和",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/%E3%80%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E3%80%8D%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8F%AB%E3%80%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E3%80%8D.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"（公众号文章）「动态规划」为什么叫「动态规划」"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/%E3%80%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E3%80%8D%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8F%AB%E3%80%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E3%80%8D.html",relativePath:"dynamic-programming/「动态规划」为什么叫「动态规划」.md",key:"v-1a8afcf8",path:"/dynamic-programming/%E3%80%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E3%80%8D%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8F%AB%E3%80%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E3%80%8D/",readingTime:{minutes:7.52,words:2256},updateTime:"January 14, 2022 06:33",updateTimeStamp:1642141992e3,createTime:"December 12, 2021 19:28",createTimeStamp:1639337335e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"动态规划（语雀的笔记）",frontmatter:{title:"动态规划（语雀的笔记）",icon:"yongyan",category:"动态规划",tags:["动态规划"],summary:"什么是「规划」 在《算法导论》这本书里，对「规划」的解释是「表格」，这个描述是非常准确的。 使用「动态规划」解决的问题具有以下三个特点 1、重复子问题 从「斐波拉契数列」求解的问题中，我们知道，如果递归地去这个问题，会遇到很多以前求解过的问题，即「重复子问题」。这些子问题不应该也不需要被重复计算。 2、最优子结构 求解子问题得到的最优解，组成了规模更大的原问",meta:[{property:"og:url",content:"https://suanfa8.com/dynamic-programming/%E8%AF%AD%E9%9B%80%E7%9A%84%E7%AC%94%E8%AE%B0.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"动态规划（语雀的笔记）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"动态规划"}]},regularPath:"/dynamic-programming/%E8%AF%AD%E9%9B%80%E7%9A%84%E7%AC%94%E8%AE%B0.html",relativePath:"dynamic-programming/语雀的笔记.md",key:"v-a74f84b2",path:"/dynamic-programming/%E8%AF%AD%E9%9B%80%E7%9A%84%E7%AC%94%E8%AE%B0/",headers:[{level:2,title:"什么是「规划」",slug:"什么是「规划」"},{level:2,title:"使用「动态规划」解决的问题具有以下三个特点",slug:"使用「动态规划」解决的问题具有以下三个特点"},{level:3,title:"1、重复子问题",slug:"_1、重复子问题"},{level:3,title:"2、最优子结构",slug:"_2、最优子结构"},{level:3,title:"3、无后效性",slug:"_3、无后效性"},{level:2,title:"例题：「力扣」第 509 题：斐波那契数。",slug:"例题-「力扣」第-509-题-斐波那契数。"},{level:3,title:"方法一：使用递归",slug:"方法一-使用递归"},{level:3,title:"方法二：动态规划",slug:"方法二-动态规划"},{level:2,title:"练习",slug:"练习"},{level:2,title:"例 1：「力扣」第 322 题：零钱兑换中等",slug:"例-1-「力扣」第-322-题-零钱兑换中等"},{level:2,title:"总结",slug:"总结"},{level:2,title:"练习",slug:"练习-2"},{level:3,title:"练习 1：「力扣」第 279 题：完全平方数中等",slug:"练习-1-「力扣」第-279-题-完全平方数中等"},{level:3,title:"练习 2：「力扣」第 343 题：整数拆分中等",slug:"练习-2-「力扣」第-343-题-整数拆分中等"},{level:2,title:"例 1：「力扣」第 198 题：打家劫舍中等",slug:"例-1-「力扣」第-198-题-打家劫舍中等"},{level:2,title:"总结",slug:"总结-2"},{level:2,title:"练习",slug:"练习-3"},{level:3,title:"练习 1：「力扣」第 62 题：不同路径中等",slug:"练习-1-「力扣」第-62-题-不同路径中等"},{level:3,title:"练习 2：「力扣」第 63 题：不同路径 II中等",slug:"练习-2-「力扣」第-63-题-不同路径-ii中等"},{level:3,title:"练习 3：「力扣」第 64 题：最小路径和中等",slug:"练习-3-「力扣」第-64-题-最小路径和中等"},{level:3,title:"练习 4：「力扣」第 120 题：不同路径 II中等",slug:"练习-4-「力扣」第-120-题-不同路径-ii中等"},{level:3,title:"练习 5：「力扣」第 91 题：解码方法中等",slug:"练习-5-「力扣」第-91-题-解码方法中等"},{level:2,title:"练习 1：「力扣」第 300 题：最长上升子序列",slug:"练习-1-「力扣」第-300-题-最长上升子序列"},{level:3,title:"练习 2：「力扣」第 1143 题：最长公共子序列",slug:"练习-2-「力扣」第-1143-题-最长公共子序列"},{level:3,title:"练习 3：「力扣」第 53 题：最大子序和",slug:"练习-3-「力扣」第-53-题-最大子序和"},{level:3,title:"练习 4：「力扣」第 376 题：摆动序列",slug:"练习-4-「力扣」第-376-题-摆动序列"},{level:3,title:"练习 5：「力扣」第 72 题：编辑距离",slug:"练习-5-「力扣」第-72-题-编辑距离"},{level:3,title:"练习 6：「力扣」第 120 题：三角形最小路径和",slug:"练习-6-「力扣」第-120-题-三角形最小路径和"},{level:3,title:"练习 7：「力扣」第 152 题：乘积最大子数组",slug:"练习-7-「力扣」第-152-题-乘积最大子数组"},{level:3,title:"练习 8：「力扣」第 887 题：鸡蛋掉落",slug:"练习-8-「力扣」第-887-题-鸡蛋掉落"},{level:2,title:"",slug:""},{level:3,title:"第 1 版：使用二维数组，不设置「哨兵」行",slug:"第-1-版-使用二维数组-不设置「哨兵」行"},{level:3,title:"第 2 版：使用二维数组，设置「哨兵」行",slug:"第-2-版-使用二维数组-设置「哨兵」行"},{level:3,title:"第 3 版：状态压缩，从后向前写，因为压缩了行，相当于设置了「哨兵」行",slug:"第-3-版-状态压缩-从后向前写-因为压缩了行-相当于设置了「哨兵」行"},{level:3,title:"第 1 版：设置二维状态数组，根据最朴素的「状态转移思想」",slug:"第-1-版-设置二维状态数组-根据最朴素的「状态转移思想」"},{level:3,title:"第 2 版：设置二维状态数组，填表发现状态转移的规律：之和当前行有关，并且设置了「哨兵」行",slug:"第-2-版-设置二维状态数组-填表发现状态转移的规律-之和当前行有关-并且设置了「哨兵」行"},{level:3,title:"第 3 版：设置二维状态数组，填表发现状态转移的规律：之和当前行有关",slug:"第-3-版-设置二维状态数组-填表发现状态转移的规律-之和当前行有关"},{level:3,title:"练习 1：「力扣」第 416 题：分割等和子集",slug:"练习-1-「力扣」第-416-题-分割等和子集"},{level:3,title:"练习 2：「力扣」第 322 题： 零钱兑换",slug:"练习-2-「力扣」第-322-题-零钱兑换"},{level:3,title:"练习 3：「力扣」第 518 题：零钱兑换 II",slug:"练习-3-「力扣」第-518-题-零钱兑换-ii"},{level:3,title:"练习 4：「力扣」第 377 题：组合总和 Ⅳ",slug:"练习-4-「力扣」第-377-题-组合总和-iv"},{level:3,title:"练习 5：「力扣」第 474 题：一和零",slug:"练习-5-「力扣」第-474-题-一和零"},{level:3,title:"练习 6：「力扣」第 494 题：目标和",slug:"练习-6-「力扣」第-494-题-目标和"},{level:3,title:"练习 7：「力扣」第 139 题：单词拆分",slug:"练习-7-「力扣」第-139-题-单词拆分"},{level:3,title:"参考资料",slug:"参考资料"},{level:2,title:"",slug:"-2"},{level:2,title:"区间 DP",slug:"区间-dp"},{level:2,title:"字符串匹配问题",slug:"字符串匹配问题"},{level:2,title:"树形 DP",slug:"树形-dp"},{level:3,title:"计数型 DP",slug:"计数型-dp"},{level:3,title:"递推型 DP",slug:"递推型-dp"},{level:3,title:"概率型 DP",slug:"概率型-dp"},{level:3,title:"博弈型 DP",slug:"博弈型-dp"},{level:3,title:"记忆化搜索",slug:"记忆化搜索"}],readingTime:{minutes:36.37,words:10911},updateTime:"January 6, 2022 07:56",updateTimeStamp:1641455784e3,createTime:"December 12, 2021 19:28",createTimeStamp:1639337335e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"图论算法概述",frontmatter:{title:"图论算法概述",icon:"yongyan",category:"图论",tags:["Dijkstra","最小生成树"],summary:"参考资料 《算法（第 4 版）》; 《算法导论》; 「最短路径问题」知识点 「最短路径问题」专题要解决的问题和重点： 1. 单源最短路径问题（Dijkstra 算法、Bellman-Ford 算法） 2. 所有点对的最短路径问题（Floyd 算法）。 提示 本专栏只讲解 Dijkstra 算法和「松弛操作」。 单源最短路径问题 1. Dijkstra 算法（",meta:[{property:"og:url",content:"https://suanfa8.com/graph/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"图论算法概述"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"Dijkstra"},{property:"article:tag",content:"最小生成树"}]},regularPath:"/graph/",relativePath:"graph/README.md",key:"v-12c1b938",path:"/graph/",headers:[{level:2,title:"参考资料",slug:"参考资料"},{level:2,title:"「最短路径问题」知识点",slug:"「最短路径问题」知识点"},{level:3,title:"单源最短路径问题",slug:"单源最短路径问题"},{level:3,title:"所有点对的最短路径问题",slug:"所有点对的最短路径问题"},{level:2,title:"「最小生成树」知识点",slug:"「最小生成树」知识点"},{level:3,title:"切分定理",slug:"切分定理"},{level:3,title:"Kruskal 算法",slug:"kruskal-算法"},{level:3,title:"Prim 算法",slug:"prim-算法"}],readingTime:{minutes:1.33,words:399},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126692e3,createTime:"December 15, 2021 06:14",createTimeStamp:1639548872e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"7.5 代码实现",frontmatter:{title:"7.5 代码实现",icon:"yongyan",category:"图论",tags:["Dijkstra"],summary:"代码实现 我们直接写基于优先队列的版本，很多时候也叫「堆优化」的 Dijkstra 算法。 参考代码 1： 我们简化的图的构建，使用一个数组表示一条有向边：[起点, 终点, 权值]；; 用布尔数组 visited 表示从源点出发，哪些顶点已经被访问过，相应的在优先队列里的逻辑是；把还没有访问过的顶点所在的边，权值最小的拿出来，做一次松弛操作；; 松弛操作的代",meta:[{property:"og:url",content:"https://suanfa8.com/graph/dijkstra/code.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"7.5 代码实现"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"Dijkstra"}]},regularPath:"/graph/dijkstra/code.html",relativePath:"graph/dijkstra/code.md",key:"v-4a042605",path:"/graph/dijkstra/code/",headers:[{level:2,title:"代码实现",slug:"代码实现"}],readingTime:{minutes:2.36,words:707},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126692e3,createTime:"December 11, 2021 15:40",createTimeStamp:1639237232e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"7.4 通过一个例子理解 Dijkstra 算法的执行步骤",frontmatter:{title:"7.4 通过一个例子理解 Dijkstra 算法的执行步骤",icon:"yongyan",category:"图论",tags:["Dijkstra"],summary:"通过一个例子理解 Dijkstra 算法的执行步骤 最开始的样子，0 到自己路径最短，最短路径为 0，到其它顶点暂时认为是负无穷。 从 0 出发的所有边中，到 2 的距离最短，因此我们就可以说 0 -> 2 这条边的长度，是从 0 开始到 2 的最短路径。 同时更新从 0 出发到它的相邻顶点的距离。 接下来考察，从 2 出发到其相邻顶点的距离有没有可能更短。",meta:[{property:"og:url",content:"https://suanfa8.com/graph/dijkstra/example.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"7.4 通过一个例子理解 Dijkstra 算法的执行步骤"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"Dijkstra"}]},regularPath:"/graph/dijkstra/example.html",relativePath:"graph/dijkstra/example.md",key:"v-7825eced",path:"/graph/dijkstra/example/",headers:[{level:2,title:"通过一个例子理解 Dijkstra 算法的执行步骤",slug:"通过一个例子理解-dijkstra-算法的执行步骤"},{level:2,title:"",slug:""}],readingTime:{minutes:1.29,words:386},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126692e3,createTime:"December 11, 2021 15:40",createTimeStamp:1639237232e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"7.2 Dijkstra 算法要解决的问题与几何直观",frontmatter:{title:"7.2 Dijkstra 算法要解决的问题与几何直观",icon:"yongyan",category:"图论",tags:["Dijkstra"],summary:"Dijkstra 算法要解决的问题 带权图的最短路径问题；; 有向和无向均适用；; 前提：没有负权边。; 解决没有负权边的单源最短路径问题：即从一个顶点出发到其它顶点的最短路径。 说明：这个例子来自于 liuyubobobo 老师在慕课网上开设的课程 算法与数据结构-综合提升 C++版 ，选择这个例子是因为它足够简单，能够把 Dijkstra 算法的思想说清",meta:[{property:"og:url",content:"https://suanfa8.com/graph/dijkstra/geometrically-intuitive.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"7.2 Dijkstra 算法要解决的问题与几何直观"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"Dijkstra"}]},regularPath:"/graph/dijkstra/geometrically-intuitive.html",relativePath:"graph/dijkstra/geometrically-intuitive.md",key:"v-5614f01b",path:"/graph/dijkstra/geometrically-intuitive/",headers:[{level:2,title:"Dijkstra 算法要解决的问题",slug:"dijkstra-算法要解决的问题"},{level:2,title:"几何直观",slug:"几何直观"}],readingTime:{minutes:.69,words:208},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126692e3,createTime:"December 11, 2021 15:40",createTimeStamp:1639237232e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"7.1 单源最短路径简介与参考资料",frontmatter:{title:"7.1 单源最短路径简介与参考资料",icon:"yongyan",category:"图论",tags:["Dijkstra"],summary:"E. W. Dijkstra（1930/05/11-2002/08/06），杰出的计算机科学家，1972 年图灵奖得主。 参考资料 《算法（第 4 版）》：这本书上的给出的是「索引堆」（时间复杂度：$O(E \\log V)$）的解法，由于「索引堆」理解起来有一定难度，因此我们使用「优先队列」（可以认为就是「堆」）作为代码实现，并且直接给出了「堆优化」的版本（",meta:[{property:"og:url",content:"https://suanfa8.com/graph/dijkstra/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"7.1 单源最短路径简介与参考资料"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"Dijkstra"}]},regularPath:"/graph/dijkstra/intro.html",relativePath:"graph/dijkstra/intro.md",key:"v-aff53d2e",path:"/graph/dijkstra/intro/",headers:[{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:.59,words:177},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126692e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"7.3 松弛操作",frontmatter:{title:"7.3 松弛操作",icon:"yongyan",category:"图论",tags:["Dijkstra"],summary:"提示 请注意松弛操作成立的前提是「没有负权边」。 0 -> 2 这条路径，就是从顶点 0 到顶点 2 的最短路径。由于没有负权边，因此不会有一条边，我们绕道走回到顶点 2，路径之和更小。; 事实上，从 0 到 1 ，我们经过 2 再来到 1 ，路径之和 $2 + 1 < 5$，这就是松弛操作的意义。就像我们坐飞机，有的时候经停，费用可能更低。 再次理解松弛操",meta:[{property:"og:url",content:"https://suanfa8.com/graph/dijkstra/relaxation.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"7.3 松弛操作"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"Dijkstra"}]},regularPath:"/graph/dijkstra/relaxation.html",relativePath:"graph/dijkstra/relaxation.md",key:"v-295078c5",path:"/graph/dijkstra/relaxation/",readingTime:{minutes:.54,words:161},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126692e3,createTime:"December 11, 2021 15:40",createTimeStamp:1639237232e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"7.6 单源最短路径算法总结",frontmatter:{title:"7.6 单源最短路径算法总结",icon:"yongyan",category:"图论",tags:["Dijkstra"],summary:"有负权边的情况 有负权边的情况需要使用 Bellman-Ford 算法，Bellman-Ford 算法有一个基于队列的优化算法，叫 Shortest Path Faster Algorithm（SPFA），在《算法（第 4 版）》这本书上有介绍。 以后我们有机会再和大家做总结。 图论知识体系阶段总结（不全面） 最小生成树算法 理论基础 算法思想 数据结构 步",meta:[{property:"og:url",content:"https://suanfa8.com/graph/dijkstra/summarize.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"7.6 单源最短路径算法总结"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"Dijkstra"}]},regularPath:"/graph/dijkstra/summarize.html",relativePath:"graph/dijkstra/summarize.md",key:"v-ba80e702",path:"/graph/dijkstra/summarize/",headers:[{level:2,title:"有负权边的情况",slug:"有负权边的情况"},{level:2,title:"图论知识体系阶段总结（不全面）",slug:"图论知识体系阶段总结-不全面"},{level:3,title:"最小生成树算法",slug:"最小生成树算法"},{level:3,title:"最短路径算法",slug:"最短路径算法"}],readingTime:{minutes:1.03,words:309},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126692e3,createTime:"December 11, 2021 15:40",createTimeStamp:1639237232e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"7.8 最小生成树的应用",frontmatter:{title:"7.8 最小生成树的应用",icon:"yongyan",category:"图论",tags:["最小生成树"],summary:"布线设计：使得边能够连通所有顶点，并且耗费最少。这部分内容不多，《算法（第 4 版）》上也就说了下面这些内容。",meta:[{property:"og:url",content:"https://suanfa8.com/graph/minimum-spanning-tree/application.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"7.8 最小生成树的应用"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"最小生成树"}]},regularPath:"/graph/minimum-spanning-tree/application.html",relativePath:"graph/minimum-spanning-tree/application.md",key:"v-584b0e25",path:"/graph/minimum-spanning-tree/application/",readingTime:{minutes:.17,words:50},updateTime:"December 15, 2021 06:14",updateTimeStamp:1639548872e3,createTime:"December 11, 2021 15:00",createTimeStamp:1639234859e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4}]},{title:"7.10 Kruskal 算法",frontmatter:{title:"7.10 Kruskal 算法",icon:"yongyan",category:"图论",tags:["最小生成树"],summary:"Kruskal 算法的思想 基于切分定理，把边按照权值从小到大的顺序排好，一条一条拿出来，如果构成了环，就将当前边舍弃，知道找到了「顶点数 -1」 条边，最小生成树就找到了。 我们从下面这张图开始。 边「2-6」是此时最短的边，我们选出这条边以后，把这条边的两个顶点标注为红色，此时出现了一个切分。 然后我们在黑色部分的边中选出最短的边「2-3」，把顶点 3 ",meta:[{property:"og:url",content:"https://suanfa8.com/graph/minimum-spanning-tree/kruskal.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"7.10 Kruskal 算法"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"最小生成树"}]},regularPath:"/graph/minimum-spanning-tree/kruskal.html",relativePath:"graph/minimum-spanning-tree/kruskal.md",key:"v-79030976",path:"/graph/minimum-spanning-tree/kruskal/",readingTime:{minutes:2.86,words:858},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126692e3,createTime:"December 11, 2021 14:47",createTimeStamp:1639234045e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"7.7 最小生成树简介与参考资料",frontmatter:{title:"7.7 最小生成树简介与参考资料",icon:"yongyan",category:"图论",tags:["最小生成树"],summary:"最小生成树算法（Minimum Spanning Tree，MST）。 最小生成树算法的应用场景与前提 连通图：在完全连通的情况下，拥有最小生成树；; 无向图：最小生成树算法解决的是这样一类问题，从任意一个顶点能到达这个图的其它顶点，且耗费最少，故单向图不适用于这个场景；; 带权图：如果无权，可以认为权值是 $1$，带权的情况应用范围更广。; 在不连通的情况",meta:[{property:"og:url",content:"https://suanfa8.com/graph/minimum-spanning-tree/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"7.7 最小生成树简介与参考资料"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"最小生成树"}]},regularPath:"/graph/minimum-spanning-tree/intro.html",relativePath:"graph/minimum-spanning-tree/intro.md",key:"v-148801a5",path:"/graph/minimum-spanning-tree/intro/",headers:[{level:2,title:"最小生成树算法的应用场景与前提",slug:"最小生成树算法的应用场景与前提"},{level:2,title:"本章参考资料",slug:"本章参考资料"}],readingTime:{minutes:.79,words:237},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126692e3,createTime:"December 7, 2021 15:12",createTimeStamp:1638889947e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:6},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"7.11 Prim 算法",frontmatter:{title:"7.11 Prim 算法",icon:"yongyan",category:"图论",tags:["最小生成树"],summary:"Prim 算法的思想 基于切分定理，可以从任意一个顶点开始，一点一点扩散，在扩散的过程中形成不同的切分，从不同的切分里选出横切边最短的边，直至找到了所有的顶点（或者说直到找到了「顶点数 - 1」条边），最小生成树就找到了。 我们来看一个具体的例子： 最开始的图是这样的。 从任意一个顶点开始，我们这里选择编号为 0 的顶点。形成如下切分，边「0-1」和边「0-",meta:[{property:"og:url",content:"https://suanfa8.com/graph/minimum-spanning-tree/lazy-prim.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"7.11 Prim 算法"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"最小生成树"}]},regularPath:"/graph/minimum-spanning-tree/lazy-prim.html",relativePath:"graph/minimum-spanning-tree/lazy-prim.md",key:"v-36af5776",path:"/graph/minimum-spanning-tree/lazy-prim/",readingTime:{minutes:3.67,words:1100},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126692e3,createTime:"December 11, 2021 14:47",createTimeStamp:1639234045e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"7.9 切分定理",frontmatter:{title:"7.9 切分定理",icon:"yongyan",category:"图论",tags:["最小生成树"],summary:"理解切分定理是理解最小生成树的两个算法（Kruskal 算法和 Prim 算法）的理论基础。 什么是切分 把图中的结点分为两个部分，称为一个切分（Cut）。如果一个边的两个端点，属于切分（Cut）不同的两边，这个边称为横切边（Crossing Edge）。 切分定理 切分定理告诉我们 对于任意切分，最短的横切边一定属于最小生成树。 切分定理：在一幅加权图中，",meta:[{property:"og:url",content:"https://suanfa8.com/graph/minimum-spanning-tree/segmentation-theorem.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"7.9 切分定理"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"最小生成树"}]},regularPath:"/graph/minimum-spanning-tree/segmentation-theorem.html",relativePath:"graph/minimum-spanning-tree/segmentation-theorem.md",key:"v-aaa246aa",path:"/graph/minimum-spanning-tree/segmentation-theorem/",headers:[{level:2,title:"什么是切分",slug:"什么是切分"},{level:2,title:"切分定理",slug:"切分定理"},{level:2,title:"理解切分定理",slug:"理解切分定理"},{level:2,title:"证明切分定理",slug:"证明切分定理"}],readingTime:{minutes:1.96,words:587},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126692e3,createTime:"December 11, 2021 14:47",createTimeStamp:1639234045e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"7.12 最小生成树算法总结与练习",frontmatter:{title:"7.12 最小生成树算法总结与练习",icon:"yongyan",category:"图论",tags:["最小生成树"],summary:"总结 最小生成树的 Kruskal 算法和 Prim 算法都基于「切分定理」，我们再回顾一下：「任意横切边的最短边一定数据最小生成树」。 Kruskal 算法从最短的边，一条一条开始考虑，如果新考虑的边与已经考虑的边形成环，就抛弃，进而考虑下一条边。; Prim 算法可以从任意一个顶点开始，形成切分，考虑最短的横切边，将还未考虑进来的边依次考虑进来，最后切分",meta:[{property:"og:url",content:"https://suanfa8.com/graph/minimum-spanning-tree/summarize.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"7.12 最小生成树算法总结与练习"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"最小生成树"}]},regularPath:"/graph/minimum-spanning-tree/summarize.html",relativePath:"graph/minimum-spanning-tree/summarize.md",key:"v-e1cf13f6",path:"/graph/minimum-spanning-tree/summarize/",headers:[{level:2,title:"总结",slug:"总结"},{level:2,title:"「力扣」上关于「最小生成树」的练习",slug:"「力扣」上关于「最小生成树」的练习"}],readingTime:{minutes:.75,words:226},updateTime:"January 14, 2022 02:18",updateTimeStamp:1642126692e3,createTime:"December 11, 2021 14:47",createTimeStamp:1639234045e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"贪心算法",frontmatter:{summary:"贪心算法 贪心算法又称「贪婪算法」。 在对问题求解时，总是做出在当前看来最好的选择。即贪心算法不从整体最优上加以考虑；; 贪心算法所作出的是在某种意义上的局部最优解。; 贪心算法和动态规划算法都是由局部最优导出全局最优，二者的区别如下。 贪心算法： 贪心算法中，作出的每步贪心决策都无法改变，因为贪心策略是由上一步的最优解推导下一步的最优解，而上一部之前的最优",meta:[{property:"og:url",content:"https://suanfa8.com/greedy/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"贪心算法"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/greedy/",relativePath:"greedy/README.md",key:"v-74d392e6",path:"/greedy/",headers:[{level:2,title:"贪心算法",slug:"贪心算法"},{level:2,title:"贪心算法的直观描述",slug:"贪心算法的直观描述"},{level:3,title:"贪心算法的哲学意义",slug:"贪心算法的哲学意义"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:9.31,words:2792},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941866e3,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 12 题：整数转罗马数字（中等）",frontmatter:{title:"「力扣」第 12 题：整数转罗马数字（中等）",icon:"yongyan",category:"贪心算法",tags:["贪心算法"],summary:"题目链接：12. 整数转罗马数字；; 题解链接：贪心算法（贪心算法的有效性未证明））。; 题目描述 罗马数字包含以下七种字符： I， V， X， L，C，D 和 M。 例如， 罗马数字 2 写做 II ，即为两个并列的 1。12 写做 XII ，即为 X + II 。 27 写做 XXVII, 即为 XX + V + II 。 通常情况下，罗马数字中小的数字",meta:[{property:"og:url",content:"https://suanfa8.com/greedy/solutions/0012-integer-to-roman.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 12 题：整数转罗马数字（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"贪心算法"}]},regularPath:"/greedy/solutions/0012-integer-to-roman.html",relativePath:"greedy/solutions/0012-integer-to-roman.md",key:"v-44f15dcd",path:"/greedy/solutions/0012-integer-to-roman/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法：贪心算法",slug:"方法-贪心算法"},{level:3,title:"生活中的经验",slug:"生活中的经验"},{level:3,title:"题意分析",slug:"题意分析"},{level:3,title:"发现规律",slug:"发现规律"},{level:3,title:"总结",slug:"总结"}],readingTime:{minutes:6.29,words:1887},updateTime:"January 13, 2022 16:53",updateTimeStamp:1642092785e3,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:7}]},{title:"「力扣」第 45 题：整数转罗马数字（困难）",frontmatter:{title:"「力扣」第 45 题：整数转罗马数字（困难）",icon:"yongyan",category:"贪心算法",tags:["贪心算法"],summary:"题目链接：45. 跳跃游戏 II。; 题目描述 给你一个非负整数数组 nums ，你最初位于数组的第一个位置。 数组中的每个元素代表你在该位置可以跳跃的最大长度。 你的目标是使用最少的跳跃次数到达数组的最后一个位置。 假设你总是可以到达数组的最后一个位置。 示例 1: 示例 2: 提示: 1 <= nums.length <= 10^4; 0 <= nums",meta:[{property:"og:url",content:"https://suanfa8.com/greedy/solutions/0045-jump-game-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 45 题：整数转罗马数字（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"贪心算法"}]},regularPath:"/greedy/solutions/0045-jump-game-ii.html",relativePath:"greedy/solutions/0045-jump-game-ii.md",key:"v-367869c9",path:"/greedy/solutions/0045-jump-game-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：广度优先遍历",slug:"方法一-广度优先遍历"},{level:2,title:"方法二：贪心算法",slug:"方法二-贪心算法"}],readingTime:{minutes:3.86,words:1158},updateTime:"January 13, 2022 16:53",updateTimeStamp:1642092785e3,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:7}]},{title:"「力扣」第 56 题：合并区间（中等）",frontmatter:{title:"「力扣」第 56 题：合并区间（中等）",icon:"yongyan",category:"贪心算法",tags:["贪心算法"],summary:"题目链接：56. 合并区间；; 题解链接：贪心算法（Java）。; 题目描述 以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [starti, endi] 。请你合并所有重叠的区间，并返回一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间。 示例 1： 示例 2： 提示： 1 <= intervals.le",meta:[{property:"og:url",content:"https://suanfa8.com/greedy/solutions/0056-merge-intervals.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 56 题：合并区间（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"贪心算法"}]},regularPath:"/greedy/solutions/0056-merge-intervals.html",relativePath:"greedy/solutions/0056-merge-intervals.md",key:"v-74dd6dc5",path:"/greedy/solutions/0056-merge-intervals/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"贪心算法的应用",slug:"贪心算法的应用"},{level:3,title:"贪心算法典型问题",slug:"贪心算法典型问题"},{level:3,title:"例：「力扣」第 56 题：跳跃游戏（中等）",slug:"例-「力扣」第-56-题-跳跃游戏-中等"}],readingTime:{minutes:11.16,words:3349},updateTime:"January 13, 2022 16:53",updateTimeStamp:1642092785e3,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 57 题：插入区间（中等）",frontmatter:{title:"「力扣」第 57 题：插入区间（中等）",icon:"yongyan",category:"贪心算法",tags:["贪心算法"],summary:"题目描述 给你一个 无重叠的 ，按照区间起始端点排序的区间列表。 在列表中插入一个新的区间，你需要确保列表中的区间仍然有序且不重叠（如果有必要的话，可以合并区间）。 示例 1： 示例 2： 示例 3： 示例 4： 示例 5： 提示： 0 <= intervals.length <= 10^4; intervals[i].length == 2; 0 <= i",meta:[{property:"og:url",content:"https://suanfa8.com/greedy/solutions/0057-insert-interval.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 57 题：插入区间（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"贪心算法"}]},regularPath:"/greedy/solutions/0057-insert-interval.html",relativePath:"greedy/solutions/0057-insert-interval.md",key:"v-3bb840a5",path:"/greedy/solutions/0057-insert-interval/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.58,words:473},updateTime:"January 13, 2022 16:53",updateTimeStamp:1642092785e3,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5}]},{title:"「力扣」第 343 题：整数拆分（中等）",frontmatter:{title:"「力扣」第 343 题：整数拆分（中等）",icon:"yongyan",category:"贪心算法",tags:["贪心算法"],summary:"题目链接：343. 整数拆分；; 题解链接：记忆化递归、动态规划 、贪心算法（Java、Python）。; 题目描述 给定一个正整数 n，将其拆分为至少两个正整数的和，并使这些整数的乘积最大化。 返回你可以获得的最大乘积。 示例 1: 示例 2: 说明: 你可以假设 n 不小于 2 且不大于 58。 思路分析 能够使用“贪心算法”完成的问题，严格上来说，是要",meta:[{property:"og:url",content:"https://suanfa8.com/greedy/solutions/0343-integer-break.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 343 题：整数拆分（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"贪心算法"}]},regularPath:"/greedy/solutions/0343-integer-break.html",relativePath:"greedy/solutions/0343-integer-break.md",key:"v-b74846f6",path:"/greedy/solutions/0343-integer-break/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：贪心算法",slug:"方法一-贪心算法"},{level:2,title:"方法二：“记忆化搜索”与“动态规划”",slug:"方法二-记忆化搜索-与-动态规划"}],readingTime:{minutes:8.17,words:2452},updateTime:"January 13, 2022 16:53",updateTimeStamp:1642092785e3,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:7}]},{title:"「力扣」第 452 题：用最少数量的箭引爆气球（中等）",frontmatter:{title:"「力扣」第 452 题：用最少数量的箭引爆气球（中等）",icon:"yongyan",category:"贪心算法",tags:["贪心算法"],summary:"题目链接：452. 用最少数量的箭引爆气球。; 题目描述 在二维空间中有许多球形的气球。对于每个气球，提供的输入是水平方向上，气球直径的开始和结束坐标。由于它是水平的，所以纵坐标并不重要，因此只要知道开始和结束的横坐标就足够了。开始坐标总是小于结束坐标。 一支弓箭可以沿着 x 轴从不同点完全垂直地射出。在坐标 x 处射出一支箭，若有一个气球的直径的开始和结束",meta:[{property:"og:url",content:"https://suanfa8.com/greedy/solutions/0452-minimum-number-of-arrows-to-burst-balloons.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 452 题：用最少数量的箭引爆气球（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"贪心算法"}]},regularPath:"/greedy/solutions/0452-minimum-number-of-arrows-to-burst-balloons.html",relativePath:"greedy/solutions/0452-minimum-number-of-arrows-to-burst-balloons.md",key:"v-6eb37ec2",path:"/greedy/solutions/0452-minimum-number-of-arrows-to-burst-balloons/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：按照区间的左端点升序排序",slug:"方法一-按照区间的左端点升序排序"},{level:2,title:"方法二：按照区间的右端点升序排序",slug:"方法二-按照区间的右端点升序排序"},{level:2,title:"贪心算法（Python 代码、Java 代码）",slug:"贪心算法-python-代码、java-代码"}],readingTime:{minutes:6.75,words:2026},updateTime:"January 13, 2022 16:53",updateTimeStamp:1642092785e3,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6}]},{title:"「力扣」第 354 题：俄罗斯套娃信封问题（困难）",frontmatter:{title:"「力扣」第 354 题：俄罗斯套娃信封问题（困难）",icon:"yongyan",category:"贪心算法",tags:["贪心算法","动态规划"],summary:"题目链接：354. 俄罗斯套娃信封问题；; 题解链接：贪心算法、二分查找（Python 代码、Java 代码）。; 题目描述 给你一个二维整数数组 envelopes ，其中 envelopes[i] = [wi, hi] ，表示第 i 个信封的宽度和高度。 当另一个信封的宽度和高度都比这个信封大的时候，这个信封就可以放进另一个信封里，如同俄罗斯套娃一样。 ",meta:[{property:"og:url",content:"https://suanfa8.com/greedy/solutions/0354-russian-doll-envelopes.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 354 题：俄罗斯套娃信封问题（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"贪心算法"},{property:"article:tag",content:"动态规划"}]},regularPath:"/greedy/solutions/0354-russian-doll-envelopes.html",relativePath:"greedy/solutions/0354-russian-doll-envelopes.md",key:"v-c2604de6",path:"/greedy/solutions/0354-russian-doll-envelopes/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"贪心算法 + 二分查找",slug:"贪心算法-二分查找"}],readingTime:{minutes:5.32,words:1595},updateTime:"January 13, 2022 16:53",updateTimeStamp:1642092785e3,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6}]},{title:"「力扣」第 455 题：分发饼干（中等）",frontmatter:{title:"「力扣」第 455 题：分发饼干（中等）",icon:"yongyan",category:"贪心算法",tags:["贪心算法"],summary:"题目链接：455. 分发饼干；; 题解链接：贪心算法（两个方向） + 优先队列（Python 代码）。; 题目描述 假设你是一位很棒的家长，想要给你的孩子们一些小饼干。但是，每个孩子最多只能给一块饼干。 对每个孩子 i，都有一个胃口值 g[i]，这是能让孩子们满足胃口的饼干的最小尺寸；并且每块饼干 j，都有一个尺寸 s[j] 。如果 s[j] >= g[i]",meta:[{property:"og:url",content:"https://suanfa8.com/greedy/solutions/0455-assign-cookies.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 455 题：分发饼干（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"贪心算法"}]},regularPath:"/greedy/solutions/0455-assign-cookies.html",relativePath:"greedy/solutions/0455-assign-cookies.md",key:"v-74b8d8e5",path:"/greedy/solutions/0455-assign-cookies/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"贪心算法（两个方向） + 优先队列（Python 代码）",slug:"贪心算法-两个方向-优先队列-python-代码"},{level:2,title:"方法一：尽量用小的饼干满足贪心指数小的小朋友",slug:"方法一-尽量用小的饼干满足贪心指数小的小朋友"},{level:2,title:"方法二：尽量用大的饼干满足贪心指数大的小朋友",slug:"方法二-尽量用大的饼干满足贪心指数大的小朋友"}],readingTime:{minutes:4.36,words:1309},updateTime:"January 13, 2022 16:53",updateTimeStamp:1642092785e3,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6}]},{title:"「力扣」第 860 题：柠檬水找零（简单）",frontmatter:{title:"「力扣」第 860 题：柠檬水找零（简单）",icon:"yongyan",category:"贪心算法",tags:["贪心算法"],summary:"题目链接：860. 柠檬水找零。; 题目描述 在柠檬水摊上，每一杯柠檬水的售价为 5 美元。 顾客排队购买你的产品，（按账单 bills 支付的顺序）一次购买一杯。 每位顾客只买一杯柠檬水，然后向你付 5 美元、10 美元或 20 美元。你必须给每个顾客正确找零，也就是说净交易是每位顾客向你支付 5 美元。 注意，一开始你手头没有任何零钱。 如果你能给每位顾",meta:[{property:"og:url",content:"https://suanfa8.com/greedy/solutions/0860-lemonade-change.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 860 题：柠檬水找零（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"贪心算法"}]},regularPath:"/greedy/solutions/0860-lemonade-change.html",relativePath:"greedy/solutions/0860-lemonade-change.md",key:"v-c3c2b5f6",path:"/greedy/solutions/0860-lemonade-change/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.81,words:542},updateTime:"January 13, 2022 16:53",updateTimeStamp:1642092785e3,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5}]},{title:"「力扣」第 861 题：翻转矩阵后的得分（中等）",frontmatter:{title:"「力扣」第 861 题：翻转矩阵后的得分（中等）",icon:"yongyan",category:"贪心算法",tags:["贪心算法"],summary:"题目链接：861. 翻转矩阵后的得分。; 题目描述 有一个二维矩阵 A 其中每个元素的值为 0 或 1 。 移动是指选择任一行或列，并转换该行或列中的每一个值：将所有 0 都更改为 1，将所有 1 都更改为 0。 在做出任意次数的移动后，将该矩阵的每一行都按照二进制数来解释，矩阵的得分就是这些数字的总和。 返回尽可能高的分数。 示例： 提示： 1. 1 <=",meta:[{property:"og:url",content:"https://suanfa8.com/greedy/solutions/0861-score-after-flipping-matrix.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 861 题：翻转矩阵后的得分（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"贪心算法"}]},regularPath:"/greedy/solutions/0861-score-after-flipping-matrix.html",relativePath:"greedy/solutions/0861-score-after-flipping-matrix.md",key:"v-088fd3c5",path:"/greedy/solutions/0861-score-after-flipping-matrix/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.09,words:327},updateTime:"January 13, 2022 16:53",updateTimeStamp:1642092785e3,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5}]},{title:"「力扣」第 921 题：使括号有效的最少添加（中等）",frontmatter:{title:"「力扣」第 921 题：使括号有效的最少添加（中等）",icon:"yongyan",category:"贪心算法",tags:["贪心算法"],summary:"题目描述 给定一个由 '(' 和 ')' 括号组成的字符串 S，我们需要添加最少的括号（ '(' 或是 ')'，可以在任何位置），以使得到的括号字符串有效。 从形式上讲，只有满足下面几点之一，括号字符串才是有效的： 它是一个空字符串，或者; 它可以被写成 AB （A 与 B 连接）, 其中 A 和 B 都是有效字符串，或者; 它可以被写作 (A)，其中 A ",meta:[{property:"og:url",content:"https://suanfa8.com/greedy/solutions/0921-minimum-add-to-make-parentheses-valid.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 921 题：使括号有效的最少添加（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"贪心算法"}]},regularPath:"/greedy/solutions/0921-minimum-add-to-make-parentheses-valid.html",relativePath:"greedy/solutions/0921-minimum-add-to-make-parentheses-valid.md",key:"v-aac37736",path:"/greedy/solutions/0921-minimum-add-to-make-parentheses-valid/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"参考资料",slug:"参考资料"}],readingTime:{minutes:.92,words:277},updateTime:"January 13, 2022 16:53",updateTimeStamp:1642092785e3,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6}]},{title:"「力扣」第 1400 题：构造 K 个回文字符串（中等）",frontmatter:{title:"「力扣」第 1400 题：构造 K 个回文字符串（中等）",icon:"yongyan",category:"贪心算法",tags:["贪心算法"],summary:"题目链接：1400. 构造 K 个回文字符串。; 题目描述 给你一个字符串 s 和一个整数 k 。请你用 s 字符串中 所有字符 构造 k 个非空 回文串 。 如果你可以用 s 中所有字符构造 k 个回文字符串，那么请你返回 True ，否则返回 False 。 示例 1： 示例 2： 示例 3： 示例 4： 示例 5： 提示： 1 <= s.length ",meta:[{property:"og:url",content:"https://suanfa8.com/greedy/solutions/1400-construct-k-palindrome-strings.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1400 题：构造 K 个回文字符串（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"贪心算法"}]},regularPath:"/greedy/solutions/1400-construct-k-palindrome-strings.html",relativePath:"greedy/solutions/1400-construct-k-palindrome-strings.md",key:"v-b806b40e",path:"/greedy/solutions/1400-construct-k-palindrome-strings/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"解题思路",slug:"解题思路"},{level:2,title:"代码",slug:"代码"},{level:2,title:"解题思路",slug:"解题思路-2"},{level:2,title:"代码",slug:"代码-2"}],readingTime:{minutes:2.91,words:872},updateTime:"January 13, 2022 16:53",updateTimeStamp:1642092785e3,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6}]},{title:"哈希表",frontmatter:{summary:"哈希表 题目链接 力扣 B 站 ------------------------------------------------------------ ------------------------------------------------------------ ------------------------------------------",meta:[{property:"og:url",content:"https://suanfa8.com/hash-table/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"哈希表"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/hash-table/",relativePath:"hash-table/README.md",key:"v-9ad10df4",path:"/hash-table/",headers:[{level:2,title:"哈希表",slug:"哈希表"}],readingTime:{minutes:.15,words:46},updateTime:"December 26, 2021 10:30",updateTimeStamp:1640514631e3,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 1 题：两数之和（简单）",frontmatter:{title:"「力扣」第 1 题：两数之和（简单）",icon:"yongyan",category:"哈希表",tags:["哈希表"],summary:"题目链接：1. 两数之和；; 题解链接：:tv: 官方题解（有视频讲解）。; 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 发布在「算法吧」的视频（带字幕和进度条）： Your browser does not support the vide",meta:[{property:"og:url",content:"https://suanfa8.com/hash-table/solutions/0001-two-sum.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1 题：两数之和（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"哈希表"}]},regularPath:"/hash-table/solutions/0001-two-sum.html",relativePath:"hash-table/solutions/0001-two-sum.md",key:"v-793bfff6",path:"/hash-table/solutions/0001-two-sum/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：暴力解法",slug:"方法一-暴力解法"},{level:2,title:"方法二：哈希表",slug:"方法二-哈希表"}],readingTime:{minutes:2.5,words:751},updateTime:"May 2, 2022 05:22",updateTimeStamp:1651468975e3,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6}]},{title:"「力扣」第 36 题：有效的数独（中等）",frontmatter:{title:"「力扣」第 36 题：有效的数独（中等）",icon:"yongyan",category:"哈希表",tags:["哈希表"],summary:"题目链接：36. 有效的数独；; 题解链接：哈希表（布尔数组、位运算）。; 题目描述 请你判断一个 9 x 9 的数独是否有效。只需要 根据以下规则 ，验证已经填入的数字是否有效即可。 1. 数字 1-9 在每一行只能出现一次。 2. 数字 1-9 在每一列只能出现一次。 3. 数字 1-9 在每一个以粗实线分隔的 3x3 宫内只能出现一次。（请参考示例图）",meta:[{property:"og:url",content:"https://suanfa8.com/hash-table/solutions/0036-valid-sudoku.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 36 题：有效的数独（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"哈希表"}]},regularPath:"/hash-table/solutions/0036-valid-sudoku.html",relativePath:"hash-table/solutions/0036-valid-sudoku.md",key:"v-1fc5fcd2",path:"/hash-table/solutions/0036-valid-sudoku/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法：布尔数组（哈希表）",slug:"方法-布尔数组-哈希表"}],readingTime:{minutes:3.86,words:1158},updateTime:"January 13, 2022 16:02",updateTimeStamp:164208973e4,createTime:"December 26, 2021 19:52",createTimeStamp:1640548321e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 41 题：缺失的第一个正数（困难）",frontmatter:{title:"「力扣」第 41 题：缺失的第一个正数（困难）",icon:"shipin",category:"原地哈希",tags:["原地哈希"],summary:"题目链接：41. 缺失的第一个正数（困难） ；; 题解链接：原地哈希（哈希函数为：f(nums[i]) = nums[i] - 1）。; :tv: 视频题解 视频讲解：B 站。 说明： 建议倍速观看，核心思想不难，三分钟以后才进入正题，为了叙述完整所以讲得比较多；; 方法一和方法二都很容易想到，可以直接跳到「方法三」。; 视频讲解 :tv: 这道题在 题解 ",meta:[{property:"og:url",content:"https://suanfa8.com/hash-table/solutions/0041-first-missing-positive.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 41 题：缺失的第一个正数（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"原地哈希"}]},regularPath:"/hash-table/solutions/0041-first-missing-positive.html",relativePath:"hash-table/solutions/0041-first-missing-positive.md",key:"v-4be2a0e1",path:"/hash-table/solutions/0041-first-missing-positive/",headers:[{level:2,title:"📺 视频题解",slug:"视频题解"},{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"一句话题解",slug:"一句话题解"},{level:2,title:"方法一：哈希表（空间复杂度不符合要求）",slug:"方法一-哈希表-空间复杂度不符合要求"},{level:2,title:"方法二：二分查找（时间复杂度不符合要求）",slug:"方法二-二分查找-时间复杂度不符合要求"},{level:2,title:"方法三：将数组视为哈希表",slug:"方法三-将数组视为哈希表"},{level:2,title:"同类问题",slug:"同类问题"}],readingTime:{minutes:7.82,words:2345},updateTime:"January 13, 2022 16:02",updateTimeStamp:164208973e4,createTime:"January 6, 2022 08:04",createTimeStamp:1641456254e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6}]},{title:"「力扣」第 49 题：字母异位词分组（哈希表）",frontmatter:{title:"「力扣」第 49 题：字母异位词分组（哈希表）",icon:"yongyan",category:"哈希表",tags:["哈希表","滚动哈希"],summary:"题目链接：49. 字母异位词分组；; 题解链接：自定义字符串的哈希规则，使用质数作为乘法因子（Java）。; 视频讲解 :tv: 这道题在 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 发布在「算法吧」的视频（带字幕和进度条）： Your browser does not support",meta:[{property:"og:url",content:"https://suanfa8.com/hash-table/solutions/0049-group-anagrams.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 49 题：字母异位词分组（哈希表）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"哈希表"},{property:"article:tag",content:"滚动哈希"}]},regularPath:"/hash-table/solutions/0049-group-anagrams.html",relativePath:"hash-table/solutions/0049-group-anagrams.md",key:"v-782ef33f",path:"/hash-table/solutions/0049-group-anagrams/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:5.12,words:1535},updateTime:"May 2, 2022 05:22",updateTimeStamp:1651468975e3,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:8}]},{title:"「力扣」第 202 题：快乐数（简单）",frontmatter:{title:"「力扣」第 202 题：快乐数（简单）",icon:"yongyan",category:"哈希表",tags:["哈希表"],summary:'题目链接：202. 快乐数。; " todo：官方题解的代码比我快很多，记得改一下。" 题目描述 编写一个算法来判断一个数 n 是不是快乐数。 「快乐数」定义为： 对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和。; 然后重复这个过程直到这个数变为 1，也可能是 无限循环 但始终变不到 1。; 如果 可以变为 1，那么这个数就是快乐数。; 如果 ',meta:[{property:"og:url",content:"https://suanfa8.com/hash-table/solutions/0202-happy-number.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 202 题：快乐数（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"哈希表"}]},regularPath:"/hash-table/solutions/0202-happy-number.html",relativePath:"hash-table/solutions/0202-happy-number.md",key:"v-b8e89306",path:"/hash-table/solutions/0202-happy-number/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法：哈希表",slug:"方法-哈希表"}],readingTime:{minutes:1.23,words:370},updateTime:"January 13, 2022 16:02",updateTimeStamp:164208973e4,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6}]},{title:"「力扣」第 217 题：存在重复元素（简单）",frontmatter:{title:"「力扣」第 217 题：存在重复元素（简单）",icon:"yongyan",category:"哈希表",tags:["哈希表"],summary:"题目链接：217. 存在重复元素;; 题解地址：哈希表 + 排序（Python 代码、Java 代码）。; 题目描述 给定一个整数数组，判断是否存在重复元素。 如果存在一值在数组中出现至少两次，函数返回 true 。如果数组中每个元素都不相同，则返回 false 。 示例 1: 示例 2: 示例 3: Constraints: $1 \\le \\text{nu",meta:[{property:"og:url",content:"https://suanfa8.com/hash-table/solutions/0217-contains-duplicate.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 217 题：存在重复元素（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"哈希表"}]},regularPath:"/hash-table/solutions/0217-contains-duplicate.html",relativePath:"hash-table/solutions/0217-contains-duplicate.md",key:"v-22379377",path:"/hash-table/solutions/0217-contains-duplicate/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：哈希表",slug:"方法一-哈希表"},{level:2,title:"方法二：对数组做预处理（排序）",slug:"方法二-对数组做预处理-排序"}],readingTime:{minutes:2.39,words:718},updateTime:"January 13, 2022 16:02",updateTimeStamp:164208973e4,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:7}]},{title:"「力扣」第 202 题：同构字符串（简单）",frontmatter:{title:"「力扣」第 202 题：同构字符串（简单）",icon:"yongyan",category:"哈希表",tags:["哈希表"],summary:'题目链接：205. 同构字符串。; 题目描述 给定两个字符串 s 和 t，判断它们是否是同构的。 如果 s 中的字符可以按某种映射关系替换得到 t，那么这两个字符串是同构的。 " Two strings s and t are isomorphic if the characters in s can be replaced to get t." 每个出现的',meta:[{property:"og:url",content:"https://suanfa8.com/hash-table/solutions/0205-isomorphic-strings.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 202 题：同构字符串（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"哈希表"}]},regularPath:"/hash-table/solutions/0205-isomorphic-strings.html",relativePath:"hash-table/solutions/0205-isomorphic-strings.md",key:"v-5c6233cb",path:"/hash-table/solutions/0205-isomorphic-strings/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:1.33,words:399},updateTime:"January 13, 2022 16:02",updateTimeStamp:164208973e4,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5}]},{title:"「力扣」第 219 题： 存在重复元素 II（中等）",frontmatter:{title:"「力扣」第 219 题： 存在重复元素 II（中等）",icon:"yongyan",category:"哈希表",tags:["哈希表"],summary:"题目链接：219. 存在重复元素 II;; 题解链接：哈希表（Java、Python）。; 题目描述 给定一个整数数组和一个整数 k，判断数组中是否存在两个不同的索引 i 和 j，使得 nums [i] = nums [j]，并且 i 和 j 的差的绝对值最大为 k。 示例 1： 示例 2: 示例 3: Constraints: 1 <= nums.leng",meta:[{property:"og:url",content:"https://suanfa8.com/hash-table/solutions/0219-contains-duplicate-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 219 题： 存在重复元素 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"哈希表"}]},regularPath:"/hash-table/solutions/0219-contains-duplicate-ii.html",relativePath:"hash-table/solutions/0219-contains-duplicate-ii.md",key:"v-cce7b2b6",path:"/hash-table/solutions/0219-contains-duplicate-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.36,words:708},updateTime:"January 13, 2022 16:02",updateTimeStamp:164208973e4,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:7}]},{title:"「力扣」第 242 题：有效的字母异位词（简单）",frontmatter:{title:"「力扣」第 242 题：有效的字母异位词（简单）",icon:"yongyan",category:"哈希表",tags:["哈希表"],summary:"题目链接：242. 有效的字母异位词。; 题目描述 给定两个字符串 s 和 t ，编写一个函数来判断 t 是否是 s 的字母异位词。 注意：若 s 和 t 中每个字符出现的次数都相同，则称 s 和 t 互为字母异位词。 示例 1: 示例 2: 提示: 1 <= s.length, t.length <= 5 * 10^4; s 和 t 仅包含小写字母; Co",meta:[{property:"og:url",content:"https://suanfa8.com/hash-table/solutions/0242-valid-anagram.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 242 题：有效的字母异位词（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"哈希表"}]},regularPath:"/hash-table/solutions/0242-valid-anagram.html",relativePath:"hash-table/solutions/0242-valid-anagram.md",key:"v-b9742ab6",path:"/hash-table/solutions/0242-valid-anagram/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一",slug:"方法一"},{level:2,title:"方法二",slug:"方法二"}],readingTime:{minutes:1.22,words:366},updateTime:"January 13, 2022 16:02",updateTimeStamp:164208973e4,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:7}]},{title:"「力扣」第 290 题：单词规律（简单）",frontmatter:{title:"「力扣」第 290 题：单词规律（简单）",icon:"yongyan",category:"哈希表",tags:["哈希表"],summary:"题目链接：290. 单词规律。; 题目描述 给定一种规律 pattern 和一个字符串 str ，判断 str 是否遵循相同的规律。 这里的 遵循 指完全匹配，例如， pattern 里的每个字母和字符串 str 中的每个非空单词之间存在着双向连接的对应规律。 示例 1: 示例 2: 示例 3: 示例 4: 说明: 你可以假设 pattern 只包含小写字母",meta:[{property:"og:url",content:"https://suanfa8.com/hash-table/solutions/0290-word-pattern.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 290 题：单词规律（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"哈希表"}]},regularPath:"/hash-table/solutions/0290-word-pattern.html",relativePath:"hash-table/solutions/0290-word-pattern.md",key:"v-c4a7310e",path:"/hash-table/solutions/0290-word-pattern/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:1.4,words:419},updateTime:"January 13, 2022 16:02",updateTimeStamp:164208973e4,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5}]},{title:"「力扣」第 349 题：计算两个数组的交集（简单）",frontmatter:{title:"「力扣」第 349 题：计算两个数组的交集（简单）",icon:"yongyan",category:"哈希表",tags:["哈希表"],summary:"题目链接：349. 两个数组的交集。; 题目描述 给定两个数组，编写一个函数来计算它们的交集。 示例 1： 示例 2： 说明： 输出结果中的每个元素一定是唯一的。; 我们可以不考虑输出结果的顺序。; Constraints: 1 <= nums1.length, nums2.length <= 1000; 0 <= nums1[i], nums2[i] <=",meta:[{property:"og:url",content:"https://suanfa8.com/hash-table/solutions/0349-intersection-of-two-arrays.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 349 题：计算两个数组的交集（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"哈希表"}]},regularPath:"/hash-table/solutions/0349-intersection-of-two-arrays.html",relativePath:"hash-table/solutions/0349-intersection-of-two-arrays.md",key:"v-4faf75d7",path:"/hash-table/solutions/0349-intersection-of-two-arrays/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:.69,words:207},updateTime:"January 13, 2022 16:02",updateTimeStamp:164208973e4,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5}]},{title:"「力扣」第 350 题：两个数组的交集 II（中等）",frontmatter:{title:"「力扣」第 350 题：两个数组的交集 II（中等）",icon:"yongyan",category:"哈希表",tags:["哈希表"],summary:"题目链接：350. 两个数组的交集 II。; 题目描述 给你两个整数数组 nums1 和 nums2 ，请你以数组形式返回两数组的交集。返回结果中每个元素出现的次数，应与元素在两个数组中都出现的次数一致（如果出现次数不一致，则考虑取较小值）。可以不考虑输出结果的顺序。 示例 1： 示例 2: Constraints: 1 <= nums1.length, n",meta:[{property:"og:url",content:"https://suanfa8.com/hash-table/solutions/0350-intersection-of-two-arrays-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 350 题：两个数组的交集 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"哈希表"}]},regularPath:"/hash-table/solutions/0350-intersection-of-two-arrays-ii.html",relativePath:"hash-table/solutions/0350-intersection-of-two-arrays-ii.md",key:"v-20cc1125",path:"/hash-table/solutions/0350-intersection-of-two-arrays-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：哈希表",slug:"方法一-哈希表"},{level:2,title:"方法二：排序以后逐个比较",slug:"方法二-排序以后逐个比较"}],readingTime:{minutes:1.8,words:540},updateTime:"January 13, 2022 16:02",updateTimeStamp:164208973e4,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6}]},{title:"「力扣」第 454 题：四数相加 II（中等）",frontmatter:{title:"「力扣」第 454 题：四数相加 II（中等）",icon:"yongyan",category:"哈希表",tags:["哈希表"],summary:"题目链接：454. 四数相加 II。; 题目描述 给你四个整数数组 nums1、nums2、nums3 和 nums4 ，数组长度都是 n ，请你计算有多少个元组 (i, j, k, l) 能满足： 0 <= i, j, k, l < n; nums1[i] + nums2[j] + nums3[k] + nums4[l] == 0; 示例 1： 示例 2：",meta:[{property:"og:url",content:"https://suanfa8.com/hash-table/solutions/0454-4sum-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 454 题：四数相加 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"哈希表"}]},regularPath:"/hash-table/solutions/0454-4sum-ii.html",relativePath:"hash-table/solutions/0454-4sum-ii.md",key:"v-e7cb6976",path:"/hash-table/solutions/0454-4sum-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.24,words:671},updateTime:"January 13, 2022 16:02",updateTimeStamp:164208973e4,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6}]},{title:"「力扣」第 447 题：回旋镖的数量（中等）",frontmatter:{title:"「力扣」第 447 题：回旋镖的数量（中等）",icon:"yongyan",category:"哈希表",tags:["哈希表"],summary:"题目链接：477. 汉明距离总和。; 题目描述 给定平面上 n 对 互不相同 的点 points ，其中 points[i] = [xi, yi] 。回旋镖 是由点 (i, j, k) 表示的元组 ，其中 i 和 j 之间的距离和 i 和 k 之间的距离相等（需要考虑元组的顺序）。 返回平面上所有回旋镖的数量。 示例 1： 示例 2： 示例 3： 提示： n",meta:[{property:"og:url",content:"https://suanfa8.com/hash-table/solutions/0447-number-of-boomerangs.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 447 题：回旋镖的数量（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"哈希表"}]},regularPath:"/hash-table/solutions/0447-number-of-boomerangs.html",relativePath:"hash-table/solutions/0447-number-of-boomerangs.md",key:"v-3887f5a9",path:"/hash-table/solutions/0447-number-of-boomerangs/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：使用乘法",slug:"方法一-使用乘法"},{level:2,title:"方法二：使用加法",slug:"方法二-使用加法"}],readingTime:{minutes:1.46,words:439},updateTime:"January 13, 2022 16:02",updateTimeStamp:164208973e4,createTime:"December 26, 2021 19:52",createTimeStamp:1640548321e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 1010 题：总持续时间可被 60 整除的歌曲（中等）",frontmatter:{title:"「力扣」第 1010 题：总持续时间可被 60 整除的歌曲（中等）",icon:"yongyan",category:"哈希表",tags:["哈希表"],summary:"题目链接：1010. 总持续时间可被 60 整除的歌曲；; 题解链接：数组 + 哈希表（Python 代码、Java 代码）。; 题目描述 在歌曲列表中，第 i 首歌曲的持续时间为 time[i] 秒。 返回其总持续时间（以秒为单位）可被 60 整除的歌曲对的数量。形式上，我们希望下标数字 i 和 j 满足 i < j 且有 (time[i] + time[",meta:[{property:"og:url",content:"https://suanfa8.com/hash-table/solutions/1010-pairs-of-songs-with-total-durations-divisible-by-60.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1010 题：总持续时间可被 60 整除的歌曲（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"哈希表"}]},regularPath:"/hash-table/solutions/1010-pairs-of-songs-with-total-durations-divisible-by-60.html",relativePath:"hash-table/solutions/1010-pairs-of-songs-with-total-durations-divisible-by-60.md",key:"v-cd41a876",path:"/hash-table/solutions/1010-pairs-of-songs-with-total-durations-divisible-by-60/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.73,words:820},updateTime:"January 13, 2022 16:02",updateTimeStamp:164208973e4,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:7}]},{title:"第 1 节 优先队列简介",frontmatter:{title:"第 1 节 优先队列简介",icon:"yongyan",category:"优先队列",tags:["优先队列","堆"],summary:"这一部分我们介绍优先队列（Priority Queue）。 「优先队列」与「堆」的关系 优先队列（Priority Queue）是一种「抽象的」数据结构；; 堆（Heap）是「具体的」实现，这个系列我们只讲「二叉堆」，其它优先队列的实现不涉及。; 优先队列用于解决什么样的问题 「优先队列」是从下面的这种场景中抽象出来的数据结构。 班级里要选一名同学代表全班参",meta:[{property:"og:url",content:"https://suanfa8.com/heap/01.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 1 节 优先队列简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"优先队列"},{property:"article:tag",content:"堆"}]},regularPath:"/heap/01.html",relativePath:"heap/01.md",key:"v-7f8ee3e5",path:"/heap/01/",headers:[{level:2,title:"「优先队列」与「堆」的关系",slug:"「优先队列」与「堆」的关系"},{level:2,title:"优先队列用于解决什么样的问题",slug:"优先队列用于解决什么样的问题"},{level:2,title:"普通队列与优先队列",slug:"普通队列与优先队列"},{level:3,title:"普通队列",slug:"普通队列"},{level:3,title:"优先队列",slug:"优先队列"},{level:2,title:"更多「优先队列」在生活中的例子",slug:"更多「优先队列」在生活中的例子"},{level:2,title:"优先队列的主要操作",slug:"优先队列的主要操作"}],readingTime:{minutes:3.3,words:991},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126676e3,createTime:"December 15, 2021 10:31",createTimeStamp:1639564309e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"第 3 节 最大堆的第 1 个重要操作：Sift Up",frontmatter:{title:"第 3 节 最大堆的第 1 个重要操作：Sift Up",icon:"yongyan",category:"优先队列",tags:["优先队列","堆"],summary:'" 保持了定义，这里的 siftUp 操作也叫「保持了循环不变量」。" 最大堆的第 1 个重要操作：向一个「最大堆」中添加元素 向一个「最大堆」中添加元素，对应优先队列中「入队」操作，同时还要保持「最大堆」的性质，即根元素是「最大堆」中最大的元素，即：除了根结点以外任意一个结点不大于它的父亲结点； 这个操作叫做 siftUp 为此，向「最大堆」中的添加元素的',meta:[{property:"og:url",content:"https://suanfa8.com/heap/03.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 3 节 最大堆的第 1 个重要操作：Sift Up"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"优先队列"},{property:"article:tag",content:"堆"}]},regularPath:"/heap/03.html",relativePath:"heap/03.md",key:"v-244c5125",path:"/heap/03/",headers:[{level:2,title:"最大堆的第 1 个重要操作：向一个「最大堆」中添加元素",slug:"最大堆的第-1-个重要操作-向一个「最大堆」中添加元素"},{level:2,title:"这个操作叫做 siftUp",slug:"这个操作叫做-siftup"}],readingTime:{minutes:4.07,words:1222},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126676e3,createTime:"December 15, 2021 10:31",createTimeStamp:1639564309e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"第 2 节 优先队列的实现",frontmatter:{title:"第 2 节 优先队列的实现",icon:"yongyan",category:"优先队列",tags:["优先队列","堆"],summary:"优先队列的几种实现方式 如果不考虑时间复杂度，「优先队列」可以有以下两种实现方式：「无序数组」和「有序数组」。 实现 1 ：无序数组 放入的时候，直接放在数组的末尾，时间复杂度：$O(1)$。每次拿出元素之前，我们都排个序，或者像「选择排序」那样，把最大的那个拿出去就好了，时间复杂度是：$O(n)$。 实现 2 ：有序数组 每次放入元素的时候，我们都排个序，",meta:[{property:"og:url",content:"https://suanfa8.com/heap/02.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 2 节 优先队列的实现"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"优先队列"},{property:"article:tag",content:"堆"}]},regularPath:"/heap/02.html",relativePath:"heap/02.md",key:"v-5c24caf6",path:"/heap/02/",headers:[{level:2,title:"优先队列的几种实现方式",slug:"优先队列的几种实现方式"},{level:3,title:"实现 1 ：无序数组",slug:"实现-1-无序数组"},{level:3,title:"实现 2 ：有序数组",slug:"实现-2-有序数组"},{level:3,title:"三种数据结构对于实现优先队列的时间复杂度的比较",slug:"三种数据结构对于实现优先队列的时间复杂度的比较"},{level:2,title:"最大堆与最小堆",slug:"最大堆与最小堆"},{level:2,title:"二叉堆 Binary Heap 的特点",slug:"二叉堆-binary-heap-的特点"},{level:2,title:"使用数组实现二叉堆",slug:"使用数组实现二叉堆"},{level:2,title:"从下标为 1 开始的数组实现的二叉堆的性质",slug:"从下标为-1-开始的数组实现的二叉堆的性质"},{level:2,title:"体会使用数组来表示一个完全二叉树的好处",slug:"体会使用数组来表示一个完全二叉树的好处"}],readingTime:{minutes:7.73,words:2318},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126676e3,createTime:"December 15, 2021 10:31",createTimeStamp:1639564309e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"第 4 节 Sift Down",frontmatter:{title:"第 4 节 Sift Down",icon:"yongyan",category:"优先队列",tags:["优先队列","堆"],summary:"最大堆的第 2 个重要操作：向从一个最大堆中取出元素 根据堆有序的性质，根结点是堆（数组）中最大的元素，即数组里下标为 1 的元素；; 从最大堆中取出一个元素，即是取出根结点元素，同时还要保持最大堆的性质；; 根结点取出以后，1 号下标位置为空，于是我们将当前数组的最后一个元素放到 1 号下标的位置。这样做是因为交换和移动的次数最少，这种想法也应该是十分自然",meta:[{property:"og:url",content:"https://suanfa8.com/heap/04.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 4 节 Sift Down"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"优先队列"},{property:"article:tag",content:"堆"}]},regularPath:"/heap/04.html",relativePath:"heap/04.md",key:"v-76ab07c5",path:"/heap/04/",readingTime:{minutes:6.8,words:2039},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126676e3,createTime:"December 15, 2021 10:31",createTimeStamp:1639564309e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"第 5 节 堆排序、heapify、原地堆排序",frontmatter:{title:"第 5 节 堆排序、heapify、原地堆排序",icon:"yongyan",category:"优先队列",tags:["优先队列","堆"],summary:'说明： " 以下出现 sift down 的地方有可能写作 shift down，还有可能写作 sink ，它们都表示「下沉」的意思；" "" " 同理，出现 sift up 的地方有可能写作 shift up，还有可能写作 swim ，它们都表示「上浮」的意思；" "" " 因为我个人的原因，给大家造成不便，请各位谅解。" 以下说明来自 liuyubobo',meta:[{property:"og:url",content:"https://suanfa8.com/heap/05.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 5 节 堆排序、heapify、原地堆排序"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"优先队列"},{property:"article:tag",content:"堆"}]},regularPath:"/heap/05.html",relativePath:"heap/05.md",key:"v-6dec8336",path:"/heap/05/",headers:[{level:3,title:"基础堆排序和 Heapify",slug:"基础堆排序和-heapify"},{level:3,title:"思路 1：一个一个放进最大堆，再一个一个地取出完成排序",slug:"思路-1-一个一个放进最大堆-再一个一个地取出完成排序"},{level:3,title:"思路 2 ：一次性复制数组元素到新的数组，新数组自我调整成最大堆",slug:"思路-2-一次性复制数组元素到新的数组-新数组自我调整成最大堆"},{level:3,title:"heapify",slug:"heapify"},{level:3,title:"原地堆排序",slug:"原地堆排序"},{level:2,title:"排序算法总结",slug:"排序算法总结"},{level:3,title:"平均时间复杂度",slug:"平均时间复杂度"},{level:3,title:"对我们学习过的各种排序算法的总结和对比",slug:"对我们学习过的各种排序算法的总结和对比"},{level:3,title:"排序算法的稳定性",slug:"排序算法的稳定性"},{level:3,title:"对未来的探索",slug:"对未来的探索"},{level:3,title:"本文源代码",slug:"本文源代码"}],readingTime:{minutes:13.2,words:3960},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126676e3,createTime:"December 15, 2021 10:31",createTimeStamp:1639564309e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"第 6 节 索引堆",frontmatter:{title:"第 6 节 索引堆",icon:"yongyan",category:"优先队列",tags:["优先队列","堆"],summary:"# 索引堆是一个相对于普通堆更加高级的数据结构。 为什么要引入索引堆这个数据结构？ 在一些场景下，堆这个数据结构不高效，或者说功能不够用： 1、如果元素是非常复杂的结构（例如是长字符串），交换这件事情会产生大量的性能消耗； 我们之前在堆中的操作有大量地交换操作，这种直接交换内存的操作，在元素占用内存比较小的时候，并没有多少性能的消耗，但是当须交换位置的元素占",meta:[{property:"og:url",content:"https://suanfa8.com/heap/06.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 6 节 索引堆"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"优先队列"},{property:"article:tag",content:"堆"}]},regularPath:"/heap/06.html",relativePath:"heap/06.md",key:"v-1b687505",path:"/heap/06/",headers:[{level:3,title:"为什么要引入索引堆这个数据结构？",slug:"为什么要引入索引堆这个数据结构"},{level:3,title:"最大索引堆",slug:"最大索引堆"},{level:2,title:"索引堆的优化：反向查找",slug:"索引堆的优化-反向查找"},{level:3,title:"索引堆的应用",slug:"索引堆的应用"},{level:3,title:"本文源代码",slug:"本文源代码"},{level:2,title:"参考资料",slug:"参考资料"},{level:2,title:"堆排序和 Heapify",slug:"堆排序和-heapify"},{level:3,title:"什么是基础堆排序",slug:"什么是基础堆排序"},{level:3,title:"最大堆的第 3 个重要操作：heapify",slug:"最大堆的第-3-个重要操作-heapify"},{level:3,title:"原地堆排序",slug:"原地堆排序"},{level:3,title:"索引堆",slug:"索引堆"},{level:3,title:"索引堆的优化",slug:"索引堆的优化"},{level:3,title:"索引堆的应用",slug:"索引堆的应用-2"},{level:2,title:"参考资料",slug:"参考资料-2"}],readingTime:{minutes:21.62,words:6486},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126676e3,createTime:"December 15, 2021 10:31",createTimeStamp:1639564309e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"优先队列精讲",frontmatter:{summary:"优先队列精讲 ADT 放在哪里讲出来。 1、优先队列，相对于普通的队列，按照时间顺序，先进先出，后进后出而言，它是按照优先级出队的。 出队顺序与入队顺序无关; 2; 2、优先队列的应用 操作系统的调度，分配时间片，动态选择优先级最高的任务执行，不能一开始就确定任务处理中心，一开始就处理多少任务，随时根据新的任务处理。不排序，仍然可以高效地完成任务。; 我们的",meta:[{property:"og:url",content:"https://suanfa8.com/heap/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"优先队列精讲"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/heap/",relativePath:"heap/README.md",key:"v-2e55a5a6",path:"/heap/",readingTime:{minutes:.71,words:212},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126676e3,createTime:"December 15, 2021 10:31",createTimeStamp:1639564309e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"优先队列的应用",frontmatter:{title:"优先队列的应用",icon:"yongyan",category:"优先队列",tags:["优先队列","堆"],summary:"优先队列的应用 1. 多路归并排序（「力扣」第 23 题：合并 K 个排序链表）； 2. 图论中的最小生成树算法； 3. 图论中的最短路径算法； 4. 哈夫曼树与哈夫曼编码。",meta:[{property:"og:url",content:"https://suanfa8.com/heap/practice.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"优先队列的应用"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"优先队列"},{property:"article:tag",content:"堆"}]},regularPath:"/heap/practice.html",relativePath:"heap/practice.md",key:"v-24c00325",path:"/heap/practice/",headers:[{level:2,title:"优先队列的应用",slug:"优先队列的应用"}],readingTime:{minutes:.2,words:61},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126676e3,createTime:"December 16, 2021 08:57",createTimeStamp:1639645035e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4},{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 23 题：合并 K 个排序链表",frontmatter:{title:"「力扣」第 23 题：合并 K 个排序链表",icon:"yongyan",category:"优先队列",tags:["优先队列"],summary:"题目链接：23. 合并 K 个排序链表；; 题解链接：贪心算法、优先队列 + 分治法（Python 代码、Java 代码）。; 题目描述 给你一个链表数组，每个链表都已经按升序排列。 请你将所有链表合并到一个升序链表中，返回合并后的链表。 示例 1： 示例 2： 示例 3： 提示： k == lists.length; 0 <= k <= 10^4; 0 <",meta:[{property:"og:url",content:"https://suanfa8.com/heap/solutions/0023-merge-k-sorted-lists.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 23 题：合并 K 个排序链表"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"优先队列"}]},regularPath:"/heap/solutions/0023-merge-k-sorted-lists.html",relativePath:"heap/solutions/0023-merge-k-sorted-lists.md",key:"v-da0d241e",path:"/heap/solutions/0023-merge-k-sorted-lists/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法：优先队列",slug:"方法-优先队列"}],readingTime:{minutes:2.58,words:773},updateTime:"January 12, 2022 23:38",updateTimeStamp:1642030735e3,createTime:"January 6, 2022 08:07",createTimeStamp:1641456425e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 215 题：数组第 k 大的元素（中等）",frontmatter:{title:"「力扣」第 215 题：数组第 k 大的元素（中等）",icon:"yongyan",category:"优先队列",tags:["优先队列"],summary:"中文网址：215. 数组中的第 K 个最大元素 ；; 题解地址：通过 partition 减治 + 优先队列（Java）。; 题目描述 给定整数数组 nums 和整数 k，请返回数组中第 k 个最大的元素。 请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。 示例 1: 示例 2: 提示： 1 <= k <= nums.len",meta:[{property:"og:url",content:"https://suanfa8.com/heap/solutions/0215-kth-largest-element-in-an-array.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 215 题：数组第 k 大的元素（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"优先队列"}]},regularPath:"/heap/solutions/0215-kth-largest-element-in-an-array.html",relativePath:"heap/solutions/0215-kth-largest-element-in-an-array.md",key:"v-99fdfab6",path:"/heap/solutions/0215-kth-largest-element-in-an-array/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.09,words:628},updateTime:"January 12, 2022 23:38",updateTimeStamp:1642030735e3,createTime:"January 6, 2022 08:07",createTimeStamp:1641456425e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 218 题：天际线问题（困难）",frontmatter:{title:"「力扣」第 218 题：天际线问题（困难）",icon:"jingxuan",category:"优先队列",tags:["优先队列","堆","二叉搜索树"],summary:"题目链接：218. 天际线问题；; 题解链接：优先队列 + 延迟删除技巧（Java）。; 题目描述 城市的天际线是从远处观看该城市中所有建筑物形成的轮廓的外部轮廓。给你所有建筑物的位置和高度，请返回由这些建筑物形成的 天际线 。 每个建筑物的几何信息由数组 buildings 表示，其中三元组 buildings[i] = [lefti, righti, h",meta:[{property:"og:url",content:"https://suanfa8.com/heap/solutions/0218-the-skyline-problem.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 218 题：天际线问题（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"优先队列"},{property:"article:tag",content:"堆"},{property:"article:tag",content:"二叉搜索树"}]},regularPath:"/heap/solutions/0218-the-skyline-problem.html",relativePath:"heap/solutions/0218-the-skyline-problem.md",key:"v-3c6586c5",path:"/heap/solutions/0218-the-skyline-problem/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"理解题意",slug:"理解题意"},{level:2,title:"方法一：优先队列",slug:"方法一-优先队列"},{level:2,title:"方法二：二分搜索树",slug:"方法二-二分搜索树"}],readingTime:{minutes:8.17,words:2452},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 295 题：数据流的中位数（困难）",frontmatter:{title:"「力扣」第 295 题：数据流的中位数（困难）",icon:"yongyan",category:"优先队列",tags:["优先队列"],summary:"题目链接：295. 数据流的中位数。; 题目描述 中位数是有序列表中间的数。如果列表长度是偶数，中位数则是中间两个数的平均值。 例如， [2,3,4] 的中位数是 3 [2,3] 的中位数是 (2 + 3) / 2 = 2.5 设计一个支持以下两种操作的数据结构： void addNum(int num) - 从数据流中添加一个整数到数据结构中。; doub",meta:[{property:"og:url",content:"https://suanfa8.com/heap/solutions/0295-find-median-from-data-stream.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 295 题：数据流的中位数（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"优先队列"}]},regularPath:"/heap/solutions/0295-find-median-from-data-stream.html",relativePath:"heap/solutions/0295-find-median-from-data-stream.md",key:"v-ea990176",path:"/heap/solutions/0295-find-median-from-data-stream/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"中位数的性质",slug:"中位数的性质"},{level:2,title:"算法描述",slug:"算法描述"},{level:2,title:"总结",slug:"总结"},{level:2,title:"使用自己实现的「最大堆」和「最小堆」",slug:"使用自己实现的「最大堆」和「最小堆」"}],readingTime:{minutes:11.09,words:3326},updateTime:"January 12, 2022 23:38",updateTimeStamp:1642030735e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 313 题：超级丑数（中等）",frontmatter:{title:"「力扣」第 313 题：超级丑数（中等）",icon:"yongyan",category:"优先队列",tags:["优先队列"],summary:"题目链接：313. 超级丑数；; 题解链接：动态规划（Java）。; 题目描述 超级丑数 是一个正整数，并满足其所有质因数都出现在质数数组 primes 中。 给你一个整数 n 和一个整数数组 primes ，返回第 n 个 超级丑数 。 题目数据保证第 n 个 超级丑数 在 32-bit 带符号整数范围内。 示例 1： 示例 2： 提示： 1 <= n <",meta:[{property:"og:url",content:"https://suanfa8.com/heap/solutions/0313-super-ugly-number.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 313 题：超级丑数（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"优先队列"}]},regularPath:"/heap/solutions/0313-super-ugly-number.html",relativePath:"heap/solutions/0313-super-ugly-number.md",key:"v-056a6d45",path:"/heap/solutions/0313-super-ugly-number/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"理解题意",slug:"理解题意"},{level:2,title:"方法：动态规划",slug:"方法-动态规划"}],readingTime:{minutes:4.52,words:1357},updateTime:"January 12, 2022 23:38",updateTimeStamp:1642030735e3,createTime:"January 1, 2022 11:46",createTimeStamp:1641037611e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 347 题：前 K 个高频元素（中等）",frontmatter:{title:"「力扣」第 347 题：前 K 个高频元素（中等）",icon:"yongyan",category:"优先队列",tags:["优先队列"],summary:"题目链接：347. 前 K 个高频元素。; 题目描述 给你一个整数数组 nums 和一个整数 k ，请你返回其中出现频率前 k 高的元素。你可以按 任意顺序 返回答案。 示例 1: 示例 2: 提示： 1 <= nums.length <= 10^5; k 的取值范围是 [1, 数组中不相同的元素的个数]; 题目数据保证答案唯一，换句话说，数组中前 k 个高",meta:[{property:"og:url",content:"https://suanfa8.com/heap/solutions/0347-top-k-frequent-elements.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 347 题：前 K 个高频元素（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"优先队列"}]},regularPath:"/heap/solutions/0347-top-k-frequent-elements.html",relativePath:"heap/solutions/0347-top-k-frequent-elements.md",key:"v-168abe05",path:"/heap/solutions/0347-top-k-frequent-elements/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"题意分析",slug:"题意分析"},{level:2,title:"方法一：优先队列（堆）",slug:"方法一-优先队列-堆"},{level:2,title:"方法二：快速排序的子过程",slug:"方法二-快速排序的子过程"}],readingTime:{minutes:3.71,words:1113},updateTime:"May 2, 2022 05:23",updateTimeStamp:1651469016e3,createTime:"December 27, 2021 13:57",createTimeStamp:1640613471e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5}]},{title:"「力扣」第 451 题：根据字符出现频率排序（中等）",frontmatter:{title:"「力扣」第 451 题：根据字符出现频率排序（中等）",icon:"yongyan",category:"优先队列",tags:["优先队列"],summary:"题目链接：451. 根据字符出现频率排序。; 题目描述 给定一个字符串，请将字符串里的字符按照出现的频率降序排列。 示例 1: 示例 2: 示例 3: Constraints: 1 <= s.length <= 5 * 10^5; s consists of uppercase and lowercase English letters and digits",meta:[{property:"og:url",content:"https://suanfa8.com/heap/solutions/0451-sort-characters-by-frequency.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 451 题：根据字符出现频率排序（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"优先队列"}]},regularPath:"/heap/solutions/0451-sort-characters-by-frequency.html",relativePath:"heap/solutions/0451-sort-characters-by-frequency.md",key:"v-07c36673",path:"/heap/solutions/0451-sort-characters-by-frequency/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：排序 + 哈希表",slug:"方法一-排序-哈希表"},{level:2,title:"方法二：优先队列",slug:"方法二-优先队列"}],readingTime:{minutes:1.48,words:444},updateTime:"January 12, 2022 23:38",updateTimeStamp:1642030735e3,createTime:"January 6, 2022 08:07",createTimeStamp:1641456425e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5}]},{title:"「力扣」第 703 题：数据流中的第 K 大元素（简单）",frontmatter:{title:"「力扣」第 703 题：数据流中的第 K 大元素（简单）",icon:"yongyan",category:"优先队列",tags:["优先队列"],summary:"题目链接：703. 数据流中的第 K 大元素。; 题目描述 设计一个找到数据流中第 k 大元素的类（class）。注意是排序后的第 k 大元素，不是第 k 个不同的元素。 请实现 KthLargest 类： KthLargest(int k, int[] nums) 使用整数 k 和整数流 nums 初始化对象。; int add(int val) 将 va",meta:[{property:"og:url",content:"https://suanfa8.com/heap/solutions/0703-kth-largest-element-in-a-stream.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 703 题：数据流中的第 K 大元素（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"优先队列"}]},regularPath:"/heap/solutions/0703-kth-largest-element-in-a-stream.html",relativePath:"heap/solutions/0703-kth-largest-element-in-a-stream.md",key:"v-78782c85",path:"/heap/solutions/0703-kth-largest-element-in-a-stream/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:.98,words:294},updateTime:"January 12, 2022 23:38",updateTimeStamp:1642030735e3,createTime:"December 27, 2021 13:57",createTimeStamp:1640613471e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 973 题：最接近原点的 K 个点（中等）",frontmatter:{title:"「力扣」第 973 题：最接近原点的 K 个点（中等）",icon:"yongyan",category:"优先队列",tags:["优先队列"],summary:"题目链接：973. 最接近原点的 K 个点。; 题目描述 我们有一个由平面上的点组成的列表 points。需要从中找出 K 个距离原点 (0, 0) 最近的点。 （这里，平面上两点之间的距离是欧几里德距离。） 你可以按任何顺序返回答案。除了点坐标的顺序之外，答案确保是唯一的。 示例 1： 示例 2： 提示： 1. 1 <= K <= points.lengt",meta:[{property:"og:url",content:"https://suanfa8.com/heap/solutions/0973-k-closest-points-to-origin.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 973 题：最接近原点的 K 个点（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"优先队列"}]},regularPath:"/heap/solutions/0973-k-closest-points-to-origin.html",relativePath:"heap/solutions/0973-k-closest-points-to-origin.md",key:"v-30a87129",path:"/heap/solutions/0973-k-closest-points-to-origin/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.07,words:322},updateTime:"January 12, 2022 23:38",updateTimeStamp:1642030735e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 1046 题：最后一块石头的重量（中等）",frontmatter:{title:"「力扣」第 1046 题：最后一块石头的重量（中等）",icon:"yongyan",category:"优先队列",tags:["优先队列"],summary:"题目链接：1046. 最后一块石头的重量；; 题解链接：使用优先队列模拟问题（Java）。; 题目描述 有一堆石头，每块石头的重量都是正整数。 每一回合，从中选出两块 最重的 石头，然后将它们一起粉碎。假设石头的重量分别为 x 和 y，且 x <= y。那么粉碎的可能结果如下： 如果 x == y，那么两块石头都会被完全粉碎；; 如果 x != y，那么重量",meta:[{property:"og:url",content:"https://suanfa8.com/heap/solutions/1046-last-stone-weight.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1046 题：最后一块石头的重量（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"优先队列"}]},regularPath:"/heap/solutions/1046-last-stone-weight.html",relativePath:"heap/solutions/1046-last-stone-weight.md",key:"v-2a59b585",path:"/heap/solutions/1046-last-stone-weight/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:1.65,words:495},updateTime:"January 12, 2022 23:38",updateTimeStamp:1642030735e3,createTime:"January 6, 2022 08:07",createTimeStamp:1641456425e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 1282 题：用户分组（中等）",frontmatter:{title:"「力扣」第 1282 题：用户分组（中等）",icon:"yongyan",category:"优先队列",tags:["优先队列"],summary:"题目链接：1282. 用户分组。; 题目描述 有 n 位用户参加活动，他们的 ID 从 0 到 n - 1，每位用户都 恰好 属于某一用户组。给你一个长度为 n 的数组 groupSizes，其中包含每位用户所处的用户组的大小，请你返回用户分组情况（存在的用户组以及每个组中用户的 ID）。 你可以任何顺序返回解决方案，ID 的顺序也不受限制。此外，题目给出的",meta:[{property:"og:url",content:"https://suanfa8.com/heap/solutions/1282-group-the-people-given-the-group-size-they-belong-to.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1282 题：用户分组（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"优先队列"}]},regularPath:"/heap/solutions/1282-group-the-people-given-the-group-size-they-belong-to.html",relativePath:"heap/solutions/1282-group-the-people-given-the-group-size-they-belong-to.md",key:"v-07cfe499",path:"/heap/solutions/1282-group-the-people-given-the-group-size-they-belong-to/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:3.19,words:956},updateTime:"January 12, 2022 23:38",updateTimeStamp:1642030735e3,createTime:"December 27, 2021 13:57",createTimeStamp:1640613471e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 1296 题：划分数组为连续数字的集合（中等）",frontmatter:{title:"「力扣」第 1296 题：划分数组为连续数字的集合（中等）",icon:"yongyan",category:"优先队列",tags:["优先队列"],summary:"题目链接：1296. 划分数组为连续数字的集合；; 题解链接：优先队列（适合 Java 代码，C++ 和 Python 不支持 remove 操作，故不适用）。; 题目描述 给你一个整数数组 nums 和一个正整数 k，请你判断是否可以把这个数组划分成一些由 k 个连续数字组成的集合。 如果可以，请返回 true；否则，返回 false。 示例 1： 示例 ",meta:[{property:"og:url",content:"https://suanfa8.com/heap/solutions/1296-divide-array-in-sets-of-k-consecutive-numbers.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1296 题：划分数组为连续数字的集合（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"优先队列"}]},regularPath:"/heap/solutions/1296-divide-array-in-sets-of-k-consecutive-numbers.html",relativePath:"heap/solutions/1296-divide-array-in-sets-of-k-consecutive-numbers.md",key:"v-5f8b0b65",path:"/heap/solutions/1296-divide-array-in-sets-of-k-consecutive-numbers/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:2.99,words:897},updateTime:"January 12, 2022 23:38",updateTimeStamp:1642030735e3,createTime:"January 6, 2022 08:07",createTimeStamp:1641456425e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"链表问题",frontmatter:{summary:"链表问题 LRU（看现在）：活在当下。比如在公司中，一个新员工做出新业绩，马上会得到重用。 LFU（看历史）：以史为镜。还是比如在公司中，新员工必须做出比那些功勋卓著的老员工更多更好的业绩才可以受到老板重视，这样的方式比较尊重「前辈」。 链表 单向链表（单链表） 双链表 单向循环链表 双向循环链表 约瑟夫问题 静态链表 「力扣」第 23 题：合并K个排序链表",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"链表问题"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/linked-list/",relativePath:"linked-list/README.md",key:"v-42cbc720",path:"/linked-list/",headers:[{level:2,title:"链表",slug:"链表"},{level:2,title:"单向链表（单链表）",slug:"单向链表-单链表"},{level:2,title:"双链表",slug:"双链表"},{level:2,title:"单向循环链表",slug:"单向循环链表"},{level:2,title:"双向循环链表",slug:"双向循环链表"},{level:2,title:"静态链表",slug:"静态链表"},{level:2,title:"「力扣」第 24 题：两两交换链表的结点",slug:"「力扣」第-24-题-两两交换链表的结点"},{level:3,title:"链表",slug:"链表-2"},{level:2,title:"知识点总结",slug:"知识点总结"},{level:3,title:"「力扣」第 206 题：反转链表",slug:"「力扣」第-206-题-反转链表"},{level:3,title:"「力扣」第 92 题：反转从位置 m 到 n 的链表，k 个组进行一次反转",slug:"「力扣」第-92-题-反转从位置-m-到-n-的链表-k-个组进行一次反转"},{level:3,title:"「力扣」第 86 题：分割链表",slug:"「力扣」第-86-题-分割链表"},{level:3,title:"「力扣」第 2 题、第 445 题：链表求和",slug:"「力扣」第-2-题、第-445-题-链表求和"},{level:3,title:"「力扣」第 2 题：两数相加",slug:"「力扣」第-2-题-两数相加"},{level:3,title:"LeetCode 第 445 题：两数相加 II",slug:"leetcode-第-445-题-两数相加-ii"},{level:2,title:"删除链表中等于给定值 val 的所有结点",slug:"删除链表中等于给定值-val-的所有结点"},{level:3,title:"「力扣」第 203 题：删除链表中等于给定值 val 的所有结点",slug:"「力扣」第-203-题-删除链表中等于给定值-val-的所有结点"},{level:3,title:"「力扣」第 203 题：移除链表元素",slug:"「力扣」第-203-题-移除链表元素"},{level:3,title:"「力扣」第 82 题：删除排序链表中的重复元素 II",slug:"「力扣」第-82-题-删除排序链表中的重复元素-ii"},{level:3,title:"「力扣」第 83 题：删除排序链表中的重复元素",slug:"「力扣」第-83-题-删除排序链表中的重复元素"},{level:3,title:"「力扣」第 328 题：奇数（Odd）偶数（Even）链表",slug:"「力扣」第-328-题-奇数-odd-偶数-even-链表"},{level:3,title:"「力扣」第 147 题：单链表的插入排序",slug:"「力扣」第-147-题-单链表的插入排序"},{level:3,title:"「力扣」第 148 题：单链表的排序，使用归并排序",slug:"「力扣」第-148-题-单链表的排序-使用归并排序"},{level:3,title:"「力扣」第 24 题：两两交换链表中的结点",slug:"「力扣」第-24-题-两两交换链表中的结点"},{level:3,title:"「力扣」第 25 题：k 个一组交换链表",slug:"「力扣」第-25-题-k-个一组交换链表"},{level:3,title:"「力扣」第 138 题：复制带随机指针的链表",slug:"「力扣」第-138-题-复制带随机指针的链表"},{level:3,title:"「力扣」第 109 题：有序链表转换二叉搜索树",slug:"「力扣」第-109-题-有序链表转换二叉搜索树"},{level:3,title:"「力扣」第 237 题：删除链表中的结点",slug:"「力扣」第-237-题-删除链表中的结点"},{level:3,title:"「力扣」第 21 题：合并两个有序链表",slug:"「力扣」第-21-题-合并两个有序链表"},{level:3,title:"「力扣」第 21 题：合并两个有序链表",slug:"「力扣」第-21-题-合并两个有序链表-2"},{level:3,title:"「力扣」第 23 题：合并 K 个排序链表",slug:"「力扣」第-23-题-合并-k-个排序链表"},{level:3,title:"「力扣」第 19 题：删除链表的倒数第 N 个结点",slug:"「力扣」第-19-题-删除链表的倒数第-n-个结点"},{level:3,title:"「力扣」第 61 题：旋转链表",slug:"「力扣」第-61-题-旋转链表"},{level:3,title:"「力扣」第 143 题：重排链表",slug:"「力扣」第-143-题-重排链表"},{level:3,title:"「力扣」第 234 题：回文链表",slug:"「力扣」第-234-题-回文链表"},{level:3,title:"「力扣」第 141 题：找出链表中是否有环",slug:"「力扣」第-141-题-找出链表中是否有环"},{level:3,title:"「力扣」第 142 题：找出链表的入口结点",slug:"「力扣」第-142-题-找出链表的入口结点"},{level:3,title:"「力扣」第 114 题：二叉树展开为链表",slug:"「力扣」第-114-题-二叉树展开为链表"},{level:2,title:"链表的中间结点",slug:"链表的中间结点"},{level:3,title:"「力扣」第 876 题：单链表的一个常见操作，设置快慢指针。",slug:"「力扣」第-876-题-单链表的一个常见操作-设置快慢指针。"},{level:3,title:"「力扣」第 61 题：链表向右旋转",slug:"「力扣」第-61-题-链表向右旋转"}],readingTime:{minutes:13.47,words:4040},updateTime:"December 22, 2021 02:02",updateTimeStamp:1640138547e3,createTime:"December 22, 2021 02:02",createTimeStamp:1640138547e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 2 题：两个数相加（中等）",frontmatter:{title:"「力扣」第 2 题：两个数相加（中等）",icon:"yongyan",category:"链表",tags:["链表"],summary:"题目链接：2. 两数相加；; 题解链接：穿针引线。; 题目描述 给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。 请你将两个数相加，并以相同形式返回一个表示和的链表。 你可以假设除了数字 0 之外，这两个数都不会以 0 开头。 示例 1： 示例 2： 示例 3： 提示： 每个链表中的节点",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/0002-add-two-numbers.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 2 题：两个数相加（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"}]},regularPath:"/linked-list/basic/0002-add-two-numbers.html",relativePath:"linked-list/basic/0002-add-two-numbers.md",key:"v-51e1b0b1",path:"/linked-list/basic/0002-add-two-numbers/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"方法一：在两个链表的结点都到达末尾时结束遍历",slug:"方法一-在两个链表的结点都到达末尾时结束遍历"},{level:3,title:"方法二：在两个链表的结点其中有一个到达末尾时结束遍历",slug:"方法二-在两个链表的结点其中有一个到达末尾时结束遍历"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法：穿针引线",slug:"方法-穿针引线"}],readingTime:{minutes:3.68,words:1103},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 02:02",createTimeStamp:1640138547e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6}]},{title:"「力扣」第 21 题：合并两个有序链表（简单）",frontmatter:{title:"「力扣」第 21 题：合并两个有序链表（简单）",icon:"yongyan",category:"链表",tags:["链表","递归"],summary:"中文网址：21. 合并两个有序链表 ；; 题解地址：穿针引线（Java 代码）。; 题目描述 将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 示例 1： 示例 2： 示例 3： 提示： 两个链表的节点数目范围是 [0, 50]; -100 <= Node.val <= 100; l1 和 l2 均按 非递减顺",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/0021-merge-two-sorted-lists.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 21 题：合并两个有序链表（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"},{property:"article:tag",content:"递归"}]},regularPath:"/linked-list/basic/0021-merge-two-sorted-lists.html",relativePath:"linked-list/basic/0021-merge-two-sorted-lists.md",key:"v-f73400f6",path:"/linked-list/basic/0021-merge-two-sorted-lists/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:3,title:"方法一：穿针引线（非递归）",slug:"方法一-穿针引线-非递归"},{level:3,title:"方法二：递归",slug:"方法二-递归"}],readingTime:{minutes:2.15,words:645},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 02:40",createTimeStamp:1640140815e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:8}]},{title:"「力扣」第 23 题：合并 K 个排序链表（困难）",frontmatter:{title:"「力扣」第 23 题：合并 K 个排序链表（困难）",icon:"yongyan",category:"链表",tags:["贪心算法","优先队列","分治算法","链表"],summary:"题目链接：23. 合并 K 个升序链表; 题解链接：贪心算法、优先队列 + 分治法（Python 代码、Java 代码）; 题目描述 给你一个链表数组，每个链表都已经按升序排列。 请你将所有链表合并到一个升序链表中，返回合并后的链表。 示例 1： 示例 2： 示例 3： 提示： k == lists.length; 0 <= k <= 10^4; 0 <= ",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/0023-merge-k-sorted-lists.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 23 题：合并 K 个排序链表（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"贪心算法"},{property:"article:tag",content:"优先队列"},{property:"article:tag",content:"分治算法"},{property:"article:tag",content:"链表"}]},regularPath:"/linked-list/basic/0023-merge-k-sorted-lists.html",relativePath:"linked-list/basic/0023-merge-k-sorted-lists.md",key:"v-3dfb40b6",path:"/linked-list/basic/0023-merge-k-sorted-lists/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：优先队列",slug:"方法一-优先队列"},{level:2,title:"方法二：分治算法",slug:"方法二-分治算法"}],readingTime:{minutes:1.36,words:407},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 03:19",createTimeStamp:1640143172e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:7}]},{title:"「力扣」第 24 题：两两交换链表中的结点（中等）",frontmatter:{title:"「力扣」第 24 题：两两交换链表中的结点（中等）",icon:"yongyan",category:"链表",tags:["链表","递归"],summary:"题目链接：24. 两两交换链表中的节点 ；; 题解链接：穿针引线、递归。; 题目描述 给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。 示例 1： 示例 2： 示例 3： 提示： 链表中节点的数目在范围 [0, 100] 内; 0 <= Node.val <= 100; --",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/0024-swap-nodes-in-pairs.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 24 题：两两交换链表中的结点（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"},{property:"article:tag",content:"递归"}]},regularPath:"/linked-list/basic/0024-swap-nodes-in-pairs.html",relativePath:"linked-list/basic/0024-swap-nodes-in-pairs.md",key:"v-0968fa46",path:"/linked-list/basic/0024-swap-nodes-in-pairs/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：穿针引线",slug:"方法一-穿针引线"},{level:2,title:"方法二：递归",slug:"方法二-递归"}],readingTime:{minutes:2.24,words:671},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 02:40",createTimeStamp:1640140815e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:9}]},{title:"「力扣」第 25 题：K 个一组翻转链表（困难）",frontmatter:{title:"「力扣」第 25 题：K 个一组翻转链表（困难）",icon:"yongyan",category:"链表",tags:["链表","递归"],summary:"题目链接：25. k 个一组翻转链表；; 英文链接：25. Reverse Nodes in k-Group。; 题目描述 给你一个链表，每 k 个节点一组进行翻转，请你返回翻转后的链表。 k 是一个正整数，它的值小于或等于链表的长度。 如果节点总数不是 k 的整数倍，那么请将最后剩余的节点保持原有顺序。 进阶： 你可以设计一个只使用常数额外空间的算法来解决",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/0025-reverse-nodes-in-k-group.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 25 题：K 个一组翻转链表（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"},{property:"article:tag",content:"递归"}]},regularPath:"/linked-list/basic/0025-reverse-nodes-in-k-group.html",relativePath:"linked-list/basic/0025-reverse-nodes-in-k-group.md",key:"v-ffef3f36",path:"/linked-list/basic/0025-reverse-nodes-in-k-group/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:2.28,words:683},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 02:40",createTimeStamp:1640140815e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:9}]},{title:"「力扣」第 61 题：旋转链表（中等）",frontmatter:{title:"「力扣」第 61 题：旋转链表（中等）",icon:"yongyan",category:"链表",tags:["链表"],summary:"题目链接：61. 旋转链表；; 题解链接：穿针引线。; 题目描述 给你一个链表的头节点 head ，旋转链表，将链表每个节点向右移动 k 个位置。 示例 1： 示例 2： 提示： 链表中节点的数目在范围 [0, 500] 内; -100 <= Node.val <= 100; $0 \\le k \\le 2 * 10^9$; 思路分析 问题本身不难，但是要处理",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/0061-rotate-list.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 61 题：旋转链表（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"}]},regularPath:"/linked-list/basic/0061-rotate-list.html",relativePath:"linked-list/basic/0061-rotate-list.md",key:"v-37cab9d9",path:"/linked-list/basic/0061-rotate-list/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.07,words:621},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 02:40",createTimeStamp:1640140815e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:8}]},{title:"「力扣」第 82 题：删除排序链表中的重复元素 II（中等）",frontmatter:{title:"「力扣」第 82 题：删除排序链表中的重复元素 II（中等）",icon:"yongyan",category:"链表",tags:["链表"],summary:"题目链接：82. 删除排序链表中的重复元素 II。; 题目描述 存在一个按升序排列的链表，给你这个链表的头节点 head ，请你删除链表中所有存在数字重复情况的节点，只保留原始链表中 没有重复出现 的数字。 返回同样按升序排列的结果链表。 示例 1： 示例 2： 提示： 链表中节点数目在范围 [0, 300] 内; -100 <= Node.val <= 1",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/0082-remove-duplicates-from-sorted-list-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 82 题：删除排序链表中的重复元素 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"}]},regularPath:"/linked-list/basic/0082-remove-duplicates-from-sorted-list-ii.html",relativePath:"linked-list/basic/0082-remove-duplicates-from-sorted-list-ii.md",key:"v-582f322f",path:"/linked-list/basic/0082-remove-duplicates-from-sorted-list-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法：穿针引线",slug:"方法-穿针引线"}],readingTime:{minutes:2.98,words:894},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 03:19",createTimeStamp:1640143172e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:8}]},{title:"「力扣」第 83 题：删除排序链表中的重复元素（简单）",frontmatter:{title:"「力扣」第 83 题：删除排序链表中的重复元素（简单）",icon:"yongyan",category:"链表",tags:["链表"],summary:"题目链接：删除排序链表中的重复元素。; 题目描述 存在一个按升序排列的链表，给你这个链表的头节点 head ，请你删除所有重复的元素，使每个元素 只出现一次 。 返回同样按升序排列的结果链表。 示例 1： 示例 2： 提示： 链表中节点数目在范围 [0, 300] 内; -100 <= Node.val <= 100; 题目数据保证链表已经按升序排列; 方法",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/0083-remove-duplicates-from-sorted-list.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 83 题：删除排序链表中的重复元素（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"}]},regularPath:"/linked-list/basic/0083-remove-duplicates-from-sorted-list.html",relativePath:"linked-list/basic/0083-remove-duplicates-from-sorted-list.md",key:"v-b072eff6",path:"/linked-list/basic/0083-remove-duplicates-from-sorted-list/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：穿针引线",slug:"方法一-穿针引线"},{level:2,title:"方法二：依旧是穿针引线（用于参考、留作备份）",slug:"方法二-依旧是穿针引线-用于参考、留作备份"}],readingTime:{minutes:2.36,words:709},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 03:19",createTimeStamp:1640143172e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:8}]},{title:"「力扣」第 86 题：分隔链表（中等）",frontmatter:{title:"「力扣」第 86 题：分隔链表（中等）",icon:"yongyan",category:"链表",tags:["链表"],summary:"题目链接：86. 分隔链表。; 题目描述 给你一个链表的头节点 head 和一个特定值 x ，请你对链表进行分隔，使得所有 小于 x 的节点都出现在 大于或等于 x 的节点之前。 你应当 保留 两个分区中每个节点的初始相对位置。 示例 1： 示例 2： 提示： 链表中节点的数目在范围 [0, 200] 内; -100 <= Node.val <= 100; ",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/0086-partition-list.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 86 题：分隔链表（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"}]},regularPath:"/linked-list/basic/0086-partition-list.html",relativePath:"linked-list/basic/0086-partition-list.md",key:"v-739d0ca5",path:"/linked-list/basic/0086-partition-list/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.02,words:607},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 02:40",createTimeStamp:1640140815e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:8}]},{title:"「力扣」第 92 题：反转链表 II（中等）",frontmatter:{title:"「力扣」第 92 题：反转链表 II（中等）",icon:"yongyan",category:"链表",tags:["链表"],summary:"题目链接：92. 反转链表 II；; 题解链接：4 个指针、3 个指针。; 题目描述 给你单链表的头指针 head 和两个整数 left 和 right ，其中 left <= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表 。 示例 1： 示例 2： 提示： 链表中节点数目为 n; 1 <= n <= 500; ",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/0092-reverse-linked-list-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 92 题：反转链表 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"}]},regularPath:"/linked-list/basic/0092-reverse-linked-list-ii.html",relativePath:"linked-list/basic/0092-reverse-linked-list-ii.md",key:"v-2112d365",path:"/linked-list/basic/0092-reverse-linked-list-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：使用 4 个指针变量（复用「力扣」第 92 题结果）",slug:"方法一-使用-4-个指针变量-复用「力扣」第-92-题结果"},{level:2,title:"方法二：使用 3 个指针变量",slug:"方法二-使用-3-个指针变量"}],readingTime:{minutes:2.83,words:849},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 03:19",createTimeStamp:1640143172e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:8}]},{title:"「力扣」第 109 题：有序链表转换二叉搜索树（中等）",frontmatter:{title:"「力扣」第 109 题：有序链表转换二叉搜索树（中等）",icon:"yongyan",category:"链表",tags:["链表","分治法"],summary:"题目链接：109. 有序链表转换二叉搜索树；; 题解链接：分治法（Python 代码、Java 代码）。; 题目描述 给定一个单链表，其中的元素按升序排序，将其转换为高度平衡的二叉搜索树。 本题中，一个高度平衡二叉树是指一个二叉树每个节点 的左右两个子树的高度差的绝对值不超过 1。 Example 1: Example 2: Example 3: Examp",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/0109-convert-sorted-list-to-binary-search-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 109 题：有序链表转换二叉搜索树（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"},{property:"article:tag",content:"分治法"}]},regularPath:"/linked-list/basic/0109-convert-sorted-list-to-binary-search-tree.html",relativePath:"linked-list/basic/0109-convert-sorted-list-to-binary-search-tree.md",key:"v-d716c28a",path:"/linked-list/basic/0109-convert-sorted-list-to-binary-search-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:3.02,words:905},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 03:19",createTimeStamp:1640143172e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:9}]},{title:"「力扣」第 143 题：重排链表（中等）",frontmatter:{title:"「力扣」第 143 题：重排链表（中等）",icon:"yongyan",category:"链表",tags:["链表"],summary:"题目链接：143. 重排链表。; 题目描述 给定一个单链表 L 的头节点 head ，单链表 L 表示为： 请将其重新排列后变为： 不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。 示例 1： 示例 2： 提示： 链表的长度范围为 $[1, 5 * 10^4]$; $1 \\le node.val \\le 1000$; 方法一：递归 参考代码 1：",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/0143-reorder-list.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 143 题：重排链表（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"}]},regularPath:"/linked-list/basic/0143-reorder-list.html",relativePath:"linked-list/basic/0143-reorder-list.md",key:"v-03374545",path:"/linked-list/basic/0143-reorder-list/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：递归",slug:"方法一-递归"},{level:2,title:"方法二：穿针引线",slug:"方法二-穿针引线"}],readingTime:{minutes:1.44,words:431},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 03:19",createTimeStamp:1640143172e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:8}]},{title:"「力扣」第 147 题：对链表进行插入排序（中等）",frontmatter:{title:"「力扣」第 147 题：对链表进行插入排序（中等）",icon:"yongyan",category:"链表",tags:["链表"],summary:"中文网址：147. 对链表进行插入排序 。; 题解地址：穿针引线。; 题目描述 对链表进行插入排序。 插入排序的动画演示如上。从第一个元素开始，该链表可以被认为已经部分排序（用黑色表示）。 每次迭代时，从输入数据中移除一个元素（用红色表示），并原地将其插入到已排好序的链表中。 插入排序算法： 1. 插入排序是迭代的，每次只移动一个元素，直到所有元素可以形成一",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/0147-insertion-sort-list.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 147 题：对链表进行插入排序（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"}]},regularPath:"/linked-list/basic/0147-insertion-sort-list.html",relativePath:"linked-list/basic/0147-insertion-sort-list.md",key:"v-65b3ac6e",path:"/linked-list/basic/0147-insertion-sort-list/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:4.76,words:1429},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 03:33",createTimeStamp:1640144016e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:7}]},{title:"「力扣」第 148 题：排序链表",frontmatter:{title:"「力扣」第 148 题：排序链表",icon:"yongyan",category:"链表",tags:["链表"],summary:"题目地址：148. 排序链表；; 题解地址：类似哈希表「链接法」的归并排序。; 题目描述 给你链表的头结点 head ，请将其按 升序 排列并返回 排序后的链表 。 进阶： 你可以在 O(n log n) 时间复杂度和常数级空间复杂度下，对链表进行排序吗？; 示例 1： 示例 2： 示例 3： 提示： 链表中节点的数目在范围 $[0, 5 * 10^4]$ ",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/0148-sort-list.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 148 题：排序链表"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"}]},regularPath:"/linked-list/basic/0148-sort-list.html",relativePath:"linked-list/basic/0148-sort-list.md",key:"v-5e33fa4b",path:"/linked-list/basic/0148-sort-list/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：归并排序（常规解法，不符合题目要求）",slug:"方法一-归并排序-常规解法-不符合题目要求"},{level:2,title:"方法二：自下而上进行归并",slug:"方法二-自下而上进行归并"}],readingTime:{minutes:4.43,words:1329},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 03:19",createTimeStamp:1640143172e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:8}]},{title:"「力扣」第 203 题：移除链表元素（简单）",frontmatter:{title:"「力扣」第 203 题：移除链表元素（简单）",icon:"yongyan",category:"链表",tags:["单链表"],summary:"中文网址：203. 删除链表中的结点；; 英文网址：203. Remove Linked List Elements。; 题目描述 给你一个链表的头节点 head 和一个整数 val ，请你删除链表中所有满足 Node.val == val 的节点，并返回 新的头节点 。 示例 1： 示例 2： 示例 3： 提示： 列表中的节点数目在范围 $[0, 10^4",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/0203-remove-linked-list-elements.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 203 题：移除链表元素（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"单链表"}]},regularPath:"/linked-list/basic/0203-remove-linked-list-elements.html",relativePath:"linked-list/basic/0203-remove-linked-list-elements.md",key:"v-2ad54d22",path:"/linked-list/basic/0203-remove-linked-list-elements/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：穿针引线",slug:"方法一-穿针引线"},{level:2,title:"方法二：递归",slug:"方法二-递归"}],readingTime:{minutes:1.25,words:374},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 03:19",createTimeStamp:1640143172e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:8}]},{title:"「力扣」第 234 题：回文链表（简单）",frontmatter:{title:"「力扣」第 234 题：回文链表（简单）",icon:"yongyan",category:"链表",tags:["链表","递归"],summary:"题目链接：234. 回文链表；; 题解链接：转到字符数组中判断、使用栈、反转后半部分。; 题目描述 给你一个单链表的头节点 head ，请你判断该链表是否为回文链表。如果是，返回 true ；否则，返回 false 。 示例 1： 示例 2： 提示： 链表中节点数目在范围 $[1, 10^5]$ 内; 0 <= Node.val <= 9; 进阶：你能否用 ",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/0234-palindrome-linked-list.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 234 题：回文链表（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"},{property:"article:tag",content:"递归"}]},regularPath:"/linked-list/basic/0234-palindrome-linked-list.html",relativePath:"linked-list/basic/0234-palindrome-linked-list.md",key:"v-34097cb6",path:"/linked-list/basic/0234-palindrome-linked-list/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：放在一个动态数组中，然后判断这个动态数组的回文性",slug:"方法一-放在一个动态数组中-然后判断这个动态数组的回文性"},{level:2,title:"方法二：借助栈",slug:"方法二-借助栈"},{level:2,title:"方法三：快慢指针找中点、反转后面的链表",slug:"方法三-快慢指针找中点、反转后面的链表"}],readingTime:{minutes:2.31,words:692},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 02:40",createTimeStamp:1640140815e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:8}]},{title:"「力扣」第 206 题：反转链表（简单）",frontmatter:{title:"「力扣」第 206 题：反转链表（简单）",icon:"yongyan",category:"链表",tags:["链表","递归"],summary:"题目链接：206. 反转链表；; 题解链接：穿针引线 + 递归（Java）。; 题目描述 给你单链表的头节点 head ，请你反转链表，并返回反转后的链表。 示例 1： 示例 2： 示例 3： 提示： 链表中节点的数目范围是 [0, 5000]; -5000 <= Node.val <= 5000; 进阶： 链表可以选用迭代或递归方式完成反转。你能否用两种方",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/0206-reverse-linked-list.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 206 题：反转链表（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"},{property:"article:tag",content:"递归"}]},regularPath:"/linked-list/basic/0206-reverse-linked-list.html",relativePath:"linked-list/basic/0206-reverse-linked-list.md",key:"v-3d11f7de",path:"/linked-list/basic/0206-reverse-linked-list/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：穿针引线",slug:"方法一-穿针引线"},{level:2,title:"方法二：递归",slug:"方法二-递归"}],readingTime:{minutes:2.92,words:876},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 02:40",createTimeStamp:1640140815e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:8}]},{title:"「力扣」第 237 题：删除链表中的节点（简单）",frontmatter:{title:"「力扣」第 237 题：删除链表中的节点（简单）",icon:"yongyan",category:"链表",tags:["链表","递归"],summary:"题目链接：237. 删除链表中的节点 。; 题目描述 请编写一个函数，用于 删除单链表中某个特定节点 。在设计函数时需要注意，你无法访问链表的头节点 head ，只能直接访问 要被删除的节点 。 题目数据保证需要删除的节点 不是末尾节点 。 示例 1： 示例 2： 示例 3： 示例 4： 示例 5： 提示： 链表中节点的数目范围是 [2, 1000]; -1",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/0237-delete-node-in-a-linked-list.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 237 题：删除链表中的节点（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"},{property:"article:tag",content:"递归"}]},regularPath:"/linked-list/basic/0237-delete-node-in-a-linked-list.html",relativePath:"linked-list/basic/0237-delete-node-in-a-linked-list.md",key:"v-50872265",path:"/linked-list/basic/0237-delete-node-in-a-linked-list/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.86,words:558},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 03:19",createTimeStamp:1640143172e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:7}]},{title:"「力扣」第 328 题：奇偶链表（中等）",frontmatter:{title:"「力扣」第 328 题：奇偶链表（中等）",icon:"yongyan",category:"链表",tags:["链表"],summary:"中文网址：328. 奇偶链表。; 题目描述 给定一个单链表，把所有的奇数节点和偶数节点分别排在一起。请注意，这里的奇数节点和偶数节点指的是节点编号的奇偶性，而不是节点的值的奇偶性。 请尝试使用原地算法完成。你的算法的空间复杂度应为 $O(1)$，时间复杂度应为 O(nodes)，nodes 为节点总数。 示例 1: 示例 2: 说明： 应当保持奇数节点和偶数",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/0328-odd-even-linked-list.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 328 题：奇偶链表（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"}]},regularPath:"/linked-list/basic/0328-odd-even-linked-list.html",relativePath:"linked-list/basic/0328-odd-even-linked-list.md",key:"v-cbd6f676",path:"/linked-list/basic/0328-odd-even-linked-list/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:1.53,words:458},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 03:19",createTimeStamp:1640143172e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:9}]},{title:"「力扣」第 445 题：两数相加 II（中等）",frontmatter:{title:"「力扣」第 445 题：两数相加 II（中等）",icon:"yongyan",category:"链表",tags:["链表","递归"],summary:"题目地址：445. 两数相加 II；; 题解地址：两个栈、使用头插法生成结果链表。; 题目描述 给你两个 非空 链表来代表两个非负整数。数字最高位位于链表开始位置。它们的每个节点只存储一位数字。将这两数相加会返回一个新的链表。 你可以假设除了数字 0 之外，这两个数字都不会以零开头。 示例 1： 示例 2： 示例 3： 提示： 链表的长度范围为 [1, 10",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/0445-add-two-numbers-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 445 题：两数相加 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"},{property:"article:tag",content:"递归"}]},regularPath:"/linked-list/basic/0445-add-two-numbers-ii.html",relativePath:"linked-list/basic/0445-add-two-numbers-ii.md",key:"v-8e6dd0b6",path:"/linked-list/basic/0445-add-two-numbers-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.84,words:552},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 02:40",createTimeStamp:1640140815e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:9}]},{title:"「力扣」第 876 题：链表的中间结点（简单）",frontmatter:{title:"「力扣」第 876 题：链表的中间结点（简单）",icon:"yongyan",category:"链表",tags:["链表"],summary:"中文地址：「力扣」第 876 题：链表的中间结点（简单）；; 题解地址：快慢指针（Python 代码、Java 代码）。; 题目描述 给定一个头结点为 head 的非空单链表，返回链表的中间结点。 如果有两个中间结点，则返回第二个中间结点。 示例 1： 示例 2： 提示： 给定链表的结点数介于 1 和 100 之间。; 1 <= Node.val <= 10",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/0876-middle-of-the-linked-list.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 876 题：链表的中间结点（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"}]},regularPath:"/linked-list/basic/0876-middle-of-the-linked-list.html",relativePath:"linked-list/basic/0876-middle-of-the-linked-list.md",key:"v-fee15f9e",path:"/linked-list/basic/0876-middle-of-the-linked-list/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法：快慢指针（Python 代码、Java 代码）",slug:"方法-快慢指针-python-代码、java-代码"}],readingTime:{minutes:4.75,words:1424},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 02:40",createTimeStamp:1640140815e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:10}]},{title:"链表问题简介",frontmatter:{title:"链表问题简介",icon:"yongyan",category:"链表",tags:["链表"],summary:"解决链表的问题常见的技巧有： 1、使用递归函数，避免复杂的更改指针变量指向操作，使得求解问题变得简单。; 「力扣」第 206 题：反转链表；; 「力扣」第 24 题：两两交换链表中的节点；; 「力扣」第 25 题：K 个一组翻转链表；; 「力扣」第 328 题：奇偶链表；; 「力扣」第 203 题：移除链表元素；; 「力扣」第 21 题：合并两个有序链表。;",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/basic/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"链表问题简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"}]},regularPath:"/linked-list/basic/intro.html",relativePath:"linked-list/basic/intro.md",key:"v-5b3183b6",path:"/linked-list/basic/intro/",readingTime:{minutes:2.76,words:828},updateTime:"December 22, 2021 02:02",updateTimeStamp:1640138547e3,createTime:"December 22, 2021 02:02",createTimeStamp:1640138547e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 146 题：LRU 缓存机制（中等）",frontmatter:{title:"「力扣」第 146 题：LRU 缓存机制（中等）",icon:"yongyan",category:"链表",tags:["哈希表","双向链表"],summary:"题目链接：146. LRU 缓存机制；; 题解链接：哈希表 + 双向链表（Java）。; 题目描述 运用你所掌握的数据结构，设计和实现一个 LRU (最近最少使用) 缓存机制 。 实现 LRUCache 类： LRUCache(int capacity) 以正整数作为容量 capacity 初始化 LRU 缓存; int get(int key) 如果关键字",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/design/0146-lru-cache.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 146 题：LRU 缓存机制（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"哈希表"},{property:"article:tag",content:"双向链表"}]},regularPath:"/linked-list/design/0146-lru-cache.html",relativePath:"linked-list/design/0146-lru-cache.md",key:"v-057c8325",path:"/linked-list/design/0146-lru-cache/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"题意分析",slug:"题意分析"},{level:2,title:"LRU （Least Recently Used）缓存机制",slug:"lru-least-recently-used-缓存机制"},{level:2,title:"思路",slug:"思路"}],readingTime:{minutes:5.65,words:1695},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 02:02",createTimeStamp:1640138547e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:7}]},{title:"「力扣」第 355 题：设计推特（中等）",frontmatter:{title:"「力扣」第 355 题：设计推特（中等）",icon:"yongyan",category:"链表",tags:["链表","快慢指针"],summary:"题目链接：355. 设计推特（中等）；; 题解链接：哈希表 + 链表 + 优先队列（经典多路归并问题）（Java）。; 题目描述 设计一个简化版的推特(Twitter)，可以让用户实现发送推文，关注/取消关注其他用户，能够看见关注人（包括自己）的最近 10 条推文。 实现 Twitter 类： Twitter() 初始化简易版推特对象; void postT",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/design/0355-design-twitter.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 355 题：设计推特（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"},{property:"article:tag",content:"快慢指针"}]},regularPath:"/linked-list/design/0355-design-twitter.html",relativePath:"linked-list/design/0355-design-twitter.md",key:"v-3f486746",path:"/linked-list/design/0355-design-twitter/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:8.37,words:2510},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 02:02",createTimeStamp:1640138547e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:8}]},{title:"「力扣」第 460 题：LFU 缓存（困难）",frontmatter:{title:"「力扣」第 460 题：LFU 缓存（困难）",icon:"yongyan",category:"链表",tags:["哈希表","双向链表"],summary:"题目链接：460. LFU 缓存；; 题解链接：哈希表 + 双向链表（Java）。; 题目描述 请你为 最不经常使用（LFU）缓存算法设计并实现数据结构。 实现 LFUCache 类： LFUCache(int capacity) - 用数据结构的容量 capacity 初始化对象; int get(int key) - 如果键存在于缓存中，则获取键的值，否",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/design/0460-lfu-cache.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 460 题：LFU 缓存（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"哈希表"},{property:"article:tag",content:"双向链表"}]},regularPath:"/linked-list/design/0460-lfu-cache.html",relativePath:"linked-list/design/0460-lfu-cache.md",key:"v-ec532276",path:"/linked-list/design/0460-lfu-cache/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"理解题意",slug:"理解题意"},{level:2,title:"LRU （Least Recently Used）缓存机制（看时间）",slug:"lru-least-recently-used-缓存机制-看时间"},{level:2,title:"LFU （Least Frequently Used）缓存机制（看访问次数）",slug:"lfu-least-frequently-used-缓存机制-看访问次数"},{level:2,title:"思路",slug:"思路"}],readingTime:{minutes:9.96,words:2987},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 02:02",createTimeStamp:1640138547e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:7}]},{title:"「力扣」第 1206 题：设计跳表（困难）",frontmatter:{title:"「力扣」第 1206 题：设计跳表（困难）",icon:"yongyan",category:"链表",tags:["链表"],summary:"题目链接：1206. 设计跳表。; 题目描述 不使用任何库函数，设计一个跳表。 跳表是在 O(log(n)) 时间内完成增加、删除、搜索操作的数据结构。跳表相比于树堆与红黑树，其功能与性能相当，并且跳表的代码长度相较下更短，其设计思想与链表相似。 例如，一个跳表包含 [30, 40, 50, 60, 70, 90]，然后增加 80、45 到跳表中，以下图的方",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/design/1206-design-skiplist.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1206 题：设计跳表（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"}]},regularPath:"/linked-list/design/1206-design-skiplist.html",relativePath:"linked-list/design/1206-design-skiplist.md",key:"v-35248da5",path:"/linked-list/design/1206-design-skiplist/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.62,words:487},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 02:02",createTimeStamp:1640138547e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:8}]},{title:"「力扣」第 19 题：删除链表的倒数第 N 个节点（中等）",frontmatter:{title:"「力扣」第 19 题：删除链表的倒数第 N 个节点（中等）",icon:"yongyan",category:"链表",tags:["链表","快慢指针"],summary:"题目链接：19. 删除链表的倒数第 N 个结点；; 题解链接：快慢指针。; 题目描述 给你一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。 示例 1： 示例 2： 示例 3： 提示： 链表中结点的数目为 sz; 1 <= sz <= 30; 0 <= Node.val <= 100; 1 <= n <= sz; 进阶：你能尝试使用一趟扫描实现吗",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/fast-slow-points/0019-remove-nth-node-from-end-of-list.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 19 题：删除链表的倒数第 N 个节点（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"},{property:"article:tag",content:"快慢指针"}]},regularPath:"/linked-list/fast-slow-points/0019-remove-nth-node-from-end-of-list.html",relativePath:"linked-list/fast-slow-points/0019-remove-nth-node-from-end-of-list.md",key:"v-4c39c203",path:"/linked-list/fast-slow-points/0019-remove-nth-node-from-end-of-list/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：先数出有多少个结点，然后走 len - n 步",slug:"方法一-先数出有多少个结点-然后走-len-n-步"},{level:2,title:"方法二：快慢指针",slug:"方法二-快慢指针"}],readingTime:{minutes:2.08,words:625},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 02:02",createTimeStamp:1640138547e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:8}]},{title:"「力扣」第 141 题：环形链表（简单）",frontmatter:{title:"「力扣」第 141 题：环形链表（简单）",icon:"yongyan",category:"链表",tags:["链表","快慢指针"],summary:"题目链接：141. 环形链表。; 题目描述 给你一个链表的头节点 head ，判断链表中是否有环。 如果链表中有某个节点，可以通过连续跟踪 next 指针再次到达，则链表中存在环。 为了表示给定链表中的环，评测系统内部使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。如果 pos 是 -1，则在该链表中没有环。注意：pos 不作为参数进行",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/fast-slow-points/0141-linked-list-cycle.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 141 题：环形链表（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"},{property:"article:tag",content:"快慢指针"}]},regularPath:"/linked-list/fast-slow-points/0141-linked-list-cycle.html",relativePath:"linked-list/fast-slow-points/0141-linked-list-cycle.md",key:"v-93a30336",path:"/linked-list/fast-slow-points/0141-linked-list-cycle/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：暴力解法",slug:"方法一-暴力解法"},{level:2,title:"方法二：使用哈希表",slug:"方法二-使用哈希表"},{level:2,title:"方法三：并查集思想",slug:"方法三-并查集思想"},{level:2,title:"方法四：快慢指针",slug:"方法四-快慢指针"}],readingTime:{minutes:3.13,words:938},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 02:02",createTimeStamp:1640138547e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:8}]},{title:"「力扣」第 142 题：环形链表 II（中等）",frontmatter:{title:"「力扣」第 142 题：环形链表 II（中等）",icon:"yongyan",category:"链表",tags:["链表","快慢指针"],summary:"题目链接：142. 环形链表 II；; 题解链接：快慢指针（Java、C++、Python）。; 题目链接 给定一个链表，返回链表开始入环的第一个节点。 如果链表无环，则返回 null。 为了表示给定链表中的环，我们使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。 如果 pos 是 -1，则在该链表中没有环。 说明：不允许修改给定的链表",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/fast-slow-points/0142-linked-list-cycle-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 142 题：环形链表 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"},{property:"article:tag",content:"快慢指针"}]},regularPath:"/linked-list/fast-slow-points/0142-linked-list-cycle-ii.html",relativePath:"linked-list/fast-slow-points/0142-linked-list-cycle-ii.md",key:"v-4af15859",path:"/linked-list/fast-slow-points/0142-linked-list-cycle-ii/",headers:[{level:2,title:"题目链接",slug:"题目链接"}],readingTime:{minutes:6.13,words:1839},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 02:02",createTimeStamp:1640138547e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:7}]},{title:"「力扣」第 160 题：相交链表（简单）",frontmatter:{title:"「力扣」第 160 题：相交链表（简单）",icon:"yongyan",category:"链表",tags:["链表","快慢指针"],summary:"题目链接：160. 相交链表。; 这一节我们再来看一个常见的问题：相交链表。这道题是「力扣」第 160 题，这道题要我们编写一个程序，找到两个单链表相交的起始节点。 题目描述 给你两个单链表的头节点 headA 和 headB ，请你找出并返回两个单链表相交的起始节点。如果两个链表不存在相交节点，返回 null 。 图示两个链表在节点 c1 开始相交： 题目",meta:[{property:"og:url",content:"https://suanfa8.com/linked-list/fast-slow-points/0160-intersection-of-two-linked-lists.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 160 题：相交链表（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"链表"},{property:"article:tag",content:"快慢指针"}]},regularPath:"/linked-list/fast-slow-points/0160-intersection-of-two-linked-lists.html",relativePath:"linked-list/fast-slow-points/0160-intersection-of-two-linked-lists.md",key:"v-840b2926",path:"/linked-list/fast-slow-points/0160-intersection-of-two-linked-lists/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：使用哈希表（空间复杂度不符合要求）",slug:"方法一-使用哈希表-空间复杂度不符合要求"},{level:2,title:"方法二 ：需要先遍历得到两个链表的长度",slug:"方法二-需要先遍历得到两个链表的长度"},{level:2,title:"方法三：让 A、B 链表等长",slug:"方法三-让-a、b-链表等长"}],readingTime:{minutes:3.31,words:992},updateTime:"January 12, 2022 23:46",updateTimeStamp:1642031184e3,createTime:"December 22, 2021 02:02",createTimeStamp:1640138547e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:8}]},{title:"循环不变量重点概括",frontmatter:{title:"循环不变量重点概括",icon:"yongyan",category:"循环不变量",tags:["循环不变量"],summary:"循环不变量即：在循环开始之前、循环的过程中、循环结束以后，变量的定义保持不变；; 也可以简单地理解为：保持定义不变；; 这是一条非常基本的编程准则，是我们「心中有，口中无」的东西。;",meta:[{property:"og:url",content:"https://suanfa8.com/loop-invariant/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"循环不变量重点概括"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"循环不变量"}]},regularPath:"/loop-invariant/",relativePath:"loop-invariant/README.md",key:"v-18966e06",path:"/loop-invariant/",readingTime:{minutes:.25,words:74},updateTime:"January 14, 2022 01:50",updateTimeStamp:164212505e4,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4}]},{title:"2 循环不变量有什么用",frontmatter:{title:"2 循环不变量有什么用",icon:"yongyan",category:"循环不变量",tags:["数组","循环不变量"],summary:"循环不变量用于证明算法的正确性。 在我看来，学习循环不变量这个概念，在于让我们自己 明确在循环的过程中我们在做什么，在维护了一件什么事情。这样别人在阅读我们的代码的时候也能够清楚我们在做什么。 我们编写代码的工程师很多时候不需要像写论文那样必需要给出「初始化」「保持」和「终止」三个步骤。而是用一句话表示循环的过程中在做什么事情就可以。 明确循环不变量，可以帮",meta:[{property:"og:url",content:"https://suanfa8.com/loop-invariant/application.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"2 循环不变量有什么用"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数组"},{property:"article:tag",content:"循环不变量"}]},regularPath:"/loop-invariant/application.html",relativePath:"loop-invariant/application.md",key:"v-015b0b3e",path:"/loop-invariant/application/",readingTime:{minutes:1.87,words:560},updateTime:"January 13, 2022 15:14",updateTimeStamp:164208684e4,createTime:"December 23, 2021 10:16",createTimeStamp:1640254575e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"3 明确循环不变量写出「快速排序」",frontmatter:{title:"3 明确循环不变量写出「快速排序」",icon:"yongyan",category:"循环不变量",tags:["数组","循环不变量"],summary:"我写「快速排序」不是靠背的。每次写「快速排序」我都会在脑子里或者在草稿纸上写写画画。 随机一个元素作为基准元素 pivot，可以选择区间里的第一个元素或者最后一个元素，我们这里选择第一个元素 nums[left]。遍历一次待排序的区间 nums[left..right]，使得： 这样的一句话就是循环不变量。 将 nums[i] 的值和 pivot 进行比较，",meta:[{property:"og:url",content:"https://suanfa8.com/loop-invariant/example.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"3 明确循环不变量写出「快速排序」"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数组"},{property:"article:tag",content:"循环不变量"}]},regularPath:"/loop-invariant/example.html",relativePath:"loop-invariant/example.md",key:"v-5ba60fa6",path:"/loop-invariant/example/",readingTime:{minutes:1.52,words:456},updateTime:"January 13, 2022 15:14",updateTimeStamp:164208684e4,createTime:"December 23, 2021 10:16",createTimeStamp:1640254575e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"1 循环不变量简介",frontmatter:{title:"1 循环不变量简介",icon:"shipin",category:"循环不变量",tags:["数组","循环不变量"],summary:":tv: 视频教程 建议使用 1.5 倍速观看。 3-1 循环不变量（06:41）; 视频讲解 :tv: 这道题在 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 闲话 很多时候不知道「循环不变量」照样可以把代码写对（有一些朋友不一定看过《算法导论》，但并不影响这些朋友能够顺利地解答算法问",meta:[{property:"og:url",content:"https://suanfa8.com/loop-invariant/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"1 循环不变量简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数组"},{property:"article:tag",content:"循环不变量"}]},regularPath:"/loop-invariant/intro.html",relativePath:"loop-invariant/intro.md",key:"v-1d8c24a9",path:"/loop-invariant/intro/",headers:[{level:2,title:"📺 视频教程",slug:"视频教程"}],readingTime:{minutes:2.66,words:797},updateTime:"January 13, 2022 15:14",updateTimeStamp:164208684e4,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"例 1：「力扣」第 26 题：删除排序数组中的重复项（简单）",frontmatter:{title:"例 1：「力扣」第 26 题：删除排序数组中的重复项（简单）",icon:"shipin",category:"循环不变量",tags:["数组","循环不变量"],summary:"题目链接：26. 删除排序数组中的重复项 。; :tv: 视频教程 建议使用 1.5 倍速观看。 3-2 例 1：「力扣」第 26 题：删除数组中重复的元素（06:20）。; 视频讲解 :tv: 这道题在 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 给定一个排序数组，你需要在",meta:[{property:"og:url",content:"https://suanfa8.com/loop-invariant/solutions/0026-remove-duplicates-from-sorted-array.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"例 1：「力扣」第 26 题：删除排序数组中的重复项（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数组"},{property:"article:tag",content:"循环不变量"}]},regularPath:"/loop-invariant/solutions/0026-remove-duplicates-from-sorted-array.html",relativePath:"loop-invariant/solutions/0026-remove-duplicates-from-sorted-array.md",key:"v-625bb365",path:"/loop-invariant/solutions/0026-remove-duplicates-from-sorted-array/",headers:[{level:3,title:"📺 视频教程",slug:"视频教程"},{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:2.45,words:734},updateTime:"January 13, 2022 15:14",updateTimeStamp:164208684e4,createTime:"January 6, 2022 08:09",createTimeStamp:1641456541e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"例 3：「力扣」第 27 题：移除元素（简单）",frontmatter:{title:"例 3：「力扣」第 27 题：移除元素（简单）",icon:"shipin",category:"循环不变量",tags:["数组","循环不变量"],summary:"题目链接：27. 移除元素 。; :tv: 视频教程 建议使用 1.5 倍速观看。 3-4 例 3：「力扣」第 27 题：移除元素（03:17）。; 视频讲解 :tv: 这道题在 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 给定一个数组 nums 和一个值 val，你需要原地",meta:[{property:"og:url",content:"https://suanfa8.com/loop-invariant/solutions/0027-remove-element.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"例 3：「力扣」第 27 题：移除元素（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数组"},{property:"article:tag",content:"循环不变量"}]},regularPath:"/loop-invariant/solutions/0027-remove-element.html",relativePath:"loop-invariant/solutions/0027-remove-element.md",key:"v-bdb38f16",path:"/loop-invariant/solutions/0027-remove-element/",headers:[{level:3,title:"📺 视频教程",slug:"视频教程"},{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:2.49,words:746},updateTime:"January 13, 2022 15:14",updateTimeStamp:164208684e4,createTime:"January 6, 2022 08:09",createTimeStamp:1641456541e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"例 4：「力扣」第 80 题：删除排序数组中的重复项 II（中等）",frontmatter:{title:"例 4：「力扣」第 80 题：删除排序数组中的重复项 II（中等）",icon:"shipin",category:"循环不变量",tags:["数组","循环不变量"],summary:"题目链接：80. 删除排序数组中的重复项 II 。; :tv: 视频教程 建议使用 1.5 倍速观看。 3-5 例 4：「力扣」第 80 题：删除数组中重复的元素 II（07:30）。; 视频讲解 :tv: 这道题在 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 给定一个排序数",meta:[{property:"og:url",content:"https://suanfa8.com/loop-invariant/solutions/0080-remove-duplicates-from-sorted-array-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"例 4：「力扣」第 80 题：删除排序数组中的重复项 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数组"},{property:"article:tag",content:"循环不变量"}]},regularPath:"/loop-invariant/solutions/0080-remove-duplicates-from-sorted-array-ii.html",relativePath:"loop-invariant/solutions/0080-remove-duplicates-from-sorted-array-ii.md",key:"v-a2f8c2f2",path:"/loop-invariant/solutions/0080-remove-duplicates-from-sorted-array-ii/",headers:[{level:3,title:"📺 视频教程",slug:"视频教程"},{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:2.55,words:764},updateTime:"January 13, 2022 15:14",updateTimeStamp:164208684e4,createTime:"January 6, 2022 08:09",createTimeStamp:1641456541e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"例 2：「力扣」第 283 题：移动零（简单）",frontmatter:{title:"例 2：「力扣」第 283 题：移动零（简单）",icon:"shipin",category:"循环不变量",tags:["数组","循环不变量"],summary:"题目链接：283. 移动零 ；; 题解链接：遵守循环不变式（Java）。; :tv: 视频教程 建议使用 1.5 倍速观看。 3-3 例 2：「力扣」第 283 题：移动零（03:26）。; 视频讲解 :tv: 这道题在 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 给定一个数",meta:[{property:"og:url",content:"https://suanfa8.com/loop-invariant/solutions/0283-move-zeroes.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"例 2：「力扣」第 283 题：移动零（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数组"},{property:"article:tag",content:"循环不变量"}]},regularPath:"/loop-invariant/solutions/0283-move-zeroes.html",relativePath:"loop-invariant/solutions/0283-move-zeroes.md",key:"v-5f355585",path:"/loop-invariant/solutions/0283-move-zeroes/",headers:[{level:3,title:"📺 视频教程",slug:"视频教程"},{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.55,words:464},updateTime:"January 13, 2022 15:14",updateTimeStamp:164208684e4,createTime:"January 6, 2022 08:09",createTimeStamp:1641456541e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"4 总结",frontmatter:{title:"4 总结",icon:"yongyan",category:"循环不变量",tags:["数组","循环不变量"],summary:"循环不变量 循环不变量用于证明算法的有效性，也是编码正确的理论依据；; 循环不变量定义帮助分清先加还是先赋值，还有一些边界条件。定义清楚循环不变量以后，代码的编写就会很轻松；; 建议把「循环不变量」作为注释写在代码里，以方便自己调试和他人阅读。; 温馨提示 本节的 4 个视频（除了第 912 题）均有视频讲解，在 :tv: 标注的地方。 题号 链接 题解 -",meta:[{property:"og:url",content:"https://suanfa8.com/loop-invariant/summary.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"4 总结"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数组"},{property:"article:tag",content:"循环不变量"}]},regularPath:"/loop-invariant/summary.html",relativePath:"loop-invariant/summary.md",key:"v-6f12ec96",path:"/loop-invariant/summary/",readingTime:{minutes:.92,words:276},updateTime:"January 13, 2022 15:14",updateTimeStamp:164208684e4,createTime:"December 23, 2021 10:16",createTimeStamp:1640254575e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"数学",frontmatter:{title:"数学",icon:"yongyan",category:"数学",tags:["数学"],summary:"数学",meta:[{property:"og:url",content:"https://suanfa8.com/math/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"数学"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数学"}]},regularPath:"/math/",relativePath:"math/README.md",key:"v-e0c1ddb4",path:"/math/",readingTime:{minutes:.01,words:2},updateTime:"January 1, 2022 11:46",updateTimeStamp:1641037611e3,createTime:"January 1, 2022 11:46",createTimeStamp:1641037611e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 507 题：完美数（简单）",frontmatter:{title:"「力扣」第 507 题：完美数（简单）",icon:"yongyan",category:"数学",tags:["数学"],summary:"题目链接：507. 完美数; 题目描述 对于一个 正整数，如果它和除了它自身以外的所有 正因子 之和相等，我们称它为 「完美数」。 给定一个 整数 n， 如果是完美数，返回 true，否则返回 false。 示例 1： 示例 2： 示例 3： 示例 4： 示例 5： 提示： 1 <= num <= 10^8; 参考代码： ` `",meta:[{property:"og:url",content:"https://suanfa8.com/math/solutions/0507-perfect-number.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 507 题：完美数（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数学"}]},regularPath:"/math/solutions/0507-perfect-number.html",relativePath:"math/solutions/0507-perfect-number.md",key:"v-8baa3296",path:"/math/solutions/0507-perfect-number/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.08,words:323},updateTime:"January 14, 2022 06:42",updateTimeStamp:1642142548e3,createTime:"January 6, 2022 08:10",createTimeStamp:1641456657e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 50 题：Pow(x, n)（中等）",frontmatter:{title:"「力扣」第 50 题：Pow(x, n)（中等）",icon:"yongyan",category:"递归",tags:["分治算法","位运算"],summary:"题目链接：50. Pow(x, n)；; 题解链接：自顶向下（递归）与自顶向上（递推）。; 今天要和大家分享的是「力扣」第 50 题：Pow(x, n)。这题有一个名称叫「快速幂」，我们这里只分享「递归」和「非递归」的写法，其中 「递归」对应「当指数为奇数时，把指数分解成偶数 + 1，当指数为偶数时，把指数除以 2」，「非递归」对应把指数转化成二进制。「快速",meta:[{property:"og:url",content:"https://suanfa8.com/merge-sort/0050-powx-n.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 50 题：Pow(x, n)（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"分治算法"},{property:"article:tag",content:"位运算"}]},regularPath:"/merge-sort/0050-powx-n.html",relativePath:"merge-sort/0050-powx-n.md",key:"v-43611c23",path:"/merge-sort/0050-powx-n/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"方法一：递归（分治算法）",slug:"方法一-递归-分治算法"},{level:3,title:"方法二：把指数转换成二进制",slug:"方法二-把指数转换成二进制"},{level:3,title:"方法一：递归（分治算法）",slug:"方法一-递归-分治算法-2"},{level:3,title:"方法二：把指数转换成二进制",slug:"方法二-把指数转换成二进制-2"},{level:3,title:"",slug:""}],readingTime:{minutes:7.3,words:2190},updateTime:"January 13, 2022 15:40",updateTimeStamp:1642088425e3,createTime:"January 1, 2022 11:46",createTimeStamp:1641037611e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"《剑指 Offer》（第 2 版）第 51 题：计算数组的逆序对（困难）",frontmatter:{title:"《剑指 Offer》（第 2 版）第 51 题：计算数组的逆序对（困难）",icon:"shipin",category:"排序算法",tags:["排序算法","分而治之","归并排序"],summary:"「计算数组的逆序对」是「归并排序」的例题，一开始学习的时候可能会觉得比较吃力。 学习建议（适用于其它学习算法与数据结构的知识）： 多写几遍，很可能写过几遍之后，就渐渐地理解了思路和细节；; 如果暂时还是觉得很复杂，过一段时间再来学习；; 想不明白的地方，在草稿纸上用几个具体的例子模拟代码的执行。; :tv: 视频教程 建议使用 1.5 倍速观看。 在「力扣」",meta:[{property:"og:url",content:"https://suanfa8.com/merge-sort/0051-shu-zu-zhong-de-ni-xu-dui-lcof.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"《剑指 Offer》（第 2 版）第 51 题：计算数组的逆序对（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"分而治之"},{property:"article:tag",content:"归并排序"}]},regularPath:"/merge-sort/0051-shu-zu-zhong-de-ni-xu-dui-lcof.html",relativePath:"merge-sort/0051-shu-zu-zhong-de-ni-xu-dui-lcof.md",key:"v-a0059386",path:"/merge-sort/0051-shu-zu-zhong-de-ni-xu-dui-lcof/",headers:[{level:2,title:"📺 视频教程",slug:"视频教程"},{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"《剑指 Offer》（第 2 版）第 51 题：计算数组的逆序对",slug:"《剑指-offer》-第-2-版-第-51-题-计算数组的逆序对"},{level:3,title:"方法一：暴力解法（超时）",slug:"方法一-暴力解法-超时"},{level:3,title:"方法二：分治思想（借助归并排序统计逆序数）",slug:"方法二-分治思想-借助归并排序统计逆序数"},{level:3,title:"方法三：树状数组",slug:"方法三-树状数组"}],readingTime:{minutes:11.99,words:3597},updateTime:"May 2, 2022 05:22",updateTimeStamp:1651468943e3,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:6}]},{title:"「力扣」第 88 题：合并两个有序数组（简单）",frontmatter:{title:"「力扣」第 88 题：合并两个有序数组（简单）",icon:"yongyan",category:"归并排序",tags:["数组"],summary:"题目链接：88. 合并两个有序数组；; 题解链接：归并排序子步骤（Java）。; 题目描述 给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。 请你 合并 nums2 到 nums1 中，使合并后的数组同样按 非递减顺序 排列。 注意： 最终，合并后数组不应由函",meta:[{property:"og:url",content:"https://suanfa8.com/merge-sort/0088-merge-sorted-array.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 88 题：合并两个有序数组（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"数组"}]},regularPath:"/merge-sort/0088-merge-sorted-array.html",relativePath:"merge-sort/0088-merge-sorted-array.md",key:"v-58d27333",path:"/merge-sort/0088-merge-sorted-array/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"归并排序子步骤（Java）",slug:"归并排序子步骤-java"},{level:3,title:"方法一：从头到尾归并（习惯上会先这样做）",slug:"方法一-从头到尾归并-习惯上会先这样做"},{level:3,title:"方法二：从尾到头归并（符合题目要求，并且可以提前终止归并）",slug:"方法二-从尾到头归并-符合题目要求-并且可以提前终止归并"}],readingTime:{minutes:6.65,words:1995},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941866e3,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4}]},{title:"「力扣」第 315 题：计算右侧小于当前元素的个数（困难）",frontmatter:{title:"「力扣」第 315 题：计算右侧小于当前元素的个数（困难）",icon:"shipin",category:"排序算法",tags:["排序算法","分而治之","归并排序"],summary:"题目地址：「力扣」第 315 题：计算右侧小于当前元素的个数；; 题解地址：归并排序计算逆序对 + 索引数组（Java、Python）。; :tv: 视频教程 建议使用 1.5 倍速观看。 在「力扣」的题解里可以观看视频：归并排序 + 索引数组（Java、Python）;; B 站视频。; 视频讲解 :tv: 这道题在 题解 和 B 站 可以收看视频讲解，可",meta:[{property:"og:url",content:"https://suanfa8.com/merge-sort/0315-count-of-smaller-numbers-after-self.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 315 题：计算右侧小于当前元素的个数（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"分而治之"},{property:"article:tag",content:"归并排序"}]},regularPath:"/merge-sort/0315-count-of-smaller-numbers-after-self.html",relativePath:"merge-sort/0315-count-of-smaller-numbers-after-self.md",key:"v-83038776",path:"/merge-sort/0315-count-of-smaller-numbers-after-self/",headers:[{level:2,title:"📺 视频教程",slug:"视频教程"},{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"归并排序计算逆序数 + 索引数组",slug:"归并排序计算逆序数-索引数组"}],readingTime:{minutes:6.01,words:1803},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941866e3,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:6},{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 493 题：计算翻转对（困难）",frontmatter:{title:"「力扣」第 493 题：计算翻转对（困难）",icon:"yongyan",category:"归并排序",tags:["分而治之"],summary:"题目链接：493. 翻转对。; 题目描述 给定一个数组 nums ，如果 i 2nums[j] 我们就将 (i, j) 称作一个*\\*重要翻转对\\***。 你需要返回给定数组中的重要翻转对的数量。 示例 1: 示例 2: 注意: 1. 给定数组的长度不会超过50000。 2. 输入数组中的所有数字都在 32 位整数的表示范围内。 说明 因时间和精力关系，本题",meta:[{property:"og:url",content:"https://suanfa8.com/merge-sort/0493-reverse-pairs.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 493 题：计算翻转对（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"分而治之"}]},regularPath:"/merge-sort/0493-reverse-pairs.html",relativePath:"merge-sort/0493-reverse-pairs.md",key:"v-61433385",path:"/merge-sort/0493-reverse-pairs/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:2.5,words:751},updateTime:"January 13, 2022 15:40",updateTimeStamp:1642088425e3,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5}]},{title:"归并排序简介",frontmatter:{title:"归并排序简介",icon:"yongyan",category:"归并排序",tags:["归并排序","分治算法"],summary:"深刻理解「归并排序」，有助于理解「递归」与「深度优先遍历」。",meta:[{property:"og:url",content:"https://suanfa8.com/merge-sort/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"归并排序简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"归并排序"},{property:"article:tag",content:"分治算法"}]},regularPath:"/merge-sort/",relativePath:"merge-sort/README.md",key:"v-3dca8686",path:"/merge-sort/",readingTime:{minutes:.07,words:22},updateTime:"January 13, 2022 15:40",updateTimeStamp:1642088425e3,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4},{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"4 自底向上的归并排序（选学）",frontmatter:{title:"4 自底向上的归并排序（选学）",icon:"yongyan",category:"排序算法",tags:["分而治之","归并排序"],summary:"本节讲解了：自底向上的归并排序，选学、面试基本不考。 以上我们使用的是「自顶向下」的归并排序，下面我们介绍「自底向上」的归并排序算法。我们并不须要递归，只须要迭代就可以了。 假设待排序的数组为：[8, 6, 2, 3, 1, 5, 7, 4]。 首先对这个数组每隔 $2$ 个元素进行一个划分，得到： 对每一个划分内的元素进行排序，得到： 将上一步的结果，每隔",meta:[{property:"og:url",content:"https://suanfa8.com/merge-sort/bottom2up.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"4 自底向上的归并排序（选学）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"分而治之"},{property:"article:tag",content:"归并排序"}]},regularPath:"/merge-sort/bottom2up.html",relativePath:"merge-sort/bottom2up.md",key:"v-7afd6f05",path:"/merge-sort/bottom2up/",readingTime:{minutes:1.29,words:387},updateTime:"January 13, 2022 15:40",updateTimeStamp:1642088425e3,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:6},{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"1 归并排序简介",frontmatter:{title:"1 归并排序简介",icon:"yongyan",category:"排序算法",tags:["分而治之","归并排序"],summary:"归并排序与快速排序都是基于「分治思想」的排序算法。 分治思想（分而治之）把一个规模较大的问题拆分成为若干个规模较小的相同类型的子问题，然后对这些子问题递归求解，等待每一个子问题完成以后，再得到原问题的解；; 分治算法可以并行执行，但是在基础算法领域，分治算法是以 深度优先遍历 的方式执行的。;",meta:[{property:"og:url",content:"https://suanfa8.com/merge-sort/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"1 归并排序简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"分而治之"},{property:"article:tag",content:"归并排序"}]},regularPath:"/merge-sort/intro.html",relativePath:"merge-sort/intro.md",key:"v-4267839e",path:"/merge-sort/intro/",readingTime:{minutes:.43,words:129},updateTime:"January 13, 2022 15:40",updateTimeStamp:1642088425e3,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4},{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"3 归并排序的优化",frontmatter:{title:"3 归并排序的优化",icon:"shipin",category:"排序算法",tags:["排序算法","分而治之","归并排序"],summary:":tv: 视频教程 建议使用 1.5 倍速观看。 4-6 归并排序的优化（03:26）；; 4-7 归并排序总结（08:53）。; 优化的方向 优化 1 在「小区间」里转向使用「插入排序」，Java 源码里面也有类似这种操作，「小区间」的长度是个超参数，需要测试决定，我这里参考了 JDK 源码，选择了 $7$。 优化 2 在「两个数组」本身就是有序的情况下，",meta:[{property:"og:url",content:"https://suanfa8.com/merge-sort/merge-sort-optimize.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"3 归并排序的优化"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"分而治之"},{property:"article:tag",content:"归并排序"}]},regularPath:"/merge-sort/merge-sort-optimize.html",relativePath:"merge-sort/merge-sort-optimize.md",key:"v-2972fd5b",path:"/merge-sort/merge-sort-optimize/",headers:[{level:2,title:"📺 视频教程",slug:"视频教程"},{level:2,title:"优化的方向",slug:"优化的方向"},{level:3,title:"优化 1",slug:"优化-1"},{level:3,title:"优化 2",slug:"优化-2"},{level:3,title:"优化 3",slug:"优化-3"},{level:2,title:"经典问题",slug:"经典问题"}],readingTime:{minutes:4.98,words:1495},updateTime:"January 13, 2022 15:40",updateTimeStamp:1642088425e3,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:6},{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"2 归并排序的基本实现",frontmatter:{title:"2 归并排序的基本实现",icon:"shipin",category:"排序算法",tags:["排序算法","分而治之","归并排序"],summary:":tv: 视频教程 建议使用 1.5 倍速观看。 4-1 排序算法的稳定性（04:18）；; 4-2 归并排序的基本思想（03:53）；; 4-3 归并排序与深度优先遍历（03:59）；; 4-4 归并排序与栈（04:15）；; 4-5 归并排序的代码演示与复杂度分析（06:35）。; 提示 「归并排序」和「快速排序」是理解「递归」思想的非常好的学习材料。在",meta:[{property:"og:url",content:"https://suanfa8.com/merge-sort/merge-sort.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"2 归并排序的基本实现"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"分而治之"},{property:"article:tag",content:"归并排序"}]},regularPath:"/merge-sort/merge-sort.html",relativePath:"merge-sort/merge-sort.md",key:"v-7c9db605",path:"/merge-sort/merge-sort/",headers:[{level:2,title:"📺 视频教程",slug:"视频教程"},{level:2,title:"归并排序的基本思想",slug:"归并排序的基本思想"},{level:2,title:"第 1 步：先写出最顶层函数",slug:"第-1-步-先写出最顶层函数"},{level:2,title:"第 2 步：写出递归函数",slug:"第-2-步-写出递归函数"},{level:2,title:"第 3 步：编写 mergeTwoSortedArray 方法",slug:"第-3-步-编写-mergetwosortedarray-方法"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:7.31,words:2194},updateTime:"January 13, 2022 15:40",updateTimeStamp:1642088425e3,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:6},{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"5 归并排序练习",frontmatter:{title:"5 归并排序练习",icon:"yongyan",category:"排序算法",tags:["排序算法","分而治之","归并排序"],summary:"题号 链接 题解 -------- ---------------------------------------------------------------------------------------------------- -------------------------------------------------------------",meta:[{property:"og:url",content:"https://suanfa8.com/merge-sort/practice.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"5 归并排序练习"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"分而治之"},{property:"article:tag",content:"归并排序"}]},regularPath:"/merge-sort/practice.html",relativePath:"merge-sort/practice.md",key:"v-61e25645",path:"/merge-sort/practice/",readingTime:{minutes:3.38,words:1015},updateTime:"January 13, 2022 15:40",updateTimeStamp:1642088425e3,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"单调栈",frontmatter:{title:"单调栈",icon:"yongyan",category:"栈",tags:["栈","单调栈"],summary:"重点概括 「单调栈」就是普通的栈，可以使用「单调栈」的问题都需要符合「后进先出」的规律，分析出「后进先出」是关键的，「单调」只是题目设计恰好符合的规律。 「力扣」单调栈：题单。 分析「单调栈」问题的思路 1. 暴力解法，暴力解法的缺点是通常都是时间复杂度很高，空间复杂度很低，每一次计算都没有记住什么，暴力解法做了很多重复工作； 2. 分析出后进先出，所以用「",meta:[{property:"og:url",content:"https://suanfa8.com/monotonous-stack/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"单调栈"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"},{property:"article:tag",content:"单调栈"}]},regularPath:"/monotonous-stack/",relativePath:"monotonous-stack/README.md",key:"v-ec0ef8b4",path:"/monotonous-stack/",headers:[{level:2,title:"分析「单调栈」问题的思路",slug:"分析「单调栈」问题的思路"},{level:2,title:"利用「单调栈」的单调性",slug:"利用「单调栈」的单调性"},{level:2,title:"单调栈典型问题",slug:"单调栈典型问题"},{level:2,title:"数据结构是缓存",slug:"数据结构是缓存"},{level:2,title:"学习建议",slug:"学习建议"},{level:2,title:"视频题解",slug:"视频题解"}],readingTime:{minutes:4.71,words:1414},updateTime:"January 14, 2022 01:51",updateTimeStamp:1642125065e3,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 84 题：柱状图中最大的矩形（困难）",frontmatter:{title:"「力扣」第 84 题：柱状图中最大的矩形（困难）",icon:"shipin",category:"栈",tags:["栈","单调栈"],summary:"题目链接：84. 柱状图中最大的矩形；; 题解链接：暴力解法、栈（单调栈、哨兵技巧）。; 阅读提示 本题刚刚接触的时候会觉得有一点复杂，所以我在「视频讲解」和「文字题解」的部分用了一些例子来讲解为什么 可以使用「栈」（因为解决这个问题恰好符合了「后进先出」的顺序）。内容有一些多，但是讲解是层层递进的，稍微有点耐心就可以看完。 视频讲解 :tv: 这道题在 官",meta:[{property:"og:url",content:"https://suanfa8.com/monotonous-stack/solutions/0084-largest-rectangle-in-histogram.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 84 题：柱状图中最大的矩形（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"},{property:"article:tag",content:"单调栈"}]},regularPath:"/monotonous-stack/solutions/0084-largest-rectangle-in-histogram.html",relativePath:"monotonous-stack/solutions/0084-largest-rectangle-in-histogram.md",key:"v-1b385671",path:"/monotonous-stack/solutions/0084-largest-rectangle-in-histogram/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：暴力解法（超时）",slug:"方法一-暴力解法-超时"},{level:2,title:"方法二：以空间换时间，可以使用的数据结构是栈",slug:"方法二-以空间换时间-可以使用的数据结构是栈"}],readingTime:{minutes:13.65,words:4095},updateTime:"January 14, 2022 02:30",updateTimeStamp:1642127404e3,createTime:"January 5, 2022 15:52",createTimeStamp:1641397938e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 316 题：去除重复字母（中等）",frontmatter:{title:"「力扣」第 316 题：去除重复字母（中等）",icon:"shipin",category:"栈",tags:["栈"],summary:"可以观看 视频题解： 视频讲解勘误： 02:00 正确应为：c 出现了 $3$ 次；; 09:30 正确应为：记录每一个字符最后一次出现的下标，可以使用整形数组或者哈希表。; --- 题目链接：316. 去除重复字母；; 题解链接：栈 + 哨兵技巧（Java）。; 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角",meta:[{property:"og:url",content:"https://suanfa8.com/monotonous-stack/solutions/0316-remove-duplicate-letters.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 316 题：去除重复字母（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"}]},regularPath:"/monotonous-stack/solutions/0316-remove-duplicate-letters.html",relativePath:"monotonous-stack/solutions/0316-remove-duplicate-letters.md",key:"v-59c7c24a",path:"/monotonous-stack/solutions/0316-remove-duplicate-letters/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法：栈",slug:"方法-栈"},{level:3,title:"如果遍历到当前栈中已经有的字符，可以舍弃当前遍历到的字符",slug:"如果遍历到当前栈中已经有的字符-可以舍弃当前遍历到的字符"},{level:2,title:"方法二：栈 + 哨兵",slug:"方法二-栈-哨兵"},{level:2,title:"练习",slug:"练习"}],readingTime:{minutes:9.09,words:2728},updateTime:"January 14, 2022 02:30",updateTimeStamp:1642127404e3,createTime:"January 5, 2022 15:52",createTimeStamp:1641397938e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 456 题：132 模式（中等）",frontmatter:{title:"「力扣」第 456 题：132 模式（中等）",icon:"yongyan",category:"栈",tags:["栈","单调栈"],summary:"题目链接：456. 132 模式。; 题目描述 给你一个整数数组 nums ，数组中共有 n 个整数。132 模式的子序列 由三个整数 nums[i]、nums[j] 和 nums[k] 组成，并同时满足：i < j < k 和 nums[i] < nums[k] < nums[j] 。 如果 nums 中存在 132 模式的子序列 ，返回 true ；否则",meta:[{property:"og:url",content:"https://suanfa8.com/monotonous-stack/solutions/0456-132-pattern.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 456 题：132 模式（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"},{property:"article:tag",content:"单调栈"}]},regularPath:"/monotonous-stack/solutions/0456-132-pattern.html",relativePath:"monotonous-stack/solutions/0456-132-pattern.md",key:"v-0ba86745",path:"/monotonous-stack/solutions/0456-132-pattern/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:1.3,words:389},updateTime:"January 12, 2022 01:10",updateTimeStamp:1641949813e3,createTime:"January 5, 2022 15:52",createTimeStamp:1641397938e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 496 题：下一个更大元素 I（简单）",frontmatter:{title:"「力扣」第 496 题：下一个更大元素 I（简单）",icon:"yongyan",category:"栈",tags:["栈","单调栈"],summary:"题目链接：496. 下一个更大元素 I；; 题解链接：暴力解法、单调栈。; 题目描述 nums1 中数字 x 的 下一个更大元素 是指 x 在 nums2 中对应位置 右侧 的 第一个 比 x 大的元素。 给你两个 没有重复元素 的数组 nums1 和 nums2 ，下标从 0 开始计数，其中nums1 是 nums2 的子集。 对于每个 0 <= i < ",meta:[{property:"og:url",content:"https://suanfa8.com/monotonous-stack/solutions/0496-next-greater-element-i.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 496 题：下一个更大元素 I（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"},{property:"article:tag",content:"单调栈"}]},regularPath:"/monotonous-stack/solutions/0496-next-greater-element-i.html",relativePath:"monotonous-stack/solutions/0496-next-greater-element-i.md",key:"v-604ac37b",path:"/monotonous-stack/solutions/0496-next-greater-element-i/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：暴力解法（Brute Force）",slug:"方法一-暴力解法-brute-force"},{level:2,title:"方法二：单调栈",slug:"方法二-单调栈"}],readingTime:{minutes:3.28,words:984},updateTime:"January 14, 2022 01:51",updateTimeStamp:1642125065e3,createTime:"January 5, 2022 15:52",createTimeStamp:1641397938e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 503 题：下一个更大元素 II（中等）",frontmatter:{title:"「力扣」第 503 题：下一个更大元素 II（中等）",icon:"yongyan",category:"栈",tags:["栈","单调栈"],summary:"题目链接：503. 下一个更大元素 II；; 题解链接：单调栈。; 题目描述 给定一个循环数组（最后一个元素的下一个元素是数组的第一个元素），输出每个元素的下一个更大元素。数字 x 的下一个更大的元素是按数组遍历顺序，这个数字之后的第一个比它更大的数，这意味着你应该循环地搜索它的下一个更大的数。如果不存在，则输出 -1。 示例 1： 注意：输入数组的长度不会",meta:[{property:"og:url",content:"https://suanfa8.com/monotonous-stack/solutions/0503-next-greater-element-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 503 题：下一个更大元素 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"},{property:"article:tag",content:"单调栈"}]},regularPath:"/monotonous-stack/solutions/0503-next-greater-element-ii.html",relativePath:"monotonous-stack/solutions/0503-next-greater-element-ii.md",key:"v-6ec9ec85",path:"/monotonous-stack/solutions/0503-next-greater-element-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.96,words:888},updateTime:"January 14, 2022 01:51",updateTimeStamp:1642125065e3,createTime:"January 5, 2022 15:52",createTimeStamp:1641397938e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 581 题：最短无序连续子数组（中等）",frontmatter:{title:"「力扣」第 581 题：最短无序连续子数组（中等）",icon:"yongyan",category:"栈",tags:["栈","单调栈"],summary:"题目链接：581. 最短无序连续子数组；; 题解链接：「力扣」第 581 题：最短无序连续子数组（栈、单调栈）。; 题目描述 给你一个整数数组 nums ，你需要找出一个 连续子数组 ，如果对这个子数组进行升序排序，那么整个数组都会变为升序排序。 请你找出符合题意的 最短 子数组，并输出它的长度。 示例 1： 示例 2： 示例 3： 提示： $1 \\le n",meta:[{property:"og:url",content:"https://suanfa8.com/monotonous-stack/solutions/0581-shortest-unsorted-continuous-subarray.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 581 题：最短无序连续子数组（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"},{property:"article:tag",content:"单调栈"}]},regularPath:"/monotonous-stack/solutions/0581-shortest-unsorted-continuous-subarray.html",relativePath:"monotonous-stack/solutions/0581-shortest-unsorted-continuous-subarray.md",key:"v-60e69ce5",path:"/monotonous-stack/solutions/0581-shortest-unsorted-continuous-subarray/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.71,words:812},updateTime:"January 14, 2022 01:51",updateTimeStamp:1642125065e3,createTime:"January 5, 2022 15:52",createTimeStamp:1641397938e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 739 题：每日温度（中等）",frontmatter:{title:"「力扣」第 739 题：每日温度（中等）",icon:"yongyan",category:"栈",tags:["栈","单调栈"],summary:"题目链接：739. 每日温度；; 题解链接：暴力解法 + 栈（单调栈）。; 题目描述 请根据每日 气温 列表 temperatures ，请计算在每一天需要等几天才会有更高的温度。如果气温在这之后都不会升高，请在该位置用 0 来代替。 示例 1: 示例 2: 示例 3: 提示： 1 <= temperatures.length <= 10^5; 30 <= ",meta:[{property:"og:url",content:"https://suanfa8.com/monotonous-stack/solutions/0739-daily-temperatures.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 739 题：每日温度（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"},{property:"article:tag",content:"单调栈"}]},regularPath:"/monotonous-stack/solutions/0739-daily-temperatures.html",relativePath:"monotonous-stack/solutions/0739-daily-temperatures.md",key:"v-b797c6fa",path:"/monotonous-stack/solutions/0739-daily-temperatures/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：暴力解法（Brute Force）",slug:"方法一-暴力解法-brute-force"},{level:2,title:"方法二：栈（单调栈）",slug:"方法二-栈-单调栈"}],readingTime:{minutes:3.03,words:908},updateTime:"January 14, 2022 01:51",updateTimeStamp:1642125065e3,createTime:"January 5, 2022 15:52",createTimeStamp:1641397938e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 962 题：最大宽度坡（中等）",frontmatter:{title:"「力扣」第 962 题：最大宽度坡（中等）",icon:"yongyan",category:"栈",tags:["单调栈"],summary:"题目描述：962. 最大宽度坡。; 题目描述 给定一个整数数组 A，坡是元组 (i, j)，其中 i < j 且 A[i] <= A[j]。这样的坡的宽度为 j - i。 找出 A 中的坡的最大宽度，如果不存在，返回 0 。 示例 1： 示例 2： 提示： 1. 2 <= A.length <= 50000 2. 0 <= A[i] <= 50000 说明 ",meta:[{property:"og:url",content:"https://suanfa8.com/monotonous-stack/solutions/0962-maximum-width-ramp.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 962 题：最大宽度坡（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"单调栈"}]},regularPath:"/monotonous-stack/solutions/0962-maximum-width-ramp.html",relativePath:"monotonous-stack/solutions/0962-maximum-width-ramp.md",key:"v-5a3fc6e6",path:"/monotonous-stack/solutions/0962-maximum-width-ramp/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.02,words:307},updateTime:"January 12, 2022 01:10",updateTimeStamp:1641949813e3,createTime:"January 7, 2022 09:10",createTimeStamp:1641546645e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 907 题：子数组的最小值之和（中等）",frontmatter:{title:"「力扣」第 907 题：子数组的最小值之和（中等）",icon:"yongyan",category:"栈",tags:["栈","单调栈"],summary:'题目链接：907. 子数组的最小值之和。; 题目描述 给定一个整数数组 arr，找到 min(b) 的总和，其中 b 的范围为 arr 的每个（连续）子数组。 由于答案可能很大，因此 返回答案模 10^9 + 7 。 示例 1： 示例 2： 提示： 1 <= arr.length <= 3 * 10^4; 1 <= arr[i] <= 3 * 10^4; "',meta:[{property:"og:url",content:"https://suanfa8.com/monotonous-stack/solutions/0970-sum-of-subarray-minimums.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 907 题：子数组的最小值之和（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"},{property:"article:tag",content:"单调栈"}]},regularPath:"/monotonous-stack/solutions/0970-sum-of-subarray-minimums.html",relativePath:"monotonous-stack/solutions/0970-sum-of-subarray-minimums.md",key:"v-63704c6e",path:"/monotonous-stack/solutions/0970-sum-of-subarray-minimums/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"题意分析",slug:"题意分析"},{level:2,title:"方法：单调栈",slug:"方法-单调栈"}],readingTime:{minutes:1.26,words:379},updateTime:"January 14, 2022 01:51",updateTimeStamp:1642125065e3,createTime:"January 5, 2022 15:52",createTimeStamp:1641397938e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 1673 题：找出最具竞争力的子序列（中等）",frontmatter:{title:"「力扣」第 1673 题：找出最具竞争力的子序列（中等）",icon:"yongyan",category:"栈",tags:["栈","单调栈"],summary:"题目链接：1673. 找出最具竞争力的子序列；; 题解链接：栈（Java）。; 题目描述 给你一个整数数组 nums 和一个正整数 k ，返回长度为 k 且最具 竞争力 的 nums 子序列。 数组的子序列是从数组中删除一些元素（可能不删除元素）得到的序列。 在子序列 a 和子序列 b 第一个不相同的位置上，如果 a 中的数字小于 b 中对应的数字，那么我们",meta:[{property:"og:url",content:"https://suanfa8.com/monotonous-stack/solutions/1673-find-the-most-competitive-subsequence.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1673 题：找出最具竞争力的子序列（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"},{property:"article:tag",content:"单调栈"}]},regularPath:"/monotonous-stack/solutions/1673-find-the-most-competitive-subsequence.html",relativePath:"monotonous-stack/solutions/1673-find-the-most-competitive-subsequence.md",key:"v-2cb152c5",path:"/monotonous-stack/solutions/1673-find-the-most-competitive-subsequence/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"理解题意",slug:"理解题意"},{level:2,title:"为什么想到用「栈」",slug:"为什么想到用「栈」"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:4.19,words:1256},updateTime:"January 14, 2022 01:51",updateTimeStamp:1642125065e3,createTime:"January 5, 2022 15:52",createTimeStamp:1641397938e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"音乐欣赏",frontmatter:{summary:"音乐欣赏 这部分展示了我经常听的一些歌曲，都是歌唱家现场演唱的经典歌曲哦！",meta:[{property:"og:url",content:"https://suanfa8.com/music/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"音乐欣赏"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/music/",relativePath:"music/README.md",key:"v-3cfd634a",path:"/music/",readingTime:{minutes:.11,words:34},updateTime:"January 15, 2022 08:53",updateTimeStamp:1642236813e3,createTime:"January 15, 2022 08:53",createTimeStamp:1642236813e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"懂你（演唱：满文军）",frontmatter:{title:"懂你（演唱：满文军）",icon:"yinle1",category:"音乐",tags:["音乐"],summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/music/dongni.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"懂你（演唱：满文军）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"音乐"}]},regularPath:"/music/dongni.html",relativePath:"music/dongni.md",key:"v-27749c7f",path:"/music/dongni/",readingTime:{minutes:.25,words:74},updateTime:"January 15, 2022 08:53",updateTimeStamp:1642236813e3,createTime:"January 15, 2022 08:53",createTimeStamp:1642236813e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"滚滚长江东逝水（电视剧《三国演义》片尾曲，演唱：杨洪基）",frontmatter:{title:"滚滚长江东逝水（电视剧《三国演义》片尾曲，演唱：杨洪基）",icon:"yinle1",category:"音乐",tags:["音乐"],summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/music/gungunchangjiangdongshishui.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"滚滚长江东逝水（电视剧《三国演义》片尾曲，演唱：杨洪基）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"音乐"}]},regularPath:"/music/gungunchangjiangdongshishui.html",relativePath:"music/gungunchangjiangdongshishui.md",key:"v-28e85245",path:"/music/gungunchangjiangdongshishui/",readingTime:{minutes:.12,words:37},updateTime:"January 15, 2022 08:53",updateTimeStamp:1642236813e3,createTime:"January 15, 2022 08:53",createTimeStamp:1642236813e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"历史的天空（电视剧《三国演义》片尾曲，演唱：毛阿敏）",frontmatter:{title:"历史的天空（电视剧《三国演义》片尾曲，演唱：毛阿敏）",icon:"yinle1",category:"音乐",tags:["音乐"],summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/music/lishidetiankong.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"历史的天空（电视剧《三国演义》片尾曲，演唱：毛阿敏）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"音乐"}]},regularPath:"/music/lishidetiankong.html",relativePath:"music/lishidetiankong.md",key:"v-13914f76",path:"/music/lishidetiankong/",readingTime:{minutes:.12,words:37},updateTime:"January 15, 2022 08:53",updateTimeStamp:1642236813e3,createTime:"January 15, 2022 08:53",createTimeStamp:1642236813e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 523 题：连续的子数组（中等）",frontmatter:{title:"「力扣」第 523 题：连续的子数组（中等）",icon:"yongyan",category:"前缀和",tags:["前缀和","哈希表"],summary:"题目链接：523. 连续的子数组和。; 题目描述 给你一个整数数组 nums 和一个整数 k ，编写一个函数来判断该数组是否含有同时满足下述条件的连续子数组： 子数组大小 至少为 2 ，且; 子数组元素总和为 k 的倍数。; 如果存在，返回 true ；否则，返回 false 。 如果存在一个整数 n ，令整数 x 符合 x = n * k ，则称 x 是 ",meta:[{property:"og:url",content:"https://suanfa8.com/presum-hashtable/solutions/0523-continuous-subarray-sum.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 523 题：连续的子数组（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"前缀和"},{property:"article:tag",content:"哈希表"}]},regularPath:"/presum-hashtable/solutions/0523-continuous-subarray-sum.html",relativePath:"presum-hashtable/solutions/0523-continuous-subarray-sum.md",key:"v-36c50fc5",path:"/presum-hashtable/solutions/0523-continuous-subarray-sum/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：暴力解法（超时）",slug:"方法一-暴力解法-超时"},{level:2,title:"方法 2：前缀和（超时）",slug:"方法-2-前缀和-超时"},{level:2,title:"方法 3：前缀与哈希表",slug:"方法-3-前缀与哈希表"}],readingTime:{minutes:4.38,words:1314},updateTime:"January 13, 2022 16:19",updateTimeStamp:164209076e4,createTime:"January 6, 2022 08:07",createTimeStamp:1641456448e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"这一拜（电视剧《三国演义》插曲，演唱：刘欢）",frontmatter:{title:"这一拜（电视剧《三国演义》插曲，演唱：刘欢）",icon:"yinle1",category:"音乐",tags:["音乐"],summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/music/zheyibai.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"这一拜（电视剧《三国演义》插曲，演唱：刘欢）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"音乐"}]},regularPath:"/music/zheyibai.html",relativePath:"music/zheyibai.md",key:"v-4a41daf7",path:"/music/zheyibai/",readingTime:{minutes:.12,words:37},updateTime:"January 15, 2022 08:53",updateTimeStamp:1642236813e3,createTime:"January 15, 2022 08:53",createTimeStamp:1642236813e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"专题：前缀和与哈希表",frontmatter:{summary:"专题：前缀和与哈希表",meta:[{property:"og:url",content:"https://suanfa8.com/presum-hashtable/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"专题：前缀和与哈希表"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/presum-hashtable/",relativePath:"presum-hashtable/README.md",key:"v-73a01986",path:"/presum-hashtable/",headers:[{level:2,title:"专题：前缀和与哈希表",slug:"专题-前缀和与哈希表"}],readingTime:{minutes:.03,words:9},updateTime:"December 26, 2021 10:30",updateTimeStamp:1640514631e3,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 525 题：连续数组（中等）",frontmatter:{title:"「力扣」第 525 题：连续数组（中等）",icon:"yongyan",category:"前缀和",tags:["前缀和","哈希表"],summary:"题目链接：525. 连续数组；; 题解链接：前缀和与哈希表（Java）、相关问题推荐。; 题目描述 给定一个二进制数组, 找到含有相同数量的 0 和 1 的最长连续子数组（的长度）。 示例 1: 示例 2: 数据范围： $1 \\le \\text{nums.length} \\le 10^5$; 输入数组的值只包含 $0$ 和 $1$; 思路分析 首先想到的是「",meta:[{property:"og:url",content:"https://suanfa8.com/presum-hashtable/solutions/0525-contiguous-array.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 525 题：连续数组（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"前缀和"},{property:"article:tag",content:"哈希表"}]},regularPath:"/presum-hashtable/solutions/0525-contiguous-array.html",relativePath:"presum-hashtable/solutions/0525-contiguous-array.md",key:"v-1ebbe39e",path:"/presum-hashtable/solutions/0525-contiguous-array/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"为什么不是滑动窗口",slug:"为什么不是滑动窗口"},{level:2,title:"通过前缀和求区间和",slug:"通过前缀和求区间和"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:3.59,words:1077},updateTime:"January 13, 2022 16:19",updateTimeStamp:164209076e4,createTime:"January 6, 2022 08:07",createTimeStamp:1641456448e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 974 题：和可被 K 整除的子数组（中等）",frontmatter:{title:"「力扣」第 974 题：和可被 K 整除的子数组（中等）",icon:"yongyan",category:"前缀和",tags:["前缀和","哈希表"],summary:"说明 时间有限，未能详细编写，请大家理解，可以前往该题的题解区与评论区查看适合自己的题解。 题目链接：974. 和可被 K 整除的子数组。; 题目描述 给定一个整数数组 A，返回其中元素之和可被 K 整除的（连续、非空）子数组的数目。 示例： 提示： 1. 1 <= A.length <= 30000 2. -10000 <= A[i] <= 10000 3",meta:[{property:"og:url",content:"https://suanfa8.com/presum-hashtable/solutions/0974-subarray-sums-divisible-by-k.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 974 题：和可被 K 整除的子数组（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"前缀和"},{property:"article:tag",content:"哈希表"}]},regularPath:"/presum-hashtable/solutions/0974-subarray-sums-divisible-by-k.html",relativePath:"presum-hashtable/solutions/0974-subarray-sums-divisible-by-k.md",key:"v-5cfc1d6e",path:"/presum-hashtable/solutions/0974-subarray-sums-divisible-by-k/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.27,words:381},updateTime:"January 13, 2022 16:19",updateTimeStamp:164209076e4,createTime:"January 6, 2022 08:07",createTimeStamp:1641456448e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 560 题：和为 K 的子数组（中等）",frontmatter:{title:"「力扣」第 560 题：和为 K 的子数组（中等）",icon:"yongyan",category:"前缀和",tags:["前缀和","哈希表"],summary:"说明 分享一下，没有会员的朋友可以做类似 352 题的 560 题。 题目链接：560. 和为 K 的子数组；; 题解链接：暴力解法、前缀和、前缀和优化（Java）。; 题目描述 给你一个整数数组 nums 和一个整数 k ，请你统计并返回该数组中和为 k 的连续子数组的个数。 示例 1： 示例 2： 提示： 1 <= nums.length <= 2 * ",meta:[{property:"og:url",content:"https://suanfa8.com/presum-hashtable/solutions/0560-subarray-sum-equals-k.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 560 题：和为 K 的子数组（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"前缀和"},{property:"article:tag",content:"哈希表"}]},regularPath:"/presum-hashtable/solutions/0560-subarray-sum-equals-k.html",relativePath:"presum-hashtable/solutions/0560-subarray-sum-equals-k.md",key:"v-59402925",path:"/presum-hashtable/solutions/0560-subarray-sum-equals-k/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：暴力解法（超时）",slug:"方法一-暴力解法-超时"},{level:2,title:"方法二：暴力解法的优化",slug:"方法二-暴力解法的优化"},{level:2,title:"方法三：前缀和",slug:"方法三-前缀和"},{level:2,title:"方法四：前缀和 + 哈希表优化",slug:"方法四-前缀和-哈希表优化"}],readingTime:{minutes:3.11,words:934},updateTime:"January 13, 2022 16:19",updateTimeStamp:164209076e4,createTime:"January 6, 2022 08:07",createTimeStamp:1641456448e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 1248 题：统计「优美子数组」（中等）",frontmatter:{title:"「力扣」第 1248 题：统计「优美子数组」（中等）",icon:"yongyan",category:"前缀和",tags:["前缀和","哈希表"],summary:"题目链接：1248. 统计「优美子数组」。; 题目描述 给你一个整数数组 nums 和一个整数 k。 如果某个 连续 子数组中恰好有 k 个奇数数字，我们就认为这个子数组是「优美子数组」。 请返回这个数组中「优美子数组」的数目。 示例 1： 示例 2： 示例 3： 提示： 1 <= nums.length <= 50000; 1 <= nums[i] <= ",meta:[{property:"og:url",content:"https://suanfa8.com/presum-hashtable/solutions/1248-count-number-of-nice-subarrays.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1248 题：统计「优美子数组」（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"前缀和"},{property:"article:tag",content:"哈希表"}]},regularPath:"/presum-hashtable/solutions/1248-count-number-of-nice-subarrays.html",relativePath:"presum-hashtable/solutions/1248-count-number-of-nice-subarrays.md",key:"v-067af542",path:"/presum-hashtable/solutions/1248-count-number-of-nice-subarrays/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法：前缀和",slug:"方法-前缀和"}],readingTime:{minutes:.95,words:285},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941866e3,createTime:"January 6, 2022 08:07",createTimeStamp:1641456448e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 1314 题：矩阵区域和（简单）",frontmatter:{title:"「力扣」第 1314 题：矩阵区域和（简单）",icon:"yongyan",category:"前缀和",tags:["前缀和"],summary:"题目链接：1314. 矩阵区域和；; 题解链接：前缀和矩阵。; 参考「力扣」第 304 题：“二维区域和检索 - 矩阵不可变” 的做法。 题目描述 给你一个 m x n 的矩阵 mat 和一个整数 k ，请你返回一个矩阵 answer ，其中每个 answer[i][j] 是所有满足下述条件的元素 mat[r][c] 的和： i - k <= r <= i ",meta:[{property:"og:url",content:"https://suanfa8.com/presum-hashtable/solutions/1314-matrix-block-sum.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1314 题：矩阵区域和（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"前缀和"}]},regularPath:"/presum-hashtable/solutions/1314-matrix-block-sum.html",relativePath:"presum-hashtable/solutions/1314-matrix-block-sum.md",key:"v-33e0b295",path:"/presum-hashtable/solutions/1314-matrix-block-sum/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:1.65,words:496},updateTime:"January 13, 2022 16:19",updateTimeStamp:164209076e4,createTime:"January 6, 2022 08:07",createTimeStamp:1641456448e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 239 题：滑动窗口的最大值（困难）",frontmatter:{title:"「力扣」第 239 题：滑动窗口的最大值（困难）",icon:"yongyan",category:"队列",tags:["滑动窗口","队列","单调队列"],summary:"题目地址：239. 滑动窗口最大值；; 题解地址：最大索引堆 + 双端队列存索引值的思路分析（Python 代码、Java 代码）。; 题目描述 给你一个整数数组 nums，有一个大小为 k 的滑动窗口从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口内的 k 个数字。滑动窗口每次只向右移动一位。 返回滑动窗口中的最大值。 示例 1： 示例 2： 示例",meta:[{property:"og:url",content:"https://suanfa8.com/queue/solutions/0239-sliding-window-maximum.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 239 题：滑动窗口的最大值（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"},{property:"article:tag",content:"队列"},{property:"article:tag",content:"单调队列"}]},regularPath:"/queue/solutions/0239-sliding-window-maximum.html",relativePath:"queue/solutions/0239-sliding-window-maximum.md",key:"v-e058a636",path:"/queue/solutions/0239-sliding-window-maximum/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.18,words:354},updateTime:"January 13, 2022 14:54",updateTimeStamp:1642085663e3,createTime:"January 6, 2022 08:02",createTimeStamp:1641456151e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"队列",frontmatter:{summary:"队列 队列 Queue 主要处理的问题是广度优先遍历（不论是针对树还是图，可以把树理解为图的特殊形式）。 这一节，我们对栈和数据结构这两种看似行为不同，但事实上都是对数据的缓存，只是根据需要的时机不同而设计的两种数据结构和它们的应用和扩展，做了简单的介绍。后面的几节，我们来看一下，栈和队列的具体应用，以加深我们对它们的理解。 队列就和我们平常坐公交、地铁、买",meta:[{property:"og:url",content:"https://suanfa8.com/queue/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"队列"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/queue/",relativePath:"queue/README.md",key:"v-3fafbf1c",path:"/queue/",headers:[{level:2,title:"队列",slug:"队列"},{level:3,title:"队列的抽象数据类型",slug:"队列的抽象数据类型"},{level:2,title:"",slug:""},{level:3,title:"队列简介",slug:"队列简介"},{level:3,title:"队列的扩展",slug:"队列的扩展"},{level:2,title:"双端队列（Double Ended Queue）",slug:"双端队列-double-ended-queue"},{level:2,title:"循环队列",slug:"循环队列"}],readingTime:{minutes:15.01,words:4502},updateTime:"December 26, 2021 10:30",updateTimeStamp:1640514631e3,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 621 题：任务调度器（中等）",frontmatter:{title:"「力扣」第 621 题：任务调度器（中等）",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历","队列"],summary:"题目链接：621. 任务调度器。; 题目描述 给你一个用字符数组 tasks 表示的 CPU 需要执行的任务列表。其中每个字母表示一种不同种类的任务。任务可以以任意顺序执行，并且每个任务都可以在 1 个单位时间内执行完。在任何一个单位时间，CPU 可以完成一个任务，或者处于待命状态。 然而，两个 相同种类 的任务之间必须有长度为整数 n 的冷却时间，因此至少",meta:[{property:"og:url",content:"https://suanfa8.com/queue/solutions/0621-task-scheduler.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 621 题：任务调度器（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"},{property:"article:tag",content:"队列"}]},regularPath:"/queue/solutions/0621-task-scheduler.html",relativePath:"queue/solutions/0621-task-scheduler.md",key:"v-26abd165",path:"/queue/solutions/0621-task-scheduler/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:2.16,words:647},updateTime:"January 13, 2022 14:54",updateTimeStamp:1642085663e3,createTime:"January 6, 2022 08:02",createTimeStamp:1641456151e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 622 题：设计循环队列（中等）",frontmatter:{title:"「力扣」第 622 题：设计循环队列（中等）",icon:"yongyan",category:"队列",tags:["队列"],summary:"题目链接：622. 设计循环队列；; 题解链接：数组实现的循环队列。; 题目描述 设计你的循环队列实现。 循环队列是一种线性数据结构，其操作表现基于 FIFO（先进先出）原则并且队尾被连接在队首之后以形成一个循环。它也被称为“环形缓冲器”。 循环队列的一个好处是我们可以利用这个队列之前用过的空间。在一个普通队列里，一旦一个队列满了，我们就不能插入下一个元素，",meta:[{property:"og:url",content:"https://suanfa8.com/queue/solutions/0622-design-circular-queue.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 622 题：设计循环队列（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"队列"}]},regularPath:"/queue/solutions/0622-design-circular-queue.html",relativePath:"queue/solutions/0622-design-circular-queue.md",key:"v-2571e6d5",path:"/queue/solutions/0622-design-circular-queue/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:5.44,words:1632},updateTime:"January 13, 2022 14:54",updateTimeStamp:1642085663e3,createTime:"January 6, 2022 08:02",createTimeStamp:1641456151e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 630 题：课程表 III（困难）",frontmatter:{title:"「力扣」第 630 题：课程表 III（困难）",icon:"yongyan",category:"队列",tags:["队列"],summary:"题目链接：630. 课程表 III。; 题目描述 这里有 n 门不同的在线课程，按从 1 到 n 编号。给你一个数组 courses ，其中 courses[i] = [durationi, lastDayi] 表示第 i 门课将会 持续 上 durationi 天课，并且必须在不晚于 lastDayi 的时候完成。 你的学期从第 1 天开始。且不能同时修读",meta:[{property:"og:url",content:"https://suanfa8.com/queue/solutions/0630-course-schedule-iii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 630 题：课程表 III（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"队列"}]},regularPath:"/queue/solutions/0630-course-schedule-iii.html",relativePath:"queue/solutions/0630-course-schedule-iii.md",key:"v-6e95c396",path:"/queue/solutions/0630-course-schedule-iii/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.01,words:304},updateTime:"January 13, 2022 14:54",updateTimeStamp:1642085663e3,createTime:"January 6, 2022 08:02",createTimeStamp:1641456151e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 641 题：设计循环双端队列（中等）",frontmatter:{title:"「力扣」第 641 题：设计循环双端队列（中等）",icon:"yongyan",category:"队列",tags:["队列"],summary:"题目链接：641. 设计循环双端队列；; 题解链接：数组实现的循环双端队列。; 题目描述 设计实现双端队列。 你的实现需要支持以下操作： MyCircularDeque(k)：构造函数,双端队列的大小为 k。; insertFront()：将一个元素添加到双端队列头部。 如果操作成功返回 true。; insertLast()：将一个元素添加到双端队列尾部。",meta:[{property:"og:url",content:"https://suanfa8.com/queue/solutions/0641-design-circular-deque.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 641 题：设计循环双端队列（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"队列"}]},regularPath:"/queue/solutions/0641-design-circular-deque.html",relativePath:"queue/solutions/0641-design-circular-deque.md",key:"v-ca0a5286",path:"/queue/solutions/0641-design-circular-deque/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:6.74,words:2022},updateTime:"January 13, 2022 14:54",updateTimeStamp:1642085663e3,createTime:"January 6, 2022 08:02",createTimeStamp:1641456151e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 933 题：最近的请求次数（简单）",frontmatter:{title:"「力扣」第 933 题：最近的请求次数（简单）",icon:"yongyan",category:"队列",tags:["队列"],summary:"题目链接：933. 最近的请求次数；; 题解链接：解释一下题意。; 题目描述 写一个 RecentCounter 类来计算特定时间范围内最近的请求。 请你实现 RecentCounter 类： RecentCounter() 初始化计数器，请求数为 0 。; int ping(int t) 在时间 t 添加一个新请求，其中 t 表示以毫秒为单位的某个时间，并",meta:[{property:"og:url",content:"https://suanfa8.com/queue/solutions/0933-number-of-recent-calls.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 933 题：最近的请求次数（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"队列"}]},regularPath:"/queue/solutions/0933-number-of-recent-calls.html",relativePath:"queue/solutions/0933-number-of-recent-calls.md",key:"v-0185e1b6",path:"/queue/solutions/0933-number-of-recent-calls/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.08,words:624},updateTime:"January 13, 2022 14:54",updateTimeStamp:1642085663e3,createTime:"January 6, 2022 08:02",createTimeStamp:1641456151e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「剑指 Offer」第 40 题：最小的 k 个数（中等）",frontmatter:{title:"「剑指 Offer」第 40 题：最小的 k 个数（中等）",icon:"yongyan",category:null,tags:["快速排序","优先队列","减而治之"],summary:"题目链接：剑指 Offer 40. 最小的 k 个数。; 题目描述 输入整数数组 arr ，找出其中最小的 k 个数。例如，输入 4、5、1、6、2、7、3、8 这 8 个数字，则最小的 4 个数字是 1、2、3、4。 示例 1： 示例 2： 限制： 0 <= k <= arr.length <= 10000; 0 <= arr[i] <= 10000; 方",meta:[{property:"og:url",content:"https://suanfa8.com/quick-sort/0040-zui-xiao-de-kge-shu-lcof.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「剑指 Offer」第 40 题：最小的 k 个数（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"快速排序"},{property:"article:tag",content:"优先队列"},{property:"article:tag",content:"减而治之"}]},regularPath:"/quick-sort/0040-zui-xiao-de-kge-shu-lcof.html",relativePath:"quick-sort/0040-zui-xiao-de-kge-shu-lcof.md",key:"v-3e43a959",path:"/quick-sort/0040-zui-xiao-de-kge-shu-lcof/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：减而治之",slug:"方法一-减而治之"},{level:2,title:"方法二：优先队列",slug:"方法二-优先队列"}],readingTime:{minutes:2.04,words:612},updateTime:"May 2, 2022 05:25",updateTimeStamp:165146913e4,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 75 题：颜色分类（中等）",frontmatter:{title:"「力扣」第 75 题：颜色分类（中等）",icon:"shipin",category:"排序算法",tags:["排序算法","分而治之","快速排序"],summary:"题目链接：75. 颜色分类；; 题解链接：快速排序的子过程 partition（重点在设计循环不变量）。; 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 给定一个包含红色、白色和蓝色，一共 n 个元素的数组，原地对它们进行排序，使得相",meta:[{property:"og:url",content:"https://suanfa8.com/quick-sort/0075-sort-colors.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 75 题：颜色分类（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"分而治之"},{property:"article:tag",content:"快速排序"}]},regularPath:"/quick-sort/0075-sort-colors.html",relativePath:"quick-sort/0075-sort-colors.md",key:"v-f829daf6",path:"/quick-sort/0075-sort-colors/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：排序",slug:"方法一-排序"},{level:2,title:"方法二：快速排序的子过程 partition",slug:"方法二-快速排序的子过程-partition"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:5.48,words:1643},updateTime:"January 13, 2022 15:46",updateTimeStamp:164208881e4,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:6},{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"TopK 问题：「力扣」第 215 题：数组第 k 大的元素（中等）",frontmatter:{title:"TopK 问题：「力扣」第 215 题：数组第 k 大的元素（中等）",icon:"yongyan",category:"排序算法",tags:["排序算法","减而治之","快速排序","优先队列"],summary:"题目链接：215. 数组中的第 K 个最大元素；; 题解链接：通过 partition 减治 + 优先队列（Java）。; 题目描述 在未排序的数组中找到第 k 个最大的元素。请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。 示例 1: 示例 2: 说明: 你可以假设 k 总是有效的，且 1 ≤ k ≤ 数组的长度。 说明：",meta:[{property:"og:url",content:"https://suanfa8.com/quick-sort/0215-kth-largest-element-in-an-array.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"TopK 问题：「力扣」第 215 题：数组第 k 大的元素（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"减而治之"},{property:"article:tag",content:"快速排序"},{property:"article:tag",content:"优先队列"}]},regularPath:"/quick-sort/0215-kth-largest-element-in-an-array.html",relativePath:"quick-sort/0215-kth-largest-element-in-an-array.md",key:"v-71623345",path:"/quick-sort/0215-kth-largest-element-in-an-array/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：暴力解法",slug:"方法一-暴力解法"},{level:2,title:"方法二：减而治之（逐渐缩小问题规模）",slug:"方法二-减而治之-逐渐缩小问题规模"},{level:2,title:"方法三：优先队列",slug:"方法三-优先队列"}],readingTime:{minutes:9.6,words:2880},updateTime:"May 2, 2022 05:25",updateTimeStamp:165146913e4,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5}]},{title:"「力扣」第 451 题：根据字符出现频率排序（中等）",frontmatter:{title:"「力扣」第 451 题：根据字符出现频率排序（中等）",icon:"yongyan",category:"排序算法",tags:["排序算法","分而治之","快速排序"],summary:"题目链接：451. 根据字符出现频率排序。; 题目描述 给定一个字符串，请将字符串里的字符按照出现的频率降序排列。 示例 1: 示例 2: 示例 3: Constraints: 1 <= s.length <= 5 * 10^5; s consists of uppercase and lowercase English letters and digits",meta:[{property:"og:url",content:"https://suanfa8.com/quick-sort/0451-sort-characters-by-frequency.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 451 题：根据字符出现频率排序（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"分而治之"},{property:"article:tag",content:"快速排序"}]},regularPath:"/quick-sort/0451-sort-characters-by-frequency.html",relativePath:"quick-sort/0451-sort-characters-by-frequency.md",key:"v-c5448ab6",path:"/quick-sort/0451-sort-characters-by-frequency/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"方法一：排序",slug:"方法一-排序"},{level:3,title:"方法二：三路快排",slug:"方法二-三路快排"}],readingTime:{minutes:2.39,words:717},updateTime:"May 2, 2022 05:25",updateTimeStamp:165146913e4,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「程序员面试金典」17.14. 最小 K 个数（中等）",frontmatter:{title:"「程序员面试金典」17.14. 最小 K 个数（中等）",icon:"yongyan",category:null,tags:["快速排序","优先队列","减而治之"],summary:"题目链接：面试题 17.14. 最小 K 个数；; 题解链接：排序、优先队列、快速排序的子过程（Java）。; 题目描述 设计一个算法，找出数组中最小的 k 个数。以任意顺序返回这 k 个数均可。 示例： 提示： 0 <= len(arr) <= 100000; 0 <= k <= min(100000, len(arr)); --- 这题是典型的 TopK",meta:[{property:"og:url",content:"https://suanfa8.com/quick-sort/17-14-smallest-k-lcci.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「程序员面试金典」17.14. 最小 K 个数（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"快速排序"},{property:"article:tag",content:"优先队列"},{property:"article:tag",content:"减而治之"}]},regularPath:"/quick-sort/17-14-smallest-k-lcci.html",relativePath:"quick-sort/17-14-smallest-k-lcci.md",key:"v-853d8742",path:"/quick-sort/17-14-smallest-k-lcci/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"方法一：排序",slug:"方法一-排序"},{level:3,title:"方法二：优先队列",slug:"方法二-优先队列"},{level:3,title:"方法三：快速排序的子过程",slug:"方法三-快速排序的子过程"}],readingTime:{minutes:6.46,words:1939},updateTime:"January 13, 2022 15:46",updateTimeStamp:164208881e4,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"快速排序",frontmatter:{title:"快速排序",icon:"yongyan",category:"快速排序",tags:["快速排序","分治思想"],summary:"第 1 节到第 6 节是「快速排序」的内容，希望我这样的编排，读者能够感受到一点一点、层层递进，为了解决问题，而引入的逐步优化。 并且通过多次练习，掌握写对「快速排序」也不需要背代码，而是科学、合理地设计「循环不变量」，明确地知道每一个变量 的含义，进而把代码写对。 归并排序与快速排序都使用了「分治思想」 归并排序 拆分：不管数组的形态，总是将数组一分为二；",meta:[{property:"og:url",content:"https://suanfa8.com/quick-sort/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"快速排序"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"快速排序"},{property:"article:tag",content:"分治思想"}]},regularPath:"/quick-sort/",relativePath:"quick-sort/README.md",key:"v-b3617cb4",path:"/quick-sort/",headers:[{level:2,title:"归并排序与快速排序都使用了「分治思想」",slug:"归并排序与快速排序都使用了「分治思想」"},{level:3,title:"归并排序",slug:"归并排序"},{level:3,title:"快速排序",slug:"快速排序"}],readingTime:{minutes:.76,words:228},updateTime:"May 2, 2022 05:25",updateTimeStamp:165146913e4,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4},{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"第 1 节 快速排序的基本思想",frontmatter:{title:"第 1 节 快速排序的基本思想",icon:"shipin",category:"排序算法",tags:["排序算法","分而治之","快速排序"],summary:"Your browser does not support the video tag.",meta:[{property:"og:url",content:"https://suanfa8.com/quick-sort/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 1 节 快速排序的基本思想"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"分而治之"},{property:"article:tag",content:"快速排序"}]},regularPath:"/quick-sort/intro.html",relativePath:"quick-sort/intro.md",key:"v-b4017dca",path:"/quick-sort/intro/",readingTime:{minutes:.08,words:24},updateTime:"May 2, 2022 05:25",updateTimeStamp:165146913e4,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3}]},{title:"partition 几种写法比较",frontmatter:{summary:"partition 几种写法比较 partition 1： 可能会造成递归树倾斜。 参考代码： 注意：必须随机化 pivot 元素。 partition 2： 参考代码： 补：优先队列写法 思路：看 k 是在前面还是后面。 前面，就用最小堆；; 后面，就用最大堆。;",meta:[{property:"og:url",content:"https://suanfa8.com/quick-sort/partition%20%E5%87%A0%E7%A7%8D%E5%86%99%E6%B3%95%E6%AF%94%E8%BE%83.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"partition 几种写法比较"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/quick-sort/partition%20%E5%87%A0%E7%A7%8D%E5%86%99%E6%B3%95%E6%AF%94%E8%BE%83.html",relativePath:"quick-sort/partition 几种写法比较.md",key:"v-77eed1e4",path:"/quick-sort/partition%20%E5%87%A0%E7%A7%8D%E5%86%99%E6%B3%95%E6%AF%94%E8%BE%83/",headers:[{level:2,title:"partition 1：",slug:"partition-1"},{level:2,title:"partition 2：",slug:"partition-2"},{level:2,title:"补：优先队列写法",slug:"补-优先队列写法"}],readingTime:{minutes:3.46,words:1037},updateTime:"May 2, 2022 05:25",updateTimeStamp:165146913e4,createTime:"May 2, 2022 05:25",createTimeStamp:165146913e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"第 2 节 partition",frontmatter:{title:"第 2 节 partition",icon:"shipin",category:"排序算法",tags:["排序算法","分而治之","快速排序"],summary:"Your browser does not support the video tag. 这一节我们要介绍在算法领域大名鼎鼎的一个算法：快速排序。正如它的名字一样，「快速排序」因它优秀的排序性能而闻名。但事实上，实现一个性能良好的快速排序并不是一件容易的事情。 快速排序也是使用「分治思想」实现的一种排序算法。但「归并排序」不同的是：快速排序首先想方设法通过排",meta:[{property:"og:url",content:"https://suanfa8.com/quick-sort/partition.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 2 节 partition"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"分而治之"},{property:"article:tag",content:"快速排序"}]},regularPath:"/quick-sort/partition.html",relativePath:"quick-sort/partition.md",key:"v-5442b1c2",path:"/quick-sort/partition/",headers:[{level:2,title:"切分",slug:"切分"},{level:2,title:"总结",slug:"总结"},{level:3,title:"快速排序的基本想法",slug:"快速排序的基本想法"},{level:3,title:"快速排序的算法思想",slug:"快速排序的算法思想"},{level:3,title:"与归并排序比较",slug:"与归并排序比较"}],readingTime:{minutes:2.75,words:826},updateTime:"May 2, 2022 05:25",updateTimeStamp:165146913e4,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5},{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"第 3 节 快速排序（第 1 版代码）",frontmatter:{title:"第 3 节 快速排序（第 1 版代码）",icon:"shipin",category:"排序算法",tags:["排序算法","分而治之","快速排序"],summary:"Your browser does not support the video tag. 参考代码 1： 修改定义。 参考代码 2：",meta:[{property:"og:url",content:"https://suanfa8.com/quick-sort/quick-sort-basic.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 3 节 快速排序（第 1 版代码）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"分而治之"},{property:"article:tag",content:"快速排序"}]},regularPath:"/quick-sort/quick-sort-basic.html",relativePath:"quick-sort/quick-sort-basic.md",key:"v-05924865",path:"/quick-sort/quick-sort-basic/",readingTime:{minutes:.9,words:269},updateTime:"May 2, 2022 05:25",updateTimeStamp:165146913e4,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:7},{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"3 快速排序的优化（理解随机选择 pivot）",frontmatter:{title:"3 快速排序的优化（理解随机选择 pivot）",icon:"yongyan",category:"排序算法",tags:["排序算法","分而治之","快速排序"],summary:"（该页已经作废。）",meta:[{property:"og:url",content:"https://suanfa8.com/quick-sort/quick-sort-optimize.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"3 快速排序的优化（理解随机选择 pivot）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"分而治之"},{property:"article:tag",content:"快速排序"}]},regularPath:"/quick-sort/quick-sort-optimize.html",relativePath:"quick-sort/quick-sort-optimize.md",key:"v-103ac39b",path:"/quick-sort/quick-sort-optimize/",readingTime:{minutes:.02,words:6},updateTime:"May 2, 2022 05:25",updateTimeStamp:165146913e4,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:7},{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"第 6 节 三路快排",frontmatter:{title:"第 6 节 三路快排",icon:"shipin",category:"排序算法",tags:["排序算法","分而治之","快速排序"],summary:"Your browser does not support the video tag. 参考代码 1： 修改定义。 参考代码 2： --- 使用三路快排是为了避免下面这种情况： 「切分」的时候有大量元素的值与 pivot 的值相同。 「三路快排」把与 pivot 相同的元素划分到了未排定部分的「中间」。 快速排序的优化（针对大量重复元素） 参考资料：htt",meta:[{property:"og:url",content:"https://suanfa8.com/quick-sort/quick-sort-three-ways.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 6 节 三路快排"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"分而治之"},{property:"article:tag",content:"快速排序"}]},regularPath:"/quick-sort/quick-sort-three-ways.html",relativePath:"quick-sort/quick-sort-three-ways.md",key:"v-56c9d6af",path:"/quick-sort/quick-sort-three-ways/",readingTime:{minutes:3.35,words:1006},updateTime:"May 2, 2022 05:25",updateTimeStamp:165146913e4,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:6},{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"第 5 节 双路快排",frontmatter:{title:"第 5 节 双路快排",icon:"shipin",category:"排序算法",tags:["排序算法","分而治之","快速排序"],summary:"Your browser does not support the video tag. 参考代码： --- 针对特殊测试用例（有很多重复元素的输入数组）有 3 种版本的快排： 版本 1：基本快排：把等于切分元素的所有元素分到了数组的同一侧，可能会造成递归树倾斜；; 版本 2：双指针快排：把等于切分元素的所有元素 等概率 地分到了数组的两侧，避免了递归树倾斜",meta:[{property:"og:url",content:"https://suanfa8.com/quick-sort/quick-sort-two-ways.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 5 节 双路快排"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"分而治之"},{property:"article:tag",content:"快速排序"}]},regularPath:"/quick-sort/quick-sort-two-ways.html",relativePath:"quick-sort/quick-sort-two-ways.md",key:"v-65ca7e6a",path:"/quick-sort/quick-sort-two-ways/",headers:[{level:2,title:"解释最后为什么交换 left 与 ge",slug:"解释最后为什么交换-left-与-ge"}],readingTime:{minutes:4.89,words:1468},updateTime:"May 2, 2022 05:25",updateTimeStamp:165146913e4,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:6},{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"第 4 节 随机选择切分元素",frontmatter:{title:"第 4 节 随机选择切分元素",icon:"shipin",category:"排序算法",tags:["排序算法","分而治之","快速排序"],summary:"Your browser does not support the video tag. 问题：对于顺序数组或者逆序数组来说，递归树高度增加、递归树倾斜；; 再提出解决方案：破坏顺序性，随机选择 pivot。; 参考代码： --- 快速排序对于有序的数组并没有那么友好，下面我们具体来分析是一下是怎么回事。 避免这种最坏的情况出现，我们在切分 partitio",meta:[{property:"og:url",content:"https://suanfa8.com/quick-sort/random-select-pivot.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 4 节 随机选择切分元素"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"分而治之"},{property:"article:tag",content:"快速排序"}]},regularPath:"/quick-sort/random-select-pivot.html",relativePath:"quick-sort/random-select-pivot.md",key:"v-5191d686",path:"/quick-sort/random-select-pivot/",headers:[{level:3,title:"优化 1：随机选择标定点元素，降低递归树结构不平衡的情况",slug:"优化-1-随机选择标定点元素-降低递归树结构不平衡的情况"},{level:3,title:"优化 2：小区间使用插入排序",slug:"优化-2-小区间使用插入排序"}],readingTime:{minutes:4.19,words:1256},updateTime:"May 2, 2022 05:25",updateTimeStamp:165146913e4,createTime:"May 2, 2022 05:25",createTimeStamp:165146913e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"第 8 节 再次理解「循环不变量」",frontmatter:{title:"第 8 节 再次理解「循环不变量」",icon:"shipin",category:"排序算法",tags:["排序算法","分而治之","快速排序"],summary:"Your browser does not support the video tag.",meta:[{property:"og:url",content:"https://suanfa8.com/quick-sort/review-loop-invariant.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 8 节 再次理解「循环不变量」"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"分而治之"},{property:"article:tag",content:"快速排序"}]},regularPath:"/quick-sort/review-loop-invariant.html",relativePath:"quick-sort/review-loop-invariant.md",key:"v-b94e83ca",path:"/quick-sort/review-loop-invariant/",readingTime:{minutes:.08,words:24},updateTime:"May 2, 2022 05:25",updateTimeStamp:165146913e4,createTime:"May 2, 2022 05:25",createTimeStamp:165146913e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"第 9 节 再次理解「递归」",frontmatter:{title:"第 9 节 再次理解「递归」",icon:"shipin",category:"排序算法",tags:["排序算法","分而治之","快速排序"],summary:"Your browser does not support the video tag.",meta:[{property:"og:url",content:"https://suanfa8.com/quick-sort/review-recursion.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 9 节 再次理解「递归」"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"分而治之"},{property:"article:tag",content:"快速排序"}]},regularPath:"/quick-sort/review-recursion.html",relativePath:"quick-sort/review-recursion.md",key:"v-4da3b225",path:"/quick-sort/review-recursion/",readingTime:{minutes:.08,words:24},updateTime:"May 2, 2022 05:25",updateTimeStamp:165146913e4,createTime:"May 2, 2022 05:25",createTimeStamp:165146913e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"第 7 节 三种划分方式总结",frontmatter:{title:"第 7 节 三种划分方式总结",icon:"shipin",category:"排序算法",tags:["排序算法","分而治之","快速排序"],summary:"Your browser does not support the video tag. 以下是针对特殊测试用例（有很多重复元素的输入数组）有 3 种版本的快排： 版本 1：基本快排：把等于切分元素的所有元素分到了数组的同一侧，可能会造成递归树倾斜；; 版本 2：双指针快排：把等于切分元素的所有元素 等概率 地分到了数组的两侧，避免了递归树倾斜，递归树相对平",meta:[{property:"og:url",content:"https://suanfa8.com/quick-sort/summary-partition.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 7 节 三种划分方式总结"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"分而治之"},{property:"article:tag",content:"快速排序"}]},regularPath:"/quick-sort/summary-partition.html",relativePath:"quick-sort/summary-partition.md",key:"v-4644022d",path:"/quick-sort/summary-partition/",readingTime:{minutes:1.95,words:584},updateTime:"May 2, 2022 05:25",updateTimeStamp:165146913e4,createTime:"May 2, 2022 05:25",createTimeStamp:165146913e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"第 10 节 「快速排序」总结",frontmatter:{title:"第 10 节 「快速排序」总结",icon:"shipin",category:"排序算法",tags:["排序算法","分而治之","快速排序"],summary:"Your browser does not support the video tag.",meta:[{property:"og:url",content:"https://suanfa8.com/quick-sort/summary.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 10 节 「快速排序」总结"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"排序算法"},{property:"article:tag",content:"分而治之"},{property:"article:tag",content:"快速排序"}]},regularPath:"/quick-sort/summary.html",relativePath:"quick-sort/summary.md",key:"v-7302cb32",path:"/quick-sort/summary/",readingTime:{minutes:.08,words:24},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941866e3,createTime:"December 23, 2021 04:08",createTimeStamp:1640232493e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:6},{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 209 题：长度最小的子数组（中等）",frontmatter:{title:"「力扣」第 209 题：长度最小的子数组（中等）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"题目链接：209. 长度最小的子数组。; 题目描述 给定一个含有 n 个正整数的数组和一个正整数 target 。 找出该数组中满足其和 ≥ target 的长度最小的 连续子数组 $[numsl,nums{l+1}, ..., nums{r-1}, numsr]$ ，并返回其长度。如果不存在符合条件的子数组，返回 0 。 示例 1： 提示： $1 \\le ",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/01/0209-minimum-size-subarray-sum.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 209 题：长度最小的子数组（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/01/0209-minimum-size-subarray-sum.html",relativePath:"sliding-window/01/0209-minimum-size-subarray-sum.md",key:"v-9056ab1e",path:"/sliding-window/01/0209-minimum-size-subarray-sum/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"题意分析",slug:"题意分析"},{level:2,title:"解题思路",slug:"解题思路"},{level:2,title:"暴力解法",slug:"暴力解法"},{level:2,title:"暴力解法的优化",slug:"暴力解法的优化"}],readingTime:{minutes:4.18,words:1253},updateTime:"January 7, 2022 11:39",updateTimeStamp:1641555569e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 3 题：无重复字符的最长子串（中等）",frontmatter:{title:"「力扣」第 3 题：无重复字符的最长子串（中等）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"题目链接：3. 无重复字符的最长子串、剑指 Offer II 016. 不含重复字符的最长子字符串（两题一模一样）；; 题解地址：滑动窗口入门问题（Java）; 题目描述 给定一个字符串 s ，请你找出其中不含有重复字符的 最长连续子字符串 的长度。 示例 1: 示例 2: 示例 3: 示例 4: 提示： $0 \\le s.length \\le 5 * 10",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/01/0003-longest-substring-without-repeating-characters.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 3 题：无重复字符的最长子串（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/01/0003-longest-substring-without-repeating-characters.html",relativePath:"sliding-window/01/0003-longest-substring-without-repeating-characters.md",key:"v-838c4236",path:"/sliding-window/01/0003-longest-substring-without-repeating-characters/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路描述",slug:"思路描述"},{level:2,title:"方法：滑动窗口",slug:"方法-滑动窗口"}],readingTime:{minutes:5.53,words:1660},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941866e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5}]},{title:"总结",frontmatter:{title:"总结",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"阶段总结 这两道问题一道找不重复的最长子串的长度，另一道找长度大于等于 target 的连续子数组的最短的长度，滑动窗口算法使得枚举子串、连续子数组的数量级降低到 $O(N)$；; 我们在代码的注释当中有写：; 第 3 题：循环不变量：区间 [left..right] 内没有重复元素，因此计算区间长度的时候使用 right - left + 1；; 第 20",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/01/summary.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"总结"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/01/summary.html",relativePath:"sliding-window/01/summary.md",key:"v-91061236",path:"/sliding-window/01/summary/",headers:[{level:2,title:"阶段总结",slug:"阶段总结"},{level:2,title:"两道非常重要的例题以及练习",slug:"两道非常重要的例题以及练习"},{level:2,title:"关于如何学习题解区他人的代码",slug:"关于如何学习题解区他人的代码"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:3.1,words:930},updateTime:"December 24, 2021 03:49",updateTimeStamp:1640317785e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 76 题：最小覆盖子串（困难）",frontmatter:{title:"「力扣」第 76 题：最小覆盖子串（困难）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:'题目链接：76. 最小覆盖子串。; 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 给你一个字符串 s 、一个字符串 t 。返回 s 中涵盖 t 所有字符的最小子串。如果 s 中不存在涵盖 t 所有字符的子串，则返回空字符串 "" 。 ',meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/02/0076-minimum-window-substring.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 76 题：最小覆盖子串（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/02/0076-minimum-window-substring.html",relativePath:"sliding-window/02/0076-minimum-window-substring.md",key:"v-1a5363e5",path:"/sliding-window/02/0076-minimum-window-substring/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:2.37,words:712},updateTime:"January 14, 2022 02:26",updateTimeStamp:1642127165e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5}]},{title:"「力扣」第 567 题：字符串的排列（中等、滑动窗口）",frontmatter:{title:"「力扣」第 567 题：字符串的排列（中等、滑动窗口）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"题目链接：567. 字符串的排列；; 题解链接：🎦 字符串的排列。; 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 给定两个字符串 s1 和 s2，写一个函数来判断 s2 是否包含 s1 的排列。 换句话说，第一个字符串的排列之一是",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/02/0567-permutation-in-string.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 567 题：字符串的排列（中等、滑动窗口）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/02/0567-permutation-in-string.html",relativePath:"sliding-window/02/0567-permutation-in-string.md",key:"v-041dd3be",path:"/sliding-window/02/0567-permutation-in-string/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法：滑动窗口",slug:"方法-滑动窗口"}],readingTime:{minutes:3.69,words:1108},updateTime:"January 14, 2022 02:26",updateTimeStamp:1642127165e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5}]},{title:"「力扣」第 76 题以及同类问题",frontmatter:{title:"「力扣」第 76 题以及同类问题",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:":tv: 例题：「力扣」第 76 题：最小覆盖子串（困难） 练习 1：「力扣」第 438 题：找到字符串中所有字母异位词（中等）; :tv: 练习 2：「力扣」第 567 题：字符串的排列（中等）; 说明：下面的第 30 题、第 395 题、第 632 题比较困难，如果想了一会儿没有思路，可以在「力扣」的题解区和评论区查看他人的代码进行学习。 练习 3：「力",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/02/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 76 题以及同类问题"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/02/intro.html",relativePath:"sliding-window/02/intro.md",key:"v-f28fde76",path:"/sliding-window/02/intro/",readingTime:{minutes:.55,words:166},updateTime:"January 12, 2022 23:10",updateTimeStamp:1642029059e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 1004 题：最大连续1的个数 III（中等）",frontmatter:{title:"「力扣」第 1004 题：最大连续1的个数 III（中等）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"题目链接：1004. 最大连续 1 的个数 III。; 题目描述 给定一个由若干 0 和 1 组成的数组 A，我们最多可以将 K 个值从 0 变成 1 。 返回仅包含 1 的最长（连续）子数组的长度。 示例 1： 示例 2： 提示： 1. 1 <= A.length <= 20000 2. 0 <= K <= A.length 3. A[i] 为 0 或 1",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/03/1004-max-consecutive-ones-iii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1004 题：最大连续1的个数 III（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/03/1004-max-consecutive-ones-iii.html",relativePath:"sliding-window/03/1004-max-consecutive-ones-iii.md",key:"v-3e91d245",path:"/sliding-window/03/1004-max-consecutive-ones-iii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：前缀和 + 二分查找",slug:"方法一-前缀和-二分查找"},{level:2,title:"方法二：滑动窗口",slug:"方法二-滑动窗口"}],readingTime:{minutes:1.82,words:545},updateTime:"January 12, 2022 23:10",updateTimeStamp:1642029059e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 424 题：替换后的最长重复字符（中等）",frontmatter:{title:"「力扣」第 424 题：替换后的最长重复字符（中等）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"题目链接：424. 替换后的最长重复字符；; 题解链接：🎦 替换后的最长重复字符。; 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 给你一个仅由大写英文字母组成的字符串，你可以将任意位置上的字符替换成另外的字符，总共可最多替换 k ",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/03/0424-longest-repeating-character-replacement.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 424 题：替换后的最长重复字符（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/03/0424-longest-repeating-character-replacement.html",relativePath:"sliding-window/03/0424-longest-repeating-character-replacement.md",key:"v-08940b3d",path:"/sliding-window/03/0424-longest-repeating-character-replacement/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.49,words:447},updateTime:"January 14, 2022 02:26",updateTimeStamp:1642127165e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5}]},{title:"「力扣」第 1493 题：删掉一个元素以后全为 1 的最长子数组（中等）",frontmatter:{title:"「力扣」第 1493 题：删掉一个元素以后全为 1 的最长子数组（中等）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"题目链接：1493. 删掉一个元素以后全为 1 的最长子数组。; 题目描述 给你一个二进制数组 nums ，你需要从中删掉一个元素。 请你在删掉元素的结果数组中，返回最长的且只包含 1 的非空子数组的长度。 如果不存在这样的子数组，请返回 0 。 提示 1： 示例 2： 示例 3： 示例 4： 示例 5： 提示： 1 <= nums.length <= 10",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/03/1493-longest-subarray-of-1s-after-deleting-one-element.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1493 题：删掉一个元素以后全为 1 的最长子数组（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/03/1493-longest-subarray-of-1s-after-deleting-one-element.html",relativePath:"sliding-window/03/1493-longest-subarray-of-1s-after-deleting-one-element.md",key:"v-2c356eea",path:"/sliding-window/03/1493-longest-subarray-of-1s-after-deleting-one-element/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:1.72,words:516},updateTime:"January 12, 2022 23:10",updateTimeStamp:1642029059e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 1208 题：尽可能使字符串相等（中等）",frontmatter:{title:"「力扣」第 1208 题：尽可能使字符串相等（中等）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"题目链接：1208. 尽可能使字符串相等。; 题目描述 给你两个长度相同的字符串，s 和 t。 将 s 中的第 i 个字符变到 t 中的第 i 个字符需要 s[i] - t[i] 的开销（开销可能为 0），也就是两个字符的 ASCII 码值的差的绝对值。 用于变更字符串的最大预算是 maxCost。在转化字符串时，总开销应当小于等于该预算，这也意味着字符串的",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/03/1208-get-equal-substrings-within-budget.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1208 题：尽可能使字符串相等（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/03/1208-get-equal-substrings-within-budget.html",relativePath:"sliding-window/03/1208-get-equal-substrings-within-budget.md",key:"v-d23f8136",path:"/sliding-window/03/1208-get-equal-substrings-within-budget/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：前缀和 + 二分查找",slug:"方法一-前缀和-二分查找"},{level:2,title:"方法二：滑动窗口",slug:"方法二-滑动窗口"}],readingTime:{minutes:2.13,words:640},updateTime:"January 12, 2022 23:10",updateTimeStamp:1642029059e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 424 题以及同类问题",frontmatter:{title:"「力扣」第 424 题以及同类问题",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:":tv: 例题：「力扣」第 424 题：替换后的最长重复字符（中等） 练习 1：「力扣」第 1004 题：最大连续 1 的个数 III（中等）；; 练习 2：「力扣」第 1208 题：尽可能使字符串相等（中等）；; 练习 3：「力扣」第 1493 题：删掉一个元素以后全为 1 的最长子数组（中等）。; 相信做完了这些问题，其它滑动窗口的问题大家一定会有感觉的",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/03/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 424 题以及同类问题"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/03/intro.html",relativePath:"sliding-window/03/intro.md",key:"v-576aad65",path:"/sliding-window/03/intro/",readingTime:{minutes:.37,words:112},updateTime:"January 12, 2022 23:10",updateTimeStamp:1642029059e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"（会员题）「力扣」第 159 题：至多包含两个不同字符的最长子串（中等）",frontmatter:{title:"（会员题）「力扣」第 159 题：至多包含两个不同字符的最长子串（中等）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:'题目链接：（会员题）「力扣」第 159 题：至多包含两个不同字符的最长子串。; 题目描述 给定一个字符串 _s_ ，找出 至多 包含两个不同字符的最长子串 _t_ ，并返回该子串的长度。 示例 1： 示例 2: Constraints: 1 <= s.length <= 10^4; s consists of English letters.; 思路分析 "',meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/04/0159-longest-substring-with-at-most-two-distinct-characters.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"（会员题）「力扣」第 159 题：至多包含两个不同字符的最长子串（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/04/0159-longest-substring-with-at-most-two-distinct-characters.html",relativePath:"sliding-window/04/0159-longest-substring-with-at-most-two-distinct-characters.md",key:"v-65018d05",path:"/sliding-window/04/0159-longest-substring-with-at-most-two-distinct-characters/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:.84,words:253},updateTime:"January 12, 2022 23:10",updateTimeStamp:1642029059e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"（会员题）「力扣」第 340 题：至多包含 K 个不同字符的最长子串（中等）",frontmatter:{title:"（会员题）「力扣」第 340 题：至多包含 K 个不同字符的最长子串（中等）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"题目链接：（会员题）「力扣」第 340 题：至多包含 K 个不同字符的最长子串（中等）; 题目描述 给定一个字符串 *s* ，找出 至多 包含 k 个不同字符的最长子串 *T*。 示例 1： 示例 2： Constraints: 1 <= s.length <= 5 * 10^4; 0 <= k <= 50; 思路分析 左端点固定的情况下，如果已经包含 k ",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/04/0340-longest-substring-with-at-most-k-distinct-characters.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"（会员题）「力扣」第 340 题：至多包含 K 个不同字符的最长子串（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/04/0340-longest-substring-with-at-most-k-distinct-characters.html",relativePath:"sliding-window/04/0340-longest-substring-with-at-most-k-distinct-characters.md",key:"v-39bdb2e5",path:"/sliding-window/04/0340-longest-substring-with-at-most-k-distinct-characters/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:1.26,words:379},updateTime:"January 12, 2022 23:10",updateTimeStamp:1642029059e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 713 题：乘积小于 K 的子数组（中等）",frontmatter:{title:"「力扣」第 713 题：乘积小于 K 的子数组（中等）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"题目链接：713. 乘积小于 K 的子数组、剑指 Offer II 009. 乘积小于 K 的子数组（两题一模一样）; 题解链接：滑动窗口（Java）; 题目描述 给定一个正整数数组 nums。 找出该数组内乘积小于 k 的连续的子数组的个数。 示例 1: 说明: 0 < nums.length <= 50000; 0 < nums[i] < 1000; 0",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/04/0713-subarray-product-less-than-k.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 713 题：乘积小于 K 的子数组（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/04/0713-subarray-product-less-than-k.html",relativePath:"sliding-window/04/0713-subarray-product-less-than-k.md",key:"v-3b21ecb6",path:"/sliding-window/04/0713-subarray-product-less-than-k/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:3.32,words:997},updateTime:"January 12, 2022 23:10",updateTimeStamp:1642029059e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 904 题：水果成篮（中等）",frontmatter:{title:"「力扣」第 904 题：水果成篮（中等）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"题目链接：904. 水果成篮。; 题目描述 在一排树中，第 i 棵树产生 tree[i] 型的水果。 你可以从你选择的任何树开始，然后重复执行以下步骤： 1. 把这棵树上的水果放进你的篮子里。如果你做不到，就停下来。 2. 移动到当前树右侧的下一棵树。如果右边没有树，就停下来。 请注意，在选择一颗树后，你没有任何选择：你必须执行步骤 1，然后执行步骤 2，然",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/04/0904-fruit-into-baskets.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 904 题：水果成篮（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/04/0904-fruit-into-baskets.html",relativePath:"sliding-window/04/0904-fruit-into-baskets.md",key:"v-16b59b25",path:"/sliding-window/04/0904-fruit-into-baskets/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:1.73,words:519},updateTime:"January 12, 2022 23:10",updateTimeStamp:1642029059e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 1438 题：绝对差不超过限制的最长连续子数组（中等）",frontmatter:{title:"「力扣」第 1438 题：绝对差不超过限制的最长连续子数组（中等）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"题目链接：1438. 绝对差不超过限制的最长连续子数组。; 题目描述 给你一个整数数组 nums ，和一个表示限制的整数 limit，请你返回最长连续子数组的长度，该子数组中的任意两个元素之间的绝对差必须小于或者等于 limit 。 如果不存在满足条件的子数组，则返回 0 。 示例 1： 示例 2： 示例 3： 提示： 1 <= nums.length <=",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/05/1438-longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1438 题：绝对差不超过限制的最长连续子数组（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/05/1438-longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit.html",relativePath:"sliding-window/05/1438-longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit.md",key:"v-46bea2f6",path:"/sliding-window/05/1438-longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：使用数据结构维护滑动窗口的最大值和最小值",slug:"方法一-使用数据结构维护滑动窗口的最大值和最小值"},{level:2,title:"方法二：使用单调队列维护滑动窗口的最大值和最小值",slug:"方法二-使用单调队列维护滑动窗口的最大值和最小值"}],readingTime:{minutes:1.92,words:577},updateTime:"January 12, 2022 23:10",updateTimeStamp:1642029059e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"练习",frontmatter:{summary:"练习 「力扣」第 713 题：乘积小于 K 的子数组（中等）; 「力扣」第 1838 题：最高频元素的频数（中等）; 「力扣」第 1839 题：所有元音按顺序排布的最长子字符串（中等）; 「力扣」第 904 题：水果成篮（中等）; 「力扣」第 992 题：K 个不同整数的子数组（困难）; 「力扣」第 995 题：K 连续位的最小翻转次数（困难）;",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/04/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"练习"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/sliding-window/04/intro.html",relativePath:"sliding-window/04/intro.md",key:"v-281d4a05",path:"/sliding-window/04/intro/",headers:[{level:3,title:"练习",slug:"练习"}],readingTime:{minutes:.34,words:102},updateTime:"January 12, 2022 23:10",updateTimeStamp:1642029059e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"使用数据结构的滑动窗口问题",frontmatter:{title:"使用数据结构的滑动窗口问题",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"第 2 类：名字叫做滑动窗口的问题（需要使用数据结构） 这一类问题只是名字叫「滑动窗口」，但要解决它们需要使用到数据结构，因为我们需要借助数据结构来得到窗口内的元素的性质。 它们是： 「力扣」第 220 题：存在重复元素 III（中等）; 「力扣」第 239 题：滑动窗口最大值（困难）; 「力扣」第 480 题：滑动窗口中位数（困难）; 「力扣」第 1438",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/05/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"使用数据结构的滑动窗口问题"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/05/intro.html",relativePath:"sliding-window/05/intro.md",key:"v-0e6032b6",path:"/sliding-window/05/intro/",headers:[{level:3,title:"第 2 类：名字叫做滑动窗口的问题（需要使用数据结构）",slug:"第-2-类-名字叫做滑动窗口的问题-需要使用数据结构"}],readingTime:{minutes:.48,words:143},updateTime:"December 24, 2021 03:49",updateTimeStamp:1640317785e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 643 题：子数组最大平均数 I（简单）",frontmatter:{title:"「力扣」第 643 题：子数组最大平均数 I（简单）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"题目链接：643. 子数组最大平均数 I。; 题目描述 给你一个由 n 个元素组成的整数数组 nums 和一个整数 k 。 请你找出平均数最大且 长度为 k 的连续子数组，并输出该最大平均数。 任何误差小于 10-5 的答案都将被视为正确答案。 示例 1： 示例 2： 提示： n == nums.length; $1 \\le k \\le n \\le 10^5",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/06/0643-maximum-average-subarray-i.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 643 题：子数组最大平均数 I（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/06/0643-maximum-average-subarray-i.html",relativePath:"sliding-window/06/0643-maximum-average-subarray-i.md",key:"v-3c738345",path:"/sliding-window/06/0643-maximum-average-subarray-i/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"暴力解法",slug:"暴力解法"},{level:2,title:"方法：滑动窗口",slug:"方法-滑动窗口"}],readingTime:{minutes:1.21,words:363},updateTime:"January 12, 2022 23:10",updateTimeStamp:1642029059e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 978 题：最长湍流子数组（中等）",frontmatter:{title:"「力扣」第 978 题：最长湍流子数组（中等）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"题目链接：978. 最长湍流子数组；; 题解链接：🎦 最长湍流子数组。; 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 当 A 的子数组 A[i], A[i+1], ..., A[j] 满足下列条件时，我们称其为湍流子数组： 若 i",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/06/0978-longest-turbulent-subarray.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 978 题：最长湍流子数组（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/06/0978-longest-turbulent-subarray.html",relativePath:"sliding-window/06/0978-longest-turbulent-subarray.md",key:"v-10bb2036",path:"/sliding-window/06/0978-longest-turbulent-subarray/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.19,words:358},updateTime:"January 14, 2022 02:26",updateTimeStamp:1642127165e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 674 题：最长连续递增序列（简单）",frontmatter:{title:"「力扣」第 674 题：最长连续递增序列（简单）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"题目链接：674. 最长连续递增序列。; 题目描述 给定一个未经排序的整数数组，找到最长且 连续递增的子序列，并返回该序列的长度。 连续递增的子序列 可以由两个下标 l 和 r（l < r）确定，如果对于每个 l <= i < r，都有 nums[i] < nums[i + 1] ，那么子序列 [nums[l], nums[l + 1], ..., nums",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/06/0674-longest-continuous-increasing-subsequence.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 674 题：最长连续递增序列（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/06/0674-longest-continuous-increasing-subsequence.html",relativePath:"sliding-window/06/0674-longest-continuous-increasing-subsequence.md",key:"v-6c160b37",path:"/sliding-window/06/0674-longest-continuous-increasing-subsequence/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"滑动窗口",slug:"滑动窗口"}],readingTime:{minutes:1.04,words:311},updateTime:"January 12, 2022 23:10",updateTimeStamp:1642029059e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 1052 题：爱生气的书店老板（中等）",frontmatter:{title:"「力扣」第 1052 题：爱生气的书店老板（中等）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"题目链接：1052. 爱生气的书店老板。; 题目描述 今天，书店老板有一家店打算试营业 customers.length 分钟。每分钟都有一些顾客（customers[i]）会进入书店，所有这些顾客都会在那一分钟结束后离开。 在某些时候，书店老板会生气。 如果书店老板在第 i 分钟生气，那么 grumpy[i] = 1，否则 grumpy[i] = 0。当书",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/06/1052-grumpy-bookstore-owner.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1052 题：爱生气的书店老板（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/06/1052-grumpy-bookstore-owner.html",relativePath:"sliding-window/06/1052-grumpy-bookstore-owner.md",key:"v-02906445",path:"/sliding-window/06/1052-grumpy-bookstore-owner/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：",slug:"方法一"},{level:2,title:"方法二：",slug:"方法二"}],readingTime:{minutes:3.19,words:957},updateTime:"January 12, 2022 23:10",updateTimeStamp:1642029059e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 1423 题：可获得的最大点数（中等）",frontmatter:{title:"「力扣」第 1423 题：可获得的最大点数（中等）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"题目链接：可获得的最大点数; 题目描述 几张卡牌 排成一行，每张卡牌都有一个对应的点数。点数由整数数组 cardPoints 给出。 每次行动，你可以从行的开头或者末尾拿一张卡牌，最终你必须正好拿 k 张卡牌。 你的点数就是你拿到手中的所有卡牌的点数之和。 给你一个整数数组 cardPoints 和整数 k，请你返回可以获得的最大点数。 示例 1： 示例 2",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/06/1423-maximum-points-you-can-obtain-from-cards.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1423 题：可获得的最大点数（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/06/1423-maximum-points-you-can-obtain-from-cards.html",relativePath:"sliding-window/06/1423-maximum-points-you-can-obtain-from-cards.md",key:"v-35db9f65",path:"/sliding-window/06/1423-maximum-points-you-can-obtain-from-cards/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.72,words:515},updateTime:"January 12, 2022 23:10",updateTimeStamp:1642029059e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 1456 题：定长子串中元音的最大数目（中等）",frontmatter:{title:"「力扣」第 1456 题：定长子串中元音的最大数目（中等）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"题目链接：定长子串中元音的最大数目。; 题目描述 给你字符串 s 和整数 k 。 请返回字符串 s 中长度为 k 的单个子字符串中可能包含的最大元音字母数。 英文中的 元音字母 为（a, e, i, o, u）。 示例 1： 示例 2： 示例 3： 示例 4： 示例 5： 提示： 1 <= s.length <= 10^5; s 由小写英文字母组成; 1 <",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/06/1456-maximum-number-of-vowels-in-a-substring-of-given-length.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1456 题：定长子串中元音的最大数目（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/06/1456-maximum-number-of-vowels-in-a-substring-of-given-length.html",relativePath:"sliding-window/06/1456-maximum-number-of-vowels-in-a-substring-of-given-length.md",key:"v-1cf2ead9",path:"/sliding-window/06/1456-maximum-number-of-vowels-in-a-substring-of-given-length/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.15,words:346},updateTime:"January 12, 2022 23:10",updateTimeStamp:1642029059e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 1658 题：将 x 减到 0 的最小操作数（中等）",frontmatter:{title:"「力扣」第 1658 题：将 x 减到 0 的最小操作数（中等）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"题目链接：将 x 减到 0 的最小操作数。; 题目描述 给你一个整数数组 nums 和一个整数 x 。每一次操作时，你应当移除数组 nums 最左边或最右边的元素，然后从 x 中减去该元素的值。请注意，需要 修改 数组以供接下来的操作使用。 如果可以将 x 恰好 减到 0 ，返回 最小操作数 ；否则，返回 -1 。 示例 1： 示例 2： 示例 3： 提示：",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/06/1658-minimum-operations-to-reduce-x-to-zero.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1658 题：将 x 减到 0 的最小操作数（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/06/1658-minimum-operations-to-reduce-x-to-zero.html",relativePath:"sliding-window/06/1658-minimum-operations-to-reduce-x-to-zero.md",key:"v-2d6aa9a5",path:"/sliding-window/06/1658-minimum-operations-to-reduce-x-to-zero/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：前缀和 + 二分查找",slug:"方法一-前缀和-二分查找"},{level:2,title:"方法二：滑动窗口（不是固定长度，是固定保留值的滑动窗口）",slug:"方法二-滑动窗口-不是固定长度-是固定保留值的滑动窗口"}],readingTime:{minutes:1.34,words:402},updateTime:"January 12, 2022 23:10",updateTimeStamp:1642029059e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"固定长度的滑动窗口问题",frontmatter:{title:"固定长度的滑动窗口问题",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"「力扣」上还有一些「滑动窗口」的问题，它们是这样的： 固定长度的滑动窗口问题 「力扣」第 643 题：子数组最大平均数 I（简单）; 「力扣」第 1052 题：爱生气的书店老板（中等）; 「力扣」第 1423 题：可获得的最大点数（中等）; 「力扣」第 1456 题：定长子串中元音的最大数目（中等）; 「力扣」第 1658 题：将 x 减到 0 的最小操作数",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/06/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"固定长度的滑动窗口问题"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/06/intro.html",relativePath:"sliding-window/06/intro.md",key:"v-6cfaf976",path:"/sliding-window/06/intro/",headers:[{level:3,title:"固定长度的滑动窗口问题",slug:"固定长度的滑动窗口问题"}],readingTime:{minutes:.65,words:194},updateTime:"January 12, 2022 23:10",updateTimeStamp:1642029059e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"滑动窗口",frontmatter:{summary:"滑动窗口",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"滑动窗口"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/sliding-window/",relativePath:"sliding-window/README.md",key:"v-08f57306",path:"/sliding-window/",headers:[{level:2,title:"滑动窗口",slug:"滑动窗口"}],readingTime:{minutes:.01,words:4},updateTime:"December 24, 2021 03:49",updateTimeStamp:1640317785e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"栈",frontmatter:{summary:"栈",meta:[{property:"og:url",content:"https://suanfa8.com/stack/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"栈"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/stack/",relativePath:"stack/README.md",key:"v-6add3944",path:"/stack/",readingTime:{minutes:0,words:1},updateTime:"December 26, 2021 10:30",updateTimeStamp:1640514631e3,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 438 题：找到字符串中所有字母异位词（中等）",frontmatter:{title:"「力扣」第 438 题：找到字符串中所有字母异位词（中等）",icon:"yongyan",category:"滑动窗口",tags:["滑动窗口"],summary:"题目链接：438. 找到字符串中所有字母异位词；; 题解链接：滑动窗口（Java）。; 题目描述 给定一个字符串 s 和一个非空字符串 p，找到 s 中所有是 p 的字母异位词的子串，返回这些子串的起始索引。 字符串只包含小写英文字母，并且字符串 s 和 p 的长度都不超过 20100。 说明： 字母异位词指字母相同，但排列不同的字符串。; 不考虑答案输出的",meta:[{property:"og:url",content:"https://suanfa8.com/sliding-window/02/0438-find-all-anagrams-in-a-string.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 438 题：找到字符串中所有字母异位词（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/sliding-window/02/0438-find-all-anagrams-in-a-string.html",relativePath:"sliding-window/02/0438-find-all-anagrams-in-a-string.md",key:"v-0d63d502",path:"/sliding-window/02/0438-find-all-anagrams-in-a-string/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.85,words:555},updateTime:"January 12, 2022 23:10",updateTimeStamp:1642029059e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 20 题：有效的括号（简单）",frontmatter:{title:"「力扣」第 20 题：有效的括号（简单）",icon:"yongyan",category:"栈",tags:["栈"],summary:"题目链接：20. 有效的括号。; 题目描述 给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串，判断字符串是否有效。 有效字符串需满足： 1. 左括号必须用相同类型的右括号闭合。 2. 左括号必须以正确的顺序闭合。 注意空字符串可被认为是有效字符串。 示例 1: 示例 2: 示例 3: 示例 4: 示例 5: 提示： 1 <= s.le",meta:[{property:"og:url",content:"https://suanfa8.com/stack/solutions/0020-valid-parentheses.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 20 题：有效的括号（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"}]},regularPath:"/stack/solutions/0020-valid-parentheses.html",relativePath:"stack/solutions/0020-valid-parentheses.md",key:"v-0f85e4a5",path:"/stack/solutions/0020-valid-parentheses/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:3.43,words:1029},updateTime:"January 12, 2022 22:51",updateTimeStamp:1642027914e3,createTime:"December 27, 2021 11:07",createTimeStamp:1640603227e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 94 题：二叉树的中序遍历（中等）",frontmatter:{title:"「力扣」第 94 题：二叉树的中序遍历（中等）",icon:"yongyan",category:"栈",tags:["栈"],summary:"题目链接：94. 二叉树的中序遍历；; 题解地址：模拟系统栈完成非递归中序遍历，同理可以完成非递归的前序遍历和后序遍历（Python 代码、Java 代码）。; 题目描述 给定一个二叉树的根节点 root ，返回它的 中序 遍历。 示例 1： 示例 2： 示例 3： 示例 4： 示例 5： 提示： 树中节点数目在范围 [0, 100] 内; -100 <= ",meta:[{property:"og:url",content:"https://suanfa8.com/stack/solutions/0094-binary-tree-inorder-traversal.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 94 题：二叉树的中序遍历（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"}]},regularPath:"/stack/solutions/0094-binary-tree-inorder-traversal.html",relativePath:"stack/solutions/0094-binary-tree-inorder-traversal.md",key:"v-4b36484f",path:"/stack/solutions/0094-binary-tree-inorder-traversal/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.48,words:745},updateTime:"January 12, 2022 22:51",updateTimeStamp:1642027914e3,createTime:"December 27, 2021 11:07",createTimeStamp:1640603227e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 71 题：简化路径（中等）",frontmatter:{title:"「力扣」第 71 题：简化路径（中等）",icon:"yongyan",category:"栈",tags:["栈"],summary:"题目链接：71. 简化路径。; 题目描述 给你一个字符串 path ，表示指向某一文件或目录的 Unix 风格 绝对路径 （以 '/' 开头），请你将其转化为更加简洁的规范路径。 在 Unix 风格的文件系统中，一个点（.）表示当前目录本身；此外，两个点 （..） 表示将目录切换到上一级（指向父目录）；两者都可以是复杂相对路径的组成部分。任意多个连续的斜杠（",meta:[{property:"og:url",content:"https://suanfa8.com/stack/solutions/0071-simplify-path.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 71 题：简化路径（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"}]},regularPath:"/stack/solutions/0071-simplify-path.html",relativePath:"stack/solutions/0071-simplify-path.md",key:"v-2715a4ad",path:"/stack/solutions/0071-simplify-path/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"解释题意",slug:"解释题意"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:5.2,words:1561},updateTime:"January 12, 2022 22:51",updateTimeStamp:1642027914e3,createTime:"December 27, 2021 11:07",createTimeStamp:1640603227e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 144 题：二叉树的前序遍历（中等）",frontmatter:{title:"「力扣」第 144 题：二叉树的前序遍历（中等）",icon:"yongyan",category:"栈",tags:["栈"],summary:"题目链接：144. 二叉树的前序遍历。; 题目描述 给你二叉树的根节点 root ，返回它节点值的 前序 遍历。 示例 1： 示例 2： 示例 3： 示例 4： 示例 5： 提示： 树中节点数目在范围 [0, 100] 内; -100 <= Node.val <= 100; 方法一：递归 因为这里要求返回一个数组，而不是在遍历的时候打印这个节点的值，所以如果",meta:[{property:"og:url",content:"https://suanfa8.com/stack/solutions/0144-binary-tree-preorder-traversal.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 144 题：二叉树的前序遍历（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"}]},regularPath:"/stack/solutions/0144-binary-tree-preorder-traversal.html",relativePath:"stack/solutions/0144-binary-tree-preorder-traversal.md",key:"v-edca7576",path:"/stack/solutions/0144-binary-tree-preorder-traversal/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：递归",slug:"方法一-递归"},{level:2,title:"方法二：非递归",slug:"方法二-非递归"},{level:2,title:"方法三：模拟系统栈",slug:"方法三-模拟系统栈"}],readingTime:{minutes:2.57,words:772},updateTime:"January 12, 2022 22:51",updateTimeStamp:1642027914e3,createTime:"December 27, 2021 11:07",createTimeStamp:1640603227e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 150 题：逆波兰表达式求值（中等）",frontmatter:{title:"「力扣」第 150 题：逆波兰表达式求值（中等）",icon:"yongyan",category:"栈",tags:["栈"],summary:"题目链接：150. 逆波兰表达式求值。; 题目描述 根据逆波兰表示法，求表达式的值。 有效的运算符包括 +, -, *, / 。每个运算对象可以是整数，也可以是另一个逆波兰表达式。 说明： 整数除法只保留整数部分。; 给定逆波兰表达式总是有效的。换句话说，表达式总会得出有效数值且不存在除数为 0 的情况。; 示例 1： 示例 2： 示例 3： 提示： 1 <",meta:[{property:"og:url",content:"https://suanfa8.com/stack/solutions/0150-evaluate-reverse-polish-notation.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 150 题：逆波兰表达式求值（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"}]},regularPath:"/stack/solutions/0150-evaluate-reverse-polish-notation.html",relativePath:"stack/solutions/0150-evaluate-reverse-polish-notation.md",key:"v-7e95e336",path:"/stack/solutions/0150-evaluate-reverse-polish-notation/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.99,words:596},updateTime:"January 12, 2022 22:51",updateTimeStamp:1642027914e3,createTime:"December 27, 2021 11:07",createTimeStamp:1640603227e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 155 题：最小栈（简单）",frontmatter:{title:"「力扣」第 155 题：最小栈（简单）",icon:"yongyan",category:"栈",tags:["栈"],summary:"题目链接：155. 最小栈；; 题解地址：使用辅助栈（同步和不同步，Python 代码、Java 代码）。; 题目描述 设计一个支持 push ，pop ，top 操作，并能在常数时间内检索到最小元素的栈。 push(x) —— 将元素 x 推入栈中。; pop() —— 删除栈顶的元素。; top() —— 获取栈顶元素。; getMin() —— 检索栈",meta:[{property:"og:url",content:"https://suanfa8.com/stack/solutions/0155-min-stack.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 155 题：最小栈（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"}]},regularPath:"/stack/solutions/0155-min-stack.html",relativePath:"stack/solutions/0155-min-stack.md",key:"v-983abe52",path:"/stack/solutions/0155-min-stack/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：辅助栈和数据栈同步",slug:"方法一-辅助栈和数据栈同步"},{level:2,title:"方法二：辅助栈和数据栈不同步",slug:"方法二-辅助栈和数据栈不同步"}],readingTime:{minutes:5.07,words:1521},updateTime:"January 12, 2022 22:51",updateTimeStamp:1642027914e3,createTime:"December 27, 2021 11:07",createTimeStamp:1640603227e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 145 题：二叉树的后序遍历（困难）",frontmatter:{title:"「力扣」第 145 题：二叉树的后序遍历（困难）",icon:"yongyan",category:"栈",tags:["栈"],summary:"题目链接：145. 二叉树的后序遍历 。; 题目描述 Given the root of a binary tree, return the postorder traversal of its nodes' values. Example 1: Example 2: Example 3: Constraints: The number of the nod",meta:[{property:"og:url",content:"https://suanfa8.com/stack/solutions/0145-binary-tree-postorder-traversal.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 145 题：二叉树的后序遍历（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"}]},regularPath:"/stack/solutions/0145-binary-tree-postorder-traversal.html",relativePath:"stack/solutions/0145-binary-tree-postorder-traversal.md",key:"v-59ee7ff7",path:"/stack/solutions/0145-binary-tree-postorder-traversal/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:.74,words:222},updateTime:"January 12, 2022 22:51",updateTimeStamp:1642027914e3,createTime:"December 27, 2021 11:07",createTimeStamp:1640603227e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 173 题：二叉搜索树迭代器（中等）",frontmatter:{title:"「力扣」第 173 题：二叉搜索树迭代器（中等）",icon:"yongyan",category:"栈",tags:["栈"],summary:"题目链接：173. 二叉搜索树迭代器。; 题目描述 实现一个二叉搜索树迭代器类BSTIterator ，表示一个按中序遍历二叉搜索树（BST）的迭代器： BSTIterator(TreeNode root) 初始化 BSTIterator 类的一个对象。BST 的根节点 root 会作为构造函数的一部分给出。指针应初始化为一个不存在于 BST 中的数字，且该",meta:[{property:"og:url",content:"https://suanfa8.com/stack/solutions/0173-binary-search-tree-iterator.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 173 题：二叉搜索树迭代器（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"}]},regularPath:"/stack/solutions/0173-binary-search-tree-iterator.html",relativePath:"stack/solutions/0173-binary-search-tree-iterator.md",key:"v-0457009e",path:"/stack/solutions/0173-binary-search-tree-iterator/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.68,words:503},updateTime:"January 12, 2022 22:51",updateTimeStamp:1642027914e3,createTime:"December 27, 2021 11:07",createTimeStamp:1640603227e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 225 题：用队列实现栈（简单）",frontmatter:{title:"「力扣」第 225 题：用队列实现栈（简单）",icon:"yongyan",category:"栈",tags:["栈"],summary:"题目链接：225. 用队列实现栈；; 题解链接：负负得正，peek 和 pop 时，依次将队首元素出队，放到队尾。; 题目描述 请你仅使用两个队列实现一个后入先出（LIFO）的栈，并支持普通栈的全部四种操作（push、top、pop 和 empty）。 实现 MyStack 类： void push(int x) 将元素 x 压入栈顶。; int pop()",meta:[{property:"og:url",content:"https://suanfa8.com/stack/solutions/0225-implement-stack-using-queues.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 225 题：用队列实现栈（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"}]},regularPath:"/stack/solutions/0225-implement-stack-using-queues.html",relativePath:"stack/solutions/0225-implement-stack-using-queues.md",key:"v-85741fb6",path:"/stack/solutions/0225-implement-stack-using-queues/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：使用两个队列实现栈",slug:"方法一-使用两个队列实现栈"},{level:2,title:"方法二：使用一个队列实现栈",slug:"方法二-使用一个队列实现栈"}],readingTime:{minutes:2.37,words:710},updateTime:"January 12, 2022 22:51",updateTimeStamp:1642027914e3,createTime:"December 27, 2021 11:07",createTimeStamp:1640603227e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 232 题：用栈实现队列（简单）",frontmatter:{title:"「力扣」第 232 题：用栈实现队列（简单）",icon:"yongyan",category:"栈",tags:["栈"],summary:"题目链接：232. 用栈实现队列；; 题解链接：负负得正，使用两个栈，一个专门入队，一个专门出队。; 题目描述 请你仅使用两个栈实现先入先出队列。队列应当支持一般队列支持的所有操作（push、pop、peek、empty）： 实现 MyQueue 类： void push(int x) 将元素 x 推到队列的末尾; int pop() 从队列的开头移除并返回",meta:[{property:"og:url",content:"https://suanfa8.com/stack/solutions/0232-implement-queue-using-stacks.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 232 题：用栈实现队列（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"}]},regularPath:"/stack/solutions/0232-implement-queue-using-stacks.html",relativePath:"stack/solutions/0232-implement-queue-using-stacks.md",key:"v-0d860cb6",path:"/stack/solutions/0232-implement-queue-using-stacks/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.41,words:722},updateTime:"January 12, 2022 22:51",updateTimeStamp:1642027914e3,createTime:"December 27, 2021 11:07",createTimeStamp:1640603227e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 331 题：验证二叉树的前序序列化（中等）",frontmatter:{title:"「力扣」第 331 题：验证二叉树的前序序列化（中等）",icon:"yongyan",category:"栈",tags:["栈"],summary:'题目链接：331. 验证二叉树的前序序列化。; 题目描述 序列化二叉树的一种方法是使用前序遍历。当我们遇到一个非空节点时，我们可以记录下这个节点的值。如果它是一个空节点，我们可以使用一个标记值记录，例如 #。 例如，上面的二叉树可以被序列化为字符串 "9,3,4,#,#,1,#,#,2,#,6,#,#"，其中 # 代表一个空节点。 给定一串以逗号分隔的序列，',meta:[{property:"og:url",content:"https://suanfa8.com/stack/solutions/0331-verify-preorder-serialization-of-a-binary-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 331 题：验证二叉树的前序序列化（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"}]},regularPath:"/stack/solutions/0331-verify-preorder-serialization-of-a-binary-tree.html",relativePath:"stack/solutions/0331-verify-preorder-serialization-of-a-binary-tree.md",key:"v-077c61c5",path:"/stack/solutions/0331-verify-preorder-serialization-of-a-binary-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.58,words:475},updateTime:"January 12, 2022 22:51",updateTimeStamp:1642027914e3,createTime:"December 27, 2021 11:07",createTimeStamp:1640603227e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 341 题：扁平化嵌套列表迭代器（中等）",frontmatter:{title:"「力扣」第 341 题：扁平化嵌套列表迭代器（中等）",icon:"yongyan",category:"栈",tags:["栈"],summary:"题目链接：341. 扁平化嵌套列表迭代器。; 题目描述 给你一个嵌套的整数列表 nestedList 。每个元素要么是一个整数，要么是一个列表；该列表的元素也可能是整数或者是其他列表。请你实现一个迭代器将其扁平化，使之能够遍历这个列表中的所有整数。 实现扁平迭代器类 NestedIterator ： NestedIterator(List nestedLis",meta:[{property:"og:url",content:"https://suanfa8.com/stack/solutions/0341-flatten-nested-list-iterator.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 341 题：扁平化嵌套列表迭代器（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"}]},regularPath:"/stack/solutions/0341-flatten-nested-list-iterator.html",relativePath:"stack/solutions/0341-flatten-nested-list-iterator.md",key:"v-155bc545",path:"/stack/solutions/0341-flatten-nested-list-iterator/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.53,words:459},updateTime:"December 27, 2021 11:07",updateTimeStamp:1640603227e3,createTime:"December 27, 2021 11:07",createTimeStamp:1640603227e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 946 题：验证栈序列（中等）",frontmatter:{title:"「力扣」第 946 题：验证栈序列（中等）",icon:"yongyan",category:"栈",tags:["栈"],summary:"题目链接：946. 验证栈序列。; 题目描述 给定 pushed 和 popped 两个序列，每个序列中的 值都不重复，只有当它们可能是在最初空栈上进行的推入 push 和弹出 pop 操作序列的结果时，返回 true；否则，返回 false 。 示例 1： 示例 2： 提示： 1 <= pushed.length <= 1000; 0 <= pushed[",meta:[{property:"og:url",content:"https://suanfa8.com/stack/solutions/0946-validate-stack-sequences.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 946 题：验证栈序列（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"}]},regularPath:"/stack/solutions/0946-validate-stack-sequences.html",relativePath:"stack/solutions/0946-validate-stack-sequences.md",key:"v-b0393936",path:"/stack/solutions/0946-validate-stack-sequences/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:.99,words:297},updateTime:"January 12, 2022 22:51",updateTimeStamp:1642027914e3,createTime:"December 27, 2021 11:07",createTimeStamp:1640603227e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 1111 题：有效括号的嵌套深度（中等）",frontmatter:{title:"「力扣」第 1111 题：有效括号的嵌套深度（中等）",icon:"yongyan",category:"栈",tags:["栈"],summary:"题目链接：1111. 有效括号的嵌套深度；; 题解链接：嵌套深度 = 完成括号匹配问题实际使用的栈的最大高度。; 题目描述 有效括号字符串 定义：对于每个左括号，都能找到与之对应的右括号，反之亦然。详情参见题末「有效括号字符串」部分。 嵌套深度 depth 定义：即有效括号字符串嵌套的层数，depth(A) 表示有效括号字符串 A 的嵌套深度。详情参见题末「",meta:[{property:"og:url",content:"https://suanfa8.com/stack/solutions/1111-maximum-nesting-depth-of-two-valid-parentheses-strings.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1111 题：有效括号的嵌套深度（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"栈"}]},regularPath:"/stack/solutions/1111-maximum-nesting-depth-of-two-valid-parentheses-strings.html",relativePath:"stack/solutions/1111-maximum-nesting-depth-of-two-valid-parentheses-strings.md",key:"v-367724a5",path:"/stack/solutions/1111-maximum-nesting-depth-of-two-valid-parentheses-strings/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"分析题意",slug:"分析题意"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:7.45,words:2234},updateTime:"January 12, 2022 22:51",updateTimeStamp:1642027914e3,createTime:"December 27, 2021 11:07",createTimeStamp:1640603227e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"给本站留言",frontmatter:{title:"给本站留言",icon:"liuyanban-05",summary:"本网站纯公益，没有开放打赏，目前仅接入了谷歌的广告，不向读者收取任何费用。如果以后买服务器有费用，可能会开放打赏，打赏全凭读者自愿。 本人主要精力会花在内容制作上。 留言仅用于接受一些意见、建议和反馈。 不回答的内容 本站提供的内容，读者可以随意提问，但不和读者讨论任何具体的算法问题，例如「力扣」第几题怎么做，别的网站上哪个问题怎么做，贴一段没有任何注释和思",meta:[{property:"og:url",content:"https://suanfa8.com/suanfa8/bulletin-board.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"给本站留言"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/suanfa8/bulletin-board.html",relativePath:"suanfa8/bulletin-board.md",key:"v-b0bdc7e2",path:"/suanfa8/bulletin-board/",readingTime:{minutes:.93,words:278},updateTime:"January 14, 2022 06:42",updateTimeStamp:164214253e4,createTime:"December 6, 2021 12:00",createTimeStamp:1638792003e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:6},{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"变更日志",frontmatter:{summary:"变更日志 2021-11-24 星期三 添加了评论系统；; 添加了「留言板」。; 2021-11-22 星期一 添加了模块「微信公众号」文章（名称暂定）；; 添加了「变更日志」版块；; 添加了一些 表情；; 添加了「「力扣」上有意义的讨论帖」版块。; 2021-11-21 星期天 从本来记录在语雀上比较杂乱无章的数据进行整理；; 编写本教程希望能够做到「简洁",meta:[{property:"og:url",content:"https://suanfa8.com/suanfa8/changelog.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"变更日志"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/suanfa8/changelog.html",relativePath:"suanfa8/changelog.md",key:"v-a5a4e3f6",path:"/suanfa8/changelog/",headers:[{level:2,title:"2021-11-24 星期三",slug:"_2021-11-24-星期三"},{level:2,title:"2021-11-22 星期一",slug:"_2021-11-22-星期一"},{level:2,title:"2021-11-21 星期天",slug:"_2021-11-21-星期天"}],readingTime:{minutes:.53,words:158},updateTime:"January 14, 2022 06:42",updateTimeStamp:164214253e4,createTime:"December 6, 2021 12:00",createTimeStamp:1638792003e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」上一些有意义的讨论",frontmatter:{summary:"「力扣」上一些有意义的讨论 玩转题解配图; 刷题交流｜刷题刷累了; 题目求助｜二分查找不同实现方法细节困惑; 讨论｜就是说为什么感觉所有人都在弄公众号; 关于 labuladong 抄的算法题解 这本书的讨论;",meta:[{property:"og:url",content:"https://suanfa8.com/suanfa8/discuss-from-leetcode.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」上一些有意义的讨论"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/suanfa8/discuss-from-leetcode.html",relativePath:"suanfa8/discuss-from-leetcode.md",key:"v-6356d9a5",path:"/suanfa8/discuss-from-leetcode/",readingTime:{minutes:.36,words:108},updateTime:"January 14, 2022 06:42",updateTimeStamp:164214253e4,createTime:"December 6, 2021 12:00",createTimeStamp:1638792003e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"二叉树",frontmatter:{title:"二叉树",icon:"yongyan",category:"二叉树",tags:["二叉树"],summary:"树的问题很多都可以使用「深度优先遍历」或者「广度优先遍历」去做。 题目链接 力扣 B 站 ------------------------------------------------------------ ------------------------------------------------------------ -------------",meta:[{property:"og:url",content:"https://suanfa8.com/tree/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"二叉树"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"}]},regularPath:"/tree/",relativePath:"tree/README.md",key:"v-173cb7e6",path:"/tree/",headers:[{level:2,title:"「树」专题 1：树与递归",slug:"「树」专题-1-树与递归"},{level:3,title:"从二叉树的角度看递归",slug:"从二叉树的角度看递归"},{level:2,title:"树的概念",slug:"树的概念"},{level:2,title:"二叉树",slug:"二叉树"},{level:2,title:"N 叉树",slug:"n-叉树"},{level:2,title:"应用背景",slug:"应用背景"},{level:2,title:"定义",slug:"定义"},{level:2,title:"一些概念",slug:"一些概念"},{level:2,title:"应用背景",slug:"应用背景-2"},{level:2,title:"定义",slug:"定义-2"},{level:2,title:"实现",slug:"实现"},{level:2,title:"遍历",slug:"遍历"},{level:3,title:"1. 前序遍历",slug:"_1-前序遍历"},{level:3,title:"2. 中序遍历",slug:"_2-中序遍历"},{level:3,title:"3. 后序遍历",slug:"_3-后序遍历"},{level:3,title:"层序遍历",slug:"层序遍历"},{level:3,title:"树的遍历最常见的应用:",slug:"树的遍历最常见的应用"},{level:3,title:"Morris 遍历",slug:"morris-遍历"},{level:2,title:"序列化与反序列化",slug:"序列化与反序列化"},{level:3,title:"题目 -- 序列化和建树",slug:"题目-序列化和建树"},{level:2,title:"应用背景",slug:"应用背景-3"},{level:2,title:"定义",slug:"定义-3"},{level:2,title:"实现",slug:"实现-2"},{level:2,title:"遍历",slug:"遍历-2"},{level:3,title:"题目",slug:"题目-2"},{level:2,title:"序列化与反序列化",slug:"序列化与反序列化-2"},{level:3,title:"题目",slug:"题目-3"}],readingTime:{minutes:17.25,words:5175},updateTime:"January 6, 2022 08:21",updateTimeStamp:1641457312e3,createTime:"December 26, 2021 10:30",createTimeStamp:1640514631e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5}]},{title:"《算法与数据结构》学习笔记8：二分搜索树",frontmatter:{title:"《算法与数据结构》学习笔记8：二分搜索树",date:"2018-04-23T08:00:00.000Z",author:"liwei",top:!1,category:"算法与数据结构",tags:["二分搜索树"],mathjax:!0,permalink:"data-structure/binary-search-tree",toc:!0,summary:"8. 《算法与数据结构》学习笔记：二分搜索树 8.1 基于有序数组的二分查找法 查找问题是计算机中非常重要的一类基础问题；; 这个问题可以这样理解，在我们的生活中，要想方便地“找东西”，就要在“存东西”的时候多花点心思。例如：我们在“存东西”的时候，会有意识地“分门别类”放好。在我们的计算机中，文件夹呈现的树形结构，就是一种分类存放的策略，我们想要找张三的资",meta:[{property:"og:url",content:"https://suanfa8.com/data-structure/binary-search-tree/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"《算法与数据结构》学习笔记8：二分搜索树"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liwei"},{property:"article:tag",content:"二分搜索树"},{property:"article:published_time",content:"2018-04-23T08:00:00.000Z"}]},regularPath:"/tree/intro.html",relativePath:"tree/intro.md",key:"v-5a7d501b",path:"/data-structure/binary-search-tree/",headers:[{level:2,title:"8.1 基于有序数组的二分查找法",slug:"_8-1-基于有序数组的二分查找法"},{level:2,title:"8.2 二分搜索树（Binary Search Tree）",slug:"_8-2-二分搜索树-binary-search-tree"},{level:2,title:"8.3 二分搜索树的第 1 个操作：向二分搜索树中插入新的结点",slug:"_8-3-二分搜索树的第-1-个操作-向二分搜索树中插入新的结点"},{level:2,title:"8.4 二分搜索树的第 2 个操作：元素查找和判断是否包含",slug:"_8-4-二分搜索树的第-2-个操作-元素查找和判断是否包含"},{level:2,title:"8.5 二分搜索树的第 3 个操作：深度优先遍历",slug:"_8-5-二分搜索树的第-3-个操作-深度优先遍历"},{level:2,title:"8.6 二分搜索树的第 4 个操作：广度优先遍历",slug:"_8-6-二分搜索树的第-4-个操作-广度优先遍历"},{level:2,title:"8.7 二分搜索树的结点的删除（这部分有一定难度，不过可以分情况讨论）",slug:"_8-7-二分搜索树的结点的删除-这部分有一定难度-不过可以分情况讨论"},{level:3,title:"8.7.1 第 1 种情况：讨论删除二分搜索树中的最小结点和最大结点",slug:"_8-7-1-第-1-种情况-讨论删除二分搜索树中的最小结点和最大结点"},{level:3,title:"8.7.2 第 2 种情况：讨论删除只有左孩子（子树）或者只有右孩子（子树）的结点",slug:"_8-7-2-第-2-种情况-讨论删除只有左孩子-子树-或者只有右孩子-子树-的结点"},{level:3,title:"8.7.3 第 3 种情况：删除左右都有孩子（子树）的结点",slug:"_8-7-3-第-3-种情况-删除左右都有孩子-子树-的结点"},{level:2,title:"8.8 二分搜索树的顺序性",slug:"_8-8-二分搜索树的顺序性"},{level:2,title:"8.9 二分搜索树的局限性",slug:"_8-9-二分搜索树的局限性"},{level:2,title:"8.10 树形问题和更多树",slug:"_8-10-树形问题和更多树"},{level:2,title:"8.11 二分搜索树的代码实现",slug:"_8-11-二分搜索树的代码实现"},{level:3,title:"代码实现（Java）",slug:"代码实现-java"},{level:2,title:"BST 的 floor 与 ceiling",slug:"bst-的-floor-与-ceiling"},{level:3,title:"floor 函数的实现",slug:"floor-函数的实现"},{level:3,title:"ceiling 函数的实现",slug:"ceiling-函数的实现"},{level:2,title:"如何查找",slug:"如何查找"},{level:2,title:"初始化 BST",slug:"初始化-bst"},{level:2,title:"二分搜索树的操作：增",slug:"二分搜索树的操作-增"},{level:2,title:"二分搜索树的操作：查、改",slug:"二分搜索树的操作-查、改"},{level:2,title:"二分搜索树的操作：删",slug:"二分搜索树的操作-删"},{level:3,title:"第 1 种情况：删除二分搜索树中的最小结点和最大结点",slug:"第-1-种情况-删除二分搜索树中的最小结点和最大结点"},{level:3,title:"第 2 种情况：删除只有左孩子（子树）或者只有右孩子（子树）的结点",slug:"第-2-种情况-删除只有左孩子-子树-或者只有右孩子-子树-的结点"},{level:3,title:"第 3 种情况：删除左右都有孩子（子树）的结点",slug:"第-3-种情况-删除左右都有孩子-子树-的结点"},{level:2,title:"二分搜索树的 floor 与 ceiling",slug:"二分搜索树的-floor-与-ceiling"},{level:3,title:"floor 函数的实现",slug:"floor-函数的实现-2"},{level:3,title:"ceiling 函数的实现",slug:"ceiling-函数的实现-2"},{level:2,title:"二分搜索树的深度优先遍历",slug:"二分搜索树的深度优先遍历"},{level:2,title:"二分搜索树的广度优先遍历",slug:"二分搜索树的广度优先遍历"},{level:2,title:"二分搜索树的代码实现",slug:"二分搜索树的代码实现"},{level:3,title:"小结",slug:"小结"},{level:2,title:"二分搜索树的顺序性",slug:"二分搜索树的顺序性"},{level:2,title:"二分搜索树的局限性",slug:"二分搜索树的局限性"},{level:2,title:"树形问题和更多树",slug:"树形问题和更多树"},{level:3,title:"本文源代码",slug:"本文源代码"},{level:2,title:"二分搜索树",slug:"二分搜索树"},{level:2,title:"「树」专题 6：二分搜索树中的问题",slug:"「树」专题-6-二分搜索树中的问题"},{level:3,title:"回顾二分搜索树的定义",slug:"回顾二分搜索树的定义"},{level:3,title:"二分搜索树的重要性质",slug:"二分搜索树的重要性质"},{level:3,title:"回顾二分搜索树中的基本操作",slug:"回顾二分搜索树中的基本操作"},{level:2,title:"例题",slug:"例题"}],readingTime:{minutes:42.42,words:12725},updateTime:"January 15, 2022 07:10",updateTimeStamp:1642230601e3,createTime:"January 15, 2022 07:10",createTimeStamp:1642230601e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 94 题：二叉树的中序遍历（简单）",frontmatter:{title:"「力扣」第 94 题：二叉树的中序遍历（简单）",icon:"yongyan",category:"二叉树",tags:["二叉树","递归"],summary:"题目链接：94. 二叉树的中序遍历；; 题解链接：模拟系统栈完成非递归中序遍历，同理可以完成非递归的前序遍历和后序遍历。; 题目描述 给定一个二叉树的根节点 root ，返回它的 中序 遍历。 示例 1： 示例 2： 示例 3： 示例 4： 示例 5： 提示： 树中节点数目在范围 [0, 100] 内; -100 <= Node.val <= 100; 方法",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0094-binary-tree-inorder-traversal.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 94 题：二叉树的中序遍历（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0094-binary-tree-inorder-traversal.html",relativePath:"tree/solutions/0094-binary-tree-inorder-traversal.md",key:"v-131a89f6",path:"/tree/solutions/0094-binary-tree-inorder-traversal/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：递归",slug:"方法一-递归"},{level:2,title:"方法二：非递归写法 1",slug:"方法二-非递归写法-1"},{level:2,title:"方法三：非递归写法 2",slug:"方法三-非递归写法-2"},{level:2,title:"方法：模拟系统栈",slug:"方法-模拟系统栈"}],readingTime:{minutes:3.09,words:928},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 95 题：不同的二叉搜索树 II（中等）",frontmatter:{title:"「力扣」第 95 题：不同的二叉搜索树 II（中等）",icon:"yongyan",category:"二叉搜索树",tags:["二叉搜索树","分治算法"],summary:"题目链接：95. 不同的二叉搜索树 II。; 题目描述 给你一个整数 n ，请你生成并返回所有由 n 个节点组成且节点值从 1 到 n 互不相同的不同 二叉搜索树 。可以按 任意顺序 返回答案。 示例 1： 示例 2： 提示： 1 <= n <= 8; 方法一：递归（分治法） 参考代码 1： 可以把 left == right 的情况去掉。 参考代码 2： ",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0095-unique-binary-search-trees-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 95 题：不同的二叉搜索树 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉搜索树"},{property:"article:tag",content:"分治算法"}]},regularPath:"/tree/solutions/0095-unique-binary-search-trees-ii.html",relativePath:"tree/solutions/0095-unique-binary-search-trees-ii.md",key:"v-a554dab6",path:"/tree/solutions/0095-unique-binary-search-trees-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：递归（分治法）",slug:"方法一-递归-分治法"},{level:2,title:"方法二：动态规划",slug:"方法二-动态规划"}],readingTime:{minutes:1.84,words:553},updateTime:"January 15, 2022 07:10",updateTimeStamp:1642230601e3,createTime:"January 15, 2022 07:10",createTimeStamp:1642230601e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 98 题：验证二叉搜索树（中等）",frontmatter:{title:"「力扣」第 98 题：验证二叉搜索树（中等）",icon:"yongyan",category:"二叉搜索树",tags:["二叉搜索树","二叉树","递归"],summary:"题目链接：98. 验证二叉搜索树。; 题目描述 给你一个二叉树的根节点 root ，判断其是否是一个有效的二叉搜索树。 有效 二叉搜索树定义如下： 节点的左子树只包含 小于 当前节点的数。; 节点的右子树只包含 大于 当前节点的数。; 所有左子树和右子树自身必须也是二叉搜索树。; 示例 1： 示例 2： 提示： 树中节点数目范围在[1, 104] 内; -2",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0098-validate-binary-search-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 98 题：验证二叉搜索树（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉搜索树"},{property:"article:tag",content:"二叉树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0098-validate-binary-search-tree.html",relativePath:"tree/solutions/0098-validate-binary-search-tree.md",key:"v-37ce7125",path:"/tree/solutions/0098-validate-binary-search-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:3,title:"方法一： 中序遍历判断有序性",slug:"方法一-中序遍历判断有序性"},{level:2,title:"方法二：中序遍历",slug:"方法二-中序遍历"},{level:2,title:"方法三：深度优先遍历",slug:"方法三-深度优先遍历"}],readingTime:{minutes:2.05,words:615},updateTime:"January 15, 2022 07:10",updateTimeStamp:1642230601e3,createTime:"January 15, 2022 07:10",createTimeStamp:1642230601e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 100 题：相同的树（简单）",frontmatter:{title:"「力扣」第 100 题：相同的树（简单）",icon:"yongyan",category:"二叉树",tags:["二叉树","递归"],summary:"题目链接：100. 相同的树 。; 题目描述 给你两棵二叉树的根节点 p 和 q ，编写一个函数来检验这两棵树是否相同。 如果两个树在结构上相同，并且节点具有相同的值，则认为它们是相同的。 示例 1： 示例 2： 示例 3： 提示： 两棵树上的节点数目都在范围 [0, 100] 内; -10^4 <= Node.val <= 10^4; 思路分析 判断两棵二",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0100-same-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 100 题：相同的树（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0100-same-tree.html",relativePath:"tree/solutions/0100-same-tree.md",key:"v-06e10b05",path:"/tree/solutions/0100-same-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:.9,words:270},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 101 题：判断两棵二叉树是否左右对称",frontmatter:{title:"「力扣」第 101 题：判断两棵二叉树是否左右对称",icon:"yongyan",category:"二叉树",tags:["二叉树","递归"],summary:"题目链接：101. 对称二叉树。; 题目描述 给你一个二叉树的根节点 root ， 检查它是否轴对称。 示例 1： 示例 2： 提示： 树中节点数目在范围 [1, 1000] 内; -100 <= Node.val <= 100; 进阶： 你可以运用递归和迭代两种方法解决这个问题吗？ 方法一：递归 需要引入辅助函数。 Python 代码 1： 方法二：非递归",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0101-symmetric-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 101 题：判断两棵二叉树是否左右对称"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0101-symmetric-tree.html",relativePath:"tree/solutions/0101-symmetric-tree.md",key:"v-6908511f",path:"/tree/solutions/0101-symmetric-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：递归",slug:"方法一-递归"},{level:2,title:"方法二：非递归",slug:"方法二-非递归"}],readingTime:{minutes:3,words:899},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 102 题：二叉树的层次遍历",frontmatter:{title:"「力扣」第 102 题：二叉树的层次遍历",icon:"yongyan",category:"二叉树",tags:["二叉树"],summary:"求解关键：非常标准的层序遍历的做法，使用队列作为辅助的数据结构。 题目描述：102. 二叉树的层次遍历。; 题目描述 给你一个二叉树，请你返回其按 层序遍历 得到的节点值。 （即逐层地，从左到右访问所有节点）。 示例 1： 二叉树：[3,9,20,null,null,15,7], 返回其层序遍历结果： Example 2: Example 3: Constr",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0102-binary-tree-level-order-traversal.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 102 题：二叉树的层次遍历"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"}]},regularPath:"/tree/solutions/0102-binary-tree-level-order-traversal.html",relativePath:"tree/solutions/0102-binary-tree-level-order-traversal.md",key:"v-496eb3f6",path:"/tree/solutions/0102-binary-tree-level-order-traversal/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:1.17,words:351},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456081e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 103 题：二叉树的锯齿形层次遍历（中等）",frontmatter:{title:"「力扣」第 103 题：二叉树的锯齿形层次遍历（中等）",icon:"yongyan",category:"二叉树",tags:["二叉树"],summary:"题目链接：103. 二叉树的锯齿形层次遍历。; 题目描述 给定一个二叉树，返回其节点值的锯齿形层序遍历。（即先从左往右，再从右往左进行下一层遍历，以此类推，层与层之间交替进行）。 例如： 给定二叉树 [3,9,20,null,null,15,7], 返回锯齿形层序遍历如下： Example 2: Example 3: Constraints: The num",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0103-binary-tree-zigzag-level-order-traversal.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 103 题：二叉树的锯齿形层次遍历（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"}]},regularPath:"/tree/solutions/0103-binary-tree-zigzag-level-order-traversal.html",relativePath:"tree/solutions/0103-binary-tree-zigzag-level-order-traversal.md",key:"v-2a1718e3",path:"/tree/solutions/0103-binary-tree-zigzag-level-order-traversal/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.31,words:392},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456081e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 104 题：求一棵二叉树的最大深度（简单）",frontmatter:{title:"「力扣」第 104 题：求一棵二叉树的最大深度（简单）",icon:"yongyan",category:"二叉树",tags:["二叉树","递归"],summary:"题目链接：104. 二叉树的最大深度。; 题目描述 给定一个二叉树，找出其最大深度。 二叉树的深度为根节点到最远叶子节点的最长路径上的节点数。 说明: 叶子节点是指没有子节点的节点。 Example 1: Example 2: Constraints: The number of nodes in the tree is in the range [0, 1",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0104-maximum-depth-of-binary-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 104 题：求一棵二叉树的最大深度（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0104-maximum-depth-of-binary-tree.html",relativePath:"tree/solutions/0104-maximum-depth-of-binary-tree.md",key:"v-490d2177",path:"/tree/solutions/0104-maximum-depth-of-binary-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：深度优先遍历",slug:"方法一-深度优先遍历"},{level:2,title:"方法二：广度优先遍历",slug:"方法二-广度优先遍历"}],readingTime:{minutes:2.41,words:724},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 105 题：从前序与中序遍历序列构造二叉树（中等）",frontmatter:{title:"「力扣」第 105 题：从前序与中序遍历序列构造二叉树（中等）",icon:"shipin",category:"二叉树",tags:["二叉树","递归"],summary:'" 抓住「前序遍历序列」与「中序遍历序列」的定义，递归构建二叉树。并且通过画图计算出需要使用的子区间的下标。最后看一眼复杂度，使用「空间换时间」的思路优化。" 题目链接：105. 从前序与中序遍历序列构造二叉树；; 题解链接：; 官方题解（含视频题解）；; 分治法（Python 代码、Java 代码）（含视频讲解）。; 视频讲解 :tv: 这道题在 官方题解',meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0105-construct-binary-tree-from-preorder-and-inorder-traversal.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 105 题：从前序与中序遍历序列构造二叉树（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0105-construct-binary-tree-from-preorder-and-inorder-traversal.html",relativePath:"tree/solutions/0105-construct-binary-tree-from-preorder-and-inorder-traversal.md",key:"v-09d9e8f6",path:"/tree/solutions/0105-construct-binary-tree-from-preorder-and-inorder-traversal/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"解题思路",slug:"解题思路"}],readingTime:{minutes:3.91,words:1173},updateTime:"January 15, 2022 07:10",updateTimeStamp:1642230601e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6}]},{title:"「力扣」第 106 题：从中序与后序遍历序列构造二叉树（中等）",frontmatter:{title:"「力扣」第 106 题：从中序与后序遍历序列构造二叉树（中等）",icon:"yongyan",category:"二叉树",tags:["二叉树","递归"],summary:"题目链接：106. 从中序与后序遍历序列构造二叉树；; 题解链接：分治法（Python、Java）。; 题目描述 Given two integer arrays inorder and postorder where inorder is the inorder traversal of a binary tree and postorder is the",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0106-construct-binary-tree-from-inorder-and-postorder-traversal.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 106 题：从中序与后序遍历序列构造二叉树（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0106-construct-binary-tree-from-inorder-and-postorder-traversal.html",relativePath:"tree/solutions/0106-construct-binary-tree-from-inorder-and-postorder-traversal.md",key:"v-5af2464a",path:"/tree/solutions/0106-construct-binary-tree-from-inorder-and-postorder-traversal/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"一句话题解",slug:"一句话题解"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：在递归方法中，传入数组的拷贝（不推荐、复杂度较高）",slug:"方法一-在递归方法中-传入数组的拷贝-不推荐、复杂度较高"},{level:2,title:"方法二：在递归方法中，传入子数组的边界下标",slug:"方法二-在递归方法中-传入子数组的边界下标"}],readingTime:{minutes:7,words:2101},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 107 题：二叉树的层次遍历 II（中等）",frontmatter:{title:"「力扣」第 107 题：二叉树的层次遍历 II（中等）",icon:"yongyan",category:"二叉树",tags:["二叉树"],summary:"题目描述：107. 二叉树的层次遍历 II。; 题目描述 Given the root of a binary tree, return the bottom-up level order traversal of its nodes' values. (i.e., from left to right, level by level from leaf t",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0107-binary-tree-level-order-traversal-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 107 题：二叉树的层次遍历 II（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"}]},regularPath:"/tree/solutions/0107-binary-tree-level-order-traversal-ii.html",relativePath:"tree/solutions/0107-binary-tree-level-order-traversal-ii.md",key:"v-99ac21c2",path:"/tree/solutions/0107-binary-tree-level-order-traversal-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:.93,words:279},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456081e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 108 题：将有序数组转换为二叉搜索树（简单）",frontmatter:{title:"「力扣」第 108 题：将有序数组转换为二叉搜索树（简单）",icon:"yongyan",category:"二叉搜索树",tags:["二叉树","二叉搜索树"],summary:"题目链接：108. 将有序数组转换为二叉搜索树；; 题解链接：分而治之（递归）。; 题目描述 给你一个整数数组 nums ，其中元素已经按 升序 排列，请你将其转换为一棵 高度平衡 二叉搜索树。 高度平衡 二叉树是一棵满足「每个节点的左右两个子树的高度差的绝对值不超过 1 」的二叉树。 示例 1： 示例 2： 提示： 1 <= nums.length <= ",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0108-convert-sorted-array-to-binary-search-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 108 题：将有序数组转换为二叉搜索树（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"},{property:"article:tag",content:"二叉搜索树"}]},regularPath:"/tree/solutions/0108-convert-sorted-array-to-binary-search-tree.html",relativePath:"tree/solutions/0108-convert-sorted-array-to-binary-search-tree.md",key:"v-40db7852",path:"/tree/solutions/0108-convert-sorted-array-to-binary-search-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:2.37,words:711},updateTime:"January 15, 2022 07:10",updateTimeStamp:1642230601e3,createTime:"January 15, 2022 07:10",createTimeStamp:1642230601e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 109 题：有序链表转换二叉搜索树（中等）",frontmatter:{title:"「力扣」第 109 题：有序链表转换二叉搜索树（中等）",icon:"yongyan",category:"二叉树",tags:["二叉搜索树","二叉树"],summary:"题目链接：109. 有序链表转换二叉搜索树；; 题解链接：分治法（Python 代码、Java 代码）。; 题目描述 给定一个单链表，其中的元素按升序排序，将其转换为高度平衡的二叉搜索树。 本题中，一个高度平衡二叉树是指一个二叉树每个节点 的左右两个子树的高度差的绝对值不超过 1。 Example 1: Example 2: Example 3: Examp",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0109-convert-sorted-list-to-binary-search-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 109 题：有序链表转换二叉搜索树（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉搜索树"},{property:"article:tag",content:"二叉树"}]},regularPath:"/tree/solutions/0109-convert-sorted-list-to-binary-search-tree.html",relativePath:"tree/solutions/0109-convert-sorted-list-to-binary-search-tree.md",key:"v-0e1ee485",path:"/tree/solutions/0109-convert-sorted-list-to-binary-search-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.95,words:885},updateTime:"January 15, 2022 07:10",updateTimeStamp:1642230601e3,createTime:"January 15, 2022 07:10",createTimeStamp:1642230601e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 110 题：平衡二叉树（简单）",frontmatter:{title:"「力扣」第 110 题：平衡二叉树（简单）",icon:"yongyan",category:"二叉树",tags:["二叉树","递归"],permalink:"leetcode-algo/0110-balanced-binary-tree",summary:'题目描述：110. 平衡二叉树。; 题目描述 给定一个二叉树，判断它是否是高度平衡的二叉树。 本题中，一棵高度平衡二叉树定义为： " 一个二叉树每个节点 的左右两个子树的高度差的绝对值不超过 1 。" 示例 1： 示例 2： 示例 3： 提示： 树中的节点数在范围 [0, 5000] 内; -10^4 <= Node.val <= 10^4; 思路分析 判断',meta:[{property:"og:url",content:"https://suanfa8.com/leetcode-algo/0110-balanced-binary-tree/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 110 题：平衡二叉树（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0110-balanced-binary-tree.html",relativePath:"tree/solutions/0110-balanced-binary-tree.md",key:"v-f379e30e",path:"/leetcode-algo/0110-balanced-binary-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:1.31,words:392},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 104 题：求一棵二叉树的最大深度（简单）",frontmatter:{title:"「力扣」第 104 题：求一棵二叉树的最大深度（简单）",icon:"yongyan",category:"二叉树",tags:["二叉树","递归"],summary:"题目描述：111. 二叉树的最小深度 。; 题目描述 给定一个二叉树，找出其最小深度。 最小深度是从根节点到最近叶子节点的最短路径上的节点数量。 说明：叶子节点是指没有子节点的节点。 示例 1： 示例 2： 提示： 树中节点数的范围在 [0, 10^5] 内; -1000 <= Node.val <= 1000; 思路分析 分析：即求一棵二叉树从根结点到叶子",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0111-minimum-depth-of-binary-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 104 题：求一棵二叉树的最大深度（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0111-minimum-depth-of-binary-tree.html",relativePath:"tree/solutions/0111-minimum-depth-of-binary-tree.md",key:"v-75d2c8ea",path:"/tree/solutions/0111-minimum-depth-of-binary-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：深度优先遍历",slug:"方法一-深度优先遍历"},{level:2,title:"方法二：广度优先遍历",slug:"方法二-广度优先遍历"}],readingTime:{minutes:3.08,words:923},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 104 题：求一棵二叉树的最大深度（简单）",frontmatter:{title:"「力扣」第 104 题：求一棵二叉树的最大深度（简单）",icon:"yongyan",category:"二叉树",tags:["二叉树","递归"],summary:"题目描述：112. 路径总和。; 题目描述 给你二叉树的根节点 root 和一个表示目标和的整数 targetSum 。判断该树中是否存在 根节点到叶子节点 的路径，这条路径上所有节点值相加等于目标和 targetSum 。如果存在，返回 true ；否则，返回 false 。 叶子节点 是指没有子节点的节点。 示例 1： 示例 2： 示例 3： 提示： 树",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0112-path-sum.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 104 题：求一棵二叉树的最大深度（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0112-path-sum.html",relativePath:"tree/solutions/0112-path-sum.md",key:"v-bc8475fe",path:"/tree/solutions/0112-path-sum/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:3,title:"LeetCode 第 112 题：Path Sum",slug:"leetcode-第-112-题-path-sum"}],readingTime:{minutes:3.34,words:1001},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 129 题：求根到叶子结点数字之和",frontmatter:{title:"「力扣」第 129 题：求根到叶子结点数字之和",icon:"yongyan",category:"二叉树",tags:["二叉树","递归"],summary:"题目链接：129. 求根到叶子结点数字之和。; 题目描述 给你一个二叉树的根节点 root ，树中每个节点都存放有一个 0 到 9 之间的数字。 每条从根节点到叶节点的路径都代表一个数字： 例如，从根节点到叶节点的路径 1 -> 2 -> 3 表示数字 123 。; 计算从根节点到叶节点生成的 所有数字之和 。 叶节点 是指没有子节点的节点。 示例 1： 示",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0129-sum-root-to-leaf-numbers.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 129 题：求根到叶子结点数字之和"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0129-sum-root-to-leaf-numbers.html",relativePath:"tree/solutions/0129-sum-root-to-leaf-numbers.md",key:"v-2f64a44b",path:"/tree/solutions/0129-sum-root-to-leaf-numbers/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:3,title:"LeetCode 第 129 题：给定一棵二叉树，每个节点只包含数字 0-9，从根节点到叶子节点的每条路径可以表示成一个数，求这些数的和",slug:"leetcode-第-129-题-给定一棵二叉树-每个节点只包含数字-0-9-从根节点到叶子节点的每条路径可以表示成一个数-求这些数的和"}],readingTime:{minutes:4.25,words:1274},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 199 题：二叉树的右视图（中等）",frontmatter:{title:"「力扣」第 199 题：二叉树的右视图（中等）",icon:"yongyan",category:"二叉树",tags:["二叉树","递归"],summary:"题目链接：199. 二叉树的右视图；; 题解链接：DFS 和 BFS（Python 代码）。; 题目描述 给定一个二叉树的 根节点 root，想象自己站在它的右侧，按照从顶部到底部的顺序，返回从右侧所能看到的节点值。 示例 1: 示例 2: 示例 3: 提示: 二叉树的节点个数的范围是 [0,100]; -100 <= Node.val <= 100; 方法",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0199-binary-tree-right-side-view.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 199 题：二叉树的右视图（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0199-binary-tree-right-side-view.html",relativePath:"tree/solutions/0199-binary-tree-right-side-view.md",key:"v-5fe3b505",path:"/tree/solutions/0199-binary-tree-right-side-view/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"方法一：DFS",slug:"方法一-dfs"},{level:3,title:"方法二：BFS",slug:"方法二-bfs"}],readingTime:{minutes:1.4,words:421},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 220 题： 存在重复元素 III（中等）",frontmatter:{title:"「力扣」第 220 题： 存在重复元素 III（中等）",icon:"yongyan",category:"二分搜索树",tags:["二分搜索树","滑动窗口"],summary:"题目地址：220. 存在重复元素 III；; 题解地址：暴力解法、滑动窗口（二叉搜索树）。; 题目描述 给你一个整数数组 nums 和两个整数 k 和 t 。请你判断是否存在 两个不同下标 i 和 j，使得 abs(nums[i] - nums[j]) <= t ，同时又满足 abs(i - j) <= k 。 如果存在则返回 true，不存在返回 fals",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0220-contains-duplicate-iii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 220 题： 存在重复元素 III（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分搜索树"},{property:"article:tag",content:"滑动窗口"}]},regularPath:"/tree/solutions/0220-contains-duplicate-iii.html",relativePath:"tree/solutions/0220-contains-duplicate-iii.md",key:"v-3745ea5e",path:"/tree/solutions/0220-contains-duplicate-iii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"题意分析",slug:"题意分析"},{level:2,title:"方法一：暴力解法（超时）",slug:"方法一-暴力解法-超时"},{level:2,title:"方法二：滑动窗口 + 二叉搜索树",slug:"方法二-滑动窗口-二叉搜索树"},{level:2,title:"为什么使用二分搜索树",slug:"为什么使用二分搜索树"}],readingTime:{minutes:5.76,words:1729},updateTime:"January 15, 2022 07:10",updateTimeStamp:1642230601e3,createTime:"January 15, 2022 07:10",createTimeStamp:1642230601e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 226 题：反转一棵二叉树",frontmatter:{title:"「力扣」第 226 题：反转一棵二叉树",icon:"yongyan",category:"二叉树",tags:["二叉树"],summary:'题目链接：226. 翻转二叉树；; 题解链接：前、中、后序遍历、层序遍历。; 和二叉树相关的问题，在面试中是非常常见的。一旦我们熟悉了这些问题以后，会发现这些问题其实是非常简单的。 题目描述 翻转一棵二叉树。 示例： 输入： 输出： Example 2: Example 3: 备注: 这个问题是受到 Max Howell 的 原问题 启发的 ： " 谷歌：我',meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0226-invert-binary-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 226 题：反转一棵二叉树"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"}]},regularPath:"/tree/solutions/0226-invert-binary-tree.html",relativePath:"tree/solutions/0226-invert-binary-tree.md",key:"v-d06d9bae",path:"/tree/solutions/0226-invert-binary-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：前序遍历",slug:"方法一-前序遍历"},{level:2,title:"方法二：中序遍历",slug:"方法二-中序遍历"},{level:2,title:"方法三：后序遍历",slug:"方法三-后序遍历"},{level:2,title:"方法四：层序遍历",slug:"方法四-层序遍历"}],readingTime:{minutes:3.23,words:968},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 222 题：求完全二叉树的节点数、满二叉树",frontmatter:{title:"「力扣」第 222 题：求完全二叉树的节点数、满二叉树",icon:"yongyan",category:"二叉树",tags:["二叉树","递归"],summary:"题目链接：222. 完全二叉树的节点个数。; 题目描述 给你一棵 完全二叉树 的根节点 root ，求出该树的节点个数。 完全二叉树 的定义如下：在完全二叉树中，除了最底层节点可能没填满外，其余每层节点数都达到最大值，并且最下面一层的节点都集中在该层最左边的若干位置。若最底层为第 h 层，则该层包含 1~ 2^h 个节点。 示例 1： 示例 2： 示例 3：",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0222-count-complete-tree-nodes.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 222 题：求完全二叉树的节点数、满二叉树"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0222-count-complete-tree-nodes.html",relativePath:"tree/solutions/0222-count-complete-tree-nodes.md",key:"v-564d7af6",path:"/tree/solutions/0222-count-complete-tree-nodes/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:3,title:"LeetCode 第 222 题：给出一个完全二叉树，求出该树的节点个数（典型递归问题）",slug:"leetcode-第-222-题-给出一个完全二叉树-求出该树的节点个数-典型递归问题"}],readingTime:{minutes:2.78,words:835},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 230 题：二叉搜索树中第 K 小的元素（中等）",frontmatter:{title:"「力扣」第 230 题：二叉搜索树中第 K 小的元素（中等）",icon:"yongyan",category:"二叉搜索树",tags:["二叉搜索树","递归"],summary:"题目链接：230. 二叉搜索树中第 K 小的元素；; 题解链接：递归与非递归写法（同理完成第 144、94、145 题，Python 代码、Java 代码）。; 题目描述 给定一个二叉搜索树的根节点 root ，和一个整数 k ，请你设计一个算法查找其中第 k 个最小元素（从 1 开始计数）。 示例 1： 示例 2： 提示： 树中的节点数为 n 。; 1 <",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0230-kth-smallest-element-in-a-bst.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 230 题：二叉搜索树中第 K 小的元素（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉搜索树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0230-kth-smallest-element-in-a-bst.html",relativePath:"tree/solutions/0230-kth-smallest-element-in-a-bst.md",key:"v-7c680e36",path:"/tree/solutions/0230-kth-smallest-element-in-a-bst/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:3,title:"方法一：先得到中序遍历的结果，然后找到第 k 大元素",slug:"方法一-先得到中序遍历的结果-然后找到第-k-大元素"},{level:3,title:"方法二：在递归的时候不记录全部结果，只记录计数器",slug:"方法二-在递归的时候不记录全部结果-只记录计数器"}],readingTime:{minutes:6.81,words:2042},updateTime:"January 15, 2022 07:10",updateTimeStamp:1642230601e3,createTime:"January 15, 2022 07:10",createTimeStamp:1642230601e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 235 题：二叉搜索树的最近公共祖先（中等）",frontmatter:{title:"「力扣」第 235 题：二叉搜索树的最近公共祖先（中等）",icon:"yongyan",category:"二叉搜索树",tags:["二叉搜索树","递归"],summary:"题目链接：235. 二叉搜索树的最近公共祖先。; 题目描述 给定一个二叉搜索树, 找到该树中两个指定节点的最近公共祖先。 百度百科中最近公共祖先的定义为：“对于有根树 T 的两个结点 p、q，最近公共祖先表示为一个结点 x，满足 x 是 p、q 的祖先且 x 的深度尽可能大（一个节点也可以是它自己的祖先）。” 例如，给定如下二叉搜索树: root = [6,",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0235-lowest-common-ancestor-of-a-binary-search-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 235 题：二叉搜索树的最近公共祖先（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉搜索树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0235-lowest-common-ancestor-of-a-binary-search-tree.html",relativePath:"tree/solutions/0235-lowest-common-ancestor-of-a-binary-search-tree.md",key:"v-3ba7a5bf",path:"/tree/solutions/0235-lowest-common-ancestor-of-a-binary-search-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:2.22,words:666},updateTime:"January 15, 2022 07:10",updateTimeStamp:1642230601e3,createTime:"January 15, 2022 07:10",createTimeStamp:1642230601e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 236 题：二叉树的最近公共祖先（中等）",frontmatter:{title:"「力扣」第 236 题：二叉树的最近公共祖先（中等）",icon:"yongyan",category:"二叉树",tags:["二叉树","递归"],summary:"题目描述：236. 二叉树的最近公共祖先。; 题目描述 给定一个二叉树, 找到该树中两个指定节点的最近公共祖先。 百度百科中最近公共祖先的定义为：“对于有根树 T 的两个节点 p、q，最近公共祖先表示为一个节点 x，满足 x 是 p、q 的祖先且 x 的深度尽可能大（一个节点也可以是它自己的祖先）。” 示例 1： 示例 2： 示例 3： 提示： 树中节点数目",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0236-lowest-common-ancestor-of-a-binary-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 236 题：二叉树的最近公共祖先（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0236-lowest-common-ancestor-of-a-binary-tree.html",relativePath:"tree/solutions/0236-lowest-common-ancestor-of-a-binary-tree.md",key:"v-d22c4cf6",path:"/tree/solutions/0236-lowest-common-ancestor-of-a-binary-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:1.27,words:382},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 257 题：二叉树的所有路径（简单）",frontmatter:{title:"「力扣」第 257 题：二叉树的所有路径（简单）",icon:"yongyan",category:"回溯算法",tags:["回溯算法","递归","树形问题","深度优先遍历","字符串"],summary:"题目链接：257. 二叉树的所有路径；; 题解链接：回溯算法（Python 代码、Java 代码）。; 题目描述 给你一个二叉树的根节点 root ，按 任意顺序 ，返回所有从根节点到叶子节点的路径。 叶子节点 是指没有子节点的节点。 示例 1： 示例 2： 提示： 树中节点的数目在范围 [1, 100] 内; -100 <= Node.val <= 100",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0257-binary-tree-paths.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 257 题：二叉树的所有路径（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"回溯算法"},{property:"article:tag",content:"递归"},{property:"article:tag",content:"树形问题"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"字符串"}]},regularPath:"/tree/solutions/0257-binary-tree-paths.html",relativePath:"tree/solutions/0257-binary-tree-paths.md",key:"v-0066dbe5",path:"/tree/solutions/0257-binary-tree-paths/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"回溯算法（Python 代码、Java 代码）",slug:"回溯算法-python-代码、java-代码"}],readingTime:{minutes:4.53,words:1360},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 297 题：二叉树的序列化与反序列化（困难）",frontmatter:{title:"「力扣」第 297 题：二叉树的序列化与反序列化（困难）",icon:"yongyan",category:"二叉树",tags:["二叉树","递归"],summary:"题目链接：297. 二叉树的序列化与反序列化。; 题目描述 序列化是将一个数据结构或者对象转换为连续的比特位的操作，进而可以将转换后的数据存储在一个文件或者内存中，同时也可以通过网络传输到另一个计算机环境，采取相反方式重构得到原数据。 请设计一个算法来实现二叉树的序列化与反序列化。这里不限定你的序列 / 反序列化算法执行逻辑，你只需要保证一个二叉树可以被序列",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0297-serialize-and-deserialize-binary-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 297 题：二叉树的序列化与反序列化（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0297-serialize-and-deserialize-binary-tree.html",relativePath:"tree/solutions/0297-serialize-and-deserialize-binary-tree.md",key:"v-2f3134a5",path:"/tree/solutions/0297-serialize-and-deserialize-binary-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.3,words:389},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 404 题：左叶子之和（简单）",frontmatter:{title:"「力扣」第 404 题：左叶子之和（简单）",icon:"yongyan",category:"二叉树",tags:["二叉树","递归"],summary:"题目链接：404. 左叶子之和。; 题目描述 计算给定二叉树的所有左叶子之和。 Example 1: Example 2: Constraints: The number of nodes in the tree is in the range [1, 1000].; -1000 <= Node.val <= 1000;",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0404-sum-of-left-leaves.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 404 题：左叶子之和（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0404-sum-of-left-leaves.html",relativePath:"tree/solutions/0404-sum-of-left-leaves.md",key:"v-7d29feb7",path:"/tree/solutions/0404-sum-of-left-leaves/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:.32,words:95},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 437 题：路径总和 III（中等）",frontmatter:{title:"「力扣」第 437 题：路径总和 III（中等）",icon:"yongyan",category:"二叉树",tags:["二叉树","递归"],summary:"题目描述：437. 路径总和 III。; 题目描述 给定一个二叉树的根节点 root ，和一个整数 targetSum ，求该二叉树里节点值之和等于 targetSum 的 路径 的数目。 路径 不需要从根节点开始，也不需要在叶子节点结束，但是路径方向必须是向下的（只能从父节点到子节点）。 示例 1： 示例 2： 提示: 二叉树的节点个数的范围是 [0,10",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0437-path-sum-iii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 437 题：路径总和 III（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0437-path-sum-iii.html",relativePath:"tree/solutions/0437-path-sum-iii.md",key:"v-c8a213d6",path:"/tree/solutions/0437-path-sum-iii/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:.6,words:181},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 449 题：序列化和反序列化二叉搜索树（中等）",frontmatter:{title:"「力扣」第 449 题：序列化和反序列化二叉搜索树（中等）",icon:"yongyan",category:"二叉搜索树",tags:["二叉搜索树","递归"],summary:"题目链接：449. 序列化和反序列化二叉搜索树。; 题目描述 序列化是将数据结构或对象转换为一系列位的过程，以便它可以存储在文件或内存缓冲区中，或通过网络连接链路传输，以便稍后在同一个或另一个计算机环境中重建。 设计一个算法来序列化和反序列化 二叉搜索树 。 对序列化/反序列化算法的工作方式没有限制。 您只需确保二叉搜索树可以序列化为字符串，并且可以将该字符",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0449-serialize-and-deserialize-bst.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 449 题：序列化和反序列化二叉搜索树（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉搜索树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0449-serialize-and-deserialize-bst.html",relativePath:"tree/solutions/0449-serialize-and-deserialize-bst.md",key:"v-870f6136",path:"/tree/solutions/0449-serialize-and-deserialize-bst/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.62,words:485},updateTime:"January 15, 2022 07:10",updateTimeStamp:1642230601e3,createTime:"January 15, 2022 07:10",createTimeStamp:1642230601e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 450 题：删除二叉搜索树中的节点（中等）",frontmatter:{title:"「力扣」第 450 题：删除二叉搜索树中的节点（中等）",icon:"yongyan",category:"二叉搜索树",tags:["二叉搜索树","递归"],summary:"题目链接：450. 删除二叉搜索树中的节点；; 题解链接：用前驱或者后继结点代替被删除结点（Python、Java 代码）。; 题目描述 给定一个二叉搜索树的根节点 root 和一个值 key，删除二叉搜索树中的 key 对应的节点，并保证二叉搜索树的性质不变。返回二叉搜索树（有可能被更新）的根节点的引用。 一般来说，删除节点可分为两个步骤： 1. 首先找到",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0450-delete-node-in-a-bst.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 450 题：删除二叉搜索树中的节点（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉搜索树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0450-delete-node-in-a-bst.html",relativePath:"tree/solutions/0450-delete-node-in-a-bst.md",key:"v-55f83d91",path:"/tree/solutions/0450-delete-node-in-a-bst/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"用前驱或者后继结点代替被删除结点（Python、Java 代码）",slug:"用前驱或者后继结点代替被删除结点-python、java-代码"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：用前驱结点（左子树中最大结点）代替被删除结点",slug:"方法一-用前驱结点-左子树中最大结点-代替被删除结点"},{level:2,title:"方法二：用后继结点（右子树中最小结点）代替被删除结点",slug:"方法二-用后继结点-右子树中最小结点-代替被删除结点"}],readingTime:{minutes:4.84,words:1451},updateTime:"January 15, 2022 07:10",updateTimeStamp:1642230601e3,createTime:"January 15, 2022 07:10",createTimeStamp:1642230601e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 508 题：出现次数最多的子树元素和（中等）",frontmatter:{title:"「力扣」第 508 题：出现次数最多的子树元素和（中等）",icon:"yongyan",category:"二叉树",tags:["深度优先遍历","后序遍历"],summary:"知识点：后序遍历 题目链接：508. 出现次数最多的子树元素和。; 题目描述 给你一个二叉树的根结点，请你找出出现次数最多的子树元素和。一个结点的「子树元素和」定义为以该结点为根的二叉树上所有结点的元素之和（包括结点本身）。 你需要返回出现次数最多的子树元素和。如果有多个元素出现的次数相同，返回所有出现次数最多的子树元素和（不限顺序）。 示例 1： 输入： ",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0508-most-frequent-subtree-sum.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 508 题：出现次数最多的子树元素和（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"后序遍历"}]},regularPath:"/tree/solutions/0508-most-frequent-subtree-sum.html",relativePath:"tree/solutions/0508-most-frequent-subtree-sum.md",key:"v-e49c8976",path:"/tree/solutions/0508-most-frequent-subtree-sum/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.41,words:422},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 572 题：另一个树的子树（简单）",frontmatter:{title:"「力扣」第 572 题：另一个树的子树（简单）",icon:"yongyan",category:"二叉树",tags:["二叉树","递归"],summary:"题目链接：572. 另一个树的子树。; 题目描述 给你两棵二叉树 root 和 subRoot 。检验 root 中是否包含和 subRoot 具有相同结构和节点值的子树。如果存在，返回 true ；否则，返回 false 。 二叉树 tree 的一棵子树包括 tree 的某个节点和这个节点的所有后代节点。tree 也可以看做它自身的一棵子树。 示例 1： ",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0572-subtree-of-another-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 572 题：另一个树的子树（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"},{property:"article:tag",content:"递归"}]},regularPath:"/tree/solutions/0572-subtree-of-another-tree.html",relativePath:"tree/solutions/0572-subtree-of-another-tree.md",key:"v-a948c136",path:"/tree/solutions/0572-subtree-of-another-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:.97,words:291},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 863 题：二叉树中所有距离为 K 的结点（中等）",frontmatter:{title:"「力扣」第 863 题：二叉树中所有距离为 K 的结点（中等）",icon:"yongyan",category:"二叉树",tags:["二叉树"],summary:'题目链接：863. 二叉树中所有距离为 K 的结点。; 题目描述 给定一个二叉树（具有根结点 root）， 一个目标结点 target ，和一个整数值 K 。 返回到目标结点 target 距离为 K 的所有结点的值的列表。 答案可以以任何顺序返回。 示例 1： 注意，输入的 "root" 和 "target" 实际上是树上的结点。 上面的输入仅仅是对这些对',meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0863-all-nodes-distance-k-in-binary-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 863 题：二叉树中所有距离为 K 的结点（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"}]},regularPath:"/tree/solutions/0863-all-nodes-distance-k-in-binary-tree.html",relativePath:"tree/solutions/0863-all-nodes-distance-k-in-binary-tree.md",key:"v-36a5f8a5",path:"/tree/solutions/0863-all-nodes-distance-k-in-binary-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.74,words:521},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 897 题：递增顺序查找树（中等）",frontmatter:{title:"「力扣」第 897 题：递增顺序查找树（中等）",icon:"yongyan",category:"二叉搜索树",tags:["二叉搜索树"],summary:"说明：本题官方题解我参与了编写，因此内容与官方题解有重合的地方。 题目描述 给你一棵二叉搜索树，请你 按中序遍历 将其重新排列为一棵递增顺序搜索树，使树中最左边的节点成为树的根节点，并且每个节点没有左子节点，只有一个右子节点。 示例 1： 示例 2： 提示： 树中节点数的取值范围是 [1, 100]; 0 <= Node.val <= 1000; 方法一：先",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0897-increasing-order-search-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 897 题：递增顺序查找树（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉搜索树"}]},regularPath:"/tree/solutions/0897-increasing-order-search-tree.html",relativePath:"tree/solutions/0897-increasing-order-search-tree.md",key:"v-427b433a",path:"/tree/solutions/0897-increasing-order-search-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：先中序遍历，再生成新的树",slug:"方法一-先中序遍历-再生成新的树"},{level:2,title:"方法二：在中序遍历的过程中改变节点指向",slug:"方法二-在中序遍历的过程中改变节点指向"}],readingTime:{minutes:3.1,words:930},updateTime:"January 15, 2022 07:10",updateTimeStamp:1642230601e3,createTime:"January 15, 2022 07:10",createTimeStamp:1642230601e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 951 题：翻转等价二叉树（中等）",frontmatter:{title:"「力扣」第 951 题：翻转等价二叉树（中等）",icon:"yongyan",category:"二叉树",tags:["二叉树","深度优先遍历"],summary:"题目链接：951. 翻转等价二叉树。; 题目描述 我们可以为二叉树 T 定义一个翻转操作，如下所示：选择任意节点，然后交换它的左子树和右子树。 只要经过一定次数的翻转操作后，能使 X 等于 Y，我们就称二叉树 X 翻转等价于二叉树 Y。 编写一个判断两个二叉树是否是翻转等价的函数。这些树由根节点 root1 和 root2 给出。 示例： 提示： 1. 每棵",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0951-flip-equivalent-binary-trees.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 951 题：翻转等价二叉树（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"},{property:"article:tag",content:"深度优先遍历"}]},regularPath:"/tree/solutions/0951-flip-equivalent-binary-trees.html",relativePath:"tree/solutions/0951-flip-equivalent-binary-trees.md",key:"v-77978635",path:"/tree/solutions/0951-flip-equivalent-binary-trees/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法：深度优先遍历",slug:"方法-深度优先遍历"}],readingTime:{minutes:.96,words:287},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 993 题：二叉树的堂兄弟节点（简单）",frontmatter:{title:"「力扣」第 993 题：二叉树的堂兄弟节点（简单）",icon:"yongyan",category:"广度优先遍历",tags:["广度优先遍历","深度优先遍历"],summary:"题目链接：993. 二叉树的堂兄弟节点；; 题解链接：深度优先遍历、广度优先遍历。; 题目描述 在二叉树中，根节点位于深度 0 处，每个深度为 k 的节点的子节点位于深度 k+1 处。 如果二叉树的两个节点深度相同，但 父节点不同 ，则它们是一对堂兄弟节点。 我们给出了具有唯一值的二叉树的根节点 root ，以及树中两个不同节点的值 x 和 y 。 只有与值",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/0993-cousins-in-binary-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 993 题：二叉树的堂兄弟节点（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"广度优先遍历"},{property:"article:tag",content:"深度优先遍历"}]},regularPath:"/tree/solutions/0993-cousins-in-binary-tree.html",relativePath:"tree/solutions/0993-cousins-in-binary-tree.md",key:"v-c20e1f1a",path:"/tree/solutions/0993-cousins-in-binary-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：深度优先遍历",slug:"方法一-深度优先遍历"},{level:2,title:"方法二：广度优先遍历",slug:"方法二-广度优先遍历"}],readingTime:{minutes:4.16,words:1248},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 1008 题：前序遍历构造二叉搜索树（中等）",frontmatter:{title:"「力扣」第 1008 题：前序遍历构造二叉搜索树（中等）",icon:"yongyan",category:"二叉搜索树",tags:["二叉搜索树"],summary:"题目链接：1008. 前序遍历构造二叉搜索树；; 题解链接：分治思想（Java）。; 题目描述 返回与给定前序遍历 preorder 相匹配的二叉搜索树（binary search tree）的根结点。 (回想一下，二叉搜索树是二叉树的一种，其每个节点都满足以下规则，对于 node.left 的任何后代，值总 node.val。此外，前序遍历首先显示节点 n",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/1008-construct-binary-search-tree-from-preorder-traversal.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1008 题：前序遍历构造二叉搜索树（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉搜索树"}]},regularPath:"/tree/solutions/1008-construct-binary-search-tree-from-preorder-traversal.html",relativePath:"tree/solutions/1008-construct-binary-search-tree-from-preorder-traversal.md",key:"v-634458d3",path:"/tree/solutions/1008-construct-binary-search-tree-from-preorder-traversal/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:3.34,words:1003},updateTime:"January 15, 2022 07:10",updateTimeStamp:1642230601e3,createTime:"January 15, 2022 07:10",createTimeStamp:1642230601e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"1079. 活字印刷",frontmatter:{title:"1079. 活字印刷",icon:"yongyan",category:"二叉树",tags:["二叉树","回溯算法"],summary:"题目链接：1079. 活字印刷；; 题解链接：回溯算法（设计递归函数的返回值）。; 题目描述 你有一套活字字模 tiles，其中每个字模上都刻有一个字母 tiles[i]。返回你可以印出的非空字母序列的数目。 注意：本题中，每个活字字模只能使用一次。 示例 1： 示例 2： 提示： 1. 1 <= tiles.length <= 7 2. tiles 由大写",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/1079-letter-tile-possibilities.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"1079. 活字印刷"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"},{property:"article:tag",content:"回溯算法"}]},regularPath:"/tree/solutions/1079-letter-tile-possibilities.html",relativePath:"tree/solutions/1079-letter-tile-possibilities.md",key:"v-fcced2f6",path:"/tree/solutions/1079-letter-tile-possibilities/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法：回溯算法",slug:"方法-回溯算法"}],readingTime:{minutes:2.81,words:844},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"1080. 根到叶路径上的不足节点",frontmatter:{title:"1080. 根到叶路径上的不足节点",icon:"yongyan",category:"二叉树",tags:["二叉树"],summary:"题目链接：1080. 根到叶路径上的不足节点；; 题解链接：分治法、后序遍历（Python 代码、Java 代码）。; 题目描述 给定一棵二叉树的根 root，请你考虑它所有 从根到叶的路径：从根到任何叶的路径。（所谓一个叶子节点，就是一个没有子节点的节点） 假如通过节点 node 的每种可能的 “根-叶” 路径上值的总和全都小于给定的 limit，则该节点",meta:[{property:"og:url",content:"https://suanfa8.com/tree/solutions/1080-insufficient-nodes-in-root-to-leaf-paths.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"1080. 根到叶路径上的不足节点"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二叉树"}]},regularPath:"/tree/solutions/1080-insufficient-nodes-in-root-to-leaf-paths.html",relativePath:"tree/solutions/1080-insufficient-nodes-in-root-to-leaf-paths.md",key:"v-e92d91be",path:"/tree/solutions/1080-insufficient-nodes-in-root-to-leaf-paths/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"首先考虑结点如何删除",slug:"首先考虑结点如何删除"},{level:2,title:"其次考虑使用哪一种遍历方式",slug:"其次考虑使用哪一种遍历方式"},{level:2,title:"最后编码实现",slug:"最后编码实现"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:8.64,words:2591},updateTime:"January 13, 2022 16:20",updateTimeStamp:1642090805e3,createTime:"January 6, 2022 08:01",createTimeStamp:1641456067e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"前缀树",frontmatter:{title:"前缀树",icon:"yongyan",category:"前缀树",tags:["前缀树"],summary:"前缀树。",meta:[{property:"og:url",content:"https://suanfa8.com/trie/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"前缀树"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"前缀树"}]},regularPath:"/trie/",relativePath:"trie/README.md",key:"v-29844f66",path:"/trie/",readingTime:{minutes:.01,words:3},updateTime:"January 13, 2022 15:53",updateTimeStamp:1642089239e3,createTime:"January 6, 2022 07:58",createTimeStamp:1641455897e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 208 题：实现 Trie (前缀树)（中等）",frontmatter:{title:"「力扣」第 208 题：实现 Trie (前缀树)（中等）",icon:"yongyan",category:"前缀树",tags:["前缀树"],summary:'题目地址：208. 实现 Trie (前缀树) 。; 题目描述 Trie（发音类似 "try"）或者说 前缀树 是一种树形数据结构，用于高效地存储和检索字符串数据集中的键。这一数据结构有相当多的应用情景，例如自动补完和拼写检查。 请你实现 Trie 类： Trie() 初始化前缀树对象。; void insert(String word) 向前缀树中插入字符',meta:[{property:"og:url",content:"https://suanfa8.com/trie/solutions/0208-implement-trie-prefix-tree.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 208 题：实现 Trie (前缀树)（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"前缀树"}]},regularPath:"/trie/solutions/0208-implement-trie-prefix-tree.html",relativePath:"trie/solutions/0208-implement-trie-prefix-tree.md",key:"v-498f7dbf",path:"/trie/solutions/0208-implement-trie-prefix-tree/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.84,words:852},updateTime:"January 13, 2022 15:53",updateTimeStamp:1642089239e3,createTime:"January 6, 2022 07:58",createTimeStamp:1641455897e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 211 题：添加与搜索单词 - 数据结构设计（中等）",frontmatter:{title:"「力扣」第 211 题：添加与搜索单词 - 数据结构设计（中等）",icon:"yongyan",category:"前缀树",tags:["前缀树"],summary:"题目链接：211. 添加与搜索单词 - 数据结构设计；; 题解链接：遇到通配符时递归处理（Python 代码、Java 代码） 。; 题目描述 请你设计一个数据结构，支持 添加新单词 和 查找字符串是否与任何先前添加的字符串匹配 。 实现词典类 WordDictionary ： WordDictionary() 初始化词典对象; void addWord(w",meta:[{property:"og:url",content:"https://suanfa8.com/trie/solutions/0211-design-add-and-search-words-data-structure.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 211 题：添加与搜索单词 - 数据结构设计（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"前缀树"}]},regularPath:"/trie/solutions/0211-design-add-and-search-words-data-structure.html",relativePath:"trie/solutions/0211-design-add-and-search-words-data-structure.md",key:"v-28e5e782",path:"/trie/solutions/0211-design-add-and-search-words-data-structure/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"一个结点指向的所有孩子结点用「数组」表示",slug:"一个结点指向的所有孩子结点用「数组」表示"},{level:2,title:"一个结点指向的所有孩子结点用「哈希表」表示",slug:"一个结点指向的所有孩子结点用「哈希表」表示"}],readingTime:{minutes:9.48,words:2845},updateTime:"January 13, 2022 15:53",updateTimeStamp:1642089239e3,createTime:"January 6, 2022 07:58",createTimeStamp:1641455897e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 212 题：单词搜索 II（困难）",frontmatter:{title:"「力扣」第 212 题：单词搜索 II（困难）",icon:"yongyan",category:"前缀树",tags:["前缀树"],summary:"题目链接：212. 单词搜索 II。; 题目描述 给定一个 m x n 二维字符网格 board 和一个单词（字符串）列表 words，找出所有同时在二维网格和字典中出现的单词。 单词必须按照字母顺序，通过 相邻的单元格 内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母在一个单词中不允许被重复使用。 示例 1： 示例 2",meta:[{property:"og:url",content:"https://suanfa8.com/trie/solutions/0212.word-search-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 212 题：单词搜索 II（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"前缀树"}]},regularPath:"/trie/solutions/0212.word-search-ii.html",relativePath:"trie/solutions/0212.word-search-ii.md",key:"v-c65eb46a",path:"/trie/solutions/0212.word-search-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路：回溯算法 + Trie",slug:"思路-回溯算法-trie"}],readingTime:{minutes:2.1,words:631},updateTime:"January 13, 2022 15:53",updateTimeStamp:1642089239e3,createTime:"January 6, 2022 07:58",createTimeStamp:1641455897e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 336 题：回文对（困难）",frontmatter:{title:"「力扣」第 336 题：回文对（困难）",icon:"yongyan",category:"前缀树",tags:["前缀树"],summary:"题目链接：336. 回文对。; 题目描述 给定一组 互不相同 的单词， 找出所有 不同 的索引对 (i, j)，使得列表中的两个单词， words[i] + words[j] ，可拼接成回文串。 示例 1： 示例 2： 示例 3： 提示： 1 <= words.length <= 5000; 0 <= words[i].length <= 300; word",meta:[{property:"og:url",content:"https://suanfa8.com/trie/solutions/0336-palindrome-pairs.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 336 题：回文对（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"前缀树"}]},regularPath:"/trie/solutions/0336-palindrome-pairs.html",relativePath:"trie/solutions/0336-palindrome-pairs.md",key:"v-f308db66",path:"/trie/solutions/0336-palindrome-pairs/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：字典树",slug:"方法一-字典树"},{level:2,title:"方法二：马拉车算法",slug:"方法二-马拉车算法"}],readingTime:{minutes:.61,words:182},updateTime:"January 13, 2022 15:53",updateTimeStamp:1642089239e3,createTime:"January 6, 2022 07:58",createTimeStamp:1641455897e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 677 题：键值映射（中等）",frontmatter:{title:"「力扣」第 677 题：键值映射（中等）",icon:"yongyan",category:"前缀树",tags:["前缀树"],summary:"题目链接：677. 键值映射。; 题目描述 实现一个 MapSum 类，支持两个方法，insert 和 sum： MapSum() 初始化 MapSum 对象; void insert(String key, int val) 插入 key-val 键值对，字符串表示键 key ，整数表示值 val 。如果键 key 已经存在，那么原来的键值对将被替代成新的",meta:[{property:"og:url",content:"https://suanfa8.com/trie/solutions/0677-map-sum-pairs.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 677 题：键值映射（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"前缀树"}]},regularPath:"/trie/solutions/0677-map-sum-pairs.html",relativePath:"trie/solutions/0677-map-sum-pairs.md",key:"v-7d103a45",path:"/trie/solutions/0677-map-sum-pairs/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.35,words:706},updateTime:"January 13, 2022 15:53",updateTimeStamp:1642089239e3,createTime:"January 6, 2022 07:58",createTimeStamp:1641455897e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 648 题：单词替换（中等）",frontmatter:{title:"「力扣」第 648 题：单词替换（中等）",icon:"yongyan",category:"前缀树",tags:["前缀树"],summary:"题目链接：648. 单词替换。; 题目描述 在英语中，我们有一个叫做 词根(root)的概念，它可以跟着其他一些词组成另一个较长的单词——我们称这个词为 继承词(successor)。例如，词根an，跟随着单词 other(其他)，可以形成新的单词 another(另一个)。 现在，给定一个由许多词根组成的词典和一个句子。你需要将句子中的所有继承词用词根替换",meta:[{property:"og:url",content:"https://suanfa8.com/trie/solutions/0648-replace-words.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 648 题：单词替换（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"前缀树"}]},regularPath:"/trie/solutions/0648-replace-words.html",relativePath:"trie/solutions/0648-replace-words.md",key:"v-fa36ccf6",path:"/trie/solutions/0648-replace-words/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"题意分析",slug:"题意分析"}],readingTime:{minutes:2.43,words:729},updateTime:"January 13, 2022 15:53",updateTimeStamp:1642089239e3,createTime:"January 6, 2022 07:58",createTimeStamp:1641455897e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"「力扣」第 720 题：词典中最长的单词（简单）",frontmatter:{title:"「力扣」第 720 题：词典中最长的单词（简单）",icon:"yongyan",category:"前缀树",tags:["前缀树"],summary:"题目链接：720. 词典中最长的单词；; 题解链接：。; 前缀树：https://leetcode-cn.com/problems/longest-word-in-dictionary/solution/qian-zhui-shu-dfsbao-li-sou-suo-by-boille/ 给出一个字符串数组 words 组成的一本英语词典。从中找出最长的一个",meta:[{property:"og:url",content:"https://suanfa8.com/trie/solutions/0720-longest-word-in-dictionary.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 720 题：词典中最长的单词（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"前缀树"}]},regularPath:"/trie/solutions/0720-longest-word-in-dictionary.html",relativePath:"trie/solutions/0720-longest-word-in-dictionary.md",key:"v-789f6499",path:"/trie/solutions/0720-longest-word-in-dictionary/",headers:[{level:2,title:"方法二：字典树",slug:"方法二-字典树"}],readingTime:{minutes:1.24,words:372},updateTime:"January 13, 2022 15:53",updateTimeStamp:1642089239e3,createTime:"January 6, 2022 07:58",createTimeStamp:1641455897e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 745 题：前缀和后缀搜索（困难）",frontmatter:{title:"「力扣」第 745 题：前缀和后缀搜索（困难）",icon:"yongyan",category:"前缀树",tags:["前缀树"],summary:'题目链接：745. 前缀和后缀搜索。; LeetCode 第 745 题： 传送门：前缀和后缀搜索 " 给定多个 words，words[i] 的权重为 i 。" "" " 设计一个类 WordFilter 实现函数WordFilter.f(String prefix, String suffix)。这个函数将返回具有前缀 prefix 和后缀suffix ',meta:[{property:"og:url",content:"https://suanfa8.com/trie/solutions/0745-prefix-and-suffix-search.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 745 题：前缀和后缀搜索（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"前缀树"}]},regularPath:"/trie/solutions/0745-prefix-and-suffix-search.html",relativePath:"trie/solutions/0745-prefix-and-suffix-search.md",key:"v-ab79dc96",path:"/trie/solutions/0745-prefix-and-suffix-search/",headers:[{level:3,title:"LeetCode 第 745 题：",slug:"leetcode-第-745-题"},{level:3,title:"",slug:""}],readingTime:{minutes:.64,words:191},updateTime:"January 13, 2022 15:53",updateTimeStamp:1642089239e3,createTime:"January 6, 2022 07:58",createTimeStamp:1641455897e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"双指针习题分类",frontmatter:{title:"双指针习题分类",icon:"yongyan",category:"双指针",tags:["双指针"],summary:"双指针简介 「双指针」问题没有权威人、书籍、网站给出标准的定义。 这里「双指针」问题表示：使用两个指针变量，一头一尾向中间移动解决的问题。 提示 解决这些问题重点在于想明白为什么可以这样操作，即使用「双指针」方法解决问题的 合理性。 「力扣」双指针题单 题单;",meta:[{property:"og:url",content:"https://suanfa8.com/two-pointers/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"双指针习题分类"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"双指针"}]},regularPath:"/two-pointers/",relativePath:"two-pointers/README.md",key:"v-5e5665f4",path:"/two-pointers/",headers:[{level:2,title:"双指针简介",slug:"双指针简介"},{level:2,title:"「力扣」双指针题单",slug:"「力扣」双指针题单"}],readingTime:{minutes:.38,words:114},updateTime:"January 12, 2022 23:15",updateTimeStamp:1642029357e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5},{name:"liweiwei1419",email:"121088825@qq.com",commits:4}]},{title:"「力扣」第 633 题：平方数之和（简单）",frontmatter:{title:"「力扣」第 633 题：平方数之和（简单）",icon:"yongyan",category:"双指针",tags:["双指针","二分查找"],summary:'题目链接：633. 平方数之和。; " 说明：本题我参与了编写官方题解，所以内容和官方题解有重合的部分。" 题目描述 给定一个非负整数 c ，你要判断是否存在两个整数 a 和 b，使得 a2 + b2 = c 。 示例 1： 示例 2： 示例 3： 示例 4： 示例 5： 提示： $0 \\le c \\le 2^{31} - 1$; 方法一：暴力解法 由于 $',meta:[{property:"og:url",content:"https://suanfa8.com/two-pointers/advance/0633-sum-of-square-numbers.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 633 题：平方数之和（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"双指针"},{property:"article:tag",content:"二分查找"}]},regularPath:"/two-pointers/advance/0633-sum-of-square-numbers.html",relativePath:"two-pointers/advance/0633-sum-of-square-numbers.md",key:"v-101dea36",path:"/two-pointers/advance/0633-sum-of-square-numbers/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：暴力解法",slug:"方法一-暴力解法"},{level:2,title:"方法二：双指针",slug:"方法二-双指针"},{level:2,title:"方法三：二分查找",slug:"方法三-二分查找"}],readingTime:{minutes:2.38,words:715},updateTime:"August 8, 2022 06:57",updateTimeStamp:1659941866e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:7},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5}]},{title:"「力扣」第 881 题：救生艇（中等）",frontmatter:{title:"「力扣」第 881 题：救生艇（中等）",icon:"yongyan",category:"双指针",tags:["双指针"],summary:"题目链接：881. 救生艇。; 题目描述 摘要：重点理解可以使用「双指针」算法的原因，「双指针」算法是「暴力解法」的优化，这样的算法往往需要一定的经验和尝试。 题目链接; 第 i 个人的体重为 people[i]，每艘船可以承载的最大重量为 limit。 每艘船最多可同时载两人，但条件是这些人的重量之和最多为 limit。 返回载到每一个人所需的最小船数。(",meta:[{property:"og:url",content:"https://suanfa8.com/two-pointers/advance/0881-boats-to-save-people.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 881 题：救生艇（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"双指针"}]},regularPath:"/two-pointers/advance/0881-boats-to-save-people.html",relativePath:"two-pointers/advance/0881-boats-to-save-people.md",key:"v-41efcb75",path:"/two-pointers/advance/0881-boats-to-save-people/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"理解题意",slug:"理解题意"},{level:2,title:"解题思路",slug:"解题思路"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:2.31,words:694},updateTime:"January 12, 2022 23:15",updateTimeStamp:1642029357e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5}]},{title:"「力扣」第 977 题：有序数组的平方（简单）",frontmatter:{title:"「力扣」第 977 题：有序数组的平方（简单）",icon:"yongyan",category:"双指针",tags:["双指针"],summary:"题目链接：977. 有序数组的平方。; 题目描述 给你一个按 非递减顺序 排序的整数数组 nums，返回 每个数字的平方 组成的新数组，要求也按 非递减顺序 排序。 示例 1： 示例 2： 提示： $1 \\le nums.length \\le 10^4$; $-10^4 \\le nums[i] \\le 10^4$; nums 已按 非递减顺序 排序; 进阶：",meta:[{property:"og:url",content:"https://suanfa8.com/two-pointers/advance/0977-squares-of-a-sorted-array.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 977 题：有序数组的平方（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"双指针"}]},regularPath:"/two-pointers/advance/0977-squares-of-a-sorted-array.html",relativePath:"two-pointers/advance/0977-squares-of-a-sorted-array.md",key:"v-36833005",path:"/two-pointers/advance/0977-squares-of-a-sorted-array/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"理解题意",slug:"理解题意"},{level:2,title:"方法一：暴力解法",slug:"方法一-暴力解法"},{level:2,title:"方法二：双指针",slug:"方法二-双指针"}],readingTime:{minutes:1.1,words:331},updateTime:"January 12, 2022 23:15",updateTimeStamp:1642029357e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:7},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5}]},{title:"「力扣」第 125 题：验证回文串（简单）",frontmatter:{title:"「力扣」第 125 题：验证回文串（简单）",icon:"yongyan",category:"双指针",tags:["双指针"],summary:"题目地址：125. 验证回文串。; 题目描述 给定一个字符串，验证它是否是回文串，只考虑字母和数字字符，可以忽略字母的大小写。 说明： 本题中，我们将空字符串定义为有效的回文串。 示例 1: 示例 2: 提示： $1 <= s.length <= 2 * 10^5$; 字符串 s 由 ASCII 字符组成; 参考代码： ` `",meta:[{property:"og:url",content:"https://suanfa8.com/two-pointers/basic/0125-valid-palindrome.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 125 题：验证回文串（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"双指针"}]},regularPath:"/two-pointers/basic/0125-valid-palindrome.html",relativePath:"two-pointers/basic/0125-valid-palindrome.md",key:"v-4e95725d",path:"/two-pointers/basic/0125-valid-palindrome/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:.97,words:292},updateTime:"January 12, 2022 23:15",updateTimeStamp:1642029357e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5}]},{title:"「力扣」第 167 题：两数之和 II - 输入有序数组（简单）",frontmatter:{title:"「力扣」第 167 题：两数之和 II - 输入有序数组（简单）",icon:"yongyan",category:"双指针",tags:["双指针"],summary:"题目地址：167. 两数之和 II - 输入有序数组；; 题解地址：双指针对撞 + 二分法（Java、Python）。; 题目描述 给定一个已按照 非递减顺序排列 的整数数组 numbers ，请你从数组中找出两个数满足相加之和等于目标数 target 。 函数应该以长度为 2 的整数数组的形式返回这两个数的下标值。numbers 的下标 从 1 开始计数 ",meta:[{property:"og:url",content:"https://suanfa8.com/two-pointers/basic/0167-two-sum-ii-input-array-is-sorted.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 167 题：两数之和 II - 输入有序数组（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"双指针"}]},regularPath:"/two-pointers/basic/0167-two-sum-ii-input-array-is-sorted.html",relativePath:"two-pointers/basic/0167-two-sum-ii-input-array-is-sorted.md",key:"v-33f54cef",path:"/two-pointers/basic/0167-two-sum-ii-input-array-is-sorted/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：指针对撞（双指针）",slug:"方法一-指针对撞-双指针"},{level:2,title:"方法二：二分查找",slug:"方法二-二分查找"}],readingTime:{minutes:2.66,words:797},updateTime:"January 12, 2022 23:34",updateTimeStamp:1642030455e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5}]},{title:"「力扣」第 344 题：反转字符串（简单）",frontmatter:{title:"「力扣」第 344 题：反转字符串（简单）",icon:"yongyan",category:"双指针",tags:["双指针"],summary:"题目链接：344. 反转字符串 。; 题目描述 编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 char[] 的形式给出。 不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。 示例 1： 示例 2： 提示： 1 <= s.length <= 10^5; si] 都是 [ASCII 码表中的可打",meta:[{property:"og:url",content:"https://suanfa8.com/two-pointers/basic/0344-reverse-string.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 344 题：反转字符串（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"双指针"}]},regularPath:"/two-pointers/basic/0344-reverse-string.html",relativePath:"two-pointers/basic/0344-reverse-string.md",key:"v-1cc81f37",path:"/two-pointers/basic/0344-reverse-string/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：使用 Java 语言提供的反转 API 完成",slug:"方法一-使用-java-语言提供的反转-api-完成"},{level:2,title:"方法二：使用指针对撞",slug:"方法二-使用指针对撞"}],readingTime:{minutes:1.38,words:414},updateTime:"January 12, 2022 23:15",updateTimeStamp:1642029357e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5}]},{title:"「力扣」第 345 题：反转字符串中的元音字母（简单）",frontmatter:{title:"「力扣」第 345 题：反转字符串中的元音字母（简单）",icon:"yongyan",category:"双指针",tags:["双指针"],summary:"题目地址：345. 反转字符串中的元音字母。; 题目描述 给你一个字符串 s ，仅反转字符串中的所有元音字母，并返回结果字符串。 元音字母包括 'a'、'e'、'i'、'o'、'u'，且可能以大小写两种形式出现。 示例 1： 示例 2： 提示： $1 <= s.length <= 3 * 10^5$; s 由 可打印的 ASCII 字符组成; 思路分析 使用",meta:[{property:"og:url",content:"https://suanfa8.com/two-pointers/basic/0345-reverse-vowels-of-a-string.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 345 题：反转字符串中的元音字母（简单）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"双指针"}]},regularPath:"/two-pointers/basic/0345-reverse-vowels-of-a-string.html",relativePath:"two-pointers/basic/0345-reverse-vowels-of-a-string.md",key:"v-a88cc59a",path:"/two-pointers/basic/0345-reverse-vowels-of-a-string/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"要注意的地方",slug:"要注意的地方"}],readingTime:{minutes:1.92,words:576},updateTime:"January 12, 2022 23:15",updateTimeStamp:1642029357e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5}]},{title:"「双指针」简介",frontmatter:{summary:"「双指针」简介",meta:[{property:"og:url",content:"https://suanfa8.com/two-pointers/basic/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「双指针」简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/two-pointers/basic/intro.html",relativePath:"two-pointers/basic/intro.md",key:"v-729e2b2a",path:"/two-pointers/basic/intro/",readingTime:{minutes:.02,words:5},updateTime:"January 12, 2022 23:15",updateTimeStamp:1642029357e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5},{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"「力扣」第 11 题：盛最多水的容器（中等）",frontmatter:{title:"「力扣」第 11 题：盛最多水的容器（中等）",icon:"yongyan",category:"双指针",tags:["双指针"],summary:"中文网址：11. 盛最多水的容器 。; 题目描述 给你 n 个非负整数 a1，a2，...，an ，每个数代表坐标中的一个点 (i, ai) 。在坐标内画 n 条垂直线，垂直线 i 的两个端点分别为 (i, ai) 和 (i, 0) 。找找出其中的两条线，使得它们与 x` 轴共同构成的容器可以容纳最多的水。 说明： 你不能倾斜容器。 示例 1： 示例 2： ",meta:[{property:"og:url",content:"https://suanfa8.com/two-pointers/importance/0011-container-with-most-water.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 11 题：盛最多水的容器（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"双指针"}]},regularPath:"/two-pointers/importance/0011-container-with-most-water.html",relativePath:"two-pointers/importance/0011-container-with-most-water.md",key:"v-265c4c55",path:"/two-pointers/importance/0011-container-with-most-water/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"解题思路",slug:"解题思路"},{level:2,title:"方法一：暴力解法",slug:"方法一-暴力解法"},{level:2,title:"方法二：双指针（贪心算法）",slug:"方法二-双指针-贪心算法"}],readingTime:{minutes:3.65,words:1095},updateTime:"January 12, 2022 23:15",updateTimeStamp:1642029357e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5}]},{title:"「力扣」第 15 题：三数之和（中等）",frontmatter:{title:"「力扣」第 15 题：三数之和（中等）",icon:"yongyan",category:"双指针",tags:["双指针"],summary:"题目链接：15. 三数之和；; 题解链接：双指针典型问题（Java、Go）。; 题目描述 给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有和为 0 且不重复的三元组。 注意： 答案中不可以包含重复的三元组。 示例 1： 示例 2： 示例 3： 提示： 0 <= num",meta:[{property:"og:url",content:"https://suanfa8.com/two-pointers/importance/0015-3sum.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 15 题：三数之和（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"双指针"}]},regularPath:"/two-pointers/importance/0015-3sum.html",relativePath:"two-pointers/importance/0015-3sum.md",key:"v-31c6c5b6",path:"/two-pointers/importance/0015-3sum/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法：双指针",slug:"方法-双指针"},{level:3,title:"为什么可以使用「双指针」（重点）？",slug:"为什么可以使用「双指针」-重点"},{level:3,title:"细节",slug:"细节"},{level:2,title:"总结",slug:"总结"},{level:2,title:"同类问题",slug:"同类问题"}],readingTime:{minutes:6.36,words:1907},updateTime:"January 12, 2022 23:15",updateTimeStamp:1642029357e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5}]},{title:"「力扣」第 16 题：最接近的三数之和（中等）",frontmatter:{title:"「力扣」第 16 题：最接近的三数之和（中等）",icon:"yongyan",category:"双指针",tags:["双指针"],summary:"题目地址：16. 最接近的三数之和；; 题解地址：双指针对撞（Python 代码、Java 代码）。; 题目描述 给你一个长度为 n 的整数数组 nums 和 一个目标值 target。请你从 nums 中选出三个整数，使它们的和与 target 最接近。 返回这三个数的和。 假定每组输入只存在恰好一个解。 示例 1： 示例 2： 提示： 3 <= nums",meta:[{property:"og:url",content:"https://suanfa8.com/two-pointers/importance/0016-3sum-closest.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 16 题：最接近的三数之和（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"双指针"}]},regularPath:"/two-pointers/importance/0016-3sum-closest.html",relativePath:"two-pointers/importance/0016-3sum-closest.md",key:"v-5ec35345",path:"/two-pointers/importance/0016-3sum-closest/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:3.41,words:1022},updateTime:"January 12, 2022 23:15",updateTimeStamp:1642029357e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:6},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5}]},{title:"「力扣」第 18 题：四数之和（中等）",frontmatter:{title:"「力扣」第 18 题：四数之和（中等）",icon:"yongyan",category:"双指针",tags:["双指针"],summary:"题目链接：18. 四数之和。; 题目描述 给你一个由 n 个整数组成的数组 nums ，和一个目标值 target 。请你找出并返回满足下述全部条件且不重复的四元组 [nums[a], nums[b], nums[c], nums[d]] （若两个四元组元素一一对应，则认为两个四元组重复）： 0 <= a, b, c, d < n; a、b、c 和 d 互不",meta:[{property:"og:url",content:"https://suanfa8.com/two-pointers/importance/0018-4sum.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 18 题：四数之和（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"双指针"}]},regularPath:"/two-pointers/importance/0018-4sum.html",relativePath:"two-pointers/importance/0018-4sum.md",key:"v-be32d0b6",path:"/two-pointers/importance/0018-4sum/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法：双指针",slug:"方法-双指针"}],readingTime:{minutes:1.39,words:416},updateTime:"January 12, 2022 23:15",updateTimeStamp:1642029357e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:5},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5}]},{title:"「力扣」第 42 题：接雨水（困难）",frontmatter:{title:"「力扣」第 42 题：接雨水（困难）",icon:"yongyan",category:"双指针",tags:["双指针","动态规划","栈","单调栈"],summary:"题目链接：42. 接雨水；; 题解链接：暴力解法、优化、双指针、单调栈。; 题目描述 给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。 示例 1： 示例 2： 提示： n == height.length; $1 \\le n \\le 2 * 10^4$; $0 \\le height[i] \\le 10^5$;",meta:[{property:"og:url",content:"https://suanfa8.com/two-pointers/importance/0042-trapping-rain-water.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 42 题：接雨水（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"双指针"},{property:"article:tag",content:"动态规划"},{property:"article:tag",content:"栈"},{property:"article:tag",content:"单调栈"}]},regularPath:"/two-pointers/importance/0042-trapping-rain-water.html",relativePath:"two-pointers/importance/0042-trapping-rain-water.md",key:"v-f2b10c5e",path:"/two-pointers/importance/0042-trapping-rain-water/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"方法一：暴力解法",slug:"方法一-暴力解法"},{level:2,title:"方法二：动态规划（针对暴力解法的优化，以空间换时间）",slug:"方法二-动态规划-针对暴力解法的优化-以空间换时间"},{level:3,title:"第 1 步：定义状态数组",slug:"第-1-步-定义状态数组"},{level:3,title:"第 2 步：推导状态转移方程",slug:"第-2-步-推导状态转移方程"},{level:2,title:"方法三：指针对撞（双指针）",slug:"方法三-指针对撞-双指针"},{level:2,title:"方法四：栈（单调栈）",slug:"方法四-栈-单调栈"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:10.64,words:3192},updateTime:"January 12, 2022 23:15",updateTimeStamp:1642029357e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:7},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5}]},{title:"简介",frontmatter:{title:"简介",icon:"yongyan",category:"双指针",tags:["双指针"],summary:"这些问题比较常考和重要，学习的时候重点依然是：想清楚为什么解决问题的算法可以这样设计。",meta:[{property:"og:url",content:"https://suanfa8.com/two-pointers/importance/intro.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"简介"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"双指针"}]},regularPath:"/two-pointers/importance/intro.html",relativePath:"two-pointers/importance/intro.md",key:"v-0a625dc5",path:"/two-pointers/importance/intro/",readingTime:{minutes:.13,words:40},updateTime:"December 24, 2021 08:28",updateTimeStamp:1640334504e3,createTime:"December 24, 2021 03:49",createTimeStamp:1640317785e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4},{name:"liweiwei1419",email:"121088825@qq.com",commits:2}]},{title:"1 并查集视频讲解（请先看这里）",frontmatter:{title:"1 并查集视频讲解（请先看这里）",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"温馨提示 「并查集」是一个很有意思的数据结构，但它不是绝大多数公司算法面试和笔试的考点，如果你不感兴趣或者只是冲着面试和笔试学习算法，完全可以不学习。 「并查集」是竞赛考点。 :tv: 视频讲解 我在 2021 年春季给「力扣」录制过很多题「并查集」的视频，讲解风格与我其它视频的讲解风格一致。如果不想看文字教程的朋友，可以观看视频进行学习。 其中下面两个视频",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/01.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"1 并查集视频讲解（请先看这里）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/01.html",relativePath:"union-find/01.md",key:"v-605525c5",path:"/union-find/01/",headers:[{level:2,title:"📺 视频讲解",slug:"视频讲解"}],readingTime:{minutes:2.29,words:687},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 14, 2021 18:05",createTimeStamp:163950512e4,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"2 并查集的设计思想",frontmatter:{title:"2 并查集的设计思想",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"提示 「并查集」是一种建立在「数组」上的树形结构，并且这棵树的特点是 孩子结点指向父亲结点 ；; 「并查集」主要用于解决「动态连通性」问题，重点关注的是连接问题，并不关注路径问题；; 「并查集」是树，所以优化的策略依然是和树的高度较劲，优化思路有「按秩合并」与「路径压缩」。; 「并查集」主要知识点如下： 「并查集」这部分知识点讲得最清楚的是《算法（第 4 版",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/02.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"2 并查集的设计思想"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/02.html",relativePath:"union-find/02.md",key:"v-a788d0b6",path:"/union-find/02/",headers:[{level:2,title:"什么是「并查集」",slug:"什么是「并查集」"},{level:2,title:"什么是「并」和「查」",slug:"什么是「并」和「查」"},{level:2,title:"「并查集」与「路径问题」",slug:"「并查集」与「路径问题」"}],readingTime:{minutes:3.8,words:1139},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 14, 2021 18:05",createTimeStamp:163950512e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"4 第 2 版基于 quick-union 实现（非最终版本）",frontmatter:{title:"4 第 2 版基于 quick-union 实现（非最终版本）",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"重点 这一版「并查集」代码是最基本的「并查集」，我们需要学习思想，核心思想是「代表元法」，以「树」的「根结点」作为代表元。 后续我们介绍这一版代码的两个优化： 按秩合并（有 2 个版本）；; 路径压缩（有 2 个版本）。; 介绍得多只是为了方便大家建立知识结构，真正我们只会使用一个版本的「并查集」。我们放在介绍完了以后再说。 并查集第 2 版：quick-u",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/04.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"4 第 2 版基于 quick-union 实现（非最终版本）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/04.html",relativePath:"union-find/04.md",key:"v-44087b65",path:"/union-find/04/",headers:[{level:2,title:"并查集第 2 版：quick-union",slug:"并查集第-2-版-quick-union"}],readingTime:{minutes:2.78,words:834},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 14, 2021 18:05",createTimeStamp:163950512e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"3 第 1 版基于 quick-find 实现",frontmatter:{title:"3 第 1 版基于 quick-find 实现",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"重点提示 基于 id 的思想类似于：给每个元素改名字，名字一样，就表示在同一个集合中。 优点：查询两个元素是否在一个集合中很快。; 缺点：把两个集合合并成一个集合较慢。; 这一版「并查集」并不常用，仅作为了解。 并查集可以使用数组表示。这个数组我们命名为 id 。初始化的时候每一个元素的值都是不一样的。如果值一样的，表示是属于同一个集合内的元素。 基于 id",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/03.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"3 第 1 版基于 quick-find 实现"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/03.html",relativePath:"union-find/03.md",key:"v-0fbbecf6",path:"/union-find/03/",readingTime:{minutes:2.51,words:754},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 14, 2021 18:05",createTimeStamp:163950512e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"5 第 3 版 quick-union 基于 size 的优化",frontmatter:{title:"5 第 3 版 quick-union 基于 size 的优化",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"我们发现 union(4, 9) 与 union(9, 4) 其实是一样的，也就是把谁的根指向谁的根，这一点从正确性上来说是无关紧要的，但是对于 find 的时间复杂度就会有影响。为此，我们做如下优化。 在合并之前做判断，具体做法是，计算每一个结点有多少个元素直接或者间接地以它为根，我们应该将集合元素少的那结点的根指向集合元素多的那个结点的根。这样，形成的树",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/05.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"5 第 3 版 quick-union 基于 size 的优化"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/05.html",relativePath:"union-find/05.md",key:"v-e0222576",path:"/union-find/05/",readingTime:{minutes:1.89,words:567},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 14, 2021 18:05",createTimeStamp:163950512e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"6 第 4 版 quick-union 基于 rank 的优化",frontmatter:{title:"6 第 4 版 quick-union 基于 rank 的优化",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"重点提示 基于 rank 的优化是使用得更多的，因为这样做更合理一些，但是维护数组 rank 的定义是相对麻烦的，通常的做法就是不维护，只是把数组 rank 作为两个集合合并的参考，即使是错的，也比随机合并的结果好。 使用 size 来决定将哪个结点的根指向另一个结点的根，其实并不太合理，但并不能说不正确，因为谁的根指向谁的根，其实都没有错，下面就是一个特殊",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/06.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"6 第 4 版 quick-union 基于 rank 的优化"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/06.html",relativePath:"union-find/06.md",key:"v-485541b6",path:"/union-find/06/",readingTime:{minutes:1.57,words:471},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 14, 2021 18:05",createTimeStamp:163950512e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"7 第 5 版 quick-union 基于路径压缩的非递归实现",frontmatter:{title:"7 第 5 版 quick-union 基于路径压缩的非递归实现",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"重点概括 这一版代码用得最多。因为好理解，且代码量较少。 只用理解这一句即可 parent[p] = parent[parent[p]];，可以称之为「隔代压缩」。 虽然压缩不彻底，但是多压缩几次也就能够达到完全压缩的效果，且不使用递归，不占用「递归栈」空间。 路径压缩 path Compression 什么是路径压缩 path Compression？以上",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/07.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"7 第 5 版 quick-union 基于路径压缩的非递归实现"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/07.html",relativePath:"union-find/07.md",key:"v-27bbd105",path:"/union-find/07/",headers:[{level:2,title:"路径压缩 path Compression",slug:"路径压缩-path-compression"}],readingTime:{minutes:2.44,words:731},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 14, 2021 18:05",createTimeStamp:163950512e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"8 第 6 版 quick-union 基于路径压缩的递归实现",frontmatter:{title:"8 第 6 版 quick-union 基于路径压缩的递归实现",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"重点提示 这一节重要。 代码的实现的理解有一些绕。这一版我们实现压缩更彻底的路径压缩。其实我们不看上面的分析，我们想象路径压缩的目的是什么，就是让我们的并查集表示的树结构层数更低，那么最优的情况应该是下面这样，把一棵树压缩成 $2$ 层，所有的结点都指向一个根，这才是把一个并查集压缩到最彻底的情况。 那么，代码又应该如何实现呢？我们需要使用递归的思想。这一版",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/08.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"8 第 6 版 quick-union 基于路径压缩的递归实现"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/08.html",relativePath:"union-find/08.md",key:"v-73a242e5",path:"/union-find/08/",headers:[{level:2,title:"关于路径压缩的思考",slug:"关于路径压缩的思考"}],readingTime:{minutes:2.3,words:691},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 14, 2021 18:05",createTimeStamp:163950512e4,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"9 并查集总结",frontmatter:{title:"9 并查集总结",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"并查集知识总结 1. 解决的是两个顶点是否连通的问题，可以用于检测图中是否存在环； 2. 代表元法：采用 parent 数组实现，以每个结点的根结点作为代表元； 3. 并查集的优化有两种策略： （1）路径压缩：有「隔代压缩」与「完全压缩」。 「隔代压缩」性能比较高，虽然压缩不完全，不过多次执行「隔代压缩」也能达到「完全压缩」的效果，我本人比较偏向使用「隔代压",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/09.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"9 并查集总结"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/09.html",relativePath:"union-find/09.md",key:"v-80ee9676",path:"/union-find/09/",headers:[{level:2,title:"并查集知识总结",slug:"并查集知识总结"},{level:2,title:"并查集的时间复杂度分析",slug:"并查集的时间复杂度分析"}],readingTime:{minutes:2.03,words:610},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 15, 2021 06:14",createTimeStamp:1639548872e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{frontmatter:{summary:"温馨提示 「并查集」是一个很有意思的数据结构，但它不是绝大多数公司算法面试和笔试的考点，如果你不感兴趣或者只是冲着面试和笔试学习算法，完全可以不学习。 「并查集」是竞赛考点。 为什么这个东西不考，我还要把它放在显眼的位置，还要写「精讲」呢？这是因为在我看来，「并查集」的设计思想是很有趣、且浅显的。难的只是这些问题。如果你有时间、有兴趣，还是很建议学习一下「并",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/union-find/",relativePath:"union-find/README.md",key:"v-54b14006",path:"/union-find/",readingTime:{minutes:.52,words:157},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 14, 2021 18:05",createTimeStamp:163950512e4,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"本章内容介绍（请先看这里）",frontmatter:{title:"本章内容介绍（请先看这里）",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"这部分内容只是我平常做的问题的笔记，并没有画很大的篇幅在讲解上，如果大家看不懂，可以在题解区找适合自己的题解进行学习，内容待添加。",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/practice.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"本章内容介绍（请先看这里）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/practice.html",relativePath:"union-find/practice.md",key:"v-291b15c5",path:"/union-find/practice/",readingTime:{minutes:.2,words:60},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 14, 2021 18:05",createTimeStamp:163950512e4,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:4},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 128 题：最长连续序列（困难）",frontmatter:{title:"「力扣」第 128 题：最长连续序列（困难）",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"提示 这道题因为有判断「是否在并查集」中的需要，因此需要把并查集的底层数组设置为「哈希表」。 题目链接：128. 最长连续序列。; 题目描述 给定一个未排序的整数数组 nums ，找出数字连续的最长序列（不要求序列元素在原数组中连续）的长度。 请你设计并实现时间复杂度为 O(n) 的算法解决此问题。 示例 1： 示例 2： 提示： 0 <= nums.len",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/solutions/0128-longest-consecutive-sequence.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 128 题：最长连续序列（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/solutions/0128-longest-consecutive-sequence.html",relativePath:"union-find/solutions/0128-longest-consecutive-sequence.md",key:"v-b3f4455e",path:"/union-find/solutions/0128-longest-consecutive-sequence/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"理解题意",slug:"理解题意"},{level:2,title:"方法一：暴力解法（时间复杂度不符合要求）",slug:"方法一-暴力解法-时间复杂度不符合要求"},{level:2,title:"方法二：哈希表",slug:"方法二-哈希表"},{level:2,title:"方法三：针对方法二的优化",slug:"方法三-针对方法二的优化"},{level:2,title:"方法四：并查集",slug:"方法四-并查集"}],readingTime:{minutes:4.28,words:1283},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 14, 2021 19:39",createTimeStamp:1639510767e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 130 题：被围绕的区域（中等）",frontmatter:{title:"「力扣」第 130 题：被围绕的区域（中等）",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"题目链接：130. 被围绕的区域；; 题解链接：深度优先遍历、广度优先遍历、并查集（Java）。; 题目描述 给你一个 m x n 的矩阵 board ，由若干字符 'X' 和 'O' ，找到所有被 'X' 围绕的区域，并将这些区域里所有的 'O' 用 'X' 填充。 示例 1： 示例 2： 提示： m == board.length; n == board",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/solutions/0130-surrounded-regions.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 130 题：被围绕的区域（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/solutions/0130-surrounded-regions.html",relativePath:"union-find/solutions/0130-surrounded-regions.md",key:"v-9463dba2",path:"/union-find/solutions/0130-surrounded-regions/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"方法一：深度优先遍历",slug:"方法一-深度优先遍历"},{level:3,title:"方法二：广度优先遍历",slug:"方法二-广度优先遍历"},{level:3,title:"方法三：并查集",slug:"方法三-并查集"}],readingTime:{minutes:5.31,words:1593},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 14, 2021 19:39",createTimeStamp:1639510767e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 200 题：岛屿的个数（中等）",frontmatter:{title:"「力扣」第 200 题：岛屿的个数（中等）",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"提示 这是一道典型的使用「并查集」解决的问题，其中二维坐标向一位坐标的转换技巧，非常常见。 题目链接：200. 岛屿数量。; 题目描述 给你一个由 '1'（陆地）和 '0'（水）组成的的二维网格，请你计算网格中岛屿的数量。 岛屿总是被水包围，并且每座岛屿只能由水平方向和/或竖直方向上相邻的陆地连接形成。 此外，你可以假设该网格的四条边均被水包围。 示例 1:",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/solutions/0200-number-of-islands.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 200 题：岛屿的个数（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/solutions/0200-number-of-islands.html",relativePath:"union-find/solutions/0200-number-of-islands.md",key:"v-0d7227b6",path:"/union-find/solutions/0200-number-of-islands/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：深度优先遍历",slug:"方法一-深度优先遍历"},{level:2,title:"方法二：并查集",slug:"方法二-并查集"}],readingTime:{minutes:3.76,words:1129},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 14, 2021 19:39",createTimeStamp:1639510767e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 399 题：除法求值（中等）",frontmatter:{title:"「力扣」第 399 题：除法求值（中等）",icon:"shipin",category:"并查集",tags:["并查集"],summary:'题目链接：399. 除法求值。; 这一节的视频讲解有很多知识点，不熟悉的朋友强烈建议观看。 :tv: 视频讲解 视频题解; " 带权值的「并查集」，搞清楚方向。" 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 给出方程式 A / B ',meta:[{property:"og:url",content:"https://suanfa8.com/union-find/solutions/0399-evaluate-division.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 399 题：除法求值（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/solutions/0399-evaluate-division.html",relativePath:"union-find/solutions/0399-evaluate-division.md",key:"v-c97f7236",path:"/union-find/solutions/0399-evaluate-division/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.55,words:466},updateTime:"January 14, 2022 07:07",updateTimeStamp:1642144071e3,createTime:"December 14, 2021 19:39",createTimeStamp:1639510767e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 547 题：朋友圈（中等）",frontmatter:{title:"「力扣」第 547 题：朋友圈（中等）",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"这道题是并查集的典型问题，题目也非常接地气，现在改名叫「省份数量」了。 题目链接：547. 省份数量; 题解链接：并查集（Python 代码、Java 代码）; 题目描述 班上有 N 名学生。其中有些人是朋友，有些则不是。他们的友谊具有是传递性。如果已知 A 是 B 的朋友，B 是 C 的朋友，那么我们可以认为 A 也是 C 的朋友。所谓的朋友圈，是指所有朋",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/solutions/0547-friend-circles.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 547 题：朋友圈（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/solutions/0547-friend-circles.html",relativePath:"union-find/solutions/0547-friend-circles.md",key:"v-338be9f9",path:"/union-find/solutions/0547-friend-circles/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:3,title:"方法一：并查集",slug:"方法一-并查集"},{level:3,title:"方法二：深度优先遍历",slug:"方法二-深度优先遍历"}],readingTime:{minutes:4.54,words:1363},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 14, 2021 19:39",createTimeStamp:1639510767e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 684 题：冗余连接（中等）",frontmatter:{title:"「力扣」第 684 题：冗余连接（中等）",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"这是一道考察「并查集」很基础的问题。 题目链接：684. 冗余连接。; 题目描述 在本问题中, 树指的是一个连通且无环的无向图。 输入一个图，该图由一个有着 N 个节点 (节点值不重复 1, 2, ..., N) 的树及一条附加的边构成。附加的边的两个顶点包含在 1 到 N 中间，这条附加的边不属于树中已存在的边。 结果图是一个以边组成的二维数组。每一个边的",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/solutions/0684-redundant-connection.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 684 题：冗余连接（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/solutions/0684-redundant-connection.html",relativePath:"union-find/solutions/0684-redundant-connection.md",key:"v-1712d6d9",path:"/union-find/solutions/0684-redundant-connection/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:2.66,words:799},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 14, 2021 19:39",createTimeStamp:1639510767e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 721 题：账户合并（中等）",frontmatter:{title:"「力扣」第 721 题：账户合并（中等）",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"这题就是题目有点长，但是是相对容易的。这题有点麻烦，不是一个好的问题，以后把它删除吧。 题目链接：721. 账户合并。; 题目描述 给定一个列表 accounts，每个元素 accounts[i] 是一个字符串列表，其中第一个元素 accounts[i][0] 是 名称 (name)，其余元素是 emails 表示该帐户的邮箱地址。 现在，我们想合并这些帐户",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/solutions/0721-accounts-merge.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 721 题：账户合并（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/solutions/0721-accounts-merge.html",relativePath:"union-find/solutions/0721-accounts-merge.md",key:"v-373e94fb",path:"/union-find/solutions/0721-accounts-merge/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:2.69,words:808},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 14, 2021 19:39",createTimeStamp:1639510767e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 685 题：冗余连接 II（困难）",frontmatter:{title:"「力扣」第 685 题：冗余连接 II（困难）",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"注意细节的调试。 题目链接：685. 冗余连接 II。; 题目描述 在本问题中，有根树指满足以下条件的有向图。该树只有一个根节点，所有其他节点都是该根节点的后继。每一个节点只有一个父节点，除了根节点没有父节点。 输入一个有向图，该图由一个有着 N 个节点 (节点值不重复 1, 2, ..., N) 的树及一条附加的边构成。附加的边的两个顶点包含在 1 到 N",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/solutions/0685-redundant-connection-ii.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 685 题：冗余连接 II（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/solutions/0685-redundant-connection-ii.html",relativePath:"union-find/solutions/0685-redundant-connection-ii.md",key:"v-4dacf6b6",path:"/union-find/solutions/0685-redundant-connection-ii/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:2.52,words:755},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 14, 2021 19:39",createTimeStamp:1639510767e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 765 题：情侣牵手（中等）",frontmatter:{title:"「力扣」第 765 题：情侣牵手（中等）",icon:"shipin",category:"并查集",tags:["并查集"],summary:"这题比较有意思，关键在表示相邻两个位置的技巧。 题目链接：765. 情侣牵手。; 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 N 对情侣坐在连续排列的 $2N$ 个座位上，想要牵到对方的手。 计算最少交换座位的次数，以便每对情侣可以",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/solutions/0765-couples-holding-hands.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 765 题：情侣牵手（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/solutions/0765-couples-holding-hands.html",relativePath:"union-find/solutions/0765-couples-holding-hands.md",key:"v-c8756db6",path:"/union-find/solutions/0765-couples-holding-hands/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:3.15,words:944},updateTime:"January 14, 2022 07:07",updateTimeStamp:1642144071e3,createTime:"December 14, 2021 19:39",createTimeStamp:1639510767e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 778 题：水位上升的泳池中游泳（困难）",frontmatter:{title:"「力扣」第 778 题：水位上升的泳池中游泳（困难）",icon:"shipin",category:"并查集",tags:["并查集","二分查找","深度优先遍历","广度优先遍历","单源最短路径"],summary:"题目链接：778. 水位上升的泳池中游泳；; 题解链接：🎦 水位上升的泳池中游泳。; 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 在一个 N x N 的坐标方格 grid 中，每一个方格的值 grid[i][j] 表示在位置 (i",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/solutions/0778-swim-in-rising-water.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 778 题：水位上升的泳池中游泳（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"},{property:"article:tag",content:"二分查找"},{property:"article:tag",content:"深度优先遍历"},{property:"article:tag",content:"广度优先遍历"},{property:"article:tag",content:"单源最短路径"}]},regularPath:"/union-find/solutions/0778-swim-in-rising-water.html",relativePath:"union-find/solutions/0778-swim-in-rising-water.md",key:"v-a446fb8a",path:"/union-find/solutions/0778-swim-in-rising-water/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:2.09,words:626},updateTime:"January 14, 2022 07:07",updateTimeStamp:1642144071e3,createTime:"January 14, 2022 07:07",createTimeStamp:1642144071e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 803 题：打砖块（困难）",frontmatter:{title:"「力扣」第 803 题：打砖块（困难）",icon:"shipin",category:"并查集",tags:["并查集"],summary:"题目链接：803. 打砖块; 题解链接：🎦 803. 打砖块。; 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 有一个 m x n 的二元网格，其中 1 表示砖块，0 表示空白。砖块 稳定（不会掉落）的前提是： 一块砖直接连接到网格",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/solutions/0803-bricks-falling-when-hit.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 803 题：打砖块（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/solutions/0803-bricks-falling-when-hit.html",relativePath:"union-find/solutions/0803-bricks-falling-when-hit.md",key:"v-3d855f36",path:"/union-find/solutions/0803-bricks-falling-when-hit/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:2.22,words:667},updateTime:"January 14, 2022 07:07",updateTimeStamp:1642144071e3,createTime:"January 14, 2022 07:07",createTimeStamp:1642144071e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 945 题：使数组唯一的最小增量（中等）",frontmatter:{title:"「力扣」第 945 题：使数组唯一的最小增量（中等）",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"题目链接：945. 使数组唯一的最小增量；; 题解链接：贪心算法、并查集（Java）。; 题目描述 给定整数数组 A，每次 move 操作将会选择任意 A[i]，并将其递增 1。 返回使 A 中的每个值都是唯一的最少操作次数。 示例 1： 示例 2: 提示： 0 <= A.length <= 40000; 0 <= A[i] < 40000; 思路分析 我们",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/solutions/0945-minimum-increment-to-make-array-unique.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 945 题：使数组唯一的最小增量（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/solutions/0945-minimum-increment-to-make-array-unique.html",relativePath:"union-find/solutions/0945-minimum-increment-to-make-array-unique.md",key:"v-6759cdc7",path:"/union-find/solutions/0945-minimum-increment-to-make-array-unique/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"},{level:3,title:"方法一：贪心算法",slug:"方法一-贪心算法"},{level:3,title:"方法二：使用恰当的数据结构，以空间换时间",slug:"方法二-使用恰当的数据结构-以空间换时间"}],readingTime:{minutes:9.09,words:2728},updateTime:"January 8, 2022 02:10",updateTimeStamp:1641607818e3,createTime:"December 14, 2021 19:39",createTimeStamp:1639510767e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:2},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 947 题：移除最多的同行或同列石头（中等）",frontmatter:{title:"「力扣」第 947 题：移除最多的同行或同列石头（中等）",icon:"shipin",category:"并查集",tags:["并查集"],summary:"题目链接：947. 移除最多的同行或同列石头；; 题解链接：🎦 947. 移除最多的同行或同列石头。; 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 n 块石头放置在二维平面中的一些整数坐标点上。每个坐标点上最多只能有一块石头。 如",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/solutions/0947-most-stones-removed-with-same-row-or-column.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 947 题：移除最多的同行或同列石头（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/solutions/0947-most-stones-removed-with-same-row-or-column.html",relativePath:"union-find/solutions/0947-most-stones-removed-with-same-row-or-column.md",key:"v-6edad9f6",path:"/union-find/solutions/0947-most-stones-removed-with-same-row-or-column/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:2.04,words:611},updateTime:"January 14, 2022 07:07",updateTimeStamp:1642144071e3,createTime:"January 14, 2022 07:07",createTimeStamp:1642144071e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 952 题：按公因数计算最大组件大小（困难）",frontmatter:{title:"「力扣」第 952 题：按公因数计算最大组件大小（困难）",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"题目链接：952. 按公因数计算最大组件大小；; 题解链接：并查集（Java、Python）。; 题目描述 给定一个由不同正整数的组成的非空数组 A，考虑下面的图： 有 A.length 个节点，按从 A[0] 到 A[A.length - 1] 标记；; 只有当 A[i] 和 A[j] 共用一个大于 1 的公因数时，A[i] 和 A[j] 之间才有一条边。",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/solutions/0952-largest-component-size-by-common-factor.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 952 题：按公因数计算最大组件大小（困难）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/solutions/0952-largest-component-size-by-common-factor.html",relativePath:"union-find/solutions/0952-largest-component-size-by-common-factor.md",key:"v-6f7ad736",path:"/union-find/solutions/0952-largest-component-size-by-common-factor/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:2.81,words:844},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 14, 2021 19:39",createTimeStamp:1639510767e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 959 题：由斜杠划分区域（中等）",frontmatter:{title:"「力扣」第 959 题：由斜杠划分区域（中等）",icon:"shipin",category:"并查集",tags:["并查集"],summary:"题目链接：959. 由斜杠划分区域；; 题解链接：🎦 由斜杠划分区域。; 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 在由 1 x 1 方格组成的 N x N 网格 grid 中，每个 1 x 1 方块由 /、\\ 或空格构成。这些",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/solutions/0959-regions-cut-by-slashes.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 959 题：由斜杠划分区域（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/solutions/0959-regions-cut-by-slashes.html",relativePath:"union-find/solutions/0959-regions-cut-by-slashes.md",key:"v-8fe60762",path:"/union-find/solutions/0959-regions-cut-by-slashes/",readingTime:{minutes:1.54,words:461},updateTime:"January 14, 2022 07:07",updateTimeStamp:1642144071e3,createTime:"January 14, 2022 07:07",createTimeStamp:1642144071e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 990 题：等式方程的可满足性（中等）",frontmatter:{title:"「力扣」第 990 题：等式方程的可满足性（中等）",icon:"shipin",category:"并查集",tags:["并查集"],summary:"这一节的视频讲解有很多知识点，不熟悉的朋友强烈建议观看。 :tv: 视频讲解 视频题解; 有些问题不以并查集为背景，但的确可以使用并查集的知识帮助我们解决问题。由于等式相等具有传递性，比较容易想到使用并查集。 题目链接：990. 等式方程的可满足性；; 题解链接：使用并查集处理不相交集合问题（Java、Python）。; 视频讲解 :tv: 这道题在 官方题",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/solutions/0990-satisfiability-of-equality-equations.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 990 题：等式方程的可满足性（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/solutions/0990-satisfiability-of-equality-equations.html",relativePath:"union-find/solutions/0990-satisfiability-of-equality-equations.md",key:"v-318666ae",path:"/union-find/solutions/0990-satisfiability-of-equality-equations/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"思路分析",slug:"思路分析"}],readingTime:{minutes:3.33,words:1e3},updateTime:"January 14, 2022 07:07",updateTimeStamp:1642144071e3,createTime:"December 14, 2021 19:39",createTimeStamp:1639510767e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:4},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 1202 题：交换字符串中的元素（中等）",frontmatter:{title:"「力扣」第 1202 题：交换字符串中的元素（中等）",icon:"shipin",category:"并查集",tags:["并查集"],summary:"题目链接：1202. 交换字符串中的元素；; 题解链接：🎦 1202. 交换字符串中的元素。; 视频讲解 :tv: 这道题在 官方题解 和 B 站 可以收看视频讲解，可以点击下面的视频右上角「去 bilibili 观看」，选择快速播放，获得更好的观看体验。 题目描述 给你一个字符串 s，以及该字符串中的一些「索引对」数组 pairs，其中 pairs[i]",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/solutions/1202-smallest-string-with-swaps.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1202 题：交换字符串中的元素（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/solutions/1202-smallest-string-with-swaps.html",relativePath:"union-find/solutions/1202-smallest-string-with-swaps.md",key:"v-8d0fe46e",path:"/union-find/solutions/1202-smallest-string-with-swaps/",headers:[{level:2,title:"题目描述",slug:"题目描述"}],readingTime:{minutes:1.53,words:460},updateTime:"January 14, 2022 07:07",updateTimeStamp:1642144071e3,createTime:"January 14, 2022 07:07",createTimeStamp:1642144071e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"「力扣」第 1267 题：统计参与通信的服务器（中等）",frontmatter:{title:"「力扣」第 1267 题：统计参与通信的服务器（中等）",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"题目链接：1267. 统计参与通信的服务器。; 题目链接 这里有一幅服务器分布图，服务器的位置标识在 m \\* n 的整数矩阵网格 grid 中，1 表示单元格上有服务器，0 表示没有。 如果两台服务器位于同一行或者同一列，我们就认为它们之间可以进行通信。 请你统计并返回能够与至少一台其他服务器进行通信的服务器的数量。 示例 1： 示例 2： 示例 3： 提",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/solutions/1267-count-servers-that-communicate.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1267 题：统计参与通信的服务器（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/solutions/1267-count-servers-that-communicate.html",relativePath:"union-find/solutions/1267-count-servers-that-communicate.md",key:"v-33fb8d76",path:"/union-find/solutions/1267-count-servers-that-communicate/",headers:[{level:2,title:"题目链接",slug:"题目链接"}],readingTime:{minutes:1.11,words:332},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 14, 2021 19:39",createTimeStamp:1639510767e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]},{title:"「力扣」第 1319 题：连通网络的操作次数（中等）",frontmatter:{title:"「力扣」第 1319 题：连通网络的操作次数（中等）",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"提示 连通性问题，比较容易想到使用并查集，并查集在写的时候，可以尽量封装起来，以凸显主干逻辑。并且路径压缩与按 rank 合并这两个优化技巧，选择其中一个即可。 题目链接：1319. 连通网络的操作次数；; 题解链接：并查集。; 题目描述 用以太网线缆将 n 台计算机连接成一个网络，计算机的编号从 0 到 n-1。线缆用 connections 表示，其中 ",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/solutions/1319-number-of-operations-to-make-network-connected.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1319 题：连通网络的操作次数（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/solutions/1319-number-of-operations-to-make-network-connected.html",relativePath:"union-find/solutions/1319-number-of-operations-to-make-network-connected.md",key:"v-b8b2f1ee",path:"/union-find/solutions/1319-number-of-operations-to-make-network-connected/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"解题思路",slug:"解题思路"}],readingTime:{minutes:2.8,words:839},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 14, 2021 19:39",createTimeStamp:1639510767e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"「力扣」第 1559 题：二维网格图中探测环（中等）",frontmatter:{title:"「力扣」第 1559 题：二维网格图中探测环（中等）",icon:"yongyan",category:"并查集",tags:["并查集"],summary:"题目链接： 1559. 二维网格图中探测环。; 题目描述 给你一个二维字符网格数组 grid ，大小为 m x n ，你需要检查 grid 中是否存在 相同值 形成的环。 一个环是一条开始和结束于同一个格子的长度 大于等于 4 的路径。对于一个给定的格子，你可以移动到它上、下、左、右四个方向相邻的格子之一，可以移动的前提是这两个格子有 相同的值 。 同时，你",meta:[{property:"og:url",content:"https://suanfa8.com/union-find/solutions/1559-detect-cycles-in-2d-grid.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"「力扣」第 1559 题：二维网格图中探测环（中等）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"并查集"}]},regularPath:"/union-find/solutions/1559-detect-cycles-in-2d-grid.html",relativePath:"union-find/solutions/1559-detect-cycles-in-2d-grid.md",key:"v-0e68defa",path:"/union-find/solutions/1559-detect-cycles-in-2d-grid/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"方法一：并查集",slug:"方法一-并查集"},{level:2,title:"方法二：深度优先遍历",slug:"方法二-深度优先遍历"}],readingTime:{minutes:3.18,words:955},updateTime:"January 14, 2022 02:00",updateTimeStamp:1642125618e3,createTime:"December 14, 2021 19:39",createTimeStamp:1639510767e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3},{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]},{title:"视频题解合集",frontmatter:{title:"视频题解合集",icon:"shipin",category:"视频题解",tags:["视频题解"],summary:"我从 2019 年 9 月开始录制视频题解。最开始的时候，我会对着要讲的材料录好几遍。现在讲解知识点的时候写逐字稿。已经沉淀了很多视频，其实也算是一个小小的体系课程，现在罗列在这里，希望能够对大家有所帮助。 自我介绍 Your browser does not support the video tag. 说明：上传日期：2022 年 3 月 23 日（星期",meta:[{property:"og:url",content:"https://suanfa8.com/video/"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"视频题解合集"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"视频题解"}]},regularPath:"/video/",relativePath:"video/README.md",key:"v-463acfc4",path:"/video/",headers:[{level:2,title:"自我介绍",slug:"自我介绍"},{level:2,title:"0. 算法新手如何刷力扣（LeetCode）？【干货分享】",slug:"_0-算法新手如何刷力扣-leetcode-【干货分享】"},{level:2,title:"1. 时间复杂度与空间复杂度",slug:"_1-时间复杂度与空间复杂度"},{level:2,title:"2. 二分查找",slug:"_2-二分查找"},{level:2,title:"3. 和排序相关的问题",slug:"_3-和排序相关的问题"},{level:2,title:"4. 滑动窗口",slug:"_4-滑动窗口"},{level:2,title:"5. 栈相关的问题",slug:"_5-栈相关的问题"},{level:2,title:"6. 并查集",slug:"_6-并查集"},{level:2,title:"7. 树",slug:"_7-树"},{level:2,title:"8. 回溯算法",slug:"_8-回溯算法"},{level:2,title:"9. 动态规划",slug:"_9-动态规划"},{level:2,title:"10. 广度优先遍历与拓扑排序",slug:"_10-广度优先遍历与拓扑排序"},{level:2,title:"11. 哈希表",slug:"_11-哈希表"},{level:2,title:"12. 位运算相关",slug:"_12-位运算相关"}],readingTime:{minutes:10.65,words:3196},updateTime:"May 2, 2022 05:24",updateTimeStamp:1651469059e3,createTime:"December 19, 2021 11:18",createTimeStamp:1639912694e3,contributors:[{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{title:"第 6 节 关于 mid = (left + right) / 2 的说明",frontmatter:{title:"第 6 节 关于 mid = (left + right) / 2 的说明",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"结论 绝大多数情况下，用 mid = (left + right) / 2 （默认） 或者 mid = (left + right + 1) / 2 （取中间数上取整）；; 如果 left + right 在 int 范围里会溢出，使用 mid = left + (right - left) / 2 或者 mid = left + (right - left",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/06.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 6 节 关于 mid = (left + right) / 2 的说明"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/06.html",relativePath:"binary-search/06.md",key:"v-597132cf",path:"/binary-search/06/",headers:[{level:2,title:"整数除法不可能取到真正的中间的元素",slug:"整数除法不可能取到真正的中间的元素"},{level:2,title:"mid = (left + right) / 2 有整型溢出的可能",slug:"mid-left-right-2-有整型溢出的可能"},{level:2,title:"用位运算代替整数除法",slug:"用位运算代替整数除法"},{level:2,title:"无符号右移",slug:"无符号右移"}],readingTime:{minutes:1.74,words:523},updateTime:"January 14, 2022 02:17",updateTimeStamp:1642126644e3,createTime:"December 11, 2021 03:27",createTimeStamp:1639193248e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:8},{name:"liweiwei1419",email:"121088825@qq.com",commits:1}]},{title:"第 5 节 死循环（什么时候取 mid + 1）",frontmatter:{title:"第 5 节 死循环（什么时候取 mid + 1）",icon:"yongyan",category:"二分查找",tags:["二分查找"],summary:"本节重点 首先需要认识到一件事情：int mid = (left + right) / 2 和 int mid = (left + right + 1) / 2 的「地位」本应该是一致的。 在搜索区间里只有两个元素的时候，int mid = (left + right) / 2 取到的是中间位置靠左的元素的位置，int mid = (left + right",meta:[{property:"og:url",content:"https://suanfa8.com/binary-search/05.html"},{property:"og:site_name",content:"算法吧"},{property:"og:title",content:"第 5 节 死循环（什么时候取 mid + 1）"},{property:"og:type",content:"article"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"},{property:"article:tag",content:"二分查找"}]},regularPath:"/binary-search/05.html",relativePath:"binary-search/05.md",key:"v-55e30711",path:"/binary-search/05/",headers:[{level:2,title:"题目描述",slug:"题目描述"},{level:2,title:"题意分析",slug:"题意分析"},{level:2,title:"思路分析",slug:"思路分析"},{level:2,title:"mid 为什么要加 1",slug:"mid-为什么要加-1"},{level:2,title:"总结",slug:"总结"}],readingTime:{minutes:5.48,words:1643},updateTime:"January 19, 2022 17:48",updateTimeStamp:164261449e4,createTime:"December 11, 2021 03:27",createTimeStamp:1639193248e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:5},{name:"liweiwei1419",email:"121088825@qq.com",commits:3}]},{frontmatter:{layout:"Blog",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/article/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/article/",key:"v-6453f364",path:"/article/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/star/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/star/",key:"v-4340f7e8",path:"/star/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/encrypt/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/encrypt/",key:"v-7d484ebf",path:"/encrypt/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/slide/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/slide/",key:"v-2470be33",path:"/slide/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/timeline/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/timeline/",key:"v-6319eb4e",path:"/timeline/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/",key:"v-b1564aac",path:"/tag/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/",key:"v-28e6393c",path:"/category/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"排序算法 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/排序算法/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/",key:"v-23f1e153",path:"/tag/排序算法/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"减治思想 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/减治思想/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%87%8F%E6%B2%BB%E6%80%9D%E6%83%B3/",key:"v-eb35fb00",path:"/tag/减治思想/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"数组 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/数组/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%95%B0%E7%BB%84/",key:"v-197ac33a",path:"/tag/数组/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"循环不变量 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/循环不变量/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%BE%AA%E7%8E%AF%E4%B8%8D%E5%8F%98%E9%87%8F/",key:"v-34859c0a",path:"/tag/循环不变量/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"分而治之 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/分而治之/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%88%86%E8%80%8C%E6%B2%BB%E4%B9%8B/",key:"v-21e4c30c",path:"/tag/分而治之/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"归并排序 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/归并排序/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/",key:"v-08b1a33d",path:"/tag/归并排序/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"桶排序 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/桶排序/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%A1%B6%E6%8E%92%E5%BA%8F/",key:"v-15a8c65d",path:"/tag/桶排序/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"计数排序 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/计数排序/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F/",key:"v-9a387e42",path:"/tag/计数排序/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"快速排序 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/快速排序/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/",key:"v-4fc9e0e7",path:"/tag/快速排序/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"分治算法 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/分治算法/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%88%86%E6%B2%BB%E7%AE%97%E6%B3%95/",key:"v-00c740fc",path:"/tag/分治算法/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"滑动窗口 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/滑动窗口/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/",key:"v-3b98fbac",path:"/tag/滑动窗口/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"双指针 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/双指针/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%8F%8C%E6%8C%87%E9%92%88/",key:"v-3f714451",path:"/tag/双指针/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"回溯算法 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/回溯算法/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/",key:"v-26880831",path:"/tag/回溯算法/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"递归 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/递归/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E9%80%92%E5%BD%92/",key:"v-5d2c70d3",path:"/tag/递归/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"树形问题 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/树形问题/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%A0%91%E5%BD%A2%E9%97%AE%E9%A2%98/",key:"v-fa4c15d0",path:"/tag/树形问题/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"深度优先遍历 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/深度优先遍历/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86/",key:"v-f909b96c",path:"/tag/深度优先遍历/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"广度优先遍历 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/广度优先遍历/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86/",key:"v-7c98e15c",path:"/tag/广度优先遍历/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"动态规划 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/动态规划/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/",key:"v-e55a7dbe",path:"/tag/动态规划/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"贪心算法 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/贪心算法/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/",key:"v-f8355e62",path:"/tag/贪心算法/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"字符串 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/字符串/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%AD%97%E7%AC%A6%E4%B8%B2/",key:"v-2bb7b0b6",path:"/tag/字符串/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"原地哈希 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/原地哈希/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%8E%9F%E5%9C%B0%E5%93%88%E5%B8%8C/",key:"v-198e6bf2",path:"/tag/原地哈希/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"剪枝 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/剪枝/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%89%AA%E6%9E%9D/",key:"v-5ad85ca4",path:"/tag/剪枝/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"并查集 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/并查集/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%B9%B6%E6%9F%A5%E9%9B%86/",key:"v-29896eb6",path:"/tag/并查集/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"flood fill Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/flood fill/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/flood%20fill/",key:"v-1942f75d",path:"/tag/flood fill/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"二分查找 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/二分查找/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/",key:"v-95f91212",path:"/tag/二分查找/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"位运算 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/位运算/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E4%BD%8D%E8%BF%90%E7%AE%97/",key:"v-66c658b5",path:"/tag/位运算/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"拓扑排序 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/拓扑排序/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/",key:"v-5f674688",path:"/tag/拓扑排序/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"队列 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/队列/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E9%98%9F%E5%88%97/",key:"v-561a8f79",path:"/tag/队列/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"单调队列 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/单调队列/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/",key:"v-3306eb19",path:"/tag/单调队列/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"闲谈 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/闲谈/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E9%97%B2%E8%B0%88/",key:"v-5fe0dc46",path:"/tag/闲谈/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"闲聊 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/闲聊/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E9%97%B2%E8%81%8A/",key:"v-4ede7ea8",path:"/tag/闲聊/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"二叉树 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/二叉树/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E4%BA%8C%E5%8F%89%E6%A0%91/",key:"v-1161037c",path:"/tag/二叉树/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"树状数组 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/树状数组/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/",key:"v-6ddb6a52",path:"/tag/树状数组/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"线段树 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/线段树/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E7%BA%BF%E6%AE%B5%E6%A0%91/",key:"v-7ac9e5ba",path:"/tag/线段树/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"Trie Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/Trie/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/Trie/",key:"v-16df426a",path:"/tag/Trie/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"二叉搜索树 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/二叉搜索树/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/",key:"v-60f644cf",path:"/tag/二叉搜索树/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"哈希表 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/哈希表/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%93%88%E5%B8%8C%E8%A1%A8/",key:"v-38be412e",path:"/tag/哈希表/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"优先队列 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/优先队列/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/",key:"v-743eddda",path:"/tag/优先队列/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"链表 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/链表/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E9%93%BE%E8%A1%A8/",key:"v-38874a70",path:"/tag/链表/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"栈 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/栈/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%A0%88/",key:"v-73e16dd2",path:"/tag/栈/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"树 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/树/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%A0%91/",key:"v-73e170ba",path:"/tag/树/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"差分 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/差分/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%B7%AE%E5%88%86/",key:"v-02f47e76",path:"/tag/差分/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"区间 DP Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/区间 DP/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%8C%BA%E9%97%B4%20DP/",key:"v-55ff4e24",path:"/tag/区间 DP/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"树形 DP Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/树形 DP/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%A0%91%E5%BD%A2%20DP/",key:"v-6585f98f",path:"/tag/树形 DP/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"数位 DP Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/数位 DP/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%95%B0%E4%BD%8D%20DP/",key:"v-43f4afc0",path:"/tag/数位 DP/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"背包问题 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/背包问题/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/",key:"v-f2889d84",path:"/tag/背包问题/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"完全背包 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/完全背包/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85/",key:"v-1cc5e493",path:"/tag/完全背包/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"0-1 背包问题 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/0-1 背包问题/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/0-1%20%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/",key:"v-0af1f74f",path:"/tag/0-1 背包问题/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"Dijkstra Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/Dijkstra/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/Dijkstra/",key:"v-877704e2",path:"/tag/Dijkstra/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"最小生成树 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/最小生成树/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/",key:"v-021f31cf",path:"/tag/最小生成树/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"滚动哈希 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/滚动哈希/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%BB%9A%E5%8A%A8%E5%93%88%E5%B8%8C/",key:"v-b8756c9e",path:"/tag/滚动哈希/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"堆 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/堆/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%A0%86/",key:"v-0c0040b5",path:"/tag/堆/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"分治法 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/分治法/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%88%86%E6%B2%BB%E6%B3%95/",key:"v-7ae518cb",path:"/tag/分治法/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"单链表 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/单链表/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%8D%95%E9%93%BE%E8%A1%A8/",key:"v-51f39717",path:"/tag/单链表/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"双向链表 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/双向链表/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8/",key:"v-6e765324",path:"/tag/双向链表/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"快慢指针 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/快慢指针/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%BF%AB%E6%85%A2%E6%8C%87%E9%92%88/",key:"v-948e6992",path:"/tag/快慢指针/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"数学 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/数学/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%95%B0%E5%AD%A6/",key:"v-481fe1e6",path:"/tag/数学/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"单调栈 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/单调栈/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%8D%95%E8%B0%83%E6%A0%88/",key:"v-20dd039c",path:"/tag/单调栈/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"音乐 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/音乐/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E9%9F%B3%E4%B9%90/",key:"v-dc82fba4",path:"/tag/音乐/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"前缀和 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/前缀和/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%89%8D%E7%BC%80%E5%92%8C/",key:"v-f7f67d00",path:"/tag/前缀和/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"减而治之 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/减而治之/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%87%8F%E8%80%8C%E6%B2%BB%E4%B9%8B/",key:"v-2eb2cb3d",path:"/tag/减而治之/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"分治思想 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/分治思想/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%88%86%E6%B2%BB%E6%80%9D%E6%83%B3/",key:"v-7d96fa4f",path:"/tag/分治思想/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"二分搜索树 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/二分搜索树/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E4%BA%8C%E5%88%86%E6%90%9C%E7%B4%A2%E6%A0%91/",key:"v-7263191a",path:"/tag/二分搜索树/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"后序遍历 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/后序遍历/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86/",key:"v-027d9852",path:"/tag/后序遍历/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"前缀树 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/前缀树/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%89%8D%E7%BC%80%E6%A0%91/",key:"v-0d1ef430",path:"/tag/前缀树/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"单源最短路径 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/单源最短路径/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%8D%95%E6%BA%90%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84/",key:"v-33731426",path:"/tag/单源最短路径/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"视频题解 Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/视频题解/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E8%A7%86%E9%A2%91%E9%A2%98%E8%A7%A3/",key:"v-e0020710",path:"/tag/视频题解/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"排序算法 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/排序算法/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/",key:"v-60bed3fe",path:"/category/排序算法/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"二分查找 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/二分查找/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/",key:"v-60b22ba5",path:"/category/二分查找/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"循环不变量 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/循环不变量/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%BE%AA%E7%8E%AF%E4%B8%8D%E5%8F%98%E9%87%8F/",key:"v-7a0c4b1c",path:"/category/循环不变量/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"快速排序 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/快速排序/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/",key:"v-090ed4d6",path:"/category/快速排序/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"滑动窗口 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/滑动窗口/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/",key:"v-31709f4c",path:"/category/滑动窗口/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"双指针 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/双指针/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%8F%8C%E6%8C%87%E9%92%88/",key:"v-da0c183a",path:"/category/双指针/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"回溯算法 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/回溯算法/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/",key:"v-5b928642",path:"/category/回溯算法/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"广度优先遍历 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/广度优先遍历/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86/",key:"v-6f51068a",path:"/category/广度优先遍历/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"动态规划 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/动态规划/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/",key:"v-390175cf",path:"/category/动态规划/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"贪心算法 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/贪心算法/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/",key:"v-2f94057d",path:"/category/贪心算法/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"数组 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/数组/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E6%95%B0%E7%BB%84/",key:"v-29663130",path:"/category/数组/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"字符串 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/字符串/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%AD%97%E7%AC%A6%E4%B8%B2/",key:"v-3dacd737",path:"/category/字符串/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"分治算法 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/分治算法/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%88%86%E6%B2%BB%E7%AE%97%E6%B3%95/",key:"v-a969d7a0",path:"/category/分治算法/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"位运算 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/位运算/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E4%BD%8D%E8%BF%90%E7%AE%97/",key:"v-8b61ef72",path:"/category/位运算/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"闲谈 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/闲谈/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E9%97%B2%E8%B0%88/",key:"v-31b30074",path:"/category/闲谈/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"闲聊 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/闲聊/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E9%97%B2%E8%81%8A/",key:"v-20b0a2d6",path:"/category/闲聊/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"树 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/树/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E6%A0%91/",key:"v-4f797e68",path:"/category/树/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"树状数组 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/树状数组/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/",key:"v-74c0ff85",path:"/category/树状数组/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"线段树 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/线段树/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E7%BA%BF%E6%AE%B5%E6%A0%91/",key:"v-1623bcb5",path:"/category/线段树/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"Trie Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/Trie/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/Trie/",key:"v-264d4b79",path:"/category/Trie/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"并查集 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/并查集/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%B9%B6%E6%9F%A5%E9%9B%86/",key:"v-7d121e48",path:"/category/并查集/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"二叉搜索树 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/二叉搜索树/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/",key:"v-b306183e",path:"/category/二叉搜索树/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"哈希表 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/哈希表/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%93%88%E5%B8%8C%E8%A1%A8/",key:"v-37298efb",path:"/category/哈希表/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"优先队列 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/优先队列/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/",key:"v-718f45c1",path:"/category/优先队列/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"链表 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/链表/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E9%93%BE%E8%A1%A8/",key:"v-94e30214",path:"/category/链表/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"队列 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/队列/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E9%98%9F%E5%88%97/",key:"v-27ecb3a7",path:"/category/队列/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"栈 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/栈/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E6%A0%88/",key:"v-4f798438",path:"/category/栈/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"差分 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/差分/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%B7%AE%E5%88%86/",key:"v-5672bab8",path:"/category/差分/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"图论 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/图论/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%9B%BE%E8%AE%BA/",key:"v-a0009ba2",path:"/category/图论/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"原地哈希 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/原地哈希/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%8E%9F%E5%9C%B0%E5%93%88%E5%B8%8C/",key:"v-7585bec0",path:"/category/原地哈希/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"数学 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/数学/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E6%95%B0%E5%AD%A6/",key:"v-19f20614",path:"/category/数学/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"递归 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/递归/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E9%80%92%E5%BD%92/",key:"v-2efe9501",path:"/category/递归/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"归并排序 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/归并排序/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/",key:"v-973f502a",path:"/category/归并排序/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"音乐 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/音乐/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E9%9F%B3%E4%B9%90/",key:"v-6390a65c",path:"/category/音乐/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"前缀和 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/前缀和/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%89%8D%E7%BC%80%E5%92%8C/",key:"v-50e51ddc",path:"/category/前缀和/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"二叉树 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/二叉树/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E4%BA%8C%E5%8F%89%E6%A0%91/",key:"v-4ad82dd4",path:"/category/二叉树/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"算法与数据结构 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/算法与数据结构/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",key:"v-1206ffd6",path:"/category/算法与数据结构/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"二分搜索树 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/二分搜索树/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E4%BA%8C%E5%88%86%E6%90%9C%E7%B4%A2%E6%A0%91/",key:"v-902c6fa8",path:"/category/二分搜索树/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"前缀树 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/前缀树/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%89%8D%E7%BC%80%E6%A0%91/",key:"v-4cf9357a",path:"/category/前缀树/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Blog",title:"视频题解 Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/视频题解/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E8%A7%86%E9%A2%91%E9%A2%98%E8%A7%A3/",key:"v-3badb126",path:"/category/视频题解/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 排序算法 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/排序算法/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/page/2/",key:"v-217aa10a",path:"/tag/排序算法/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 排序算法 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/排序算法/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/page/3/",key:"v-217aa129",path:"/tag/排序算法/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 数组 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/数组/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%95%B0%E7%BB%84/page/2/",key:"v-07921d43",path:"/tag/数组/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 数组 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/数组/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%95%B0%E7%BB%84/page/3/",key:"v-07921d62",path:"/tag/数组/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 分而治之 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/分而治之/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%88%86%E8%80%8C%E6%B2%BB%E4%B9%8B/page/2/",key:"v-2d1be59e",path:"/tag/分而治之/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 分而治之 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/分而治之/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%88%86%E8%80%8C%E6%B2%BB%E4%B9%8B/page/3/",key:"v-2d1be560",path:"/tag/分而治之/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 快速排序 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/快速排序/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/page/2/",key:"v-c0b89a14",path:"/tag/快速排序/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 滑动窗口 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/滑动窗口/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/page/2/",key:"v-6bcae091",path:"/tag/滑动窗口/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 滑动窗口 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/滑动窗口/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/page/3/",key:"v-6bcae0b0",path:"/tag/滑动窗口/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 4 - 滑动窗口 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/滑动窗口/page/4/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/page/4/",key:"v-6bcae0cf",path:"/tag/滑动窗口/page/4/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 双指针 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/双指针/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%8F%8C%E6%8C%87%E9%92%88/page/2/",key:"v-2db3844c",path:"/tag/双指针/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 回溯算法 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/回溯算法/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/page/2/",key:"v-a7dab728",path:"/tag/回溯算法/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 回溯算法 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/回溯算法/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/page/3/",key:"v-a7dab6ea",path:"/tag/回溯算法/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 4 - 回溯算法 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/回溯算法/page/4/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/page/4/",key:"v-a7dab6ac",path:"/tag/回溯算法/page/4/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 5 - 回溯算法 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/回溯算法/page/5/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/page/5/",key:"v-a7dab66e",path:"/tag/回溯算法/page/5/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 递归 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/递归/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E9%80%92%E5%BD%92/page/2/",key:"v-a8b0bcec",path:"/tag/递归/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 递归 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/递归/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E9%80%92%E5%BD%92/page/3/",key:"v-a8b0bcae",path:"/tag/递归/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 4 - 递归 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/递归/page/4/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E9%80%92%E5%BD%92/page/4/",key:"v-a8b0bc70",path:"/tag/递归/page/4/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 5 - 递归 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/递归/page/5/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E9%80%92%E5%BD%92/page/5/",key:"v-a8b0bc32",path:"/tag/递归/page/5/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 6 - 递归 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/递归/page/6/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E9%80%92%E5%BD%92/page/6/",key:"v-a8b0bbf4",path:"/tag/递归/page/6/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 7 - 递归 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/递归/page/7/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E9%80%92%E5%BD%92/page/7/",key:"v-a8b0bbb6",path:"/tag/递归/page/7/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 树形问题 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/树形问题/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%A0%91%E5%BD%A2%E9%97%AE%E9%A2%98/page/2/",key:"v-542eb5a5",path:"/tag/树形问题/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 树形问题 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/树形问题/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%A0%91%E5%BD%A2%E9%97%AE%E9%A2%98/page/3/",key:"v-542eb5c4",path:"/tag/树形问题/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 4 - 树形问题 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/树形问题/page/4/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%A0%91%E5%BD%A2%E9%97%AE%E9%A2%98/page/4/",key:"v-542eb5e3",path:"/tag/树形问题/page/4/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 深度优先遍历 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/深度优先遍历/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86/page/2/",key:"v-4c788b33",path:"/tag/深度优先遍历/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 深度优先遍历 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/深度优先遍历/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86/page/3/",key:"v-4c788b52",path:"/tag/深度优先遍历/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 4 - 深度优先遍历 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/深度优先遍历/page/4/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86/page/4/",key:"v-4c788b71",path:"/tag/深度优先遍历/page/4/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 5 - 深度优先遍历 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/深度优先遍历/page/5/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86/page/5/",key:"v-4c788b90",path:"/tag/深度优先遍历/page/5/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 广度优先遍历 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/广度优先遍历/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86/page/2/",key:"v-9443963e",path:"/tag/广度优先遍历/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 广度优先遍历 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/广度优先遍历/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86/page/3/",key:"v-94439600",path:"/tag/广度优先遍历/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 4 - 广度优先遍历 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/广度优先遍历/page/4/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86/page/4/",key:"v-944395c2",path:"/tag/广度优先遍历/page/4/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 动态规划 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/动态规划/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/page/2/",key:"v-2962fd7c",path:"/tag/动态规划/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 动态规划 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/动态规划/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/page/3/",key:"v-2962fd9b",path:"/tag/动态规划/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 4 - 动态规划 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/动态规划/page/4/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/page/4/",key:"v-2962fdba",path:"/tag/动态规划/page/4/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 5 - 动态规划 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/动态规划/page/5/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/page/5/",key:"v-2962fdd9",path:"/tag/动态规划/page/5/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 6 - 动态规划 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/动态规划/page/6/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/page/6/",key:"v-2962fdf8",path:"/tag/动态规划/page/6/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 7 - 动态规划 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/动态规划/page/7/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/page/7/",key:"v-2962fe17",path:"/tag/动态规划/page/7/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 8 - 动态规划 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/动态规划/page/8/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/page/8/",key:"v-2962fe36",path:"/tag/动态规划/page/8/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 贪心算法 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/贪心算法/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/page/2/",key:"v-6dae0e0e",path:"/tag/贪心算法/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 字符串 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/字符串/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%AD%97%E7%AC%A6%E4%B8%B2/page/2/",key:"v-376dfa78",path:"/tag/字符串/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 并查集 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/并查集/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%B9%B6%E6%9F%A5%E9%9B%86/page/2/",key:"v-25cece47",path:"/tag/并查集/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 并查集 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/并查集/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%B9%B6%E6%9F%A5%E9%9B%86/page/3/",key:"v-25cece66",path:"/tag/并查集/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 4 - 并查集 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/并查集/page/4/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%B9%B6%E6%9F%A5%E9%9B%86/page/4/",key:"v-25cece85",path:"/tag/并查集/page/4/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 二分查找 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/二分查找/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/page/2/",key:"v-06a82ae6",path:"/tag/二分查找/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 二分查找 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/二分查找/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/page/3/",key:"v-06a82b05",path:"/tag/二分查找/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 4 - 二分查找 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/二分查找/page/4/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/page/4/",key:"v-06a82b24",path:"/tag/二分查找/page/4/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 5 - 二分查找 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/二分查找/page/5/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/page/5/",key:"v-06a82b43",path:"/tag/二分查找/page/5/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 6 - 二分查找 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/二分查找/page/6/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/page/6/",key:"v-06a82b62",path:"/tag/二分查找/page/6/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 位运算 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/位运算/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E4%BD%8D%E8%BF%90%E7%AE%97/page/2/",key:"v-38357768",path:"/tag/位运算/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 二叉树 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/二叉树/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E4%BA%8C%E5%8F%89%E6%A0%91/page/2/",key:"v-6e0e693b",path:"/tag/二叉树/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 二叉树 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/二叉树/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E4%BA%8C%E5%8F%89%E6%A0%91/page/3/",key:"v-6e0e695a",path:"/tag/二叉树/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 二叉搜索树 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/二叉搜索树/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/page/2/",key:"v-5d629a0e",path:"/tag/二叉搜索树/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 哈希表 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/哈希表/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%93%88%E5%B8%8C%E8%A1%A8/page/2/",key:"v-59ebbe34",path:"/tag/哈希表/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 哈希表 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/哈希表/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%93%88%E5%B8%8C%E8%A1%A8/page/3/",key:"v-59ebbe53",path:"/tag/哈希表/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 优先队列 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/优先队列/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/page/2/",key:"v-234a8d6c",path:"/tag/优先队列/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 优先队列 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/优先队列/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/page/3/",key:"v-234a8d2e",path:"/tag/优先队列/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 链表 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/链表/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E9%93%BE%E8%A1%A8/page/2/",key:"v-5ae0ec16",path:"/tag/链表/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 链表 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/链表/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E9%93%BE%E8%A1%A8/page/3/",key:"v-5ae0ebd8",path:"/tag/链表/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 栈 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/栈/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%A0%88/page/2/",key:"v-f82a50aa",path:"/tag/栈/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 栈 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/栈/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E6%A0%88/page/3/",key:"v-f82a506c",path:"/tag/栈/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 单调栈 | Tag",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/tag/单调栈/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/tag/%E5%8D%95%E8%B0%83%E6%A0%88/page/2/",key:"v-ed0cc96a",path:"/tag/单调栈/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 排序算法 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/排序算法/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/page/2/",key:"v-f6b426c8",path:"/category/排序算法/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 排序算法 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/排序算法/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/page/3/",key:"v-f6b4268a",path:"/category/排序算法/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 4 - 排序算法 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/排序算法/page/4/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/page/4/",key:"v-f6b4264c",path:"/category/排序算法/page/4/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 二分查找 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/二分查找/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/page/2/",key:"v-69d37678",path:"/category/二分查找/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 二分查找 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/二分查找/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/page/3/",key:"v-69d37697",path:"/category/二分查找/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 4 - 二分查找 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/二分查找/page/4/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/page/4/",key:"v-69d376b6",path:"/category/二分查找/page/4/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 5 - 二分查找 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/二分查找/page/5/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/page/5/",key:"v-69d376d5",path:"/category/二分查找/page/5/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 6 - 二分查找 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/二分查找/page/6/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/page/6/",key:"v-69d376f4",path:"/category/二分查找/page/6/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 滑动窗口 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/滑动窗口/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/page/2/",key:"v-6213a7ba",path:"/category/滑动窗口/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 滑动窗口 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/滑动窗口/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/page/3/",key:"v-6213a77c",path:"/category/滑动窗口/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 双指针 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/双指针/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%8F%8C%E6%8C%87%E9%92%88/page/2/",key:"v-7d438c7a",path:"/category/双指针/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 回溯算法 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/回溯算法/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/page/2/",key:"v-0f3deffe",path:"/category/回溯算法/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 回溯算法 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/回溯算法/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/page/3/",key:"v-0f3df01d",path:"/category/回溯算法/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 4 - 回溯算法 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/回溯算法/page/4/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/page/4/",key:"v-0f3df03c",path:"/category/回溯算法/page/4/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 5 - 回溯算法 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/回溯算法/page/5/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%9B%9E%E6%BA%AF%E7%AE%97%E6%B3%95/page/5/",key:"v-0f3df05b",path:"/category/回溯算法/page/5/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 广度优先遍历 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/广度优先遍历/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86/page/2/",key:"v-0bcf001a",path:"/category/广度优先遍历/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 广度优先遍历 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/广度优先遍历/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86/page/3/",key:"v-0bceffdc",path:"/category/广度优先遍历/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 动态规划 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/动态规划/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/page/2/",key:"v-e6e36de4",path:"/category/动态规划/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 动态规划 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/动态规划/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/page/3/",key:"v-e6e36da6",path:"/category/动态规划/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 4 - 动态规划 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/动态规划/page/4/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/page/4/",key:"v-e6e36d68",path:"/category/动态规划/page/4/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 5 - 动态规划 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/动态规划/page/5/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/page/5/",key:"v-e6e36d2a",path:"/category/动态规划/page/5/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 6 - 动态规划 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/动态规划/page/6/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/page/6/",key:"v-e6e36cec",path:"/category/动态规划/page/6/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 7 - 动态规划 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/动态规划/page/7/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/page/7/",key:"v-e6e36cae",path:"/category/动态规划/page/7/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 8 - 动态规划 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/动态规划/page/8/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/page/8/",key:"v-e6e36c70",path:"/category/动态规划/page/8/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 贪心算法 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/贪心算法/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/page/2/",key:"v-5e4d4cc0",path:"/category/贪心算法/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 数组 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/数组/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E6%95%B0%E7%BB%84/page/2/",key:"v-3a458955",path:"/category/数组/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 位运算 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/位运算/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E4%BD%8D%E8%BF%90%E7%AE%97/page/2/",key:"v-f07500d4",path:"/category/位运算/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 并查集 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/并查集/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%B9%B6%E6%9F%A5%E9%9B%86/page/2/",key:"v-755ed675",path:"/category/并查集/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 并查集 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/并查集/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%B9%B6%E6%9F%A5%E9%9B%86/page/3/",key:"v-755ed694",path:"/category/并查集/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 4 - 并查集 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/并查集/page/4/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%B9%B6%E6%9F%A5%E9%9B%86/page/4/",key:"v-755ed6b3",path:"/category/并查集/page/4/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 哈希表 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/哈希表/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%93%88%E5%B8%8C%E8%A1%A8/page/2/",key:"v-ad08733c",path:"/category/哈希表/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 优先队列 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/优先队列/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/page/2/",key:"v-518604dc",path:"/category/优先队列/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 优先队列 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/优先队列/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/page/3/",key:"v-518604fb",path:"/category/优先队列/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 链表 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/链表/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E9%93%BE%E8%A1%A8/page/2/",key:"v-0542f607",path:"/category/链表/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 链表 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/链表/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E9%93%BE%E8%A1%A8/page/3/",key:"v-0542f626",path:"/category/链表/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 4 - 链表 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/链表/page/4/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E9%93%BE%E8%A1%A8/page/4/",key:"v-0542f645",path:"/category/链表/page/4/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 栈 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/栈/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E6%A0%88/page/2/",key:"v-3a97a14e",path:"/category/栈/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 栈 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/栈/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E6%A0%88/page/3/",key:"v-3a97a110",path:"/category/栈/page/3/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 图论 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/图论/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E5%9B%BE%E8%AE%BA/page/2/",key:"v-d2753ea4",path:"/category/图论/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 2 - 二叉树 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/二叉树/page/2/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E4%BA%8C%E5%8F%89%E6%A0%91/page/2/",key:"v-84c31d2e",path:"/category/二叉树/page/2/",readingTime:{minutes:0,words:0}},{frontmatter:{layout:"Layout",title:"Page 3 - 二叉树 | Category",summary:"",meta:[{property:"og:url",content:"https://suanfa8.com/category/二叉树/page/3/"},{property:"og:site_name",content:"算法吧"},{property:"og:type",content:"website"},{property:"og:locale",content:"en-US"},{property:"article:author",content:"liweiwei1419"}]},regularPath:"/category/%E4%BA%8C%E5%8F%89%E6%A0%91/page/3/",key:"v-84c31cf0",path:"/category/二叉树/page/3/",readingTime:{minutes:0,words:0}}],themeConfig:{logo:"/suanfa8.png",hostname:"https://suanfa8.com/",author:"liweiwei1419",repo:"liweiwei1419/liweiwei1419.github.io",nav:[{text:"主页",icon:"home",link:"/"},{text:"视频讲解",icon:"shipin",link:"/video/"},{text:"专题精讲",icon:"jingjiang",items:[{text:"算法精讲",icon:"jingjiang",items:[{text:"循环不变量",icon:"jingjiang",link:"/loop-invariant/"},{text:"二分查找",icon:"jingjiang",link:"/binary-search/"},{text:"滑动窗口",icon:"jingjiang",link:"/sliding-window/"},{text:"双指针",icon:"jingjiang",link:"/two-pointers/"},{text:"归并排序",icon:"jingjiang",link:"/merge-sort/"},{text:"快速排序",icon:"jingjiang",link:"/quick-sort/"},{text:"回溯算法（深度优先遍历）",icon:"jingjiang",link:"/backtracking/"},{text:"广度优先遍历与拓扑排序",icon:"jingjiang",link:"/breadth-first-search/"},{text:"动态规划",icon:"jingjiang",link:"/dynamic-programming/"},{text:"贪心算法",icon:"jingjiang",link:"/greedy/"},{text:"图论精讲",icon:"jingjiang",link:"/graph/"},{text:"数学",icon:"jingjiang",link:"/math/"},{text:"位运算",icon:"jingjiang",link:"/bit-manipulation/"},{text:"差分",icon:"jingjiang",link:"/difference/"}]},{text:"数据结构精讲",icon:"jingjiang",items:[{text:"数组",icon:"jingjiang",link:"/array/"},{text:"链表",icon:"jingjiang",link:"/linked-list/"},{text:"栈",icon:"jingjiang",link:"/stack/"},{text:"单调栈",icon:"jingjiang",link:"/monotonous-stack/"},{text:"队列",icon:"jingjiang",link:"/queue/"},{text:"优先队列（堆）",icon:"jingjiang",link:"/heap/"},{text:"二叉树与二叉搜索树",icon:"jingjiang",link:"/tree/"},{text:"哈希表",icon:"jingjiang",link:"/hash-table/"},{text:"前缀和与哈希表",icon:"jingjiang",link:"/presum-hashtable/"},{text:"并查集",icon:"jingjiang",link:"/union-find/"}]}]},{text:"系统功能",icon:"xitong",items:[{text:"文章列表",icon:"wenzhangliebiaoxiangqing",link:"/article/"},{text:"按分类",icon:"fenlei",link:"/category/"},{text:"按标签",icon:"biaoqian",link:"/tag/"},{text:"文章时间线",icon:"shijianxian",link:"/timeline/"}]},{text:"友情链接",icon:"youqinglianjie",items:[{text:"负雪明烛",icon:"youqinglianjie",link:"https://fuxuemingzhu.cn/"},{text:"LeetCode（中国）",icon:"youqinglianjie",link:"https://leetcode.cn/"}]},{text:"闲聊",icon:"xianliaoshequ",link:"/chat/"},{text:"音乐",icon:"gequxinshang",link:"/music/"},{text:"留言反馈",icon:"liuyanban-05",link:"/suanfa8/bulletin-board.md"}],sidebar:{"/choice/":[{title:"二分查找",icon:"jingxuan",children:["/choice/binary-search/intro.md"]}],"/binary-search/":[{title:"第 1 章 知识点讲解（视频）",icon:"shu",children:["/binary-search/videos/intro.md","/binary-search/videos/01.md","/binary-search/videos/02.md","/binary-search/videos/03.md","/binary-search/videos/04.md","/binary-search/videos/05.md","/binary-search/videos/06.md","/binary-search/videos/07.md"]},{title:"第 2 章 知识点讲解（文字版本）",icon:"shu",children:["/binary-search/01.md","/binary-search/02.md","/binary-search/03.md","/binary-search/04.md","/binary-search/05.md","/binary-search/06.md","/binary-search/07.md","/binary-search/08.md","/binary-search/09.md","/binary-search/10.md"]},{title:"第 3 章 二分查找基本问题",icon:"shu",children:["/binary-search/practice.md","/binary-search/solutions/find-index/0034-find-first-and-last-position-of-element-in-sorted-array.md","/binary-search/solutions/find-index/0035-search-insert-position.md","/binary-search/solutions/find-index/0611-valid-triangle-number.md","/binary-search/solutions/find-index/0658-find-k-closest-elements.md","/binary-search/solutions/find-index/0744-find-smallest-letter-greater-than-target.md","/binary-search/solutions/find-index/0275-h-index-ii.md","/binary-search/solutions/find-index/0436-find-right-interval.md","/binary-search/solutions/find-index/0004-median-of-two-sorted-arrays.md"]},{title:"第 4 章 在非有序数组中使用二分查找",icon:"shu",children:["/binary-search/solutions/find-index/0033-search-in-rotated-sorted-array.md","/binary-search/solutions/find-index/0081-search-in-rotated-sorted-array-ii.md","/binary-search/solutions/find-index/0153-find-minimum-in-rotated-sorted-array.md","/binary-search/solutions/find-index/0154-find-minimum-in-rotated-sorted-array-ii.md","/binary-search/solutions/find-index/0162-find-peak-element.md","/binary-search/solutions/find-index/0852-peak-index-in-a-mountain-array.md","/binary-search/solutions/find-index/1095-find-in-mountain-array.md"]},{title:"第 5 章 二分答案（查找一个有范围的整数）",icon:"shu",children:["/binary-search/solutions/find-integer/0069-sqrtx.md","/binary-search/solutions/find-integer/0367-valid-perfect-square.md","/binary-search/solutions/find-integer/0374-guess-number-higher-or-lower.md","/binary-search/solutions/find-integer/0287-find-the-duplicate-number.md","/binary-search/solutions/find-integer/0378-kth-smallest-element-in-a-sorted-matrix.md","/binary-search/solutions/find-integer/0719-find-k-th-smallest-pair-distance.md","/binary-search/solutions/find-integer/1300-sum-of-mutated-array-closest-to-target.md","/binary-search/solutions/find-integer/1276-number-of-burgers-with-no-waste-of-ingredients.md"]},{title:"第 6 章 每一轮都要把输入数组看一遍的二分查找",icon:"shu",children:["/binary-search/solutions/maximum-minimization/intro.md","/binary-search/solutions/maximum-minimization/0410-split-array-largest-sum.md","/binary-search/solutions/maximum-minimization/0875-koko-eating-bananas.md","/binary-search/solutions/maximum-minimization/1283-find-the-smallest-divisor-given-a-threshold.md","/binary-search/solutions/maximum-minimization/1011-capacity-to-ship-packages-within-d-days.md","/binary-search/solutions/maximum-minimization/1482-minimum-number-of-days-to-make-m-bouquets.md","/binary-search/solutions/maximum-minimization/1552-magnetic-force-between-two-balls.md","/binary-search/solutions/maximum-minimization/小张刷题计划.md"]}],"/sliding-window/":[{title:"第 1 章 入门问题",icon:"shu",children:["/sliding-window/01/0003-longest-substring-without-repeating-characters.md","/sliding-window/01/0209-minimum-size-subarray-sum.md","/sliding-window/01/summary.md"]},{title:"第 2 章 「力扣」第 76 题以及同类问题",icon:"shu",children:["/sliding-window/02/intro.md","/sliding-window/02/0076-minimum-window-substring.md","/sliding-window/02/0438-find-all-anagrams-in-a-string.md","/sliding-window/02/0567-permutation-in-string.md"]},{title:"第 3 章 「力扣」第 424 题以及同类问题",icon:"shu",children:["/sliding-window/03/intro.md","/sliding-window/03/0424-longest-repeating-character-replacement.md","/sliding-window/03/1004-max-consecutive-ones-iii.md","/sliding-window/03/1208-get-equal-substrings-within-budget.md","/sliding-window/03/1493-longest-subarray-of-1s-after-deleting-one-element.md"]},{title:"第 4 章 计数问题",icon:"shu",children:["/sliding-window/04/intro.md","/sliding-window/04/0159-longest-substring-with-at-most-two-distinct-characters.md","/sliding-window/04/0340-longest-substring-with-at-most-k-distinct-characters.md","/sliding-window/04/0904-fruit-into-baskets.md","/sliding-window/04/0713-subarray-product-less-than-k.md"]},{title:"第 5 章 使用数据结构的滑动窗口问题",icon:"shu",children:["/sliding-window/05/intro.md","/sliding-window/05/1438-longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit.md"]},{title:"第 6 章 固定长度的滑动窗口问题",icon:"shu",children:["/sliding-window/06/intro.md","/sliding-window/06/0643-maximum-average-subarray-i.md","/sliding-window/06/0674-longest-continuous-increasing-subsequence.md","/sliding-window/06/0978-longest-turbulent-subarray.md","/sliding-window/06/1052-grumpy-bookstore-owner.md","/sliding-window/06/1423-maximum-points-you-can-obtain-from-cards.md","/sliding-window/06/1456-maximum-number-of-vowels-in-a-substring-of-given-length.md","/sliding-window/06/1658-minimum-operations-to-reduce-x-to-zero.md"]}],"/two-pointers/":[{title:"第 1 章 基本问题",icon:"shu",children:["/two-pointers/basic/intro.md","/two-pointers/basic/0125-valid-palindrome.md","/two-pointers/basic/0167-two-sum-ii-input-array-is-sorted.md","/two-pointers/basic/0344-reverse-string.md","/two-pointers/basic/0345-reverse-vowels-of-a-string.md"]},{title:"第 2 章 重要问题",icon:"shu",children:["/two-pointers/importance/intro.md","/two-pointers/importance/0011-container-with-most-water.md","/two-pointers/importance/0015-3sum.md","/two-pointers/importance/0016-3sum-closest.md","/two-pointers/importance/0018-4sum.md","/two-pointers/importance/0042-trapping-rain-water.md"]},{title:"第 3 章 进阶问题",icon:"shu",children:["/two-pointers/advance/0633-sum-of-square-numbers.md","/two-pointers/advance/0881-boats-to-save-people.md","/two-pointers/advance/0977-squares-of-a-sorted-array.md"]}],"/music/":[{title:"音乐欣赏",icon:"changpian",children:["/music/lishidetiankong.md","/music/gungunchangjiangdongshishui.md","/music/zheyibai.md","/music/dongni.md"]}],"/merge-sort/":[{title:"第 1 部分 知识点讲解",icon:"shu",children:["/merge-sort/intro.md","/merge-sort/0088-merge-sorted-array.md","/merge-sort/merge-sort.md","/merge-sort/merge-sort-optimize.md","/merge-sort/bottom2up.md","/merge-sort/practice.md"]},{title:"第 2 部分 习题精讲",icon:"shu",children:["/merge-sort/0051-shu-zu-zhong-de-ni-xu-dui-lcof.md","/merge-sort/0315-count-of-smaller-numbers-after-self.md","/merge-sort/0493-reverse-pairs.md","/merge-sort/0050-powx-n.md"]}],"/quick-sort/":[{title:"第 1 部分 知识点讲解",icon:"shu",children:["/quick-sort/intro.md","/quick-sort/partition.md","/quick-sort/quick-sort-basic.md","/quick-sort/random-select-pivot.md","/quick-sort/quick-sort-two-ways.md","/quick-sort/quick-sort-three-ways.md","/quick-sort/summary-partition.md","/quick-sort/review-loop-invariant.md","/quick-sort/review-recursion.md","/quick-sort/summary.md"]},{title:"第 2 部分 习题精讲",icon:"shu",children:["/quick-sort/0075-sort-colors.md","/quick-sort/0215-kth-largest-element-in-an-array.md","/quick-sort/17-14-smallest-k-lcci.md","/quick-sort/0040-zui-xiao-de-kge-shu-lcof.md","/quick-sort/0451-sort-characters-by-frequency.md"]}],"/dynamic-programming/":[{title:"第 1 章 知识点精讲",icon:"shu",children:["/dynamic-programming/01.md","/dynamic-programming/02.md","/dynamic-programming/03.md","/dynamic-programming/04.md","/dynamic-programming/05.md","/dynamic-programming/06.md","/dynamic-programming/07.md","/dynamic-programming/08.md","/dynamic-programming/09.md"]},{title:"第 2 章 基础、重点动态规划问题",icon:"shu",children:["/dynamic-programming/solutions/0053-maximum-subarray.md","/dynamic-programming/solutions/0062-unique-paths.md","/dynamic-programming/solutions/0063-unique-paths-ii.md","/dynamic-programming/solutions/0064-minimum-path-sum.md","/dynamic-programming/solutions/0070-climbing-stairs.md","/dynamic-programming/solutions/0091-decode-ways.md","/dynamic-programming/solutions/0096-unique-binary-search-trees.md","/dynamic-programming/solutions/0120-triangle.md","/dynamic-programming/solutions/0139-word-break.md","/dynamic-programming/solutions/0152-maximum-product-subarray.md","/dynamic-programming/solutions/0198-house-robber.md","/dynamic-programming/solutions/0221-maximal-square.md","/dynamic-programming/solutions/0238-product-of-array-except-self.md","/dynamic-programming/solutions/0279-perfect-squares.md","/dynamic-programming/solutions/0300-longest-increasing-subsequence.md","/dynamic-programming/solutions/0343-integer-break.md","/dynamic-programming/solutions/0376-wiggle-subsequence.md","/dynamic-programming/solutions/0377-combination-sum-iv.md","/dynamic-programming/solutions/0413-arithmetic-slices.md","/dynamic-programming/solutions/0509-fibonacci-number.md","/dynamic-programming/solutions/0746-min-cost-climbing-stairs.md","/dynamic-programming/solutions/0918-maximum-sum-circular-subarray.md","/dynamic-programming/solutions/0983-minimum-cost-for-tickets.md"]},{title:"背包动态规划",icon:"shu",children:["/dynamic-programming/solutions/0416-partition-equal-subset-sum.md","/dynamic-programming/solutions/0474-ones-and-zeroes.md","/dynamic-programming/solutions/0494-target-sum.md","/dynamic-programming/solutions/0518-完全背包公式推导.md","/dynamic-programming/solutions/0322-coin-change.md","/dynamic-programming/solutions/0518-coin-change-2.md","/dynamic-programming/solutions/1449-form-largest-integer-with-digits-that-add-up-to-target.md"]},{title:"区间动态规划",icon:"shu",children:["/dynamic-programming/solutions/0005-longest-palindromic-substring.md","/dynamic-programming/solutions/0516-longest-palindromic-subsequence.md","/dynamic-programming/solutions/0644-strange-printer.md"]},{title:"树形动态规划",icon:"shu",children:["/dynamic-programming/solutions/tree.md","/dynamic-programming/solutions/0337-house-robber-iii.md","/dynamic-programming/solutions/0124-binary-tree-maximum-path-sum.md","/dynamic-programming/solutions/0543-diameter-of-binary-tree.md","/dynamic-programming/solutions/0687-longest-univalue-path.md","/dynamic-programming/solutions/0968-binary-tree-cameras.md","/dynamic-programming/solutions/1372-longest-zigzag-path-in-a-binary-tree.md","/dynamic-programming/solutions/0865-smallest-subtree-with-all-the-deepest-nodes.md"]},{title:"两个字符串的动态规划",icon:"shu",children:["/dynamic-programming/solutions/1143-longest-common-subsequence.md","/dynamic-programming/solutions/0072-edit-distance.md","/dynamic-programming/solutions/0010-regular-expression-matching.md"]},{title:"股票系列问题",icon:"shu",children:["/dynamic-programming/solutions/0121-best-time-to-buy-and-sell-stock.md","/dynamic-programming/solutions/0122-best-time-to-buy-and-sell-stock-ii.md","/dynamic-programming/solutions/0123-best-time-to-buy-and-sell-stock-iii.md","/dynamic-programming/solutions/0309-best-time-to-buy-and-sell-stock-with-cooldown.md","/dynamic-programming/solutions/0188-best-time-to-buy-and-sell-stock-iv.md","/dynamic-programming/solutions/0714-best-time-to-buy-and-sell-stock-with-transaction-fee.md"]},{title:"博弈类动态规划",icon:"shu",children:["/dynamic-programming/solutions/0292-nim-game.md","/dynamic-programming/solutions/0486-predict-the-winner.md","/dynamic-programming/solutions/0877-stone-game.md","/dynamic-programming/solutions/1025-divisor-game.md","/dynamic-programming/solutions/1140-stone-game-ii.md"]},{title:"数位 DP",icon:"shu",children:["/dynamic-programming/solutions/0233-number-of-digit-one.md"]},{title:"输出结果",icon:"shu",children:["/dynamic-programming/solutions/0368-largest-divisible-subset.md"]}],"/union-find/":[{title:"第 1 章 知识点精讲",icon:"shu",children:["/union-find/01.md","/union-find/02.md","/union-find/03.md","/union-find/04.md","/union-find/05.md","/union-find/06.md","/union-find/07.md","/union-find/08.md","/union-find/09.md"]},{title:"第 2 章 练习题精讲",icon:"shu",children:["/union-find/practice.md","/union-find/solutions/0990-satisfiability-of-equality-equations.md","/union-find/solutions/0399-evaluate-division.md","/union-find/solutions/0765-couples-holding-hands.md","/union-find/solutions/0778-swim-in-rising-water.md","/union-find/solutions/0803-bricks-falling-when-hit.md","/union-find/solutions/0947-most-stones-removed-with-same-row-or-column.md","/union-find/solutions/0959-regions-cut-by-slashes.md","/union-find/solutions/1202-smallest-string-with-swaps.md","/union-find/solutions/0128-longest-consecutive-sequence.md","/union-find/solutions/0130-surrounded-regions.md","/union-find/solutions/0200-number-of-islands.md","/union-find/solutions/0547-friend-circles.md","/union-find/solutions/0684-redundant-connection.md","/union-find/solutions/0685-redundant-connection-ii.md","/union-find/solutions/0721-accounts-merge.md","/union-find/solutions/0945-minimum-increment-to-make-array-unique.md","/union-find/solutions/0952-largest-component-size-by-common-factor.md","/union-find/solutions/1319-number-of-operations-to-make-network-connected.md","/union-find/solutions/1559-detect-cycles-in-2d-grid.md"]}],"/heap/":[{title:"第 1 章 知识点精讲",icon:"book",children:["/heap/01.md","/heap/02.md","/heap/03.md","/heap/04.md","/heap/05.md","/heap/06.md"]},{title:"第 2 章 入门问题",icon:"book",children:["/heap/practice.md","/heap/solutions/0703-kth-largest-element-in-a-stream.md","/heap/solutions/0347-top-k-frequent-elements.md","/heap/solutions/0973-k-closest-points-to-origin.md","/heap/solutions/1046-last-stone-weight.md","/heap/solutions/0451-sort-characters-by-frequency.md","/heap/solutions/1282-group-the-people-given-the-group-size-they-belong-to.md","/heap/solutions/1296-divide-array-in-sets-of-k-consecutive-numbers.md","/heap/solutions/0313-super-ugly-number.md"]},{title:"第 3 章 经典问题",icon:"book",children:["/heap/solutions/0023-merge-k-sorted-lists.md","/heap/solutions/0215-kth-largest-element-in-an-array.md","/heap/solutions/0295-find-median-from-data-stream.md","/heap/solutions/0218-the-skyline-problem.md"]}],"/graph/":[{title:"第 1 章 单源最短路径 Dijkstra 算法",icon:"shu",children:["/graph/dijkstra/intro.md","/graph/dijkstra/geometrically-intuitive.md","/graph/dijkstra/relaxation.md","/graph/dijkstra/example.md","/graph/dijkstra/code.md","/graph/dijkstra/summarize.md"]},{title:"第 2 章 最小生成树算法",icon:"shu",children:["/graph/minimum-spanning-tree/intro.md","/graph/minimum-spanning-tree/application.md","/graph/minimum-spanning-tree/segmentation-theorem.md","/graph/minimum-spanning-tree/kruskal.md","/graph/minimum-spanning-tree/lazy-prim.md","/graph/minimum-spanning-tree/summarize.md"]}],"/linked-list/":[{title:"第 1 章 链表基本问题",icon:"shu",children:["/linked-list/basic/intro.md","/linked-list/basic/0002-add-two-numbers.md","/linked-list/basic/0021-merge-two-sorted-lists.md","/linked-list/basic/0023-merge-k-sorted-lists.md","/linked-list/basic/0024-swap-nodes-in-pairs.md","/linked-list/basic/0025-reverse-nodes-in-k-group.md","/linked-list/basic/0061-rotate-list.md","/linked-list/basic/0082-remove-duplicates-from-sorted-list-ii.md","/linked-list/basic/0083-remove-duplicates-from-sorted-list.md","/linked-list/basic/0086-partition-list.md","/linked-list/basic/0092-reverse-linked-list-ii.md","/linked-list/basic/0109-convert-sorted-list-to-binary-search-tree.md","/linked-list/basic/0143-reorder-list.md","/linked-list/basic/0147-insertion-sort-list.md","/linked-list/basic/0148-sort-list.md","/linked-list/basic/0203-remove-linked-list-elements.md","/linked-list/basic/0206-reverse-linked-list.md","/linked-list/basic/0234-palindrome-linked-list.md","/linked-list/basic/0237-delete-node-in-a-linked-list.md","/linked-list/basic/0328-odd-even-linked-list.md","/linked-list/basic/0445-add-two-numbers-ii.md","/linked-list/basic/0876-middle-of-the-linked-list.md"]},{title:"第 2 章 快慢指针",icon:"shu",children:["/linked-list/fast-slow-points/0019-remove-nth-node-from-end-of-list.md","/linked-list/fast-slow-points/0160-intersection-of-two-linked-lists.md","/linked-list/fast-slow-points/0141-linked-list-cycle.md","/linked-list/fast-slow-points/0142-linked-list-cycle-ii.md"]},{title:"第 3 章 数据结构设计",icon:"shu",children:["/linked-list/design/0355-design-twitter.md","/linked-list/design/0146-lru-cache.md","/linked-list/design/0460-lfu-cache.md","/linked-list/design/1206-design-skiplist.md"]}],"/presum-hashtable/":[{title:"前缀和与哈希表习题",icon:"shu",children:["/presum-hashtable/solutions/0560-subarray-sum-equals-k.md","/presum-hashtable/solutions/0523-continuous-subarray-sum.md","/presum-hashtable/solutions/0525-contiguous-array.md","/presum-hashtable/solutions/0974-subarray-sums-divisible-by-k.md","/presum-hashtable/solutions/1248-count-number-of-nice-subarrays.md","/presum-hashtable/solutions/1314-matrix-block-sum.md"]}],"/tree/":[{title:"第 1 部分 树的基本问题",icon:"book",children:["/tree/solutions/0094-binary-tree-inorder-traversal.md","/tree/solutions/0100-same-tree.md","/tree/solutions/0101-symmetric-tree.md","/tree/solutions/0102-binary-tree-level-order-traversal.md","/tree/solutions/0103-binary-tree-zigzag-level-order-traversal.md","/tree/solutions/0104-maximum-depth-of-binary-tree.md","/tree/solutions/0105-construct-binary-tree-from-preorder-and-inorder-traversal.md","/tree/solutions/0106-construct-binary-tree-from-inorder-and-postorder-traversal.md","/tree/solutions/0107-binary-tree-level-order-traversal-ii.md","/tree/solutions/0110-balanced-binary-tree.md","/tree/solutions/0111-minimum-depth-of-binary-tree.md","/tree/solutions/0112-path-sum.md","/tree/solutions/0129-sum-root-to-leaf-numbers.md","/tree/solutions/0199-binary-tree-right-side-view.md","/tree/solutions/0222-count-complete-tree-nodes.md","/tree/solutions/0226-invert-binary-tree.md","/tree/solutions/0236-lowest-common-ancestor-of-a-binary-tree.md","/tree/solutions/0257-binary-tree-paths.md","/tree/solutions/0297-serialize-and-deserialize-binary-tree.md","/tree/solutions/0404-sum-of-left-leaves.md","/tree/solutions/0437-path-sum-iii.md","/tree/solutions/0508-most-frequent-subtree-sum.md","/tree/solutions/0572-subtree-of-another-tree.md","/tree/solutions/0863-all-nodes-distance-k-in-binary-tree.md","/tree/solutions/0951-flip-equivalent-binary-trees.md","/tree/solutions/0993-cousins-in-binary-tree.md","/tree/solutions/1079-letter-tile-possibilities.md","/tree/solutions/1080-insufficient-nodes-in-root-to-leaf-paths.md"]},{title:"第 2 部分 二分搜索树",icon:"book",children:["/tree/intro.md","/tree/solutions/1008-construct-binary-search-tree-from-preorder-traversal.md","/tree/solutions/0095-unique-binary-search-trees-ii.md","/tree/solutions/0098-validate-binary-search-tree.md","/tree/solutions/0108-convert-sorted-array-to-binary-search-tree.md","/tree/solutions/0109-convert-sorted-list-to-binary-search-tree.md","/tree/solutions/0220-contains-duplicate-iii.md","/tree/solutions/0230-kth-smallest-element-in-a-bst.md","/tree/solutions/0235-lowest-common-ancestor-of-a-binary-search-tree.md","/tree/solutions/0449-serialize-and-deserialize-bst.md","/tree/solutions/0450-delete-node-in-a-bst.md","/tree/solutions/0897-increasing-order-search-tree.md"]}],"/breadth-first-search/":[{title:"第 1 部分 基础问题",icon:"shu",children:["/breadth-first-search/solutions/1306-jump-game-iii.md","/breadth-first-search/solutions/1315-sum-of-nodes-with-even-valued-grandparent.md"]},{title:"第 2 部分 二维表格中的广度优先遍历",icon:"shu",children:["/breadth-first-search/solutions/0200-number-of-islands.md","/breadth-first-search/solutions/0542-01-matrix.md","/breadth-first-search/solutions/0994-rotting-oranges.md","/breadth-first-search/solutions/1162-as-far-from-land-as-possible.md"]},{title:"第 3 部分 构建图模型",icon:"shu",children:["/breadth-first-search/solutions/0690-employee-importance.md","/breadth-first-search/solutions/0279-perfect-squares.md","/breadth-first-search/solutions/0365-water-and-jug-problem.md","/breadth-first-search/solutions/0127-word-ladder.md","/breadth-first-search/solutions/0433-minimum-genetic-mutation.md","/breadth-first-search/solutions/0752-open-the-lock.md","/breadth-first-search/solutions/0773-sliding-puzzle.md"]},{title:"第 4 部分 拓扑排序",icon:"shu",children:["/breadth-first-search/solutions/intro.md","/breadth-first-search/solutions/0207-course-schedule.md","/breadth-first-search/solutions/0210-course-schedule-ii.md","/breadth-first-search/solutions/0802-find-eventual-safe-states.md","/breadth-first-search/solutions/0310-minimum-height-trees.md","/breadth-first-search/solutions/1203-sort-items-by-groups-respecting-dependencies.md"]}],"/greedy/":[{title:"贪心算法",icon:"shu",children:["/greedy/solutions/0012-integer-to-roman.md","/greedy/solutions/0045-jump-game-ii.md","/greedy/solutions/0056-merge-intervals.md","/greedy/solutions/0057-insert-interval.md","/greedy/solutions/0343-integer-break.md","/greedy/solutions/0354-russian-doll-envelopes.md","/greedy/solutions/0452-minimum-number-of-arrows-to-burst-balloons.md","/greedy/solutions/0455-assign-cookies.md","/greedy/solutions/0860-lemonade-change.md","/greedy/solutions/0861-score-after-flipping-matrix.md","/greedy/solutions/0921-minimum-add-to-make-parentheses-valid.md","/greedy/solutions/1400-construct-k-palindrome-strings.md"]}],"/topological-sort/":[],"/hash-table/":[{title:"哈希表",icon:"shu",children:["/hash-table/solutions/0001-two-sum.md","/hash-table/solutions/0036-valid-sudoku.md","/hash-table/solutions/0041-first-missing-positive.md","/hash-table/solutions/0049-group-anagrams.md","/hash-table/solutions/0202-happy-number.md","/hash-table/solutions/0205-isomorphic-strings.md","/hash-table/solutions/0217-contains-duplicate.md","/hash-table/solutions/0219-contains-duplicate-ii.md","/hash-table/solutions/0242-valid-anagram.md","/hash-table/solutions/0290-word-pattern.md","/hash-table/solutions/0349-intersection-of-two-arrays.md","/hash-table/solutions/0350-intersection-of-two-arrays-ii.md","/hash-table/solutions/0447-number-of-boomerangs.md","/hash-table/solutions/0454-4sum-ii.md","/hash-table/solutions/1010-pairs-of-songs-with-total-durations-divisible-by-60.md"]}],"/stack/":[{title:"栈",icon:"shu",children:["/stack/solutions/0020-valid-parentheses.md","/stack/solutions/0071-simplify-path.md","/stack/solutions/0150-evaluate-reverse-polish-notation.md","/stack/solutions/0946-validate-stack-sequences.md","/stack/solutions/0144-binary-tree-preorder-traversal.md","/stack/solutions/0094-binary-tree-inorder-traversal.md","/stack/solutions/0145-binary-tree-postorder-traversal.md","/stack/solutions/0225-implement-stack-using-queues.md","/stack/solutions/0232-implement-queue-using-stacks.md","/stack/solutions/0155-min-stack.md","/stack/solutions/0173-binary-search-tree-iterator.md","/stack/solutions/0341-flatten-nested-list-iterator.md","/stack/solutions/0331-verify-preorder-serialization-of-a-binary-tree.md","/stack/solutions/1111-maximum-nesting-depth-of-two-valid-parentheses-strings.md"]}],"/queue/":[{title:"队列",icon:"shu",children:["/queue/solutions/0239-sliding-window-maximum.md","/queue/solutions/0622-design-circular-queue.md","/queue/solutions/0641-design-circular-deque.md","/queue/solutions/0933-number-of-recent-calls.md","/queue/solutions/0621-task-scheduler.md"]}],"/monotonous-stack/":[{title:"单调栈",icon:"shu",children:["/monotonous-stack/solutions/0084-largest-rectangle-in-histogram.md","/monotonous-stack/solutions/0316-remove-duplicate-letters.md","/monotonous-stack/solutions/0456-132-pattern.md","/monotonous-stack/solutions/0496-next-greater-element-i.md","/monotonous-stack/solutions/0503-next-greater-element-ii.md","/monotonous-stack/solutions/0581-shortest-unsorted-continuous-subarray.md","/monotonous-stack/solutions/0739-daily-temperatures.md","/monotonous-stack/solutions/0970-sum-of-subarray-minimums.md","/monotonous-stack/solutions/0962-maximum-width-ramp.md","/monotonous-stack/solutions/1673-find-the-most-competitive-subsequence.md"]}],"/math/":[{title:"数学",icon:"shu",children:["/math/solutions/0507-perfect-number.md"]}],"/difference/":[{title:"差分",icon:"shu",children:["/difference/1109-corporate-flight-bookings.md"]}],"/array/":[{title:"数组",icon:"shu",children:["/array/solutions/0008-string-to-integer-atoi.md","/array/solutions/0013-roman-to-integer.md","/array/solutions/0066-plus-one.md","/array/solutions/0067-add-binary.md","/array/solutions/0125-valid-palindrome.md","/array/solutions/0136-single-number.md","/array/solutions/0137-single-number-ii.md","/array/solutions/0189-rotate-array.md","/array/solutions/0240-search-a-2d-matrix-ii.md","/array/solutions/0387-first-unique-character-in-a-string.md","/array/solutions/0448-find-all-numbers-disappeared-in-an-array.md","/array/solutions/0461-hamming-distance.md","/array/solutions/0836-rectangle-overlap.md"]}],"/loop-invariant/":[{title:"第 1 部分 知识点讲解",icon:"shu",children:["/loop-invariant/intro.md","/loop-invariant/application.md","/loop-invariant/example.md","/loop-invariant/summary.md"]},{title:"第 2 部分 习题精讲",icon:"shu",children:["/loop-invariant/solutions/0026-remove-duplicates-from-sorted-array.md","/loop-invariant/solutions/0283-move-zeroes.md","/loop-invariant/solutions/0027-remove-element.md","/loop-invariant/solutions/0080-remove-duplicates-from-sorted-array-ii.md"]}],"/backtracking/":[{title:"第 1 章 基本问题",icon:"shu",children:["/backtracking/solutions/0046-permutations.md","/backtracking/solutions/0047-permutations-ii.md","/backtracking/solutions/38-zi-fu-chuan-de-pai-lie-lcof.md","/backtracking/solutions/0060-permutation-sequence.md","/backtracking/solutions/0039-combination-sum.md","/backtracking/solutions/0040-combination-sum-ii.md","/backtracking/solutions/0078-subsets.md","/backtracking/solutions/0090-subsets-ii.md","/backtracking/solutions/0077-combinations.md","/backtracking/solutions/0216-combination-sum-iii.md","/backtracking/solutions/0113-path-sum-ii.md","/backtracking/solutions/0131-palindrome-partitioning.md","/backtracking/solutions/0132-palindrome-partitioning-ii.md","/backtracking/solutions/0491-increasing-subsequences.md","/backtracking/solutions/0306-additive-number.md","/backtracking/solutions/0842-split-array-into-fibonacci-sequence.md"]},{title:"第 2 章 字符串中的回溯问题",icon:"shu",children:["/backtracking/solutions/0017-letter-combinations-of-a-phone-number.md","/backtracking/solutions/0022-generate-parentheses.md","/backtracking/solutions/0093-restore-ip-addresses.md","/backtracking/solutions/0401-binary-watch.md","/backtracking/solutions/0784-letter-case-permutation.md","/backtracking/solutions/1079-letter-tile-possibilities.md"]},{title:"第 3 部分 Flood Fill",icon:"shu",children:["/backtracking/solutions/0733-flood-fill.md","/backtracking/solutions/0079-word-search.md","/backtracking/solutions/0417-pacific-atlantic-water-flow.md","/backtracking/solutions/0200-number-of-islands.md","/backtracking/solutions/0130-surrounded-regions.md","/backtracking/solutions/0529-minesweeper.md","/backtracking/solutions/1020-number-of-enclaves.md","/backtracking/solutions/1034-coloring-a-border.md","/backtracking/solutions/1254-number-of-closed-islands.md","/backtracking/solutions/1391-check-if-there-is-a-valid-path-in-a-grid.md","/backtracking/solutions/1593-split-a-string-into-the-max-number-of-unique-substrings.md","/backtracking/solutions/1631-path-with-minimum-effort.md"]},{title:"第 4 部分 游戏",icon:"shu",children:["/backtracking/solutions/0051-n-queens.md","/backtracking/solutions/1329-sort-the-matrix-diagonally.md","/backtracking/solutions/0037-sudoku-solver.md"]},{title:"第 5 部分 回溯算法与其它算法结合",icon:"shu",children:["/backtracking/solutions/0126-word-ladder-ii.md","/backtracking/solutions/0140-word-break-ii.md"]}],"/chat/":["/chat/intro.md","/chat/学习算法没有捷径.md","/chat/谋生的路上不抛弃良知.md","/chat/模板不重要（转载）.md","/chat/软件工程师和算法竞赛（转载）.md","/chat/梦想破碎的2021年.md","/chat/关于我在「力扣」上回答问题的点点滴滴.md","/chat/我对算法「题」的偏见.md","/chat/剑指 Offer（第 2 版）与「力扣」问题的对应关系.md","/chat/一些无处安放的链接.md","/chat/高级程序员不是追求的目标（雷军）.md"],"/bit-manipulation/":[{title:"位运算",icon:"shu",children:["/bit-manipulation/solutions/1371-find-the-longest-substring-containing-vowels-in-even-counts.md","/bit-manipulation/solutions/1457-pseudo-palindromic-paths-in-a-binary-tree.md","/bit-manipulation/solutions/0050-powx-n.md","/bit-manipulation/solutions/0052-n-queens-ii.md","/bit-manipulation/solutions/56-1-shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof.md","/bit-manipulation/solutions/0067-add-binary.md","/bit-manipulation/solutions/0136-single-number.md","/bit-manipulation/solutions/0201-bitwise-and-of-numbers-range.md","/bit-manipulation/solutions/0342-power-of-four.md","/bit-manipulation/solutions/0421-maximum-xor-of-two-numbers-in-an-array.md","/bit-manipulation/solutions/0442-find-all-duplicates-in-an-array.md","/bit-manipulation/solutions/0477-total-hamming-distance.md","/bit-manipulation/solutions/1128-number-of-equivalent-domino-pairs.md"]}],"/trie/":[{title:"前缀树",icon:"shu",children:["/trie/solutions/0208-implement-trie-prefix-tree.md","/trie/solutions/0211-design-add-and-search-words-data-structure.md","/trie/solutions/0677-map-sum-pairs.md"]}],"/":[{title:"第 1 章 递归、时间复杂度、循环不变量",icon:"shu",children:["/algorithm-basic/reference/reference.md","/algorithm-basic/reference/introduction-to-algorithms.md","/algorithm-basic/reference/download.md","/algorithm-basic/reference/how-to-ask-questions.md","/algorithm-basic/recursion-time-complexity/recursion.md","/algorithm-basic/recursion-time-complexity/time-complexity.md","/algorithm-basic/loop-invariant/intro.md"]},{title:"第 2 章 排序算法",icon:"shu",children:["/algorithm-basic/basic-sort/intro.md","/algorithm-basic/basic-sort/selection.md","/algorithm-basic/basic-sort/bubble.md","/algorithm-basic/basic-sort/bubble-optimization.md","/algorithm-basic/basic-sort/insertion.md","/algorithm-basic/basic-sort/insertion-meaning.md","/algorithm-basic/basic-sort/insertion-optimization.md","/algorithm-basic/basic-sort/shell.md","/algorithm-basic/merge-sort/intro.md","/algorithm-basic/quick-sort/intro.md","/algorithm-basic/non-comparison/intro.md","/algorithm-basic/non-comparison/count-sort.md","/algorithm-basic/non-comparison/radix-sort.md","/algorithm-basic/non-comparison/bucket-sort.md"]},{title:"第 3 章 二分查找、滑动窗口、双指针",icon:"shu",children:["/algorithm-basic/binary-search/intro.md","/algorithm-basic/sliding-window/intro.md","/algorithm-basic/sliding-window/practice.md","/algorithm-basic/two-pointers/intro.md"]},{title:"第 4 章 数据结构基础",icon:"shu",children:["/data-structure-basic/linked-list/intro.md","/data-structure-basic/linked-list/practice.md","/data-structure-basic/stack/intro.md","/data-structure-basic/stack/practice.md","/data-structure-basic/queue/intro.md","/data-structure-basic/queue/practice.md","/data-structure-basic/heap/intro.md","/data-structure-basic/heap/practice.md","/data-structure-basic/tree/intro.md","/data-structure-basic/tree/practice.md","/data-structure-basic/hash-table/intro.md","/data-structure-basic/hash-table/practice.md"]},{title:"第 5 章 算法思想",icon:"shu",children:["/algorithm-idea/backtracking/01-intro.md","/algorithm-idea/backtracking/02-tree.md","/algorithm-idea/backtracking/03-backtracking.md","/algorithm-idea/backtracking/04-questions.md","/algorithm-idea/backtracking/05-pruning.md","/algorithm-idea/backtracking/06-summary.md","/algorithm-idea/backtracking/07-practice.md","/algorithm-idea/breadth-first-search/intro.md","/algorithm-idea/breadth-first-search/practice.md","/algorithm-idea/dynamic-programming/intro.md","/algorithm-idea/dynamic-programming/practice.md","/algorithm-idea/greedy/intro.md","/algorithm-idea/greedy/practice.md"]},{title:"第 6 章 高级数据结构",icon:"shu",children:["/data-structure-advance/trie/01.md","/data-structure-advance/trie/02.md","/data-structure-advance/trie/03.md","/data-structure-advance/trie/04.md","/data-structure-advance/trie/05.md","/data-structure-advance/union-find/intro.md","/data-structure-advance/union-find/practice.md","/data-structure-advance/segment-tree/intro.md","/data-structure-advance/segment-tree/01.md","/data-structure-advance/segment-tree/02.md","/data-structure-advance/segment-tree/03.md","/data-structure-advance/segment-tree/04.md","/data-structure-advance/fenwick-tree/01.md","/data-structure-advance/fenwick-tree/02.md","/data-structure-advance/fenwick-tree/03.md","/data-structure-advance/fenwick-tree/04.md","/data-structure-advance/fenwick-tree/05.md","/data-structure-advance/fenwick-tree/06.md","/data-structure-advance/fenwick-tree/07.md"]}]},sidebarDepth:-1,breadcrumb:!0,themeColor:!1,footer:{display:!0,content:"<a href='https://beian.miit.gov.cn' target='_blank' >闽ICP备2022001209号</a>"},comment:{type:"valine",appId:"mqMDM2jkdekHlk3GRbuUPjoG-gzGzoHsz",appKey:"8kmH8Wx6Dh5ewLScMuafVH9o",placeholder:"留言请不要贴一段代码，让别人找 bug，代码问题请自己调试。填写 E-mail 在收到回复的时候会有邮件通知，有反馈和建议请到右上角「留言反馈」处留言，或者给本 GitHub 提一个 issue。",author:"liweiwei1419"},copyright:{status:"global"},git:{timezone:"Asia/Shanghai"},search:!0,searchMaxSuggestions:10,mdEnhance:{enableAll:!0,presentation:{plugins:["highlight","math","search","notes","zoom","anything","audio","chalkboard"]}},pwa:{favicon:"/favicon.ico",cachePic:!0,apple:{icon:"/assets/icon/apple-icon-152.png",statusBarColor:"black"},msTile:{image:"/assets/icon/ms-icon-144.png",color:"#ffffff"},manifest:{icons:[{src:"/assets/icon/chrome-mask-512.png",sizes:"512x512",purpose:"maskable",type:"image/png"},{src:"/assets/icon/chrome-mask-192.png",sizes:"192x192",purpose:"maskable",type:"image/png"},{src:"/assets/icon/chrome-512.png",sizes:"512x512",type:"image/png"},{src:"/assets/icon/chrome-192.png",sizes:"192x192",type:"image/png"}],shortcuts:[{name:"Guide",short_name:"Guide",url:"/guide/",icons:[{src:"/assets/icon/guide-maskable.png",sizes:"192x192",purpose:"maskable",type:"image/png"},{src:"/assets/icon/guide-monochrome.png",sizes:"192x192",purpose:"monochrome",type:"image/png"}]}]}},locales:{"/":{lang:"en-US",selectText:"Language",label:"English",ariaLabel:"Select language",meta:{contributor:"Contributors",editLink:"Edit this page",updateTime:"Last update"},themeColor:{themeColor:"Theme Color",themeMode:"Theme Mode"},encrypt:{title:"Please enter password",errorHint:"Please enter the correct password!"},error404:{hint:["There’s nothing here.","How did we get here?","That’s a Four-Oh-Four.","Looks like we've got some broken links."],back:"Go back",home:"Take me home"},blog:{article:"Articles",articleList:"Article List",category:"Category",tag:"Tags",timeline:"Timeline",timelineText:"Yesterday Once More!",allText:"All",intro:"Personal Intro",star:"Star",slides:"Slides",encrypt:"Encrypted"}}},iconPrefix:"icon-",editLinks:!0},locales:{}};a(171);const Kt={"/":{placeholder:"Write a comment here (Fill in the email address to receive an email notification when being replied)"}};let Rt=null;var Ht=r.a.extend({name:"Valine",props:{config:{type:Object,required:!0}},computed:{enable(){const{config:e}=this;return Boolean(e&&e.appId&&e.appKey)},enableComment(){if(!this.enable)return!1;const e=!1!==this.config.comment,t=this.$page.frontmatter.comment;return e&&!1!==t||!0===t},enablePageview(){if(!this.enable)return!1;const e=!1!==this.config.visitor,t=this.$page.frontmatter.visitor;return e&&!1!==t||!0===t}},watch:{$route(e,t){e.path!==t.path&&r.a.nextTick(()=>{Rt&&clearTimeout(Rt),Rt=setTimeout(()=>{this.initValine()},this.config.delay)})}},mounted(){this.enable&&(Rt=setTimeout(()=>{this.initValine()},this.config.delay))},methods:{initValine(){const{config:e}=this;a.e(639).then(a.t.bind(null,504,7)).then(t=>{(new t.default).init({el:"#valine",appId:e.appId,appKey:e.appKey,placeholder:e.placeholder||Kt[this.$localePath||"/"].placeholder,meta:e.meta||["nick","mail"],requiredFields:e.requiredFields||["nick"],avatar:e.avatar||"retro",visitor:this.enablePageview,recordIP:e.recordIP||!1,path:"undefined"==typeof window?"":window.location.pathname,pageSize:e.pageSize||10,enableQQ:e.enableQQ||!0,emojiCDN:e.emojiCDN||"",emojiMaps:e.emojiMaps||{},lang:"zh-CN"===this.$lang?"zh-CN":"en"})})}}}),Vt=(a(172),Object(Bt.a)(Ht,(function(){var e=this._self._c;this._self._setupProxy;return e("div",{directives:[{name:"show",rawName:"v-show",value:this.enableComment,expression:"enableComment"}],staticClass:"valine-wrapper"},[e("div",{attrs:{id:"valine"}})])}),[],!1,null,null,null).exports),Wt=r.a.extend({name:"CommentService",components:{CommentProvider:Vt},data:()=>({options:{type:"valine",appId:"mqMDM2jkdekHlk3GRbuUPjoG-gzGzoHsz",appKey:"8kmH8Wx6Dh5ewLScMuafVH9o",placeholder:"留言请不要贴一段代码，让别人找 bug，代码问题请自己调试。填写 E-mail 在收到回复的时候会有邮件通知，有反馈和建议请到右上角「留言反馈」处留言，或者给本 GitHub 提一个 issue。",author:"liweiwei1419"}}),computed:{pluginEnable(){return"disable"!==this.options.type&&(this.$frontmatter.comment||!1!==this.options.comment)}}}),Yt=Object(Bt.a)(Wt,(function(){var e=this._self._c;this._self._setupProxy;return e("div",{directives:[{name:"show",rawName:"v-show",value:this.pluginEnable,expression:"pluginEnable"}],staticClass:"comments-wrapper"},["vssue"===this.options.type?e("Vssue",{attrs:{title:this.$title}}):e("CommentProvider",{attrs:{config:this.options}})],1)}),[],!1,null,null,null).exports;var Gt=({Vue:e})=>{e.component("CommentService",Yt)},Xt=a(27);let Qt;var Zt=r.a.extend({name:"BackToTop",data:()=>({scrollTop:0}),computed:{display(){return!1!==this.$page.frontmatter.backToTop&&this.scrollTop>300},hint(){return Xt.a[this.$localePath||"/"].backToTop}},mounted(){this.scrollTop=this.getScrollTop(),Qt=Object(Pt.a)(()=>{this.scrollTop=this.getScrollTop()},100),window.addEventListener("scroll",Qt)},beforeDestroy(){window.removeEventListener("scroll",Qt)},methods:{getScrollTop:()=>window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,scrollToTop(){window.scrollTo({top:0,behavior:"smooth"}),this.scrollTop=0}}}),ea=(a(173),Object(Bt.a)(Zt,(function(){var e=this._self._c;this._self._setupProxy;return e("transition",{attrs:{name:"fade"}},[this.display?e("button",{staticClass:"back-to-top",attrs:{"aria-label":this.hint,"data-balloon-pos":"left"},on:{click:this.scrollToTop}},[e("svg",{attrs:{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"}},[e("path",{attrs:{d:"M512 0C229.517 0 0 229.517 0 512s227.752 512 512 512c282.483 0 512-227.752 512-512C1024 229.517 794.483\n      0 512 0zM351.338 271.89h305.434c14.125 0 26.483 12.358 26.483 26.482s-12.358 26.483-26.483\n      26.483H351.338c-14.124 0-26.483-12.358-26.483-26.483 0-15.89 12.359-26.482 26.483-26.482z\n      m331.917 303.669c-12.358 12.358-33.545 12.358-45.903 0L531.42 471.393v270.124c0 14.124-12.359\n      26.483-26.483 26.483s-26.483-12.359-26.483-26.483v-271.89l-105.93 104.166c-12.36 12.359-33.546 12.359-45.904\n      0-12.359-12.359-12.359-31.78 0-45.903l155.365-151.835c7.062-7.062 14.124-8.827 22.952-8.827s15.89 3.53 22.952\n      8.827L683.255 527.89c12.359 15.89 12.359 35.31 0 47.669z",fill:"currentColor"}})])]):this._e()])}),[],!1,null,null,null).exports),ta=r.a.extend({name:"Badge",functional:!0,props:{type:{type:String,default:"tip"},text:{type:String,default:""},vertical:{type:String,default:"top"},color:{type:String,default:""}},render(e,{props:t,slots:a}){const r={class:["badge",t.type],style:{verticalAlign:t.vertical}};return t.color&&(r.class.push("diy"),r.style.backgroundColor=t.color,r["data-color"]=t.color),e("span",r,t.text||a().default)}}),aa=(a(174),Object(Bt.a)(ta,void 0,void 0,!1,null,"7b453e57",null).exports),ra=r.a.extend({name:"BreadCrumb",props:{show:{type:Boolean,default:!0},icon:{type:Boolean,default:!0},iconPrefix:{type:String,default:""}},computed:{enable(){const e=this.$page.frontmatter.breadcrumb;return(this.show&&!1!==e||!0===e)&&this.config.length>1},displayIcon(){const e=this.$page.frontmatter.breadcrumbIcon;return this.enable&&(this.icon&&!1!==e||!0===e)},config(){const e=[],{pages:t}=this.$site,a=this.getLinks(this.$route);for(let r=1;r<a.length;r++)for(let n=0;n<t.length;n++){const o=t[n];if(o.path===a[r]){e.push({title:o.title,...o.frontmatter.icon?{icon:o.frontmatter.icon}:{},url:o.path});break}}return e}},methods:{getLinks(e){const t=e.path.split("/"),a=[];let r="";return t.forEach((e,n)=>{n!==t.length-1?(r+=e+"/",a.push(r)):""!==e&&(r+=e,a.push(r))}),a}}}),na=(a(175),Object(Bt.a)(ra,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("nav",{staticClass:"breadcrumb",class:{disable:!e.enable}},[e.enable?t("ol",{attrs:{vocab:"https://schema.org/",typeof:"BreadcrumbList"}},e._l(e.config,(function(a,r){return t("li",{key:a.url,class:{"is-active":e.config.length-1===r},attrs:{property:"itemListElement",typeof:"ListItem"}},[t("RouterLink",{attrs:{to:a.url,property:"item",typeof:"WebPage"}},[e.icon&&a.icon?t("i",{class:`iconfont ${e.iconPrefix}${a.icon}`}):e._e(),e._v(" "),t("span",{attrs:{property:"name"}},[e._v(e._s(a.title))])]),e._v(" "),t("meta",{attrs:{property:"position",content:r+1}})],1)})),0):e._e()])}),[],!1,null,null,null).exports),oa=r.a.extend({name:"Pagination",model:{prop:"currentPage",event:"change"},props:{total:{type:Number,default:10},perPage:{type:Number,default:10},currentPage:{type:Number,default:1}},data:()=>({input:""}),computed:{totalPages(){return Math.ceil(this.total/this.perPage)},enable(){return Boolean(this.totalPages)&&1!==this.totalPages},displayLeftEllipsis(){return!(this.totalPages<7)&&this.currentPage>4},displayRightEllipsis(){return!(this.totalPages<7)&&this.currentPage<this.totalPages-3},indexs(){const{currentPage:e,totalPages:t}=this;let a=1,r=t;const n=[];t>=7&&(e<=4&&e<t-3?(a=1,r=5):e>4&&e>=t-3?(r=t,a=t-4):t>7&&(a=e-2,r=e+2));for(let e=a;e<=r;e++)n.push(e);return n},locales(){return{"/":{prev:"Prev",next:"Next",navigate:"Jump to",button:"Go",errorText:"Please enter a number between 1 and $page !"}}[this.$localePath||"/"]}},mounted(){const{index:e}=this.$route.query;this.navigate(e?Number(e):1)},methods:{navigate(e){const t={...this.$route.query};t.page===e.toString()||1===e&&!t.page||(this.$emit("change",e),1===e?delete t.page:t.page=e.toString(),this.$router.push({path:this.$route.path,query:t}))},jumpPage(e){const t=parseInt(e);t<=this.totalPages&&t>0?this.navigate(t):alert(this.locales.errorText.replace(/\$page/g,this.totalPages.toString()))}}}),ia=(a(176),Object(Bt.a)(oa,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("div",{staticClass:"pagination-wrapper"},[e.enable?t("div",{staticClass:"pagination-list"},[t("div",{staticClass:"btn-group"},[e.currentPage>1?t("div",{staticClass:"prev",attrs:{role:"navigation",unselectable:"on"},on:{click:function(t){return e.navigate(e.currentPage-1)}}},[e._v("\n        "+e._s(e.locales.prev)+"\n      ")]):e._e(),e._v(" "),e.displayLeftEllipsis?t("div",{attrs:{role:"navigation"},on:{click:function(t){return e.navigate(1)}}},[e._v("\n        1\n      ")]):e._e(),e._v(" "),e.displayLeftEllipsis?t("div",{staticClass:"ellipsis"},[e._v("...")]):e._e(),e._v(" "),e._l(e.indexs,(function(a){return t("div",{key:a,class:{active:e.currentPage===a},attrs:{role:"navigation"},on:{click:function(t){return e.navigate(a)}}},[e._v("\n        "+e._s(a)+"\n      ")])})),e._v(" "),e.displayRightEllipsis?t("div",{staticClass:"ellipsis"},[e._v("...")]):e._e(),e._v(" "),e.displayRightEllipsis?t("div",{attrs:{role:"navigation"},on:{click:function(t){return e.navigate(e.totalPages)}}},[e._v("\n        "+e._s(e.totalPages)+"\n      ")]):e._e(),e._v(" "),e.currentPage<e.totalPages?t("div",{staticClass:"next",attrs:{role:"navigation"},on:{click:function(t){return e.navigate(e.currentPage+1)}}},[e._v("\n        "+e._s(e.locales.next)+"\n      ")]):e._e()],2),e._v(" "),t("div",{staticClass:"navigate-wrapper"},[t("label",{attrs:{for:"navigation-text"}},[e._v(e._s(e.locales.navigate)+": ")]),e._v(" "),t("input",{directives:[{name:"model",rawName:"v-model",value:e.input,expression:"input"}],attrs:{id:"navigation-text",type:"text"},domProps:{value:e.input},on:{keypress:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.jumpPage(e.input)},input:function(t){t.target.composing||(e.input=t.target.value)}}}),e._v(" "),t("button",{staticClass:"navigate",attrs:{role:"navigation",title:e.locales.button},on:{click:function(t){return e.jumpPage(e.input)}}},[e._v("\n        "+e._s(e.locales.button)+"\n      ")])])]):e._e()])}),[],!1,null,null,null).exports),la=a(10),sa=r.a.extend({name:"ScreenFull",props:{enable:{type:Boolean,default:!0}},data:()=>({canFullscreen:!1,isFullscreen:!1}),mounted(){this.canFullscreen=la.isEnabled&&this.enable},methods:{click(){la.isEnabled&&la.toggle().then(()=>{this.isFullscreen=la.isFullscreen})}}}),ca=(a(177),Object(Bt.a)(sa,(function(){var e=this._self._c;this._self._setupProxy;return this.canFullscreen?e("button",{class:this.isFullscreen?"cancel-full-screen":"full-screen",attrs:{"aria-pressed":this.isFullscreen},on:{click:this.click}},[e("svg",{attrs:{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg"}},[this.isFullscreen?e("path",{attrs:{d:"M778.46755555 78.62044445H247.92177778c-102.51377778 0-186.02666667 83.51288889-186.02666667 186.02666666v530.432c0 102.51377778 83.51288889 186.02666667 186.02666667 186.02666667h530.432c102.51377778 0 186.70933333-83.51288889 186.02666667-186.02666667V264.64711111c0.11377778-102.62755555-83.39911111-186.02666667-185.9128889-186.02666666zM250.88 574.35022222h171.12177778c23.32444445 0 43.12177778 19.11466667 43.80444444 43.80444445v171.12177778c0 24.00711111-19.11466667 43.12177778-43.12177777 43.12177777-12.06044445 0-22.64177778-5.00622222-30.37866667-12.74311111s-12.74311111-19.11466667-12.74311111-30.37866666v-66.44622223L224.59733333 877.90933333c-16.95288889 16.95288889-44.60088889 16.95288889-61.55377778 0-16.95288889-16.95288889-16.95288889-44.60088889 0-61.55377778l154.96533334-154.96533333h-66.44622222c-24.00711111 0-43.12177778-19.11466667-43.12177778-43.12177777 0-24.12088889 18.432-43.91822222 42.43911111-43.91822223z m521.89866667-98.87288889H601.65688889c-23.32444445 0-43.12177778-19.11466667-43.80444444-43.80444444V260.55111111c0-24.00711111 19.11466667-43.12177778 43.12177777-43.12177778 12.06044445 0 22.64177778 5.00622222 30.37866667 12.74311112s12.74311111 19.11466667 12.74311111 30.37866666v66.44622222l154.96533333-154.96533333c16.95288889-16.95288889 44.60088889-16.95288889 61.55377778 0 16.95288889 16.95288889 16.95288889 44.60088889 0 61.55377778L705.536 388.55111111h66.44622222c24.00711111 0 43.12177778 19.11466667 43.12177778 43.12177778 0.11377778 24.00711111-18.31822222 43.80444445-42.32533333 43.80444444z"}}):e("path",{attrs:{d:"M762.77333333 90.24H265.49333333c-96.10666667 0-174.4 78.29333333-174.4 174.4v497.28c0 96.10666667 78.29333333 174.4 174.4 174.4h497.28c96.10666667 0 175.04-78.29333333 174.4-174.4V264.64c0-96.21333333-78.18666667-174.4-174.4-174.4z m-387.2 761.17333333H215.04c-21.86666667 0-40.42666667-17.92-41.06666667-41.06666666V649.92c0-22.50666667 17.92-40.42666667 40.42666667-40.42666667 11.30666667 0 21.22666667 4.69333333 28.48 11.94666667 7.25333333 7.25333333 11.94666667 17.92 11.94666667 28.48v62.29333333l145.28-145.28c15.89333333-15.89333333 41.81333333-15.89333333 57.70666666 0 15.89333333 15.89333333 15.89333333 41.81333333 0 57.70666667L312.53333333 769.92h62.29333334c22.50666667 0 40.42666667 17.92 40.42666666 40.42666667s-17.17333333 41.06666667-39.68 41.06666666z m274.66666667-685.65333333H810.66666667c21.86666667 0 40.42666667 17.92 41.06666666 41.06666667v160.42666666c0 22.50666667-17.92 40.42666667-40.42666666 40.42666667-11.30666667 0-21.22666667-4.69333333-28.48-11.94666667-7.25333333-7.25333333-11.94666667-17.92-11.94666667-28.48V305.06666667L625.6 450.34666667c-15.89333333 15.89333333-41.81333333 15.89333333-57.70666667 0-15.89333333-15.89333333-15.89333333-41.81333333 0-57.70666667l145.28-145.28h-62.29333333c-22.50666667 0-40.42666667-17.92-40.42666667-40.42666667s17.17333333-41.17333333 39.78666667-41.17333333z"}})])]):this._e()}),[],!1,null,null,null).exports);var ma=({Vue:e})=>{ea.name&&e.component("BackToTop",ea),aa.name&&e.component("Badge",aa),na.name&&e.component("BreadCrumb",na),ia.name&&e.component("Pagination",ia),ca.name&&e.component("ScreenFull",ca)},pa=Object(Bt.a)({},(function(){var e=this._self._c;return e("svg",{staticClass:"icon icon-arrow-left",attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512"}},[e("path",{attrs:{d:"M401.4 224h-214l83-79.4c11.9-12.5 11.9-32.7 0-45.2s-31.2-12.5-43.2 0L89 233.4c-6 5.8-9 13.7-9 22.4v.4c0 8.7 3 16.6 9 22.4l138.1 134c12 12.5 31.3 12.5 43.2 0 11.9-12.5 11.9-32.7 0-45.2l-83-79.4h214c16.9 0 30.6-14.3 30.6-32 .1-18-13.6-32-30.5-32z"}})])}),[],!1,null,null,null).exports,ua=Object(Bt.a)({},(function(){var e=this._self._c;return e("svg",{staticClass:"icon icon-arrow-right",attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512"}},[e("path",{attrs:{d:"M284.9 412.6l138.1-134c6-5.8 9-13.7 9-22.4v-.4c0-8.7-3-16.6-9-22.4l-138.1-134c-12-12.5-31.3-12.5-43.2 0-11.9 12.5-11.9 32.7 0 45.2l83 79.4h-214c-17 0-30.7 14.3-30.7 32 0 18 13.7 32 30.6 32h214l-83 79.4c-11.9 12.5-11.9 32.7 0 45.2 12 12.5 31.3 12.5 43.3 0z"}})])}),[],!1,null,null,null).exports,ga=Object(Bt.a)({},(function(){var e=this._self._c;return e("svg",{staticClass:"icon close-icon",attrs:{width:"23",height:"22",xmlns:"http://www.w3.org/2000/svg"}},[e("path",{attrs:{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M1.12.358a1.224 1.224 0 011.729 0l8.92 8.914L20.686.358a1.224 1.224 0 011.73 1.728L13.497 11l8.92 8.913a1.222 1.222 0 11-1.73 1.729l-8.919-8.913-8.92 8.913a1.224 1.224 0 01-1.729-1.729L10.04 11l-8.92-8.914a1.222 1.222 0 010-1.728z",fill:"currentColor"}})])}),[],!1,null,null,null).exports;const da={"/":{install:"Install",iOSInstall:"Tap the share button and then 'Add to Homescreen'",cancel:"Cancel",close:"Close",prevImage:"Previous Image",nextImage:"Next Image",desc:"Description",feature:"Key Features",explain:"This app can be installed on your PC or mobile device.  This will allow this web app to look and behave like any other installed app.  You will find it in your app lists and be able to pin it to your home screen, start menus or task bars.  This installed web app will also be able to safely interact with other apps and your operating system. ",hint:"New content found.",update:"New content is available."}};let ha,ya;var fa=r.a.extend({name:"PWAInstallModal",components:{ArrowLeftIcon:pa,ArrowRightIcon:ua,CloseIcon:ga},props:{useHint:{type:Boolean,default:!1}},data:()=>({manifest:{},isIOS:!1,deferredprompt:null}),computed:{locales(){return da[this.$localePath||"/"]}},mounted(){window.hasOwnProperty("BeforeInstallPromptEvent")&&(ya=e=>{this.deferredprompt=e,this.$emit("can-install",!0),e.preventDefault()},window.addEventListener("beforeinstallprompt",ya),this.getManifest(),ha=e=>{"Escape"===e.key&&this.$emit("toogle",!1)},document.addEventListener("keyup",ha))},beforeDestroy(){window.hasOwnProperty("BeforeInstallPromptEvent")&&document.removeEventListener("beforeinstallprompt",ya),document.removeEventListener("keyup",ha)},methods:{async getManifest(){const e=localStorage.getItem("manifest");if(e)this.manifest=JSON.parse(e);else try{const e=await fetch(this.$withBase("manifest.webmanifest")),t=await e.json();this.manifest=t,localStorage.setItem("manifest",JSON.stringify(t))}catch(e){console.error("Error getting manifest, check that you have a valid web manifest or network connection")}},scrollToLeft(){const e=document.querySelector(".screenshot");e&&e.scrollBy({left:-e.clientWidth,top:0,behavior:"smooth"})},scrollToRight(){const e=document.querySelector(".screenshot");e&&e.scrollBy({left:e.clientWidth,top:0,behavior:"smooth"})},async install(){if(this.deferredprompt){this.deferredprompt.prompt(),document.dispatchEvent(new CustomEvent("show"));if("accepted"===(await this.deferredprompt.userChoice).outcome)return console.info("PWA has been installed"),this.$emit("toogle",!1),this.$emit("can-install",!1),!0;console.info("You choose to not install PWA"),this.$emit("toogle",!1),this.$emit("can-install",!1)}return!1},hint(){console.info("You accepted the install hint"),this.$emit("hint")}}}),ba=(a(178),Object(Bt.a)(fa,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("div",{attrs:{id:"install-modal-wrapper"}},[t("div",{staticClass:"background",on:{click:function(t){return e.$emit("toogle",!1)}}}),e._v(" "),t("div",{staticClass:"install-modal"},[t("div",{staticClass:"header"},[t("button",{staticClass:"close-button",attrs:{"aria-label":e.locales.close},on:{click:function(t){return e.$emit("toogle",!1)}}},[t("CloseIcon")],1),e._v(" "),t("div",{staticClass:"logo"},[e.manifest.icons?t("img",{attrs:{src:e.manifest.icons[0].src,alt:"App Logo"}}):e._e(),e._v(" "),t("div",{staticClass:"title"},[t("h1",[e._v(e._s(e.manifest.short_name||e.manifest.name))]),e._v(" "),t("p",{staticClass:"desc"},[e._v(e._s(e.locales.explain))])])])]),e._v(" "),t("div",{staticClass:"content"},[t("div",{staticClass:"highlight"},[e.manifest.features?t("div",{staticClass:"feature-wrapper"},[t("h3",[e._v(e._s(e.locales.feature))]),e._v(" "),e.manifest.features?t("ul",e._l(e.manifest.features,(function(a){return t("li",{key:a,domProps:{textContent:e._s(a)}})})),0):e._e()]):e._e(),e._v(" "),e.manifest.screenshots?t("div",{staticClass:"screenshot-wrapper"},[t("button",{attrs:{"aria-label":e.locales.prevImage},on:{click:e.scrollToLeft}},[t("ArrowLeftIcon")],1),e._v(" "),t("section",{staticClass:"screenshot"},e._l(e.manifest.screenshots,(function(e){return t("div",{key:e.src},[t("img",{attrs:{alt:"App Screenshot",src:e.src}})])})),0),e._v(" "),t("button",{attrs:{"aria-label":e.locales.nextImage},on:{click:e.scrollToRight}},[t("ArrowRightIcon")],1)]):e._e()]),e._v(" "),t("div",{staticClass:"description"},[t("h3",{domProps:{textContent:e._s(e.locales.desc)}}),e._v(" "),t("p",{domProps:{textContent:e._s(e.manifest.description)}})])]),e._v(" "),e.useHint?t("div",{staticClass:"ios-text",on:{click:e.hint}},[t("p",[e._v(e._s(e.locales.iOSInstall))]),e._v(" "),t("button",{staticClass:"success"},[e._v("Got it!")])]):t("div",{staticClass:"button-wrapper"},[t("button",{staticClass:"install-button",on:{click:e.install}},[e._v("\n        "+e._s(e.locales.install)+" "),t("span",[e._v(e._s(e.manifest.short_name))])]),e._v(" "),t("button",{staticClass:"cancel-button",on:{click:function(t){return e.$emit("toogle",!1)}}},[e._v("\n        "+e._s(e.locales.cancel)+"\n      ")])])])])}),[],!1,null,null,null).exports),va=r.a.extend({name:"PWAInstall",components:{PWAInstallModal:ba},data:()=>({canInstall:!1,hasRelatedApps:!1,isOpen:!1,isIOS:!1,isSafari:!1,hinted:!1}),computed:{install(){return da[this.$localePath||"/"].install},useHint(){return this.isIOS&&this.isSafari&&!1===this.hinted},showInstall(){return this.hasRelatedApps&&this.canInstall||this.useHint}},mounted(){if(this.getInstalledStatus()){const{userAgent:e}=navigator;this.isIOS=e.includes("iPhone")||e.includes("iPad")||Boolean(e.includes("Macintosh")&&navigator.maxTouchPoints&&navigator.maxTouchPoints>2),this.isSafari=navigator.userAgent.includes("Safari")&&!e.includes("Chrome"),this.hinted=Boolean(localStorage.getItem("iOS-pwa-hint"))}"getInstalledRelatedApps"in navigator&&navigator.getInstalledRelatedApps().then(e=>{this.hasRelatedApps=e.length>0})},methods:{getInstalledStatus:()=>navigator.standalone?navigator.standalone:matchMedia("(display-mode: standalone)").matches,hint(){this.isOpen=!1,this.hinted=!0,localStorage.setItem("iOS-pwa-hint","hinted")}}}),wa=(a(179),Object(Bt.a)(va,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("div",{attrs:{id:"pwa-install"}},[e.showInstall?t("button",{staticClass:"modal-button",attrs:{"use-hint":e.useHint},domProps:{textContent:e._s(e.install)},on:{click:function(t){e.isOpen=!0}}}):e._e(),e._v(" "),t("PWAInstallModal",{directives:[{name:"show",rawName:"v-show",value:e.isOpen,expression:"isOpen"}],on:{"can-install":function(t){e.canInstall=t},hint:e.hint,toogle:function(t){e.isOpen=t}}})],1)}),[],!1,null,null,null).exports),ka=Object(Bt.a)({},(function(){var e=this._self._c;return e("svg",{attrs:{viewBox:"0 0 1024 1024",version:"1.1",xmlns:"http://www.w3.org/2000/svg"}},[e("path",{attrs:{d:"M949.948959 146.249899l0 255.82655c0 21.980617-13.988596 35.969213-35.969213 35.969213l-255.82655\n            0c-13.988596 0-25.982768-7.992021-33.972742-21.980617-5.997598-13.988596-4.001127-27.977191\n            7.990998-39.97034l79.941704-77.945233c-55.954383-51.973722-121.917724-77.955466-199.862957-77.955466-37.974893 0-75.949786 8.002254-113.924679 21.99085-37.974893 15.984043-67.947532 37.974893-91.933829\n            63.956637-25.981744 23.986297-47.972595 53.958936-63.956637 91.933829-29.982872 73.954339-29.982872\n            153.895019 0 227.849358 15.984043 37.975916 37.974893 67.947532 63.956637 91.933829 23.986297 25.982768\n            53.958936 47.973618 91.933829 63.956637 37.974893 13.988596 75.949786 21.99085 113.924679 21.99085\n            45.966914 0 87.941911-9.997702 127.913275-29.981848 41.97602-17.989723 75.950809-45.966914\n            101.930507-83.942831 7.993045-4.001127 11.994172-5.995551 13.988596-5.995551 5.997598 0 9.998725\n            1.994424 13.988596 5.995551l77.957513 77.945233c3.988848 4.001127 5.986341 7.993045 5.986341\n            11.994172 0 1.994424-1.99647 5.995551-3.990894 11.994172-43.972491 51.962465-93.940532\n            91.933829-151.898549 117.91455-53.958936 25.982768-115.921149 39.971363-185.874361\n            39.971363-61.96119 0-119.921253-11.983939-169.889295-33.972742C284.40084 889.74325 236.438479\n            857.764931 202.464713\n            821.785485c-35.979446-33.972742-67.957765-81.936127-93.939509-139.897214-45.966914-101.930507-45.966914-237.846036 0-339.777567 25.981744-57.960063 57.960063-105.922425 93.939509-139.89619\n            33.973766-35.979446 81.936127-67.957765 139.89619-93.939509 49.968042-21.99085\n            107.928105-33.973766 169.889295-33.973766 55.963593 0 109.923552 9.987468 161.886017\n            29.972639 53.969169 21.99085 101.932554 51.963489 139.907447 89.938382l73.954339-73.944106c9.987468-9.997702 23.987321-13.988596 39.971363-8.002254C941.956937 120.268154 949.948959 132.261303\n            949.948959 146.249899z"}})])}),[],!1,null,null,null).exports;const Ea={all:Ta=Ta||new Map,on:function(e,t){var a=Ta.get(e);a?a.push(t):Ta.set(e,[t])},off:function(e,t){var a=Ta.get(e);a&&(t?a.splice(a.indexOf(t)>>>0,1):Ta.set(e,[]))},emit:function(e,t){var a=Ta.get(e);a&&a.slice().map((function(e){e(t)})),(a=Ta.get("*"))&&a.slice().map((function(a){a(e,t)}))}};var Ta;var xa=r.a.extend({name:"SWHintPopup",components:{UpdateIcon:ka},data:()=>({enabled:!1}),computed:{message(){return da[this.$localePath||"/"].hint}},mounted(){Ea.on("updatefound",()=>{navigator.serviceWorker.getRegistration().then(e=>{e&&e.active&&(this.enabled=!0)})}),Ea.on("updated",()=>{this.enabled=!1})},methods:{uninstall(){this.enabled&&(window.location.reload(!0),this.enabled=!1)}}}),Sa=(a(180),Object(Bt.a)(xa,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("transition",{attrs:{name:"sw-hint-popup"}},[e._t("default",(function(){return[e.enabled?t("div",{staticClass:"sw-hint-popup",attrs:{role:"button",tabindex:"0"},on:{click:e.uninstall}},[e._v("\n      "+e._s(e.message)+"\n      "),t("span",{staticClass:"icon-wrapper"},[t("UpdateIcon")],1)]):e._e()]}),{reload:e.reload,enabled:e.enabled,message:e.message})],2)}),[],!1,null,null,null).exports),Pa=r.a.extend({name:"SWUpdatePopup",components:{UpdateIcon:ka},data:()=>({registration:null}),computed:{enabled(){return Boolean(this.registration)},message(){return da[this.$localePath||"/"].update}},mounted(){Ea.on("updated",e=>{e&&(this.registration=e)})},methods:{reload(){this.registration&&((e=>{const t=e.waiting;if(!t)return;const a=new MessageChannel;t.postMessage({type:"SKIP_WAITING"},[a.port2])})(this.registration),this.registration=null)}}}),qa=(a(181),Object(Bt.a)(Pa,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("transition",{attrs:{name:"sw-update-popup"}},[e._t("default",(function(){return[e.enabled?t("div",{staticClass:"sw-update-popup",attrs:{role:"button",tabindex:"0"},on:{click:e.reload}},[e._v("\n      "+e._s(e.message)+"\n      "),t("span",{staticClass:"icon-wrapper"},[t("UpdateIcon")],1)]):e._e()]}),{reload:e.reload,enabled:e.enabled,message:e.message})],2)}),[],!1,null,null,null).exports);var _a=({Vue:e})=>{e.component("PWAInstall",wa),e.component("SWHintPopup",Sa),e.component("SWUpdatePopup",qa)};a(182);const Aa=e=>{const t=document.documentElement.getBoundingClientRect(),a=e.getBoundingClientRect();return{x:a.left-t.left,y:a.top-t.top}};var Ba=({Vue:e,router:t})=>{t.options.scrollBehavior=(t,a,r)=>{r?window.scrollTo({top:r.y,behavior:"smooth"}):t.hash?e.$vuepress.$get("disableScrollBehavior")||setTimeout(()=>{const e=decodeURI(t.hash.slice(1)),a=document.getElementById(e)||document.querySelector(`[name='${e}']`);a&&window.scrollTo({top:Aa(a).y,behavior:"smooth"})},500):window.scrollTo({top:0,behavior:"smooth"})}},Da={tag:{"排序算法":{key:"排序算法",scope:"tag",path:"/tag/排序算法/",pageKeys:["v-7d90151b","v-372b66f6","v-75e8440e","v-c6abb5b6","v-3fd81b4e","v-77c02b9f","v-6e1f31df","v-f5d87fb6","v-24b9f9d2","v-a0059386","v-83038776","v-2972fd5b","v-7c9db605","v-61e25645","v-f829daf6","v-71623345","v-c5448ab6","v-b4017dca","v-5442b1c2","v-05924865","v-103ac39b","v-56c9d6af","v-65ca7e6a","v-5191d686","v-b94e83ca","v-4da3b225","v-4644022d","v-7302cb32"]},"减治思想":{key:"减治思想",scope:"tag",path:"/tag/减治思想/",pageKeys:["v-7d90151b","v-372b66f6","v-75e8440e","v-c6abb5b6","v-3fd81b4e","v-6e1f31df","v-0bed98a5"]},"数组":{key:"数组",scope:"tag",path:"/tag/数组/",pageKeys:["v-09229bab","v-114583e5","v-c2030536","v-1ba63445","v-3b491bb6","v-4649cfe5","v-4743751e","v-9473e536","v-571c02b6","v-23c4fd45","v-6529ff6d","v-f65d6d36","v-015b0b3e","v-5ba60fa6","v-1d8c24a9","v-625bb365","v-bdb38f16","v-a2f8c2f2","v-5f355585","v-6f12ec96","v-58d27333"]},"循环不变量":{key:"循环不变量",scope:"tag",path:"/tag/循环不变量/",pageKeys:["v-09229bab","v-18966e06","v-015b0b3e","v-5ba60fa6","v-1d8c24a9","v-625bb365","v-bdb38f16","v-a2f8c2f2","v-5f355585","v-6f12ec96"]},"分而治之":{key:"分而治之",scope:"tag",path:"/tag/分而治之/",pageKeys:["v-4a7f66b3","v-a0059386","v-83038776","v-61433385","v-7afd6f05","v-4267839e","v-2972fd5b","v-7c9db605","v-61e25645","v-f829daf6","v-c5448ab6","v-b4017dca","v-5442b1c2","v-05924865","v-103ac39b","v-56c9d6af","v-65ca7e6a","v-5191d686","v-b94e83ca","v-4da3b225","v-4644022d","v-7302cb32"]},"归并排序":{key:"归并排序",scope:"tag",path:"/tag/归并排序/",pageKeys:["v-4a7f66b3","v-a0059386","v-83038776","v-3dca8686","v-7afd6f05","v-4267839e","v-2972fd5b","v-7c9db605","v-61e25645"]},"桶排序":{key:"桶排序",scope:"tag",path:"/tag/桶排序/",pageKeys:["v-dad451c6"]},"计数排序":{key:"计数排序",scope:"tag",path:"/tag/计数排序/",pageKeys:["v-b70ca5f6","v-42194f25"]},"快速排序":{key:"快速排序",scope:"tag",path:"/tag/快速排序/",pageKeys:["v-ab3140c6","v-3e43a959","v-f829daf6","v-71623345","v-c5448ab6","v-853d8742","v-b3617cb4","v-b4017dca","v-5442b1c2","v-05924865","v-103ac39b","v-56c9d6af","v-65ca7e6a","v-5191d686","v-b94e83ca","v-4da3b225","v-4644022d","v-7302cb32"]},"分治算法":{key:"分治算法",scope:"tag",path:"/tag/分治算法/",pageKeys:["v-ab3140c6","v-4f184e15","v-5defb7e5","v-3dfb40b6","v-43611c23","v-3dca8686","v-a554dab6"]},"滑动窗口":{key:"滑动窗口",scope:"tag",path:"/tag/滑动窗口/",pageKeys:["v-6e20c47b","v-252a1ae5","v-19c35345","v-e058a636","v-9056ab1e","v-838c4236","v-91061236","v-1a5363e5","v-041dd3be","v-f28fde76","v-3e91d245","v-08940b3d","v-2c356eea","v-d23f8136","v-576aad65","v-65018d05","v-39bdb2e5","v-3b21ecb6","v-16b59b25","v-46bea2f6","v-0e6032b6","v-3c738345","v-10bb2036","v-6c160b37","v-02906445","v-35db9f65","v-1cf2ead9","v-2d6aa9a5","v-6cfaf976","v-0d63d502","v-3745ea5e"]},"双指针":{key:"双指针",scope:"tag",path:"/tag/双指针/",pageKeys:["v-958c3daa","v-5e5665f4","v-101dea36","v-41efcb75","v-36833005","v-4e95725d","v-33f54cef","v-1cc81f37","v-a88cc59a","v-265c4c55","v-31c6c5b6","v-5ec35345","v-be32d0b6","v-f2b10c5e","v-0a625dc5"]},"回溯算法":{key:"回溯算法",scope:"tag",path:"/tag/回溯算法/",pageKeys:["v-0ed7643a","v-393158a5","v-15ca0285","v-1a9e8c1b","v-2624a525","v-207dcba5","v-4414c8b6","v-7d755634","v-b9a480f6","v-7615423f","v-21acc425","v-28d09be5","v-2a9cc73b","v-6a86c3a6","v-efda7436","v-497adc6b","v-e6214e32","v-3b2bfbfb","v-30fb5a76","v-69145925","v-361e118e","v-69cd5401","v-738c4125","v-2df88ffd","v-39b2ee36","v-0a54f2a1","v-70fe4685","v-1cd977f6","v-04027205","v-5d7afbe5","v-994592f2","v-162c9265","v-2e7f0376","v-544f57f6","v-3b75c1e5","v-2180fa85","v-ee451ea2","v-244a2d05","v-52654585","v-a32c4436","v-0bf045a6","v-4e65b80f","v-2b09ae7b","v-7f545425","v-675d38b5","v-08d9baa5","v-dbce8436","v-0066dbe5","v-fcced2f6"]},"递归":{key:"递归",scope:"tag",path:"/tag/递归/",pageKeys:["v-0ed7643a","v-393158a5","v-15ca0285","v-1a9e8c1b","v-2624a525","v-207dcba5","v-4414c8b6","v-b9a480f6","v-7615423f","v-21acc425","v-28d09be5","v-2a9cc73b","v-6a86c3a6","v-efda7436","v-497adc6b","v-e6214e32","v-3b2bfbfb","v-30fb5a76","v-69145925","v-361e118e","v-69cd5401","v-738c4125","v-0a54f2a1","v-1cd977f6","v-04027205","v-5d7afbe5","v-994592f2","v-162c9265","v-2e7f0376","v-3b75c1e5","v-2180fa85","v-ee451ea2","v-244a2d05","v-52654585","v-a32c4436","v-0bf045a6","v-2b09ae7b","v-7f545425","v-675d38b5","v-12e9780e","v-f73400f6","v-0968fa46","v-ffef3f36","v-34097cb6","v-3d11f7de","v-50872265","v-8e6dd0b6","v-131a89f6","v-37ce7125","v-06e10b05","v-6908511f","v-490d2177","v-09d9e8f6","v-5af2464a","v-f379e30e","v-75d2c8ea","v-bc8475fe","v-2f64a44b","v-5fe3b505","v-564d7af6","v-7c680e36","v-3ba7a5bf","v-d22c4cf6","v-0066dbe5","v-2f3134a5","v-7d29feb7","v-c8a213d6","v-870f6136","v-55f83d91","v-a948c136"]},"树形问题":{key:"树形问题",scope:"tag",path:"/tag/树形问题/",pageKeys:["v-0ed7643a","v-393158a5","v-15ca0285","v-1a9e8c1b","v-2624a525","v-207dcba5","v-4414c8b6","v-b9a480f6","v-7615423f","v-21acc425","v-28d09be5","v-2a9cc73b","v-6a86c3a6","v-efda7436","v-497adc6b","v-e6214e32","v-3b2bfbfb","v-30fb5a76","v-69145925","v-361e118e","v-69cd5401","v-738c4125","v-0a54f2a1","v-1cd977f6","v-04027205","v-5d7afbe5","v-994592f2","v-162c9265","v-2e7f0376","v-3b75c1e5","v-2180fa85","v-ee451ea2","v-244a2d05","v-52654585","v-a32c4436","v-0bf045a6","v-2b09ae7b","v-7f545425","v-675d38b5","v-0066dbe5"]},"深度优先遍历":{key:"深度优先遍历",scope:"tag",path:"/tag/深度优先遍历/",pageKeys:["v-0ed7643a","v-393158a5","v-15ca0285","v-1a9e8c1b","v-2624a525","v-207dcba5","v-4414c8b6","v-7d755634","v-b9a480f6","v-7615423f","v-21acc425","v-28d09be5","v-2a9cc73b","v-6a86c3a6","v-efda7436","v-497adc6b","v-e6214e32","v-3b2bfbfb","v-30fb5a76","v-69145925","v-361e118e","v-69cd5401","v-738c4125","v-0a54f2a1","v-1cd977f6","v-04027205","v-5d7afbe5","v-994592f2","v-162c9265","v-2e7f0376","v-3b75c1e5","v-2180fa85","v-ee451ea2","v-244a2d05","v-52654585","v-a32c4436","v-0bf045a6","v-2b09ae7b","v-7f545425","v-675d38b5","v-4c296805","v-57be6a05","v-0066dbe5","v-e49c8976","v-77978635","v-c20e1f1a","v-a446fb8a"]},"广度优先遍历":{key:"广度优先遍历",scope:"tag",path:"/tag/广度优先遍历/",pageKeys:["v-36ddfa76","v-1d2ea306","v-2df88ffd","v-0a54f2a1","v-2e7f0376","v-ee451ea2","v-244a2d05","v-a32c4436","v-0bf045a6","v-675d38b5","v-bd433a34","v-b96c6e36","v-4c296805","v-066d6876","v-598a9dad","v-097014c5","v-2a8019c5","v-470a84fa","v-058a1e76","v-57be6a05","v-741e92f6","v-0f40a07f","v-2db55da5","v-1e6c3ca5","v-5746cbf3","v-7e32e276","v-3e805425","v-0867e1f6","v-9bbf3216","v-26abd165","v-c20e1f1a","v-a446fb8a"]},"动态规划":{key:"动态规划",scope:"tag",path:"/tag/动态规划/",pageKeys:["v-0e908b85","v-e3593b96","v-19dbad41","v-70fe4685","v-5c83ab87","v-332e77f6","v-704ddc83","v-0b9a15fe","v-f7cfe502","v-d03b830a","v-0dfd25fd","v-21c756f9","v-a8a72112","v-d87bc53e","v-12e9780e","v-67b200b6","v-5defb7e5","v-465d6cc9","v-1f4cdb65","v-3be3c79a","v-731f18d3","v-3ae678fa","v-1bc59805","v-78e5c005","v-34646645","v-7d82fb5a","v-39634e52","v-1aeb0de5","v-01463076","v-41f86cb6","v-42ac88b6","v-7bae3d45","v-29d015a5","v-c2e1f8e6","v-3c356305","v-6b6bd0c5","v-78f1cf25","v-5b91a785","v-816a889e","v-a88b2f36","v-57e8509b","v-fa3545d6","v-cb5092b6","v-4f4da7c5","v-b4cae9b6","v-9a89b336","v-02bc83f6","v-75956bc2","v-278ecdc5","v-024cae65","v-7ad03125","v-65768937","v-0b4d643f","v-2ac03de6","v-64b5f45b","v-30f251ee","v-5c00375a","v-0afa5c36","v-6adb0465","v-a8e064da","v-f175e3b6","v-f6eac32e","v-637acbcd","v-d273b6b6","v-b127db76","v-72039f9b","v-82ab1976","v-32568ff6","v-0c4ce425","v-2baeefe9","v-1c718b23","v-9a786500","v-5a3170aa","v-686a3bdb","v-1a8afcf8","v-a74f84b2","v-c2604de6","v-f2b10c5e"]},"贪心算法":{key:"贪心算法",scope:"tag",path:"/tag/贪心算法/",pageKeys:["v-08445945","v-062f50f1","v-fa3545d6","v-44f15dcd","v-367869c9","v-74dd6dc5","v-3bb840a5","v-b74846f6","v-6eb37ec2","v-c2604de6","v-74b8d8e5","v-c3c2b5f6","v-088fd3c5","v-aac37736","v-b806b40e","v-3dfb40b6"]},"字符串":{key:"字符串",scope:"tag",path:"/tag/字符串/",pageKeys:["v-114583e5","v-c2030536","v-32439385","v-b9a480f6","v-7615423f","v-69145925","v-69cd5401","v-994592f2","v-3b75c1e5","v-52654585","v-3ae678fa","v-0066dbe5"]},"原地哈希":{key:"原地哈希",scope:"tag",path:"/tag/原地哈希/",pageKeys:["v-23c4fd45","v-4be2a0e1"]},"剪枝":{key:"剪枝",scope:"tag",path:"/tag/剪枝/",pageKeys:["v-21acc425","v-28d09be5","v-2a9cc73b","v-497adc6b","v-e6214e32","v-3b2bfbfb","v-30fb5a76","v-361e118e"]},"并查集":{key:"并查集",scope:"tag",path:"/tag/并查集/",pageKeys:["v-0a54f2a1","v-0bf045a6","v-4c296805","v-04c98825","v-384ad102","v-605525c5","v-a788d0b6","v-44087b65","v-0fbbecf6","v-e0222576","v-485541b6","v-27bbd105","v-73a242e5","v-80ee9676","v-291b15c5","v-b3f4455e","v-9463dba2","v-0d7227b6","v-c97f7236","v-338be9f9","v-1712d6d9","v-373e94fb","v-4dacf6b6","v-c8756db6","v-a446fb8a","v-3d855f36","v-6759cdc7","v-6edad9f6","v-6f7ad736","v-8fe60762","v-318666ae","v-8d0fe46e","v-33fb8d76","v-b8b2f1ee","v-0e68defa"]},"flood fill":{key:"flood fill",scope:"tag",path:"/tag/flood fill/",pageKeys:["v-0a54f2a1","v-0bf045a6","v-675d38b5"]},"二分查找":{key:"二分查找",scope:"tag",path:"/tag/二分查找/",pageKeys:["v-675d38b5","v-47aa5819","v-4b3883d7","v-4ec6af95","v-5cff5e8d","v-608d8a4b","v-9b590f46","v-641bb609","v-7a9f58a5","v-2344e425","v-4b649519","v-c508b776","v-f7e08266","v-d4e67cb6","v-e5bd521a","v-2ef83476","v-65b73105","v-0f4fd9f9","v-78593305","v-2145d7f6","v-76b6c84d","v-3965f7b6","v-edc16f8a","v-2c7e9f15","v-4db48f76","v-0d3d20e5","v-684f5166","v-707dec93","v-5b8cdfa5","v-47c411d7","v-88936716","v-5fe644c5","v-4f822e45","v-aa5c4cb6","v-2d288045","v-75672a25","v-503294bb","v-510f9ac1","v-35f1d79a","v-3e724785","v-840247b6","v-3d8b70c5","v-85cff536","v-3ca49a05","v-879da2b6","v-3bbdc345","v-bcb118d8","v-70c9179e","v-ddfed96a","v-5254db53","v-101dea36","v-a446fb8a","v-597132cf","v-55e30711"]},"位运算":{key:"位运算",scope:"tag",path:"/tag/位运算/",pageKeys:["v-099226c6","v-0e098ff9","v-dbce8436","v-76f03e6d","v-558e7565","v-5bf25e5f","v-61d11f05","v-b4716336","v-51c8d8ff","v-6e4e9549","v-9bad55f6","v-0d2d8e76","v-075ddcb6","v-badbbe36","v-26f997b6","v-43611c23"]},"拓扑排序":{key:"拓扑排序",scope:"tag",path:"/tag/拓扑排序/",pageKeys:["v-066d6876","v-598a9dad","v-7756224a","v-2db55da5","v-7e32e276","v-9bbf3216"]},"队列":{key:"队列",scope:"tag",path:"/tag/队列/",pageKeys:["v-058a1e76","v-2f140f76","v-1e0e94f1","v-e058a636","v-26abd165","v-2571e6d5","v-6e95c396","v-ca0a5286","v-0185e1b6"]},"单调队列":{key:"单调队列",scope:"tag",path:"/tag/单调队列/",pageKeys:["v-058a1e76","v-e058a636"]},"闲谈":{key:"闲谈",scope:"tag",path:"/tag/闲谈/",pageKeys:["v-538dfb26","v-599d1da7"]},"闲聊":{key:"闲聊",scope:"tag",path:"/tag/闲聊/",pageKeys:["v-dc604366","v-6c63cba9","v-0e908365","v-1a2b3877","v-b07c07fe","v-0b760be8","v-039a658b","v-c11cccce","v-5a460e56","v-46e7f6f6"]},"二叉树":{key:"二叉树",scope:"tag",path:"/tag/二叉树/",pageKeys:["v-753c3d65","v-173cb7e6","v-131a89f6","v-37ce7125","v-06e10b05","v-6908511f","v-496eb3f6","v-2a1718e3","v-490d2177","v-09d9e8f6","v-5af2464a","v-99ac21c2","v-40db7852","v-0e1ee485","v-f379e30e","v-75d2c8ea","v-bc8475fe","v-2f64a44b","v-5fe3b505","v-d06d9bae","v-564d7af6","v-d22c4cf6","v-2f3134a5","v-7d29feb7","v-c8a213d6","v-a948c136","v-36a5f8a5","v-77978635","v-fcced2f6","v-e92d91be"]},"树状数组":{key:"树状数组",scope:"tag",path:"/tag/树状数组/",pageKeys:["v-0d2a3409","v-48a9ae87","v-f7adadf6","v-80aeb8fa","v-09afc3fe","v-722712fd","v-36a7987f"]},"线段树":{key:"线段树",scope:"tag",path:"/tag/线段树/",pageKeys:["v-89870f96","v-12881a9a","v-323b6d31","v-10bac8f6","v-6dbae7af"]},Trie:{key:"Trie",scope:"tag",path:"/tag/Trie/",pageKeys:["v-ee47900e","v-3ca1fd12","v-3a81caf5","v-d956d71a","v-27b1441e"]},"二叉搜索树":{key:"二叉搜索树",scope:"tag",path:"/tag/二叉搜索树/",pageKeys:["v-4128a0a5","v-3c6586c5","v-a554dab6","v-37ce7125","v-40db7852","v-0e1ee485","v-7c680e36","v-3ba7a5bf","v-870f6136","v-55f83d91","v-427b433a","v-634458d3"]},"哈希表":{key:"哈希表",scope:"tag",path:"/tag/哈希表/",pageKeys:["v-739759a5","v-42f76c97","v-793bfff6","v-1fc5fcd2","v-782ef33f","v-b8e89306","v-22379377","v-5c6233cb","v-cce7b2b6","v-b9742ab6","v-c4a7310e","v-4faf75d7","v-20cc1125","v-e7cb6976","v-3887f5a9","v-cd41a876","v-057c8325","v-ec532276","v-36c50fc5","v-1ebbe39e","v-5cfc1d6e","v-59402925","v-067af542"]},"优先队列":{key:"优先队列",scope:"tag",path:"/tag/优先队列/",pageKeys:["v-613becc5","v-57ec3f51","v-7f8ee3e5","v-244c5125","v-5c24caf6","v-76ab07c5","v-6dec8336","v-1b687505","v-24c00325","v-da0d241e","v-99fdfab6","v-3c6586c5","v-ea990176","v-056a6d45","v-168abe05","v-07c36673","v-78782c85","v-30a87129","v-2a59b585","v-07cfe499","v-5f8b0b65","v-3dfb40b6","v-3e43a959","v-71623345","v-853d8742"]},"链表":{key:"链表",scope:"tag",path:"/tag/链表/",pageKeys:["v-e34eb3b6","v-1119beef","v-51e1b0b1","v-f73400f6","v-3dfb40b6","v-0968fa46","v-ffef3f36","v-37cab9d9","v-582f322f","v-b072eff6","v-739d0ca5","v-2112d365","v-d716c28a","v-03374545","v-65b3ac6e","v-5e33fa4b","v-34097cb6","v-3d11f7de","v-50872265","v-cbd6f676","v-8e6dd0b6","v-fee15f9e","v-5b3183b6","v-3f486746","v-35248da5","v-4c39c203","v-93a30336","v-4af15859","v-840b2926"]},"栈":{key:"栈",scope:"tag",path:"/tag/栈/",pageKeys:["v-1d65a0c3","v-5f981865","v-ec0ef8b4","v-1b385671","v-59c7c24a","v-0ba86745","v-604ac37b","v-6ec9ec85","v-60e69ce5","v-b797c6fa","v-63704c6e","v-2cb152c5","v-0f85e4a5","v-4b36484f","v-2715a4ad","v-edca7576","v-7e95e336","v-983abe52","v-59ee7ff7","v-0457009e","v-85741fb6","v-0d860cb6","v-077c61c5","v-155bc545","v-b0393936","v-367724a5","v-f2b10c5e"]},"树":{key:"树",scope:"tag",path:"/tag/树/",pageKeys:["v-c3e4bbf6","v-600cd396"]},"差分":{key:"差分",scope:"tag",path:"/tag/差分/",pageKeys:["v-6213a2c5"]},"区间 DP":{key:"区间 DP",scope:"tag",path:"/tag/区间 DP/",pageKeys:["v-d87bc53e","v-64b5f45b"]},"树形 DP":{key:"树形 DP",scope:"tag",path:"/tag/树形 DP/",pageKeys:["v-1aeb0de5","v-a88b2f36","v-30f251ee","v-5c00375a","v-a8e064da","v-637acbcd","v-82ab1976","v-1c718b23"]},"数位 DP":{key:"数位 DP",scope:"tag",path:"/tag/数位 DP/",pageKeys:["v-c2e1f8e6"]},"背包问题":{key:"背包问题",scope:"tag",path:"/tag/背包问题/",pageKeys:["v-57e8509b","v-02bc83f6"]},"完全背包":{key:"完全背包",scope:"tag",path:"/tag/完全背包/",pageKeys:["v-57e8509b","v-2ac03de6"]},"0-1 背包问题":{key:"0-1 背包问题",scope:"tag",path:"/tag/0-1 背包问题/",pageKeys:["v-02bc83f6"]},Dijkstra:{key:"Dijkstra",scope:"tag",path:"/tag/Dijkstra/",pageKeys:["v-12c1b938","v-4a042605","v-7825eced","v-5614f01b","v-aff53d2e","v-295078c5","v-ba80e702"]},"最小生成树":{key:"最小生成树",scope:"tag",path:"/tag/最小生成树/",pageKeys:["v-12c1b938","v-584b0e25","v-79030976","v-148801a5","v-36af5776","v-aaa246aa","v-e1cf13f6"]},"滚动哈希":{key:"滚动哈希",scope:"tag",path:"/tag/滚动哈希/",pageKeys:["v-782ef33f"]},"堆":{key:"堆",scope:"tag",path:"/tag/堆/",pageKeys:["v-7f8ee3e5","v-244c5125","v-5c24caf6","v-76ab07c5","v-6dec8336","v-1b687505","v-24c00325","v-3c6586c5"]},"分治法":{key:"分治法",scope:"tag",path:"/tag/分治法/",pageKeys:["v-d716c28a"]},"单链表":{key:"单链表",scope:"tag",path:"/tag/单链表/",pageKeys:["v-2ad54d22"]},"双向链表":{key:"双向链表",scope:"tag",path:"/tag/双向链表/",pageKeys:["v-057c8325","v-ec532276"]},"快慢指针":{key:"快慢指针",scope:"tag",path:"/tag/快慢指针/",pageKeys:["v-3f486746","v-4c39c203","v-93a30336","v-4af15859","v-840b2926"]},"数学":{key:"数学",scope:"tag",path:"/tag/数学/",pageKeys:["v-e0c1ddb4","v-8baa3296"]},"单调栈":{key:"单调栈",scope:"tag",path:"/tag/单调栈/",pageKeys:["v-ec0ef8b4","v-1b385671","v-0ba86745","v-604ac37b","v-6ec9ec85","v-60e69ce5","v-b797c6fa","v-5a3fc6e6","v-63704c6e","v-2cb152c5","v-f2b10c5e"]},"音乐":{key:"音乐",scope:"tag",path:"/tag/音乐/",pageKeys:["v-27749c7f","v-28e85245","v-13914f76","v-4a41daf7"]},"前缀和":{key:"前缀和",scope:"tag",path:"/tag/前缀和/",pageKeys:["v-36c50fc5","v-1ebbe39e","v-5cfc1d6e","v-59402925","v-067af542","v-33e0b295"]},"减而治之":{key:"减而治之",scope:"tag",path:"/tag/减而治之/",pageKeys:["v-3e43a959","v-71623345","v-853d8742"]},"分治思想":{key:"分治思想",scope:"tag",path:"/tag/分治思想/",pageKeys:["v-b3617cb4"]},"二分搜索树":{key:"二分搜索树",scope:"tag",path:"/tag/二分搜索树/",pageKeys:["v-5a7d501b","v-3745ea5e"]},"后序遍历":{key:"后序遍历",scope:"tag",path:"/tag/后序遍历/",pageKeys:["v-e49c8976"]},"前缀树":{key:"前缀树",scope:"tag",path:"/tag/前缀树/",pageKeys:["v-29844f66","v-498f7dbf","v-28e5e782","v-c65eb46a","v-f308db66","v-7d103a45","v-fa36ccf6","v-789f6499","v-ab79dc96"]},"单源最短路径":{key:"单源最短路径",scope:"tag",path:"/tag/单源最短路径/",pageKeys:["v-a446fb8a"]},"视频题解":{key:"视频题解",scope:"tag",path:"/tag/视频题解/",pageKeys:["v-463acfc4"]}},category:{"排序算法":{key:"排序算法",scope:"category",path:"/category/排序算法/",pageKeys:["v-7d90151b","v-372b66f6","v-75e8440e","v-c6abb5b6","v-3fd81b4e","v-77c02b9f","v-6e1f31df","v-f5d87fb6","v-24b9f9d2","v-4a7f66b3","v-dad451c6","v-b70ca5f6","v-278cb0c7","v-2b6a2ea5","v-42194f25","v-a0059386","v-83038776","v-7afd6f05","v-4267839e","v-2972fd5b","v-7c9db605","v-61e25645","v-f829daf6","v-71623345","v-c5448ab6","v-b4017dca","v-5442b1c2","v-05924865","v-103ac39b","v-56c9d6af","v-65ca7e6a","v-5191d686","v-b94e83ca","v-4da3b225","v-4644022d","v-7302cb32"]},"二分查找":{key:"二分查找",scope:"category",path:"/category/二分查找/",pageKeys:["v-0bed98a5","v-47aa5819","v-4b3883d7","v-4ec6af95","v-5cff5e8d","v-608d8a4b","v-9b590f46","v-641bb609","v-7a9f58a5","v-2344e425","v-4b649519","v-c508b776","v-f7e08266","v-d4e67cb6","v-e5bd521a","v-2ef83476","v-65b73105","v-0f4fd9f9","v-78593305","v-2145d7f6","v-76b6c84d","v-3965f7b6","v-edc16f8a","v-2c7e9f15","v-4db48f76","v-0d3d20e5","v-684f5166","v-707dec93","v-5b8cdfa5","v-47c411d7","v-88936716","v-5fe644c5","v-4f822e45","v-aa5c4cb6","v-2d288045","v-75672a25","v-503294bb","v-510f9ac1","v-35f1d79a","v-3e724785","v-840247b6","v-3d8b70c5","v-85cff536","v-3ca49a05","v-879da2b6","v-3bbdc345","v-bcb118d8","v-70c9179e","v-ddfed96a","v-5254db53","v-597132cf","v-55e30711"]},"循环不变量":{key:"循环不变量",scope:"category",path:"/category/循环不变量/",pageKeys:["v-09229bab","v-18966e06","v-015b0b3e","v-5ba60fa6","v-1d8c24a9","v-625bb365","v-bdb38f16","v-a2f8c2f2","v-5f355585","v-6f12ec96"]},"快速排序":{key:"快速排序",scope:"category",path:"/category/快速排序/",pageKeys:["v-ab3140c6","v-b3617cb4"]},"滑动窗口":{key:"滑动窗口",scope:"category",path:"/category/滑动窗口/",pageKeys:["v-6e20c47b","v-252a1ae5","v-19c35345","v-9056ab1e","v-838c4236","v-91061236","v-1a5363e5","v-041dd3be","v-f28fde76","v-3e91d245","v-08940b3d","v-2c356eea","v-d23f8136","v-576aad65","v-65018d05","v-39bdb2e5","v-3b21ecb6","v-16b59b25","v-46bea2f6","v-0e6032b6","v-3c738345","v-10bb2036","v-6c160b37","v-02906445","v-35db9f65","v-1cf2ead9","v-2d6aa9a5","v-6cfaf976","v-0d63d502"]},"双指针":{key:"双指针",scope:"category",path:"/category/双指针/",pageKeys:["v-958c3daa","v-5e5665f4","v-101dea36","v-41efcb75","v-36833005","v-4e95725d","v-33f54cef","v-1cc81f37","v-a88cc59a","v-265c4c55","v-31c6c5b6","v-5ec35345","v-be32d0b6","v-f2b10c5e","v-0a625dc5"]},"回溯算法":{key:"回溯算法",scope:"category",path:"/category/回溯算法/",pageKeys:["v-0ed7643a","v-393158a5","v-15ca0285","v-1a9e8c1b","v-2624a525","v-207dcba5","v-4414c8b6","v-7d755634","v-b9a480f6","v-7615423f","v-21acc425","v-28d09be5","v-2a9cc73b","v-6a86c3a6","v-efda7436","v-497adc6b","v-e6214e32","v-3b2bfbfb","v-30fb5a76","v-69145925","v-361e118e","v-69cd5401","v-738c4125","v-39b2ee36","v-0a54f2a1","v-70fe4685","v-1cd977f6","v-04027205","v-5d7afbe5","v-994592f2","v-162c9265","v-2e7f0376","v-544f57f6","v-3b75c1e5","v-2180fa85","v-ee451ea2","v-244a2d05","v-52654585","v-a32c4436","v-0bf045a6","v-4e65b80f","v-2b09ae7b","v-7f545425","v-675d38b5","v-08d9baa5","v-0066dbe5"]},"广度优先遍历":{key:"广度优先遍历",scope:"category",path:"/category/广度优先遍历/",pageKeys:["v-36ddfa76","v-1d2ea306","v-2df88ffd","v-bd433a34","v-b96c6e36","v-4c296805","v-066d6876","v-598a9dad","v-097014c5","v-7756224a","v-2a8019c5","v-470a84fa","v-058a1e76","v-57be6a05","v-741e92f6","v-0f40a07f","v-2db55da5","v-1e6c3ca5","v-5746cbf3","v-7e32e276","v-3e805425","v-0867e1f6","v-9bbf3216","v-26abd165","v-c20e1f1a"]},"动态规划":{key:"动态规划",scope:"category",path:"/category/动态规划/",pageKeys:["v-0e908b85","v-e3593b96","v-19dbad41","v-5c83ab87","v-332e77f6","v-704ddc83","v-0b9a15fe","v-f7cfe502","v-d03b830a","v-0dfd25fd","v-21c756f9","v-a8a72112","v-d87bc53e","v-12e9780e","v-67b200b6","v-5defb7e5","v-465d6cc9","v-1f4cdb65","v-3be3c79a","v-731f18d3","v-3ae678fa","v-1bc59805","v-78e5c005","v-34646645","v-7d82fb5a","v-39634e52","v-1aeb0de5","v-01463076","v-41f86cb6","v-42ac88b6","v-7bae3d45","v-29d015a5","v-c2e1f8e6","v-3c356305","v-6b6bd0c5","v-78f1cf25","v-5b91a785","v-816a889e","v-a88b2f36","v-57e8509b","v-fa3545d6","v-cb5092b6","v-4f4da7c5","v-b4cae9b6","v-9a89b336","v-02bc83f6","v-75956bc2","v-278ecdc5","v-024cae65","v-7ad03125","v-65768937","v-0b4d643f","v-2ac03de6","v-64b5f45b","v-30f251ee","v-5c00375a","v-0afa5c36","v-6adb0465","v-a8e064da","v-f175e3b6","v-f6eac32e","v-637acbcd","v-d273b6b6","v-b127db76","v-72039f9b","v-82ab1976","v-32568ff6","v-0c4ce425","v-2baeefe9","v-1c718b23","v-9a786500","v-5a3170aa","v-686a3bdb","v-1a8afcf8","v-a74f84b2"]},"贪心算法":{key:"贪心算法",scope:"category",path:"/category/贪心算法/",pageKeys:["v-08445945","v-062f50f1","v-44f15dcd","v-367869c9","v-74dd6dc5","v-3bb840a5","v-b74846f6","v-6eb37ec2","v-c2604de6","v-74b8d8e5","v-c3c2b5f6","v-088fd3c5","v-aac37736","v-b806b40e"]},"数组":{key:"数组",scope:"category",path:"/category/数组/",pageKeys:["v-114583e5","v-c2030536","v-1ba63445","v-3b491bb6","v-4649cfe5","v-4743751e","v-9473e536","v-571c02b6","v-23c4fd45","v-6529ff6d","v-f65d6d36"]},"字符串":{key:"字符串",scope:"category",path:"/category/字符串/",pageKeys:["v-32439385"]},"分治算法":{key:"分治算法",scope:"category",path:"/category/分治算法/",pageKeys:["v-4f184e15"]},"位运算":{key:"位运算",scope:"category",path:"/category/位运算/",pageKeys:["v-099226c6","v-0e098ff9","v-dbce8436","v-76f03e6d","v-558e7565","v-5bf25e5f","v-61d11f05","v-b4716336","v-51c8d8ff","v-6e4e9549","v-9bad55f6","v-0d2d8e76","v-075ddcb6","v-badbbe36","v-26f997b6"]},"闲谈":{key:"闲谈",scope:"category",path:"/category/闲谈/",pageKeys:["v-538dfb26","v-599d1da7"]},"闲聊":{key:"闲聊",scope:"category",path:"/category/闲聊/",pageKeys:["v-dc604366","v-6c63cba9","v-0e908365","v-1a2b3877","v-b07c07fe","v-0b760be8","v-039a658b","v-c11cccce","v-5a460e56","v-46e7f6f6"]},"树":{key:"树",scope:"category",path:"/category/树/",pageKeys:["v-753c3d65","v-c3e4bbf6","v-600cd396"]},"树状数组":{key:"树状数组",scope:"category",path:"/category/树状数组/",pageKeys:["v-0d2a3409","v-48a9ae87","v-f7adadf6","v-80aeb8fa","v-09afc3fe","v-722712fd","v-36a7987f"]},"线段树":{key:"线段树",scope:"category",path:"/category/线段树/",pageKeys:["v-89870f96","v-12881a9a","v-323b6d31","v-10bac8f6","v-6dbae7af"]},Trie:{key:"Trie",scope:"category",path:"/category/Trie/",pageKeys:["v-ee47900e","v-3ca1fd12","v-3a81caf5","v-d956d71a","v-27b1441e"]},"并查集":{key:"并查集",scope:"category",path:"/category/并查集/",pageKeys:["v-04c98825","v-384ad102","v-605525c5","v-a788d0b6","v-44087b65","v-0fbbecf6","v-e0222576","v-485541b6","v-27bbd105","v-73a242e5","v-80ee9676","v-291b15c5","v-b3f4455e","v-9463dba2","v-0d7227b6","v-c97f7236","v-338be9f9","v-1712d6d9","v-373e94fb","v-4dacf6b6","v-c8756db6","v-a446fb8a","v-3d855f36","v-6759cdc7","v-6edad9f6","v-6f7ad736","v-8fe60762","v-318666ae","v-8d0fe46e","v-33fb8d76","v-b8b2f1ee","v-0e68defa"]},"二叉搜索树":{key:"二叉搜索树",scope:"category",path:"/category/二叉搜索树/",pageKeys:["v-4128a0a5","v-a554dab6","v-37ce7125","v-40db7852","v-7c680e36","v-3ba7a5bf","v-870f6136","v-55f83d91","v-427b433a","v-634458d3"]},"哈希表":{key:"哈希表",scope:"category",path:"/category/哈希表/",pageKeys:["v-739759a5","v-42f76c97","v-793bfff6","v-1fc5fcd2","v-782ef33f","v-b8e89306","v-22379377","v-5c6233cb","v-cce7b2b6","v-b9742ab6","v-c4a7310e","v-4faf75d7","v-20cc1125","v-e7cb6976","v-3887f5a9","v-cd41a876"]},"优先队列":{key:"优先队列",scope:"category",path:"/category/优先队列/",pageKeys:["v-613becc5","v-57ec3f51","v-7f8ee3e5","v-244c5125","v-5c24caf6","v-76ab07c5","v-6dec8336","v-1b687505","v-24c00325","v-da0d241e","v-99fdfab6","v-3c6586c5","v-ea990176","v-056a6d45","v-168abe05","v-07c36673","v-78782c85","v-30a87129","v-2a59b585","v-07cfe499","v-5f8b0b65"]},"链表":{key:"链表",scope:"category",path:"/category/链表/",pageKeys:["v-e34eb3b6","v-1119beef","v-51e1b0b1","v-f73400f6","v-3dfb40b6","v-0968fa46","v-ffef3f36","v-37cab9d9","v-582f322f","v-b072eff6","v-739d0ca5","v-2112d365","v-d716c28a","v-03374545","v-65b3ac6e","v-5e33fa4b","v-2ad54d22","v-34097cb6","v-3d11f7de","v-50872265","v-cbd6f676","v-8e6dd0b6","v-fee15f9e","v-5b3183b6","v-057c8325","v-3f486746","v-ec532276","v-35248da5","v-4c39c203","v-93a30336","v-4af15859","v-840b2926"]},"队列":{key:"队列",scope:"category",path:"/category/队列/",pageKeys:["v-2f140f76","v-1e0e94f1","v-e058a636","v-2571e6d5","v-6e95c396","v-ca0a5286","v-0185e1b6"]},"栈":{key:"栈",scope:"category",path:"/category/栈/",pageKeys:["v-1d65a0c3","v-5f981865","v-ec0ef8b4","v-1b385671","v-59c7c24a","v-0ba86745","v-604ac37b","v-6ec9ec85","v-60e69ce5","v-b797c6fa","v-5a3fc6e6","v-63704c6e","v-2cb152c5","v-0f85e4a5","v-4b36484f","v-2715a4ad","v-edca7576","v-7e95e336","v-983abe52","v-59ee7ff7","v-0457009e","v-85741fb6","v-0d860cb6","v-077c61c5","v-155bc545","v-b0393936","v-367724a5"]},"差分":{key:"差分",scope:"category",path:"/category/差分/",pageKeys:["v-6213a2c5"]},"图论":{key:"图论",scope:"category",path:"/category/图论/",pageKeys:["v-12c1b938","v-4a042605","v-7825eced","v-5614f01b","v-aff53d2e","v-295078c5","v-ba80e702","v-584b0e25","v-79030976","v-148801a5","v-36af5776","v-aaa246aa","v-e1cf13f6"]},"原地哈希":{key:"原地哈希",scope:"category",path:"/category/原地哈希/",pageKeys:["v-4be2a0e1"]},"数学":{key:"数学",scope:"category",path:"/category/数学/",pageKeys:["v-e0c1ddb4","v-8baa3296"]},"递归":{key:"递归",scope:"category",path:"/category/递归/",pageKeys:["v-43611c23"]},"归并排序":{key:"归并排序",scope:"category",path:"/category/归并排序/",pageKeys:["v-58d27333","v-61433385","v-3dca8686"]},"音乐":{key:"音乐",scope:"category",path:"/category/音乐/",pageKeys:["v-27749c7f","v-28e85245","v-13914f76","v-4a41daf7"]},"前缀和":{key:"前缀和",scope:"category",path:"/category/前缀和/",pageKeys:["v-36c50fc5","v-1ebbe39e","v-5cfc1d6e","v-59402925","v-067af542","v-33e0b295"]},"二叉树":{key:"二叉树",scope:"category",path:"/category/二叉树/",pageKeys:["v-173cb7e6","v-131a89f6","v-06e10b05","v-6908511f","v-496eb3f6","v-2a1718e3","v-490d2177","v-09d9e8f6","v-5af2464a","v-99ac21c2","v-0e1ee485","v-f379e30e","v-75d2c8ea","v-bc8475fe","v-2f64a44b","v-5fe3b505","v-d06d9bae","v-564d7af6","v-d22c4cf6","v-2f3134a5","v-7d29feb7","v-c8a213d6","v-e49c8976","v-a948c136","v-36a5f8a5","v-77978635","v-fcced2f6","v-e92d91be"]},"算法与数据结构":{key:"算法与数据结构",scope:"category",path:"/category/算法与数据结构/",pageKeys:["v-5a7d501b"]},"二分搜索树":{key:"二分搜索树",scope:"category",path:"/category/二分搜索树/",pageKeys:["v-3745ea5e"]},"前缀树":{key:"前缀树",scope:"category",path:"/category/前缀树/",pageKeys:["v-29844f66","v-498f7dbf","v-28e5e782","v-c65eb46a","v-f308db66","v-7d103a45","v-fa36ccf6","v-789f6499","v-ab79dc96"]},"视频题解":{key:"视频题解",scope:"category",path:"/category/视频题解/",pageKeys:["v-463acfc4"]}}};class Ca{constructor(e,t){this._metaMap=Object.assign({},e),Object.keys(this._metaMap).forEach(e=>{const{pageKeys:a}=this._metaMap[e];this._metaMap[e].pages=a.map(e=>function(e,t){for(let a=0;a<e.length;a++){const r=e[a];if(r.key===t)return r}return{path:"",frontmatter:{}}}(t,e))})}get length(){return Object.keys(this._metaMap).length}get map(){return this._metaMap}get pages(){return this.list}get list(){return this.toArray()}toArray(){const e=[];return Object.keys(this._metaMap).forEach(t=>{const{pages:a,path:r}=this._metaMap[t];e.push({name:t,pages:a,path:r})}),e}getItemByName(e){return this._metaMap[e]}}var La={tag:(e,t)=>{const r=a(29);return r(e.frontmatter.date)-r(t.frontmatter.date)>0?-1:1},category:(e,t)=>{const r=a(29);return r(e.frontmatter.date)-r(t.frontmatter.date)>0?-1:1}},Ua={tag:function(e,t,a){const r=t;return["tag","tags"].some(t=>{const a=e.frontmatter[t];return Array.isArray(a)?a.some(e=>e==r):a==r})},category:function(e,t,a){const r=t;return["category","categories"].some(t=>{const a=e.frontmatter[t];return Array.isArray(a)?a.some(e=>e==r):a==r})}},Ja=[{pid:"tag",id:"排序算法",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/排序算法/",interval:[0,9]},{path:"/tag/排序算法/page/2/",interval:[10,19]},{path:"/tag/排序算法/page/3/",interval:[20,28]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"减治思想",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/减治思想/",interval:[0,7]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"数组",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/数组/",interval:[0,9]},{path:"/tag/数组/page/2/",interval:[10,19]},{path:"/tag/数组/page/3/",interval:[20,21]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"循环不变量",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/循环不变量/",interval:[0,9]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"分而治之",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/分而治之/",interval:[0,9]},{path:"/tag/分而治之/page/2/",interval:[10,19]},{path:"/tag/分而治之/page/3/",interval:[20,22]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"归并排序",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/归并排序/",interval:[0,9]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"桶排序",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/桶排序/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"计数排序",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/计数排序/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"快速排序",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/快速排序/",interval:[0,9]},{path:"/tag/快速排序/page/2/",interval:[10,18]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"分治算法",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/分治算法/",interval:[0,7]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"滑动窗口",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/滑动窗口/",interval:[0,9]},{path:"/tag/滑动窗口/page/2/",interval:[10,19]},{path:"/tag/滑动窗口/page/3/",interval:[20,29]},{path:"/tag/滑动窗口/page/4/",interval:[30,31]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"双指针",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/双指针/",interval:[0,9]},{path:"/tag/双指针/page/2/",interval:[10,15]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"回溯算法",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/回溯算法/",interval:[0,9]},{path:"/tag/回溯算法/page/2/",interval:[10,19]},{path:"/tag/回溯算法/page/3/",interval:[20,29]},{path:"/tag/回溯算法/page/4/",interval:[30,39]},{path:"/tag/回溯算法/page/5/",interval:[40,49]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"递归",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/递归/",interval:[0,9]},{path:"/tag/递归/page/2/",interval:[10,19]},{path:"/tag/递归/page/3/",interval:[20,29]},{path:"/tag/递归/page/4/",interval:[30,39]},{path:"/tag/递归/page/5/",interval:[40,49]},{path:"/tag/递归/page/6/",interval:[50,59]},{path:"/tag/递归/page/7/",interval:[60,69]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"树形问题",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/树形问题/",interval:[0,9]},{path:"/tag/树形问题/page/2/",interval:[10,19]},{path:"/tag/树形问题/page/3/",interval:[20,29]},{path:"/tag/树形问题/page/4/",interval:[30,39]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"深度优先遍历",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/深度优先遍历/",interval:[0,9]},{path:"/tag/深度优先遍历/page/2/",interval:[10,19]},{path:"/tag/深度优先遍历/page/3/",interval:[20,29]},{path:"/tag/深度优先遍历/page/4/",interval:[30,39]},{path:"/tag/深度优先遍历/page/5/",interval:[40,47]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"广度优先遍历",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/广度优先遍历/",interval:[0,9]},{path:"/tag/广度优先遍历/page/2/",interval:[10,19]},{path:"/tag/广度优先遍历/page/3/",interval:[20,29]},{path:"/tag/广度优先遍历/page/4/",interval:[30,32]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"动态规划",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/动态规划/",interval:[0,9]},{path:"/tag/动态规划/page/2/",interval:[10,19]},{path:"/tag/动态规划/page/3/",interval:[20,29]},{path:"/tag/动态规划/page/4/",interval:[30,39]},{path:"/tag/动态规划/page/5/",interval:[40,49]},{path:"/tag/动态规划/page/6/",interval:[50,59]},{path:"/tag/动态规划/page/7/",interval:[60,69]},{path:"/tag/动态规划/page/8/",interval:[70,78]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"贪心算法",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/贪心算法/",interval:[0,9]},{path:"/tag/贪心算法/page/2/",interval:[10,16]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"字符串",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/字符串/",interval:[0,9]},{path:"/tag/字符串/page/2/",interval:[10,12]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"原地哈希",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/原地哈希/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"剪枝",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/剪枝/",interval:[0,8]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"并查集",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/并查集/",interval:[0,9]},{path:"/tag/并查集/page/2/",interval:[10,19]},{path:"/tag/并查集/page/3/",interval:[20,29]},{path:"/tag/并查集/page/4/",interval:[30,35]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"flood fill",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/flood fill/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"二分查找",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/二分查找/",interval:[0,9]},{path:"/tag/二分查找/page/2/",interval:[10,19]},{path:"/tag/二分查找/page/3/",interval:[20,29]},{path:"/tag/二分查找/page/4/",interval:[30,39]},{path:"/tag/二分查找/page/5/",interval:[40,49]},{path:"/tag/二分查找/page/6/",interval:[50,54]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"位运算",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/位运算/",interval:[0,9]},{path:"/tag/位运算/page/2/",interval:[10,16]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"拓扑排序",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/拓扑排序/",interval:[0,6]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"队列",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/队列/",interval:[0,9]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"单调队列",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/单调队列/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"闲谈",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/闲谈/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"闲聊",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/闲聊/",interval:[0,9]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"二叉树",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/二叉树/",interval:[0,9]},{path:"/tag/二叉树/page/2/",interval:[10,19]},{path:"/tag/二叉树/page/3/",interval:[20,29]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"树状数组",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/树状数组/",interval:[0,7]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"线段树",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/线段树/",interval:[0,5]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"Trie",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/Trie/",interval:[0,5]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"二叉搜索树",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/二叉搜索树/",interval:[0,9]},{path:"/tag/二叉搜索树/page/2/",interval:[10,12]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"哈希表",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/哈希表/",interval:[0,9]},{path:"/tag/哈希表/page/2/",interval:[10,19]},{path:"/tag/哈希表/page/3/",interval:[20,23]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"优先队列",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/优先队列/",interval:[0,9]},{path:"/tag/优先队列/page/2/",interval:[10,19]},{path:"/tag/优先队列/page/3/",interval:[20,25]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"链表",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/链表/",interval:[0,9]},{path:"/tag/链表/page/2/",interval:[10,19]},{path:"/tag/链表/page/3/",interval:[20,29]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"栈",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/栈/",interval:[0,9]},{path:"/tag/栈/page/2/",interval:[10,19]},{path:"/tag/栈/page/3/",interval:[20,27]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"树",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/树/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"差分",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/差分/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"区间 DP",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/区间 DP/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"树形 DP",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/树形 DP/",interval:[0,8]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"数位 DP",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/数位 DP/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"背包问题",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/背包问题/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"完全背包",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/完全背包/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"0-1 背包问题",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/0-1 背包问题/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"Dijkstra",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/Dijkstra/",interval:[0,7]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"最小生成树",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/最小生成树/",interval:[0,7]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"滚动哈希",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/滚动哈希/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"堆",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/堆/",interval:[0,8]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"分治法",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/分治法/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"单链表",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/单链表/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"双向链表",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/双向链表/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"快慢指针",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/快慢指针/",interval:[0,5]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"数学",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/数学/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"单调栈",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/单调栈/",interval:[0,9]},{path:"/tag/单调栈/page/2/",interval:[10,11]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"音乐",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/音乐/",interval:[0,4]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"前缀和",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/前缀和/",interval:[0,6]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"减而治之",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/减而治之/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"分治思想",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/分治思想/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"二分搜索树",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/二分搜索树/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"后序遍历",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/后序遍历/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"前缀树",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/前缀树/",interval:[0,9]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"单源最短路径",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/单源最短路径/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tag",id:"视频题解",filter:Ua.tag,sorter:La.tag,pages:[{path:"/tag/视频题解/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"排序算法",filter:Ua.category,sorter:La.category,pages:[{path:"/category/排序算法/",interval:[0,9]},{path:"/category/排序算法/page/2/",interval:[10,19]},{path:"/category/排序算法/page/3/",interval:[20,29]},{path:"/category/排序算法/page/4/",interval:[30,36]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"二分查找",filter:Ua.category,sorter:La.category,pages:[{path:"/category/二分查找/",interval:[0,9]},{path:"/category/二分查找/page/2/",interval:[10,19]},{path:"/category/二分查找/page/3/",interval:[20,29]},{path:"/category/二分查找/page/4/",interval:[30,39]},{path:"/category/二分查找/page/5/",interval:[40,49]},{path:"/category/二分查找/page/6/",interval:[50,52]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"循环不变量",filter:Ua.category,sorter:La.category,pages:[{path:"/category/循环不变量/",interval:[0,9]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"快速排序",filter:Ua.category,sorter:La.category,pages:[{path:"/category/快速排序/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"滑动窗口",filter:Ua.category,sorter:La.category,pages:[{path:"/category/滑动窗口/",interval:[0,9]},{path:"/category/滑动窗口/page/2/",interval:[10,19]},{path:"/category/滑动窗口/page/3/",interval:[20,29]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"双指针",filter:Ua.category,sorter:La.category,pages:[{path:"/category/双指针/",interval:[0,9]},{path:"/category/双指针/page/2/",interval:[10,15]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"回溯算法",filter:Ua.category,sorter:La.category,pages:[{path:"/category/回溯算法/",interval:[0,9]},{path:"/category/回溯算法/page/2/",interval:[10,19]},{path:"/category/回溯算法/page/3/",interval:[20,29]},{path:"/category/回溯算法/page/4/",interval:[30,39]},{path:"/category/回溯算法/page/5/",interval:[40,46]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"广度优先遍历",filter:Ua.category,sorter:La.category,pages:[{path:"/category/广度优先遍历/",interval:[0,9]},{path:"/category/广度优先遍历/page/2/",interval:[10,19]},{path:"/category/广度优先遍历/page/3/",interval:[20,25]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"动态规划",filter:Ua.category,sorter:La.category,pages:[{path:"/category/动态规划/",interval:[0,9]},{path:"/category/动态规划/page/2/",interval:[10,19]},{path:"/category/动态规划/page/3/",interval:[20,29]},{path:"/category/动态规划/page/4/",interval:[30,39]},{path:"/category/动态规划/page/5/",interval:[40,49]},{path:"/category/动态规划/page/6/",interval:[50,59]},{path:"/category/动态规划/page/7/",interval:[60,69]},{path:"/category/动态规划/page/8/",interval:[70,75]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"贪心算法",filter:Ua.category,sorter:La.category,pages:[{path:"/category/贪心算法/",interval:[0,9]},{path:"/category/贪心算法/page/2/",interval:[10,14]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"数组",filter:Ua.category,sorter:La.category,pages:[{path:"/category/数组/",interval:[0,9]},{path:"/category/数组/page/2/",interval:[10,11]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"字符串",filter:Ua.category,sorter:La.category,pages:[{path:"/category/字符串/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"分治算法",filter:Ua.category,sorter:La.category,pages:[{path:"/category/分治算法/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"位运算",filter:Ua.category,sorter:La.category,pages:[{path:"/category/位运算/",interval:[0,9]},{path:"/category/位运算/page/2/",interval:[10,15]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"闲谈",filter:Ua.category,sorter:La.category,pages:[{path:"/category/闲谈/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"闲聊",filter:Ua.category,sorter:La.category,pages:[{path:"/category/闲聊/",interval:[0,9]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"树",filter:Ua.category,sorter:La.category,pages:[{path:"/category/树/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"树状数组",filter:Ua.category,sorter:La.category,pages:[{path:"/category/树状数组/",interval:[0,7]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"线段树",filter:Ua.category,sorter:La.category,pages:[{path:"/category/线段树/",interval:[0,5]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"Trie",filter:Ua.category,sorter:La.category,pages:[{path:"/category/Trie/",interval:[0,5]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"并查集",filter:Ua.category,sorter:La.category,pages:[{path:"/category/并查集/",interval:[0,9]},{path:"/category/并查集/page/2/",interval:[10,19]},{path:"/category/并查集/page/3/",interval:[20,29]},{path:"/category/并查集/page/4/",interval:[30,32]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"二叉搜索树",filter:Ua.category,sorter:La.category,pages:[{path:"/category/二叉搜索树/",interval:[0,9]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"哈希表",filter:Ua.category,sorter:La.category,pages:[{path:"/category/哈希表/",interval:[0,9]},{path:"/category/哈希表/page/2/",interval:[10,16]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"优先队列",filter:Ua.category,sorter:La.category,pages:[{path:"/category/优先队列/",interval:[0,9]},{path:"/category/优先队列/page/2/",interval:[10,19]},{path:"/category/优先队列/page/3/",interval:[20,21]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"链表",filter:Ua.category,sorter:La.category,pages:[{path:"/category/链表/",interval:[0,9]},{path:"/category/链表/page/2/",interval:[10,19]},{path:"/category/链表/page/3/",interval:[20,29]},{path:"/category/链表/page/4/",interval:[30,32]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"队列",filter:Ua.category,sorter:La.category,pages:[{path:"/category/队列/",interval:[0,7]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"栈",filter:Ua.category,sorter:La.category,pages:[{path:"/category/栈/",interval:[0,9]},{path:"/category/栈/page/2/",interval:[10,19]},{path:"/category/栈/page/3/",interval:[20,27]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"差分",filter:Ua.category,sorter:La.category,pages:[{path:"/category/差分/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"图论",filter:Ua.category,sorter:La.category,pages:[{path:"/category/图论/",interval:[0,9]},{path:"/category/图论/page/2/",interval:[10,13]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"原地哈希",filter:Ua.category,sorter:La.category,pages:[{path:"/category/原地哈希/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"数学",filter:Ua.category,sorter:La.category,pages:[{path:"/category/数学/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"递归",filter:Ua.category,sorter:La.category,pages:[{path:"/category/递归/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"归并排序",filter:Ua.category,sorter:La.category,pages:[{path:"/category/归并排序/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"音乐",filter:Ua.category,sorter:La.category,pages:[{path:"/category/音乐/",interval:[0,4]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"前缀和",filter:Ua.category,sorter:La.category,pages:[{path:"/category/前缀和/",interval:[0,6]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"二叉树",filter:Ua.category,sorter:La.category,pages:[{path:"/category/二叉树/",interval:[0,9]},{path:"/category/二叉树/page/2/",interval:[10,19]},{path:"/category/二叉树/page/3/",interval:[20,28]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"算法与数据结构",filter:Ua.category,sorter:La.category,pages:[{path:"/category/算法与数据结构/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"二分搜索树",filter:Ua.category,sorter:La.category,pages:[{path:"/category/二分搜索树/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"前缀树",filter:Ua.category,sorter:La.category,pages:[{path:"/category/前缀树/",interval:[0,9]}],prevText:"Prev",nextText:"Next"},{pid:"category",id:"视频题解",filter:Ua.category,sorter:La.category,pages:[{path:"/category/视频题解/",interval:[0,1]}],prevText:"Prev",nextText:"Next"}],Ia=a(71);const $a=a.n(Ia)()("plugin-blog:pagination");class ja{constructor(e,t,a){$a("pagination",e);const{pages:r,prevText:n,nextText:o}=e,{path:i}=a;this._prevText=n,this._nextText=o;for(let e=0,t=r.length;e<t;e++){if(r[e].path===i){this.paginationIndex=e;break}}this.paginationIndex||(this.paginationIndex=0),this._paginationPages=r,this._currentPage=r[this.paginationIndex],this._matchedPages=t.filter(t=>e.filter(t,e.id,e.pid)).sort(e.sorter)}setIndexPage(e){this._indexPage=e}get length(){return this._paginationPages.length}get pages(){const[e,t]=this._currentPage.interval;return this._matchedPages.slice(e,t+1)}get hasPrev(){return 0!==this.paginationIndex}get prevLink(){return this.hasPrev?this.paginationIndex-1==0&&this._indexPage?this._indexPage:this._paginationPages[this.paginationIndex-1].path:null}get hasNext(){return this.paginationIndex!==this.length-1}get nextLink(){return this.hasNext?this._paginationPages[this.paginationIndex+1].path:null}get prevText(){return this._prevText}get nextText(){return this._nextText}getSpecificPageLink(e){return this._paginationPages[e].path}}const Fa=new class{constructor(e){this.paginations=e}get pages(){return r.a.$vuepress.$get("siteData").pages}getPagination(e,t,a){$a("id",t),$a("pid",e);const r=this.paginations.filter(a=>a.id===t&&a.pid===e)[0];return new ja(r,this.pages,a)}}(Ja);var za={comment:{enabled:!1,service:""},email:{enabled:!1},feed:{rss:!1,atom:!1,json:!1}},Oa=(a(185),a(16).a),Ma=(a(186),Object(Bt.a)(Oa,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("div",{staticClass:"chart-js"},[t("div",{staticClass:"chart-title"},[e._v(e._s(e.title))]),e._v(" "),e.loading?t("div",{staticClass:"chart-loading-wrapper"},[t("LoadingIcon")],1):e._e(),e._v(" "),t("div",{directives:[{name:"show",rawName:"v-show",value:!e.loading,expression:"!loading"}],ref:"chartElement",staticClass:"chart-wrapper",attrs:{id:"id"}},[t("canvas",{ref:"chartCanvasElement",attrs:{height:"400"}})])])}),[],!1,null,null,null).exports);const Na={useBabel:!1,jsLib:[],cssLib:[],codepenLayout:"left",codepenEditors:"101",babel:"https://unpkg.com/@babel/standalone/babel.min.js",vue:"https://unpkg.com/vue@2/dist/vue.min.js",react:"https://unpkg.com/react/umd/react.production.min.js",reactDOM:"https://unpkg.com/react-dom/umd/react-dom.production.min.js"},Ka={html:{types:["html","slim","haml","md","markdown","vue"],map:{html:"none",vue:"none",md:"markdown"}},js:{types:["js","javascript","coffee","coffeescript","ts","typescript","ls","livescript"],map:{js:"none",javascript:"none",coffee:"coffeescript",ls:"livescript",ts:"typescript"}},css:{types:["css","less","sass","scss","stylus","styl"],map:{css:"none",styl:"stylus"}}},Ra=e=>({...Na,...e,jsLib:Array.from(new Set([...Na.jsLib||[],...e.jsLib||[]])),cssLib:Array.from(new Set([...Na.cssLib||[],...e.cssLib||[]]))}),Ha=(e,t)=>{if(void 0!==e[t])return e[t];const a=new Promise(e=>{var a;const r=document.createElement("script");r.src=t,null===(a=document.querySelector("body"))||void 0===a||a.appendChild(r),r.onload=()=>{e()}});return e[t]=a,a},Va=(e,t)=>{if(t.css&&Array.from(e.childNodes).every(e=>"STYLE"!==e.nodeName)){const a=((e,t,a)=>{const r=document.createElement(e);return t&&Object.keys(t).forEach(e=>{if(e.indexOf("data"))r[e]=t[e];else{const a=e.replace("data","");r.dataset[a]=t[e]}}),a&&a.forEach(e=>{r.appendChild(e)}),r})("style",{innerHTML:t.css});e.appendChild(a)}},Wa=e=>e.replace(/<br \/>/g,"<br>").replace(/<((\S+)[^<]*?)\s+\/>/g,"<$1></$2>"),Ya=e=>`<div id="app">\n${Wa(e)}\n</div>`,Ga=e=>e.replace("export default ","const $reactApp = ").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,"")+';\nReactDOM.createRoot(document.getElementById("app")).render(React.createElement($reactApp))',Xa=e=>e.replace(/export\s+default\s*\{(\n*[\s\S]*)\n*\}\s*;?$/u,"Vue.createApp({$1}).mount('#app')").replace(/export\s+default\s*define(Async)?Component\s*\(\s*\{(\n*[\s\S]*)\n*\}\s*\)\s*;?$/u,"Vue.createApp({$1}).mount('#app')").trim(),Qa=e=>`(function(exports){var module={};module.exports=exports;${e};return module.exports.__esModule?module.exports.default:module.exports;})({})`,Za={};var er=Object(Bt.a)({},(function(){var e=this._self._c;return e("svg",{staticClass:"codepen-icon",attrs:{viewBox:"0 0 1024 1024",xmlns:"http://www.w3.org/2000/svg",width:"200",height:"200"}},[e("path",{attrs:{d:"M123.429 668L468 897.714V692.571L277.143 565.143zM88 585.714L198.286 512 88 438.286v147.428zm468 312L900.571 668 746.857 565.143 556 692.57v205.143zM512 616l155.429-104L512 408 356.571 512zM277.143 458.857L468 331.43V126.286L123.429 356zM825.714 512L936 585.714V438.286zm-78.857-53.143L900.571 356 556 126.286v205.143zM1024 356v312q0 23.429-19.429 36.571l-468 312Q524.571 1024 512 1024t-24.571-7.429l-468-312Q0 691.43 0 668V356q0-23.429 19.429-36.571l468-312Q499.429 0 512 0t24.571 7.429l468 312Q1024 332.57 1024 356z"}})])}),[],!1,null,null,null).exports,tr=Object(Bt.a)({},(function(){var e=this._self._c;return e("svg",{staticClass:"jsfiddle-icon",attrs:{viewBox:"0 0 1170 1024",xmlns:"http://www.w3.org/2000/svg",width:"228.516",height:"200"}},[e("path",{attrs:{d:"M1028.571 441.143q63.429 26.286 102.572 83.143t39.143 126.571q0 93.714-67.429 160.286T940 877.714q-2.286 0-6.571-.285t-6-.286H232q-97.143-5.714-164.571-71.714T0 645.143q0-62.857 31.429-116t84-84q-6.858-22.286-6.858-46.857 0-65.715 46.858-112T269.143 240q54.286 0 98.286 33.143 42.857-88 127.142-141.714t186.572-53.715q94.857 0 174.857 46t126.571 124.857 46.572 172q0 3.429-.286 10.286t-.286 10.286zm-761.142 152q0 69.714 48 110.286T434.286 744q78.285 0 137.143-56.571-9.143-11.429-27.143-32.286t-24.857-28.857q-38.286 37.143-82.286 37.143-31.429 0-53.429-19.143t-22-50q0-30.286 22-49.715T436 525.143q25.143 0 48.286 12T526 568.57t37.143 42.858 39.428 46.857 44 42.857T702 732.57t69.429 12q69.142 0 116.857-40.857T936 594.857q0-69.143-48-109.714T769.714 444.57Q688 444.571 632 500l53.143 61.714q37.714-36.571 81.143-36.571 29.714 0 52.571 18.857t22.857 48q0 32.571-21.143 52.286T766.857 664q-24.571 0-47.143-12t-41.143-31.429-37.428-42.857-39.714-46.857T557.143 488 502 456.571t-67.714-12q-69.715 0-118.286 40.286t-48.571 108.286z"}})])}),[],!1,null,null,null).exports,ar=a(2),rr=(a(187),r.a.extend({name:"CodeDemo",components:{CodePenIcon:er,JSFiddleIcon:tr,LoadingIcon:ar.a},props:{id:{type:String,required:!0},type:{type:String,default:"normal"},title:{type:String,default:""},config:{type:String,default:""},code:{type:String,required:!0}},data:()=>({isExpanded:!1,height:"0",loaded:!1}),computed:{codeConfig(){return JSON.parse(decodeURIComponent(this.config||"{}"))},codeType(){return(e=>{const t=Object.keys(e),a={html:[],js:[],css:[],isLegal:!1};return["html","js","css"].forEach(r=>{const n=t.filter(e=>Ka[r].types.includes(e));if(n.length){const t=n[0];a[r]=[e[t].replace(/^\n|\n$/g,""),Ka[r].map[t]||t]}}),a.isLegal=!(a.html.length&&"none"!==a.html[1]||a.js.length&&"none"!==a.js[1]||a.css.length&&"none"!==a.css[1]),a})(JSON.parse(decodeURIComponent(this.code||"{}")))},info(){return"react"===this.type?((e,t)=>{const a=Ra(t);return{...a,html:Ya(""),js:Ga(e.js[0]||""),css:e.css[0]||(e.js[0]?e.js[0].replace(/App\.__style__(?:\s*)=(?:\s*)`([\s\S]*)?`/,"$1").trim():""),isLegal:e.isLegal,jsLib:[a.react,a.reactDOM,...a.jsLib],jsx:!0,getScript:()=>{var t,a;const r=(null===(a=null===(t=window.Babel)||void 0===t?void 0:t.transform(e.js[0]||"",{presets:["es2015","react"]}))||void 0===a?void 0:a.code)||"";return`window.ReactDOM.createRoot(document.firstElementChild).render(window.React.createElement(${Qa(r)}))`}}})(this.codeType,this.codeConfig):"vue"===this.type?((e,t)=>{const a=Ra(t),r=e.html[0]||"",n=/<template>([\s\S]+)<\/template>/u.exec(r),o=/<script(\s*lang=(['"])(.*?)\2)?>([\s\S]+)<\/script>/u.exec(r),i=/<style(\s*lang=(['"])(.*?)\2)?\s*(?:scoped)?>([\s\S]+)<\/style>/u.exec(r),l=n?n[1].replace(/^\n|\n$/g,""):"",[s="",c=""]=o?[o[4].replace(/^\n|\n$/g,""),o[3]]:[],[m="",p=""]=i?[i[4].replace(/^\n|\n$/g,""),i[3]]:[],u=""===c&&(""===p||"css"===p);return{...a,html:Ya(l),js:Xa(s),css:m,isLegal:u,jsLib:[a.vue,...a.jsLib],getScript:()=>{var e,a;const r=t.useBabel?(null===(a=null===(e=window.Babel)||void 0===e?void 0:e.transform(s,{presets:["es2015"]}))||void 0===a?void 0:a.code)||"":s.replace(/export\s+default/u,"return");return`const app=window.document.createElement('div');document.firstElementChild.appendChild(app);const appOptions=${Qa(r)};appOptions.template=\`${l.replace("`",'\\`"')}\`;window.Vue.createApp(appOptions).mount(app);`}}})(this.codeType,this.codeConfig):((e,t)=>{const a=Ra(t),r=e.js[0]||"";return{...a,html:Wa(e.html[0]||""),js:r,css:e.css[0]||"",isLegal:e.isLegal,getScript:()=>{var e;return a.useBabel?(null===(e=window.Babel.transform(r,{presets:["es2015"]}))||void 0===e?void 0:e.code)||"":r}}})(this.codeType,this.codeConfig)},isLegal(){return this.info.isLegal}},mounted(){setTimeout(()=>{this.loadDemo()},500)},methods:{initDom(e=!1){const t=this.$refs.demoWrapper.attachShadow({mode:"open"}),a=document.createElement("div");a.classList.add("code-demo-app"),t.appendChild(a),this.isLegal?(e&&(a.innerHTML=this.info.html),Va(t,this.info),((e,t,a)=>{const r=a.getScript();if(r&&Array.from(t.childNodes).every(e=>"SCRIPT"!==e.nodeName)){const a=document.createElement("script");a.appendChild(document.createTextNode(`{const document=window.document.querySelector('#${e} .code-demo-container').shadowRoot;\n${r}}`)),t.appendChild(a)}})(this.id,t,this.info),this.height="0"):this.height="auto",this.loaded=!0},loadDemo(){switch(this.type){case"react":return(e=this.info,Promise.all([Ha(Za,e.babel),Ha(Za,e.react),Ha(Za,e.reactDOM)])).then(()=>this.initDom());case"vue":return(e=>{const t=[Ha(Za,e.vue)];return e.useBabel&&t.push(Ha(Za,e.babel)),Promise.all(t)})(this.info).then(()=>this.initDom());default:return(e=>e.useBabel?Ha(Za,e.babel):Promise.resolve())(this.info).then(()=>this.initDom(!0))}var e},onToggle(){this.height=this.isExpanded?"0":this.$refs.codeContainer.clientHeight+13.8+"px",this.isExpanded=!this.isExpanded}}})),nr=(a(188),Object(Bt.a)(rr,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("div",{staticClass:"code-demo-wrapper",attrs:{id:e.id}},[e.loading?t("div",{staticClass:"loading"},[t("LoadingIcon")],1):e._e(),e._v(" "),t("div",{staticClass:"code-demo-header"},[t("button",{class:["toggle-button",e.isExpanded?"down":"right"],on:{click:e.onToggle}}),e._v(" "),e.title?t("span",{staticClass:"title"},[e._v(e._s(decodeURIComponent(e.title)))]):e._e(),e._v(" "),e.info.isLegal&&!1!==e.info.jsfiddle?t("form",{staticClass:"code-demo-jsfiddle",attrs:{action:"https://jsfiddle.net/api/post/library/pure/",target:"_blank",method:"post"}},[t("input",{attrs:{type:"hidden",name:"html"},domProps:{value:e.info.html}}),e._v(" "),t("input",{attrs:{type:"hidden",name:"js"},domProps:{value:e.info.js}}),e._v(" "),t("input",{attrs:{type:"hidden",name:"css"},domProps:{value:e.info.css}}),e._v(" "),t("input",{attrs:{type:"hidden",name:"wrap",value:"1"}}),e._v(" "),t("input",{attrs:{type:"hidden",name:"panel_js",value:"3"}}),e._v(" "),t("input",{attrs:{type:"hidden",name:"resources"},domProps:{value:[...e.info.cssLib,...e.info.jsLib].join(",")}}),e._v(" "),t("button",{staticClass:"jsfiddle-button",attrs:{type:"submit","aria-label":"JSFiddle","data-balloon-pos":"up"}},[t("JSFiddleIcon")],1)]):e._e(),e._v(" "),e.info.isLegal&&!1===e.info.codepen?e._e():t("form",{staticClass:"code-demo-codepen",attrs:{target:"_blank",action:"https://codepen.io/pen/define",method:"post"}},[t("input",{attrs:{type:"hidden",name:"data"},domProps:{value:JSON.stringify({html:e.info.html,js:e.info.js,css:e.info.css,js_external:e.info.jsLib.join(";"),css_external:e.info.cssLib.join(";"),layout:e.info.codepenLayout,html_pre_processor:e.codeType?e.codeType.html[1]:"none",js_pre_processor:e.codeType?e.codeType.js[1]:e.info.jsx?"babel":"none",css_pre_processor:e.codeType?e.codeType.css[1]:"none",editors:e.info.codepenEditors})}})])]),e._v(" "),t("div",{directives:[{name:"show",rawName:"v-show",value:e.isLegal&&e.loaded,expression:"isLegal && loaded"}],ref:"demoWrapper",staticClass:"code-demo-container"}),e._v(" "),t("div",{staticClass:"code-demo-code-wrapper",style:{height:e.height}},[t("div",{ref:"codeContainer",staticClass:"code-demo-codes"},[e._t("default")],2)])])}),[],!1,null,null,null).exports),or=r.a.extend({name:"CodeGroup",data:()=>({codeTabs:[],activeTabIndex:-1}),watch:{activeTabIndex(e){this.activateCodeTab(e)}},mounted(){this.loadTabs()},methods:{loadTabs(){this.codeTabs=(this.$slots.default||[]).filter(e=>Boolean(e.componentOptions)).map((e,t)=>{const a=e.componentOptions.propsData;return"active"in a&&(this.activeTabIndex=t),{title:a.title,element:e.elm}}),-1===this.activeTabIndex&&this.codeTabs.length>0&&(this.activeTabIndex=0),this.activateCodeTab(0)},changeCodeTab(e){this.activeTabIndex=e},keyDownHandler(e,t){" "===e.key||"Enter"===e.key?(e.preventDefault(),this.activeTabIndex=t):"ArrowRight"===e.key?(e.preventDefault(),t+1<this.codeTabs.length&&(this.activeTabIndex=t+1,this.$refs.tab[t+1].focus())):"ArrowLeft"===e.key&&(e.preventDefault(),t-1>=0&&(this.activeTabIndex=t-1,this.$refs.tab[t-1].focus()))},activateCodeTab(e){this.codeTabs.forEach((t,a)=>{const{element:r}=t;r&&(e===a?r.classList.add("active"):r.classList.remove("active"))})}}}),ir=(a(189),Object(Bt.a)(or,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("ClientOnly",[t("div",{staticClass:"code-group"},[t("div",{staticClass:"code-group-nav",attrs:{"v:if":"codeTabs.length"}},e._l(e.codeTabs,(function(a,r){return t("button",{key:a.title,ref:"tab",refInFor:!0,staticClass:"code-group-nav-tab",class:{active:r===e.activeTabIndex},attrs:{"aria-pressed":r===e.activeTabIndex,"aria-expanded":r===e.activeTabIndex},domProps:{textContent:e._s(a.title)},on:{click:function(t){return e.changeCodeTab(r)},keydown:function(t){return e.keyDownHandler(t,r)}}})})),0),e._v(" "),e._t("default"),e._v(" "),e.codeTabs.length?e._e():t("pre",{staticClass:"hints",domProps:{textContent:e._s("// Make sure to add code blocks to your code group")}})],2)])}),[],!1,null,null,null).exports),lr=r.a.extend({name:"CodeGroupItem",props:{title:{type:String,required:!0},active:{type:Boolean,required:!1,default:!1}},mounted(){this.$parent&&this.$parent.loadTabs&&this.$parent.loadTabs()}}),sr=(a(190),Object(Bt.a)(lr,(function(){var e=this._self._c;this._self._setupProxy;return e("div",{staticClass:"code-group-item",class:{active:this.active},attrs:{"aria-selected":this.active}},[this._t("default")],2)}),[],!1,null,null,null).exports),cr={x:0,y:0,"line-width":2,"line-length":40,"text-margin":8,"font-size":14,"font-color":"#8DA1AC","line-color":"#8DA1AC","element-color":"black",fill:"white","yes-text":"Yes","no-text":"No","arrow-end":"block",scale:1},mr={ant:{...cr,symbols:{start:{class:"start-element","font-color":"#fff",fill:"#595959","line-width":"0px"},end:{class:"end-element","font-color":"#fff",fill:"#595959","line-width":"0px"},operation:{class:"operation-element","font-color":"#fff",fill:"#1890ff","line-width":"0px"},inputoutput:{class:"inputoutput-element","font-color":"#fff",fill:"#1890ff","line-width":"0px"},subroutine:{class:"subroutine-element","font-color":"#fff",fill:"#FF485E","element-color":"#fff","line-color":"red"},condition:{class:"condition-element","font-color":"#fff",fill:"#FF485E","line-width":"0px"},parallel:{class:"parallel-element","font-color":"#fff",fill:"#1890ff","line-width":"0px"}}},vue:{...cr,symbols:{start:{class:"start-element","font-color":"#fff",fill:"#2F495F","line-width":"0px"},end:{class:"end-element","font-color":"#fff",fill:"#2F495F","line-width":"0px"},operation:{class:"operation-element","font-color":"#fff",fill:"#00BC7D","line-width":"0px"},inputoutput:{class:"inputoutput-element","font-color":"#fff",fill:"#EB4D5D","line-width":"0px"},subroutine:{class:"subroutine-element","font-color":"#fff",fill:"#937AC4","element-color":"#fff","line-color":"red"},condition:{class:"condition-element","font-color":"#fff",fill:"#FFB500","line-width":"0px"},parallel:{class:"parallel-element","font-color":"#fff",fill:"#2F495F","line-width":"0px"}}}};let pr;var ur=r.a.extend({name:"FlowChart",components:{Loading:ar.a},props:{id:{type:String,required:!0},code:{type:String,required:!0},preset:{type:String,default:"vue"}},data:()=>({loading:!0,scale:1}),computed:{$preset(){const e=mr[this.preset];return e||(console.warn("[md-enhance:flowchart] Unknown preset: "+this.preset),mr.vue)},onResize(){return Object(Pt.a)(()=>{const e=this.getScale(window.innerWidth);this.scale!==e&&(this.scale=e,pr.drawSVG(this.id,{...this.$preset,scale:e}))},100)}},mounted(){this.$el.setAttribute("id",this.id),Promise.all([a.e(634).then(a.t.bind(null,512,7)),new Promise(e=>setTimeout(e,500))]).then(([e])=>{const{parse:t}=e;pr=t(decodeURIComponent(this.code)),this.scale=this.getScale(window.innerWidth),pr.drawSVG(this.id,{...this.$preset,scale:this.scale}),this.loading=!1,window.addEventListener("resize",this.onResize)})},beforeDestroy(){window.removeEventListener("resize",this.onResize)},methods:{getScale:e=>e<419?.8:e>1280?1:.9}}),gr=(a(191),Object(Bt.a)(ur,(function(){var e=this._self._c;this._self._setupProxy;return e("div",{staticClass:"md-flowchart",class:{loading:this.loading}},[this.loading?e("Loading",{staticClass:"md-flowchart-loading-icon"}):this._e()],1)}),[],!1,null,null,null).exports);a(192);var dr=r.a.extend({name:"Mermaid",components:{Loading:ar.a},props:{id:{type:String,required:!0},code:{type:String,required:!0}},data:()=>({loading:!0,svgCode:"",observer:null}),mounted(){const e=decodeURIComponent(this.code);Promise.all([a.e(636).then(a.bind(null,513)),new Promise(e=>setTimeout(e,500))]).then(([t])=>{const{initialize:a,render:n}=t.default,o=t=>{const o=document.createElement("div");o.style.position="relative",o.style.top="-9999px";const i=e=>{this.loading=!1,this.svgCode=e,document.body.removeChild(o)};var l;a({theme:"base",themeVariables:(l=t,{dark:l,background:l?"#1e1e1e":"#fff",primaryColor:l?"#389d70":"#4abf8a",primaryBorderColor:l?"#389d70":"#4abf8a",primaryTextColor:"#fff",secondaryColor:"#ffb500",secondaryBorderColor:l?"#fff":"#000",secondaryTextColor:l?"#ddd":"#333",tertiaryColor:l?"#282828":"#efeef4",tertiaryBorderColor:l?"#bbb":"#242424",tertiaryTextColor:l?"#ddd":"#333",noteBkgColor:l?"#f6d365":"#fff5ad",noteTextColor:"#242424",noteBorderColor:l?"#f6d365":"#333",lineColor:l?"#d3d3d3":"#333",textColor:l?"#fff":"#242424",mainBkg:l?"#389d70":"#4abf8a",errorBkgColor:"#eb4d5d",errorTextColor:"#fff",nodeBorder:l?"#389d70":"#4abf8a",nodeTextColor:l?"#fff":"#242424",signalTextColor:l?"#9e9e9e":"#242424",classText:"#fff",labelColor:"#fff",fillType0:l?"#cf1322":"#f1636e",fillType1:"#f39c12",fillType2:"#2ecc71",fillType3:"#fa541c",fillType4:"#25a55b",fillType5:"#13c2c2",fillType6:"#096dd9",fillType7:"#aa6fe9"}),startOnLoad:!1}),this.svgCode="",document.body.appendChild(o),r.a.nextTick(()=>n(this.id,e,i,o))},i=document.querySelector("body");o(i.classList.contains("theme-dark")),this.observer=new MutationObserver(()=>{o(i.classList.contains("theme-dark"))}),this.observer.observe(i,{attributeFilter:["class"],attributes:!0})})},beforeDestroy(){this.observer&&this.observer.disconnect()},render(e){return this.svgCode?e("div",{class:"md-mermaid",domProps:{innerHTML:this.svgCode}}):e("div",{class:"md-mermaid-loading"},[e(ar.a)])}}),hr=r.a.extend({name:"Presentation",components:{Loading:ar.a},props:{id:{type:String,required:!0},theme:{type:String,default:"auto"}},data:()=>({loading:!0,code:""}),mounted(){this.$el.setAttribute("id",this.id),this.code=decodeURIComponent(this.$el.dataset.code||"");const e=document.querySelector("#"+this.id);if(e){e.setAttribute("theme",this.theme);const t=[new Promise(e=>setTimeout(e,500)),a.e(638).then(a.bind(null,514))];t.push(a.e(638).then(a.bind(null,515))),t.push(a.e(638).then(a.bind(null,516))),t.push(a.e(638).then(a.bind(null,517))),t.push(a.e(638).then(a.bind(null,518))),t.push(a.e(638).then(a.bind(null,519))),t.push(a.e(638).then(a.bind(null,520))),Promise.all(t).then(([,t,...a])=>{const r=new t.default(e,{plugins:a.map(e=>e.default)});r.initialize({backgroundTransition:"slide",hash:"Slide"===this.$frontmatter.layout,mouseWheel:"Slide"===this.$frontmatter.layout,transition:"slide",slideNumber:!0,...this.$frontmatter.reveal||{},embedded:"Slide"!==this.$frontmatter.layout}).then(()=>{this.loading=!1}),r.configure({backgroundTransition:"slide"})})}}}),yr=(a(193),Object(Bt.a)(hr,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("div",{staticClass:"md-presentation reveal reveal-viewport",class:{loading:e.loading}},[e.loading?t("Loading",{staticClass:"md-presentation-loading-icon"}):e._e(),e._v(" "),t("div",{directives:[{name:"show",rawName:"v-show",value:!e.loading,expression:"!loading"}],staticClass:"slides"},[t("section",{attrs:{"data-markdown":"","data-separator":"^\\r?\\n---\\r?\\n$","data-separator-vertical":"^\\r?\\n--\\r?\\n$"}},[t("script",{attrs:{type:"text/template"}},[e._v("\n        "+e._s(e.code)+"\n      ")])])])],1)}),[],!1,null,null,null).exports);var fr=({Vue:e})=>{Promise.all([a.e(0),a.e(640)]).then(a.t.bind(null,506,7)),Promise.all([a.e(0),a.e(641)]).then(a.t.bind(null,507,7)),Ma.name&&e.component("ChartJS",Ma),nr.name&&e.component("CodeDemo",nr),ir.name&&e.component("CodeGroup",ir),sr.name&&e.component("CodeGroupItem",sr),Promise.all([a.e(0),a.e(642)]).then(a.t.bind(null,508,7)),gr.name&&e.component("FlowChart",gr),dr.name&&e.component("Mermaid",dr),yr.name&&e.component("Presentation",yr),Promise.all([a.e(0),a.e(643)]).then(a.t.bind(null,509,7)),Promise.all([a.e(0),a.e(644)]).then(a.t.bind(null,510,7)),Promise.all([a.e(0),a.e(645)]).then(a.t.bind(null,511,7))};const br=e=>({src:e.src,w:e.naturalWidth,h:e.naturalHeight,title:e.alt}),vr={"/":{close:"Close",fullscreen:"Switch to full screen",share:"Share",zoom:"Zoom in/out",prev:"Prev (Arrow Left)",next:"Next (Arrow Right)",buttons:[{id:"facebook",label:"Share on Facebook",url:"https://www.facebook.com/sharer/sharer.php?u={{url}}"},{id:"twitter",label:"Tweet",url:"https://twitter.com/intent/tweet?text={{text}}&url={{url}}"},{id:"pinterest",label:"Pin it",url:"http://www.pinterest.com/pin/create/button/?url={{url}}&media={{image_url}}&description={{text}}"},{id:"download",label:"Download image",url:"{{raw_image_url}}",download:!0}]}};var wr=r.a.extend({name:"PhotoSwipe",computed:{locales(){return vr[this.$localePath||"/"]}},watch:{$route(){this.initPhotoSwipe()}},mounted(){this.initPhotoSwipe()},methods:{initPhotoSwipe(){const e=document.querySelector(".pswp");Promise.all([a.e(637).then(a.t.bind(null,521,7)),a.e(637).then(a.t.bind(null,522,7)),new Promise(e=>setTimeout(()=>e(),500))]).then(([t,a])=>{(e=>{const t=Array.from(document.querySelectorAll(e));return Promise.all(t.map(e=>new Promise((t,a)=>{e.complete?t(br(e)):(e.onload=()=>t(br(e)),e.onerror=e=>a(e))}))).then(e=>({elements:t,infos:e}))})(".theme-default-content :not(a) > img").then(({elements:r,infos:n})=>{r.forEach((r,o)=>{r.onclick=()=>{new t.default(e,a.default,n,{shareButtons:this.locales.buttons,index:o}).init()}})})})}}}),kr=(a(194),Object(Bt.a)(wr,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("div",{staticClass:"pswp",attrs:{tabindex:"-1",role:"dialog","aria-hidden":"true"}},[t("div",{staticClass:"pswp__bg"}),e._v(" "),t("div",{staticClass:"pswp__scroll-wrap"},[e._m(0),e._v(" "),t("div",{staticClass:"pswp__ui pswp__ui--hidden"},[t("div",{staticClass:"pswp__top-bar"},[t("div",{staticClass:"pswp__counter"}),e._v(" "),t("button",{staticClass:"pswp__button pswp__button--close",attrs:{title:e.locales.close,"aria-label":e.locales.close}}),e._v(" "),t("button",{staticClass:"pswp__button pswp__button--share",attrs:{title:e.locales.share,"aria-label":e.locales.share}}),e._v(" "),t("button",{staticClass:"pswp__button pswp__button--fs",attrs:{title:e.locales.fullscreen,"aria-label":e.locales.fullscreen}}),e._v(" "),t("button",{staticClass:"pswp__button pswp__button--zoom",attrs:{title:e.locales.zoom,"aria-label":e.locales.zoom}}),e._v(" "),e._m(1)]),e._v(" "),e._m(2),e._v(" "),t("button",{staticClass:"pswp__button pswp__button--arrow--left",attrs:{title:e.locales.prev,"aria-label":e.locales.prev}}),e._v(" "),t("button",{staticClass:"pswp__button pswp__button--arrow--right",attrs:{title:e.locales.next,"aria-label":e.locales.next}}),e._v(" "),e._m(3)])])])}),[function(){var e=this._self._c;this._self._setupProxy;return e("div",{staticClass:"pswp__container"},[e("div",{staticClass:"pswp__item"}),this._v(" "),e("div",{staticClass:"pswp__item"}),this._v(" "),e("div",{staticClass:"pswp__item"})])},function(){var e=this._self._c;this._self._setupProxy;return e("div",{staticClass:"pswp__preloader"},[e("div",{staticClass:"pswp__preloader__icn"},[e("div",{staticClass:"pswp__preloader__cut"},[e("div",{staticClass:"pswp__preloader__donut"})])])])},function(){var e=this._self._c;this._self._setupProxy;return e("div",{staticClass:"pswp__share-modal pswp__share-modal--hidden pswp__single-tap"},[e("div",{staticClass:"pswp__share-tooltip"})])},function(){var e=this._self._c;this._self._setupProxy;return e("div",{staticClass:"pswp__caption"},[e("div",{staticClass:"pswp__caption__center"})])}],!1,null,null,null).exports);var Er=[{},({Vue:e})=>{e.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},Gt,ma,_a,Ba,({Vue:e})=>{const t=Object.keys(Da).map(e=>{const t=Da[e],a="$"+e;return{[a](){const{pages:e}=this.$site;return new Ca(t,e)},["$current"+(e.charAt(0).toUpperCase()+e.slice(1))](){const e=this.$route.meta.id;return this[a].getItemByName(e)}}}).reduce((e,t)=>(Object.assign(e,t),e),{});t.$frontmatterKey=function(){const e=this["$"+this.$route.meta.id];return e||null},e.mixin({computed:t})},({Vue:e})=>{e.mixin({computed:{$pagination(){return this.$route.meta.pid&&this.$route.meta.id?this.$getPagination(this.$route.meta.pid,this.$route.meta.id):null}},methods:{$getPagination(e,t){return t=t||e,Fa.getPagination(e,t,this.$route)}}})},({Vue:e})=>{const t={$service:()=>za};e.mixin({computed:t})},{},fr,({Vue:e})=>{e.component("PhotoSwipe",kr)}],Tr=["BackToTop","PWAInstall","SWUpdatePopup","PhotoSwipe"];class xr extends class{constructor(){this.store=new r.a({data:{state:{}}})}$get(e){return this.store.state[e]}$set(e,t){r.a.set(this.store.state,e,t)}$emit(...e){this.store.$emit(...e)}$on(...e){this.store.$on(...e)}}{}Object.assign(xr.prototype,{getPageAsyncComponent:st,getLayoutAsyncComponent:ct,getAsyncComponent:mt,getVueComponent:pt});var Sr={install(e){const t=new xr;e.$vuepress=t,e.prototype.$vuepress=t}};function Pr(e,t){const a=t.toLowerCase();return e.options.routes.some(e=>e.path.toLowerCase()===a)}var qr={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(e){const t=this.pageKey||this.$parent.$page.key;return gt("pageKey",t),r.a.component(t)||r.a.component(t,st(t)),r.a.component(t)?e(t):e("")}},_r={functional:!0,props:{slotKey:String,required:!0},render:(e,{props:t,slots:a})=>e("div",{class:["content__"+t.slotKey]},a()[t.slotKey])},Ar={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Br=(a(195),a(196),Object(Bt.a)(Ar,(function(){var e=this._self._c;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),Dr={functional:!0,render(e,{parent:t,children:a}){if(t._isMounted)return a;t.$once("hook:mounted",()=>{t.$forceUpdate()})}};r.a.config.productionTip=!1,r.a.use(Ve),r.a.use(Sr),r.a.mixin(function(e,t,a=r.a){!function(e){e.locales&&Object.keys(e.locales).forEach(t=>{e.locales[t].path=t});Object.freeze(e)}(t),a.$vuepress.$set("siteData",t);const n=new(e(a.$vuepress.$get("siteData"))),o=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(n)),i={};return Object.keys(o).reduce((e,t)=>(t.startsWith("$")&&(e[t]=o[t].get),e),i),{computed:i}}(e=>class{setPage(e){this.__page=e}get $site(){return e}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:e={}}=this.$site;let t,a;for(const r in e)"/"===r?a=e[r]:0===this.$page.path.indexOf(r)&&(t=e[r]);return t||a||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:e}=this.$page.frontmatter;return"string"==typeof e&&e}get $title(){const e=this.$page,{metaTitle:t}=this.$page.frontmatter;if("string"==typeof t)return t;const a=this.$siteTitle,r=e.frontmatter.home?null:e.frontmatter.title||e.title;return a?r?r+" | "+a:a:r||"VuePress"}get $description(){const e=function(e){if(e){const t=e.filter(e=>"description"===e.name)[0];if(t)return t.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(e,t){for(let a=0;a<e.length;a++){const r=e[a];if(r.path.toLowerCase()===t.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},Nt)),r.a.component("Content",qr),r.a.component("ContentSlotsDistributor",_r),r.a.component("OutboundLink",Br),r.a.component("ClientOnly",Dr),r.a.component("Layout",ct("Layout")),r.a.component("NotFound",ct("NotFound")),r.a.prototype.$withBase=function(e){const t=this.$site.base;return"/"===e.charAt(0)?t+e.slice(1):e},window.__VUEPRESS__={version:"1.9.7",hash:"0b7c449"},async function(e){const t="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Nt.routerBase||Nt.base,a=new Ve({base:t,mode:"history",fallback:!1,routes:Mt,scrollBehavior:(e,t,a)=>a||(e.hash?!r.a.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(e.hash)}:{x:0,y:0})});!function(e){e.beforeEach((t,a,r)=>{if(Pr(e,t.path))r();else if(/(\/|\.html)$/.test(t.path))if(/\/$/.test(t.path)){const a=t.path.replace(/\/$/,"")+".html";Pr(e,a)?r(a):r()}else r();else{const a=t.path+"/",n=t.path+".html";Pr(e,n)?r(n):Pr(e,a)?r(a):r()}})}(a);const n={};try{await Promise.all(Er.filter(e=>"function"==typeof e).map(t=>t({Vue:r.a,options:n,router:a,siteData:Nt,isServer:e})))}catch(e){console.error(e)}return{app:new r.a(Object.assign(n,{router:a,render:e=>e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},Tr.map(t=>e(t)))])})),router:a}}(!1).then(({app:e,router:t})=>{t.onReady(()=>{e.$mount("#app")})})}]);