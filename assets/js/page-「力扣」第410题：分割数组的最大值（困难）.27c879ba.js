(window.webpackJsonp=window.webpackJsonp||[]).push([[334],{664:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("ul",[t("li",[s._v("题目链接："),t("a",{attrs:{href:"https://leetcode-cn.com/problems/split-array-largest-sum/",target:"_blank",rel:"noopener noreferrer"}},[s._v("410. 分割数组的最大值"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("题解链接："),t("a",{attrs:{href:"https://leetcode-cn.com/problems/split-array-largest-sum/solution/er-fen-cha-zhao-by-liweiwei1419-4/",target:"_blank",rel:"noopener noreferrer"}},[s._v("动态规划、二分查找（Java）"),t("OutboundLink")],1)])]),s._v(" "),t("h2",{attrs:{id:"题目描述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[s._v("#")]),s._v(" 题目描述")]),s._v(" "),t("p",[s._v("给定一个非负整数数组 "),t("code",[s._v("nums")]),s._v(" 和一个整数 "),t("code",[s._v("m")]),s._v(" ，你需要将这个数组分成 "),t("code",[s._v("m")]),s._v(" 个非空的连续子数组。")]),s._v(" "),t("p",[s._v("设计一个算法使得这 "),t("code",[s._v("m")]),s._v(" 个子数组各自和的最大值最小。")]),s._v(" "),t("p",[t("strong",[s._v("示例 1：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("输入：nums = [7,2,5,10,8], m = 2\n输出：18\n解释：\n一共有四种方法将 nums 分割为 2 个子数组。 其中最好的方式是将其分为 [7,2,5] 和 [10,8] 。\n因为此时这两个子数组各自的和的最大值为18，在所有情况中最小。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("strong",[s._v("示例 2：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("输入：nums = [1,2,3,4,5], m = 2\n输出：9\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("strong",[s._v("示例 3：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("输入：nums = [1,4,4], m = 3\n输出：4\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("strong",[s._v("提示：")])]),s._v(" "),t("ul",[t("li",[t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[t("semantics",[t("mrow",[t("mn",[s._v("1")]),t("mo",[s._v("≤")]),t("mi",[s._v("n")]),t("mi",[s._v("u")]),t("mi",[s._v("m")]),t("mi",[s._v("s")]),t("mi",{attrs:{mathvariant:"normal"}},[s._v(".")]),t("mi",[s._v("l")]),t("mi",[s._v("e")]),t("mi",[s._v("n")]),t("mi",[s._v("g")]),t("mi",[s._v("t")]),t("mi",[s._v("h")]),t("mo",[s._v("≤")]),t("mn",[s._v("1000")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("1 \\le nums.length \\le 1000")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"0.7804em","vertical-align":"-0.136em"}}),t("span",{staticClass:"mord"},[s._v("1")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),t("span",{staticClass:"mrel"},[s._v("≤")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"0.8889em","vertical-align":"-0.1944em"}}),t("span",{staticClass:"mord mathnormal"},[s._v("n")]),t("span",{staticClass:"mord mathnormal"},[s._v("u")]),t("span",{staticClass:"mord mathnormal"},[s._v("m")]),t("span",{staticClass:"mord mathnormal"},[s._v("s")]),t("span",{staticClass:"mord"},[s._v(".")]),t("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.01968em"}},[s._v("l")]),t("span",{staticClass:"mord mathnormal"},[s._v("e")]),t("span",{staticClass:"mord mathnormal"},[s._v("n")]),t("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.03588em"}},[s._v("g")]),t("span",{staticClass:"mord mathnormal"},[s._v("t")]),t("span",{staticClass:"mord mathnormal"},[s._v("h")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),t("span",{staticClass:"mrel"},[s._v("≤")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"0.6444em"}}),t("span",{staticClass:"mord"},[s._v("1000")])])])])]),s._v(" "),t("li",[t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[t("semantics",[t("mrow",[t("mn",[s._v("0")]),t("mo",[s._v("≤")]),t("mi",[s._v("n")]),t("mi",[s._v("u")]),t("mi",[s._v("m")]),t("mi",[s._v("s")]),t("mo",{attrs:{stretchy:"false"}},[s._v("[")]),t("mi",[s._v("i")]),t("mo",{attrs:{stretchy:"false"}},[s._v("]")]),t("mo",[s._v("≤")]),t("mn",[s._v("106")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("0 \\le nums[i] \\le  106")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"0.7804em","vertical-align":"-0.136em"}}),t("span",{staticClass:"mord"},[s._v("0")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),t("span",{staticClass:"mrel"},[s._v("≤")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),t("span",{staticClass:"mord mathnormal"},[s._v("n")]),t("span",{staticClass:"mord mathnormal"},[s._v("u")]),t("span",{staticClass:"mord mathnormal"},[s._v("m")]),t("span",{staticClass:"mord mathnormal"},[s._v("s")]),t("span",{staticClass:"mopen"},[s._v("[")]),t("span",{staticClass:"mord mathnormal"},[s._v("i")]),t("span",{staticClass:"mclose"},[s._v("]")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),t("span",{staticClass:"mrel"},[s._v("≤")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"0.6444em"}}),t("span",{staticClass:"mord"},[s._v("106")])])])])]),s._v(" "),t("li",[t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[t("semantics",[t("mrow",[t("mn",[s._v("1")]),t("mo",[s._v("≤")]),t("mi",[s._v("m")]),t("mo",[s._v("≤")]),t("mi",[s._v("min")]),t("mo",[s._v("⁡")]),t("mo",{attrs:{stretchy:"false"}},[s._v("(")]),t("mn",[s._v("50")]),t("mo",{attrs:{separator:"true"}},[s._v(",")]),t("mi",[s._v("n")]),t("mi",[s._v("u")]),t("mi",[s._v("m")]),t("mi",[s._v("s")]),t("mi",{attrs:{mathvariant:"normal"}},[s._v(".")]),t("mi",[s._v("l")]),t("mi",[s._v("e")]),t("mi",[s._v("n")]),t("mi",[s._v("g")]),t("mi",[s._v("t")]),t("mi",[s._v("h")]),t("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("1 \\le m \\le \\min(50, nums.length)")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"0.7804em","vertical-align":"-0.136em"}}),t("span",{staticClass:"mord"},[s._v("1")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),t("span",{staticClass:"mrel"},[s._v("≤")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"0.7719em","vertical-align":"-0.136em"}}),t("span",{staticClass:"mord mathnormal"},[s._v("m")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}}),t("span",{staticClass:"mrel"},[s._v("≤")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2778em"}})]),t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),t("span",{staticClass:"mop"},[s._v("min")]),t("span",{staticClass:"mopen"},[s._v("(")]),t("span",{staticClass:"mord"},[s._v("50")]),t("span",{staticClass:"mpunct"},[s._v(",")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.1667em"}}),t("span",{staticClass:"mord mathnormal"},[s._v("n")]),t("span",{staticClass:"mord mathnormal"},[s._v("u")]),t("span",{staticClass:"mord mathnormal"},[s._v("m")]),t("span",{staticClass:"mord mathnormal"},[s._v("s")]),t("span",{staticClass:"mord"},[s._v(".")]),t("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.01968em"}},[s._v("l")]),t("span",{staticClass:"mord mathnormal"},[s._v("e")]),t("span",{staticClass:"mord mathnormal"},[s._v("n")]),t("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.03588em"}},[s._v("g")]),t("span",{staticClass:"mord mathnormal"},[s._v("t")]),t("span",{staticClass:"mord mathnormal"},[s._v("h")]),t("span",{staticClass:"mclose"},[s._v(")")])])])])])]),s._v(" "),t("h2",{attrs:{id:"题意分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#题意分析"}},[s._v("#")]),s._v(" 题意分析")]),s._v(" "),t("p",[s._v("各自和的最大值最小，这句话读起来有一点点绕。我们拆分一下：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("由于数组是确定的，其中一组分得多，相应地另一组分到的值就少。所以对于任意一种拆分（切成 "),t("code",[s._v("m")]),s._v(" 段），这 "),t("code",[s._v("m")]),s._v(" 段可以取最大值 "),t("code",[s._v("val")]),s._v("；")])]),s._v(" "),t("li",[t("p",[s._v("我们需要找到一种拆分，使得这个最大值 "),t("code",[s._v("val")]),s._v(" 的值是所有分成 "),t("code",[s._v("m")]),s._v(" 段拆分里值最小的那个；"),t("strong",[s._v("具体怎么拆，题目不用我们求，只需要我们计算出 "),t("code",[s._v("val")]),s._v(" 的值")]),s._v("。")])])]),s._v(" "),t("h2",{attrs:{id:"关键字分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关键字分析"}},[s._v("#")]),s._v(" 关键字分析")]),s._v(" "),t("p",[s._v("这个题目非常关键的字眼是："),t("strong",[s._v("非负整数数组")]),s._v("、"),t("strong",[s._v("非空")]),s._v(" 和 "),t("strong",[s._v("连续")]),s._v("。尤其是「"),t("strong",[s._v("非负整数数组")]),s._v("」和「"),t("strong",[s._v("连续")]),s._v("」这两个信息，请读者看完下面分析以后再来体会「连续」为什么那么重要。")]),s._v(" "),t("h2",{attrs:{id:"解题思路的直觉来源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解题思路的直觉来源"}},[s._v("#")]),s._v(" 解题思路的直觉来源")]),s._v(" "),t("p",[s._v("基于「力扣」第 69 题、第 287 题，知道二分查找的应用：可以用于查找一个有范围的 "),t("strong",[s._v("整数")]),s._v("，就能想到是不是可以使用二分查找去解决这道问题。")]),s._v(" "),t("p",[s._v("事实上，二分查找最典型的应用我们都见过，《幸运 52》猜价格游戏，主持人说「低了」，我们就应该往高了猜。")]),s._v(" "),t("p",[s._v("这种二分查找的应用大家普遍的叫法是「二分答案」，即「对答案二分」。它是相对于二分查找的最原始形式「在一个有序数组里查找一个数」而言的。")]),s._v(" "),t("h2",{attrs:{id:"挖掘单调性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#挖掘单调性"}},[s._v("#")]),s._v(" 挖掘单调性")]),s._v(" "),t("p",[s._v("使用二分查找的一个前提是「数组具有单调性」，我们就去想想第 410 题有没有类似的单调性。「最大值最小」就提示了单调性：")]),s._v(" "),t("ul",[t("li",[s._v("如果设置「数组各自和的最大值」很大，那么必然导致分割数很小；")]),s._v(" "),t("li",[s._v("如果设置「数组各自和的最大值」很小，那么必然导致分割数很大。")])]),s._v(" "),t("p",[s._v("仔细想想，这里「"),t("strong",[s._v("数组各自和的最大值")]),s._v("」就决定了一种分割的方法。再联系一下我们刚刚向大家强调的题目的要求 "),t("strong",[s._v("连续")]),s._v(" 和题目中给出的输入数组的特点: "),t("strong",[s._v("非负整数数组")]),s._v("。")]),s._v(" "),t("p",[s._v("那么，我们就可以通过调整「数组各自和的最大值」来达到：使得分割数恰好为 "),t("code",[s._v("m")]),s._v(" 的效果。这里要注意一个问题：")]),s._v(" "),t("h2",{attrs:{id:"注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[s._v("#")]),s._v(" 注意事项")]),s._v(" "),t("p",[s._v("如果某个 "),t("strong",[s._v("数组各自和的最大值")]),s._v(" 恰恰好使得分割数为 "),t("code",[s._v("m")]),s._v(" ，此时不能放弃搜索，因为我们要使得这个最大值 "),t("strong",[s._v("最小化")]),s._v("，此时还应该继续尝试缩小这个 "),t("strong",[s._v("数组各自和的最大值")]),s._v(" ，使得分割数超过 "),t("code",[s._v("m")]),s._v(" ，超过 "),t("code",[s._v("m")]),s._v(" 的最后一个使得分割数为 "),t("code",[s._v("m")]),s._v(" 的 "),t("strong",[s._v("数组各自和的最大值")]),s._v(" 就是我们要找的 "),t("strong",[s._v("最小值")]),s._v("。")]),s._v(" "),t("p",[s._v("这里想不太明白的话，可以举一个具体的例子：")]),s._v(" "),t("p",[s._v("例如：（题目中给出的示例）输入数组为 "),t("code",[s._v("[7, 2, 5, 10, 8]")]),s._v(" ，"),t("code",[s._v("m = 2")]),s._v(" 。如果设置 "),t("strong",[s._v("数组各自和的最大值")]),s._v(" 为 "),t("code",[s._v("21")]),s._v("，那么分割是 "),t("code",[s._v("[7, 2, 5, | 10, 8]")]),s._v("，此时 "),t("code",[s._v("m = 2")]),s._v("，此时，这个值太大，尝试一点一点缩小：")]),s._v(" "),t("ul",[t("li",[s._v("设置 "),t("strong",[s._v("数组各自和的最大值")]),s._v(" 为 "),t("code",[s._v("20")]),s._v("，此时分割依然是 "),t("code",[s._v("[7, 2, 5, | 10, 8]")]),s._v("，"),t("code",[s._v("m = 2")]),s._v("；")]),s._v(" "),t("li",[s._v("设置 "),t("strong",[s._v("数组各自和的最大值")]),s._v(" 为 "),t("code",[s._v("19")]),s._v("，此时分割依然是 "),t("code",[s._v("[7, 2, 5, | 10, 8]")]),s._v("，"),t("code",[s._v("m = 2")]),s._v("；")]),s._v(" "),t("li",[s._v("设置 "),t("strong",[s._v("数组各自和的最大值")]),s._v(" 为 "),t("code",[s._v("18")]),s._v("，此时分割依然是 "),t("code",[s._v("[7, 2, 5, | 10, 8]")]),s._v("，"),t("code",[s._v("m = 2")]),s._v("；")]),s._v(" "),t("li",[s._v("设置 "),t("strong",[s._v("数组各自和的最大值")]),s._v(" 为 "),t("code",[s._v("17")]),s._v("，此时分割就变成了 "),t("code",[s._v("[7, 2, 5, | 10, | 8]")]),s._v("，这时 "),t("code",[s._v("m = 3")]),s._v("。")])]),s._v(" "),t("p",[t("code",[s._v("m")]),s._v(" 变成 "),t("code",[s._v("3")]),s._v(" 之前的值 "),t("strong",[s._v("数组各自和的最大值")]),s._v(" "),t("code",[s._v("18")]),s._v(" 是这个问题的最小值，所以输出 "),t("code",[s._v("18")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"代码实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[s._v("#")]),s._v(" 代码实现")]),s._v(" "),t("p",[s._v("说明：")]),s._v(" "),t("ul",[t("li",[s._v("以下代码实现中采用 "),t("code",[s._v("while (left < right)")]),s._v(" 的写法表示退出循环以后 "),t("code",[s._v("left == right")]),s._v(" 成立，这种通过「左右边界」向中间逼近，最后得到一个数的二分查找思考路径，我在「力扣」的题解区已经多次向大家介绍，并且强调了使用细节和注意事项，这里就不赘述了；")]),s._v(" "),t("li",[t("code",[s._v("if (splits > m)")]),s._v(" 的反面是 "),t("code",[s._v("splits <= m")]),s._v(" 此时，下一轮搜索区间是 "),t("code",[s._v("[left, mid]")]),s._v(" ，这个时候我们没有排除掉 "),t("code",[s._v("mid")]),s._v(" 这个值，符合我们上面的逻辑：当分割数恰好等于 "),t("code",[s._v("m")]),s._v(" 的时候，尝试缩小 "),t("strong",[s._v("数组各自和的最大值")]),s._v("。")])]),s._v(" "),t("p",[t("strong",[s._v("参考代码")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Solution")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("splitArray")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" nums"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" max "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" sum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 计算「子数组各自的和的最大值」的上下界")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" nums"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            max "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Math")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("max"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" num"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            sum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" num"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用「二分查找」确定一个恰当的「子数组各自的和的最大值」，")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使得它对应的「子数组的分割数」恰好等于 m")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" max"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" right "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" mid "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("right "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" splits "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("splits "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果分割数太多，说明「子数组各自的和的最大值」太小，此时需要将「子数组各自的和的最大值」调大")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 下一轮搜索的区间是 [mid + 1, right]")]),s._v("\n                left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" mid "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 下一轮搜索的区间是上一轮的反面区间 [left, mid]")]),s._v("\n                right "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" mid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/***\n     *\n     * @param nums 原始数组\n     * @param maxIntervalSum 子数组各自的和的最大值\n     * @return 满足不超过「子数组各自的和的最大值」的分割数\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" nums"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" maxIntervalSum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 至少是一个分割")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" splits "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当前区间的和")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" curIntervalSum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" nums"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 尝试加上当前遍历的这个数，如果加上去超过了「子数组各自的和的最大值」，就不加这个数，另起炉灶")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("curIntervalSum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" maxIntervalSum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                curIntervalSum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                splits"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            curIntervalSum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" num"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" splits"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" nums "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" m "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Solution")]),s._v(" solution "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Solution")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" res "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" solution"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("splitArray")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br")])]),t("p",[t("strong",[s._v("复杂度分析")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("时间复杂度："),t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[t("semantics",[t("mrow",[t("mi",[s._v("O")]),t("mo",{attrs:{stretchy:"false"}},[s._v("(")]),t("mi",[s._v("N")]),t("mi",[s._v("log")]),t("mo",[s._v("⁡")]),t("mo",[s._v("∑")]),t("mi",[s._v("n")]),t("mi",[s._v("u")]),t("mi",[s._v("m")]),t("mi",[s._v("s")]),t("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("O(N \\log \\sum nums)")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),t("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),t("span",{staticClass:"mopen"},[s._v("(")]),t("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.10903em"}},[s._v("N")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.1667em"}}),t("span",{staticClass:"mop"},[s._v("lo"),t("span",{staticStyle:{"margin-right":"0.01389em"}},[s._v("g")])]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.1667em"}}),t("span",{staticClass:"mop op-symbol small-op",staticStyle:{position:"relative",top:"0em"}},[s._v("∑")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.1667em"}}),t("span",{staticClass:"mord mathnormal"},[s._v("n")]),t("span",{staticClass:"mord mathnormal"},[s._v("u")]),t("span",{staticClass:"mord mathnormal"},[s._v("m")]),t("span",{staticClass:"mord mathnormal"},[s._v("s")]),t("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v("，这里 "),t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[t("semantics",[t("mrow",[t("mi",[s._v("N")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("N")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"0.6833em"}}),t("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.10903em"}},[s._v("N")])])])]),s._v(" 表示输入数组的长度，"),t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[t("semantics",[t("mrow",[t("mo",[s._v("∑")]),t("mi",[s._v("n")]),t("mi",[s._v("u")]),t("mi",[s._v("m")]),t("mi",[s._v("s")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("\\sum nums")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),t("span",{staticClass:"mop op-symbol small-op",staticStyle:{position:"relative",top:"0em"}},[s._v("∑")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.1667em"}}),t("span",{staticClass:"mord mathnormal"},[s._v("n")]),t("span",{staticClass:"mord mathnormal"},[s._v("u")]),t("span",{staticClass:"mord mathnormal"},[s._v("m")]),t("span",{staticClass:"mord mathnormal"},[s._v("s")])])])]),s._v(" 表示输入数组的和，代码在 "),t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[t("semantics",[t("mrow",[t("mo",{attrs:{stretchy:"false"}},[s._v("[")]),t("mi",[s._v("max")]),t("mo",[s._v("⁡")]),t("mo",{attrs:{stretchy:"false"}},[s._v("(")]),t("mi",[s._v("n")]),t("mi",[s._v("u")]),t("mi",[s._v("m")]),t("mi",[s._v("s")]),t("mo",{attrs:{stretchy:"false"}},[s._v(")")]),t("mo",{attrs:{separator:"true"}},[s._v(",")]),t("mo",[s._v("∑")]),t("mi",[s._v("n")]),t("mi",[s._v("u")]),t("mi",[s._v("m")]),t("mi",[s._v("s")]),t("mo",{attrs:{stretchy:"false"}},[s._v("]")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("[\\max(nums), \\sum nums]")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),t("span",{staticClass:"mopen"},[s._v("[")]),t("span",{staticClass:"mop"},[s._v("max")]),t("span",{staticClass:"mopen"},[s._v("(")]),t("span",{staticClass:"mord mathnormal"},[s._v("n")]),t("span",{staticClass:"mord mathnormal"},[s._v("u")]),t("span",{staticClass:"mord mathnormal"},[s._v("m")]),t("span",{staticClass:"mord mathnormal"},[s._v("s")]),t("span",{staticClass:"mclose"},[s._v(")")]),t("span",{staticClass:"mpunct"},[s._v(",")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.1667em"}}),t("span",{staticClass:"mop op-symbol small-op",staticStyle:{position:"relative",top:"0em"}},[s._v("∑")]),t("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.1667em"}}),t("span",{staticClass:"mord mathnormal"},[s._v("n")]),t("span",{staticClass:"mord mathnormal"},[s._v("u")]),t("span",{staticClass:"mord mathnormal"},[s._v("m")]),t("span",{staticClass:"mord mathnormal"},[s._v("s")]),t("span",{staticClass:"mclose"},[s._v("]")])])])]),s._v(" 区间里使用二分查找找到目标元素，而每一次判断分支需要遍历一遍数组，时间复杂度为 "),t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[t("semantics",[t("mrow",[t("mi",[s._v("O")]),t("mo",{attrs:{stretchy:"false"}},[s._v("(")]),t("mi",[s._v("N")]),t("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("O(N)")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),t("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),t("span",{staticClass:"mopen"},[s._v("(")]),t("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.10903em"}},[s._v("N")]),t("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v("；")]),s._v(" "),t("li",[s._v("空间复杂度："),t("span",{staticClass:"katex"},[t("span",{staticClass:"katex-mathml"},[t("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[t("semantics",[t("mrow",[t("mi",[s._v("O")]),t("mo",{attrs:{stretchy:"false"}},[s._v("(")]),t("mn",[s._v("1")]),t("mo",{attrs:{stretchy:"false"}},[s._v(")")])],1),t("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("O(1)")])],1)],1)],1),t("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[t("span",{staticClass:"base"},[t("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),t("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.02778em"}},[s._v("O")]),t("span",{staticClass:"mopen"},[s._v("(")]),t("span",{staticClass:"mord"},[s._v("1")]),t("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v(" ，只使用到常数个临时变量。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);