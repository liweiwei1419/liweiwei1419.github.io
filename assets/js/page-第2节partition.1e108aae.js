(window.webpackJsonp=window.webpackJsonp||[]).push([[574],{1006:function(t,a,s){"use strict";s.r(a);var v=s(1),i=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("video",{attrs:{src:"https://suanfa8.com/files/quick-sort/6-2.mp4",controls:"controls",width:"800",height:"450"}},[t._v("\nYour browser does not support the video tag.\n")]),t._v(" "),a("p",[t._v("这一节我们要介绍在算法领域大名鼎鼎的一个算法：快速排序。正如它的名字一样，「快速排序」因它优秀的排序性能而闻名。但事实上，实现一个性能良好的快速排序并不是一件容易的事情。")]),t._v(" "),a("p",[t._v("快速排序也是使用「分治思想」实现的一种排序算法。但「归并排序」不同的是：快速排序首先想方设法通过排定一个元素，并且在排定这个元素的同时，对整个数组也做了一次划分，这个过程叫做 "),a("strong",[t._v("切分")]),t._v("。")]),t._v(" "),a("p",[t._v("我们先向大家介绍什么是「切分」。")]),t._v(" "),a("h2",{attrs:{id:"切分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#切分"}},[t._v("#")]),t._v(" 切分")]),t._v(" "),a("p",[t._v("通过切分，我们要达到这样的效果：把「切分元素」放在排序以后最终应该在的位置。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gxnahdv558j31hc0u00v1.jpg",alt:"image-20211223045418448",loading:"lazy"}})]),t._v(" "),a("p",[t._v("如下图所示，基准值为 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mn",[t._v("4")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("4")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.6444em"}}),a("span",{staticClass:"mord"},[t._v("4")])])])]),t._v("。")]),t._v(" "),a("blockquote",[a("p",[t._v("一次切分要实现的效果是：【小于等于基准值的所有元素】基准值【大于等于基准值的所有元素】")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gx54s40vc4j30zy0diq3m.jpg",alt:"image-20211207115650929",loading:"lazy"}})]),t._v(" "),a("ul",[a("li",[t._v("先选出一个元素，通常是这个数组最开始的那个元素，作为「切分元素」；")]),t._v(" "),a("li",[t._v("然后经过一次扫描，使得扫描以后，数组的元素分为两个部分：\n"),a("ul",[a("li",[t._v("第 1 部分，都小于切分元素；")]),t._v(" "),a("li",[t._v("第 2 部分，都大于等于切分元素；")])])]),t._v(" "),a("li",[t._v("最后我们只要交换一下第 1 个元素和第 1 部分（小于切分元素的部分）的最后 1 个位置的元素，这个 "),a("strong",[t._v("切分元素就呆在了最终它应该呆的位置")]),t._v("。")])]),t._v(" "),a("p",[t._v("说明：示意图为了表意清晰没有讨论 "),a("code",[t._v("=")]),t._v(" 的情况。")]),t._v(" "),a("p",[t._v("切分的思路是这样的：从标定点后面一个一个地比较到底，遇到比标定元素大的，就放过，遇到比标定元素小的，就依次放在标定元素的后面。大放过，小交换。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gx54t2ovu7j30xk0u0gog.jpg",alt:"image-20211207115746853",loading:"lazy"}})]),t._v(" "),a("p",[t._v("再看一个例子：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gxnaqevqq3g30u00gw7q0.gif",alt:"partition-2",loading:"lazy"}})]),t._v(" "),a("p",[t._v("切分过程展示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gxnanihvuoj31hc0u00wn.jpg",alt:"image-20211223050010972",loading:"lazy"}})]),t._v(" "),a("p",[t._v("最后交换 "),a("code",[t._v("6")]),t._v(" 和 "),a("code",[t._v("5")]),t._v("，完成切分。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gxnmo5bluxj30v8058aa9.jpg",alt:"image-20211223115559667",loading:"lazy"}})]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("说明")]),t._v(" "),a("p",[t._v("本节无代码，参考代码会放在「快速排序」的优化一节中。")])]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("h3",{attrs:{id:"快速排序的基本想法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快速排序的基本想法"}},[t._v("#")]),t._v(" 快速排序的基本想法")]),t._v(" "),a("p",[t._v("快速排序每一次都排定一个元素（这个元素呆在了它最终应该呆的位置），然后递归地去排它左边的部分和右边的部分，依次进行下去，直到数组有序。")]),t._v(" "),a("h3",{attrs:{id:"快速排序的算法思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快速排序的算法思想"}},[t._v("#")]),t._v(" 快速排序的算法思想")]),t._v(" "),a("p",[t._v("分而治之（分治思想），与「归并排序」不同，「快速排序」在「分」这件事情上不想「归并排序」无脑地一分为二，而是采用了 "),a("code",[t._v("partition")]),t._v(" 的方法，因此就没有「合」的过程。")]),t._v(" "),a("h3",{attrs:{id:"与归并排序比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与归并排序比较"}},[t._v("#")]),t._v(" 与归并排序比较")]),t._v(" "),a("p",[t._v("归并排序不管数组的内容是什么，归并排序总是一分为二地去做排序运算，然后再归并起来。")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("strong",[t._v("说明")]),t._v("：《算法 4》这本书里面的代码风格是极其不推荐的。代码是写给人看的，应该尽量避免代码个人风格化，采用统一规范的写法，保证易读性，可扩展性。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gwzk0zt130j315o0hwq7m.jpg",alt:"img",loading:"lazy"}})])])}),[],!1,null,null,null);a.default=i.exports}}]);