(window.webpackJsonp=window.webpackJsonp||[]).push([[610],{787:function(t,l,v){"use strict";v.r(l);var _=v(1),n=Object(_.a)({},(function(){var t=this,l=t._self._c;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("ul",[l("li",[t._v("动态规划在「力扣」上虽然只有一个标签，但是它其实是有多个标签的，大家在学习的过程中需要掌握不同类型的动态规划问题，当然不需要全部掌握，优先掌握面试中考察的动态规划问题；")]),t._v(" "),l("li",[t._v("初学的时候，可以先掌握「自顶向下」的「记忆化递归」，再慢慢熟悉「自底向上」的「递推」写法；")]),t._v(" "),l("li",[t._v("如果在题解区或者讨论区看到一些代码用的变量很少，这样的代码是空间优化的写法，不是很好理解，我们需要先理解非空间优化的写法，再去理解空间优化的写法就不难了；")]),t._v(" "),l("li",[t._v("抓住状态的定义，状态的描述一定要非常具体、清晰；")]),t._v(" "),l("li",[t._v("对「无后效性」的理解非常重要，我们在学习的过程中，需要花时间思考和总结，"),l("strong",[t._v("到底是怎么想到这样设计状态的呢")]),t._v("？怎样才能求解问题的过程中每个问题只求解一次，求解的过程构成了有向无环图；")]),t._v(" "),l("li",[t._v("如果对求解问题的过程不太清楚，用小规模测试用例在纸上写写画画是一个有效的办法，就是画一张表格手动写一下程序是怎么算出结果的；")]),t._v(" "),l("li",[t._v("有时候，我们在解决问题的过程中，会发现状态转移方程不好得到（即子问题之间的关系不容易得到），会去修改状态定义。需要我们有一定的做题经验。")])]),t._v(" "),l("p",[t._v("（这部分内容就还没有添加完，有时间了会继续添加。）")])])}),[],!1,null,null,null);l.default=n.exports}}]);