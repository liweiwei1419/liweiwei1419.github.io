(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{550:function(t,i,e){"use strict";e.r(i);var a=e(1),r=Object(a.a)({},(function(){var t=this,i=t._self._c;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("p",[t._v("与递归相关的话题有：")]),t._v(" "),i("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gxdgspjq3hj30xg0isgn4.jpg",alt:"image-20211214165706179"}}),t._v(" "),i("div",{staticClass:"custom-block danger"},[i("p",{staticClass:"custom-block-title"},[t._v("温馨提示")]),t._v(" "),i("p",[t._v("我们需要在大量的练习中渐渐地理解递归，学习是一个循序渐进的过程，在编写了大量的「动态规划（记忆化递归）」「回溯算法」「深度优先遍历」「分治算法」的问题以后，相信我们一定会对递归有更深的理解。")])]),t._v(" "),i("h2",{attrs:{id:"算法基础-递归"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#算法基础-递归"}},[t._v("#")]),t._v(" 算法基础：递归")]),t._v(" "),i("ul",[i("li",[t._v("初学的时候可以先有个印象，不用急于马上掌握，理解并熟练掌握「递归」需要一定时间；")]),t._v(" "),i("li",[t._v("「递归」与「分治算法」（请见「归并排序」）「深度优先遍历」「回溯算法」密不可分，可以在学习这些章节的过程中慢慢理解「递归」。")])]),t._v(" "),i("div",{staticClass:"custom-block danger"},[i("p",{staticClass:"custom-block-title"},[t._v("重点概括")]),t._v(" "),i("ul",[i("li",[t._v("「递归」体现的是一种「自上而下」（自顶向下）解决问题的编程思想，是编程中特有的一种语法现象；")]),t._v(" "),i("li",[t._v("使用「递归」解决问题，有「拆分问题」与「组合问题的解」两个部分。")])])]),t._v(" "),i("div",{staticClass:"custom-block info"},[i("p",{staticClass:"custom-block-title"},[t._v("「递归」与「遍历」")]),t._v(" "),i("p",[t._v("如果一个问题需要「遍历」，很多时候也可以使用「递归」实现。特别地，在树形问题中执行「深度优先遍历」，在代码层面上，我们看到的就是「递归（自己调用自己）」。")])]),t._v(" "),i("h2",{attrs:{id:"视频教程"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#视频教程"}},[t._v("#")]),t._v(" 📺 "),i("strong",[t._v("视频教程")])]),t._v(" "),i("p",[t._v("建议使用 1.5 倍速观看。")]),t._v(" "),i("ul",[i("li",[i("a",{attrs:{href:"https://www.bilibili.com/video/BV11h411h7nT?p=1",target:"_blank",rel:"noopener noreferrer"}},[t._v("1-1 初识递归"),i("OutboundLink")],1),t._v("；")])]),t._v(" "),i("div",{staticStyle:{position:"relative",padding:"30% 45%"}},[i("iframe",{staticStyle:{position:"absolute",width:"100%",height:"100%",left:"0",top:"0"},attrs:{src:"https://player.bilibili.com/player.html?aid=206484628&bvid=BV11h411h7nT&cid=362102911&page=1",frameborder:"no",scrolling:"no"}})]),t._v(" "),i("ul",[i("li",[i("a",{attrs:{href:"https://www.bilibili.com/video/BV11h411h7nT?p=2",target:"_blank",rel:"noopener noreferrer"}},[t._v("1-2 栈与深度优先遍历"),i("OutboundLink")],1),t._v("；")])]),t._v(" "),i("div",{staticStyle:{position:"relative",padding:"30% 45%"}},[i("iframe",{staticStyle:{position:"absolute",width:"100%",height:"100%",left:"0",top:"0"},attrs:{src:"https://player.bilibili.com/player.html?aid=206484628&bvid=BV11h411h7nT&cid=362102911&page=2",frameborder:"no",scrolling:"no"}})]),t._v(" "),i("ul",[i("li",[i("a",{attrs:{href:"https://www.bilibili.com/video/BV11h411h7nT?p=3",target:"_blank",rel:"noopener noreferrer"}},[t._v("1-3 分治算法"),i("OutboundLink")],1),t._v("。")])]),t._v(" "),i("div",{staticStyle:{position:"relative",padding:"30% 45%"}},[i("iframe",{staticStyle:{position:"absolute",width:"100%",height:"100%",left:"0",top:"0"},attrs:{src:"https://player.bilibili.com/player.html?aid=206484628&bvid=BV11h411h7nT&cid=362102911&page=3",frameborder:"no",scrolling:"no"}})]),t._v(" "),i("h2",{attrs:{id:"文字教程"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#文字教程"}},[t._v("#")]),t._v(" 📔 文字教程")]),t._v(" "),i("ul",[i("li",[i("a",{attrs:{href:"https://leetcode-cn.com/leetbook/read/recursion-and-divide-and-conquer/r24abc/",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetBook 之「递归」专题：第 1 节 递归与分治"),i("OutboundLink")],1)]),t._v(" "),i("li",[i("a",{attrs:{href:"https://leetcode-cn.com/leetbook/read/recursion-and-divide-and-conquer/r21rci/",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetBook 之「递归」专题：第 2 节 递归函数的设计思想：分而治之（减而治之）"),i("OutboundLink")],1)])]),t._v(" "),i("div",{staticClass:"custom-block danger"},[i("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),i("p",[t._v("学习「递归」需要在应用中学习，一开始模仿是很正常的。「递归」贯穿了整个算法与数据结构学习的始终，因此可以在算法与数据结构的学习过程中慢慢学习「递归」，没有必要一开始就要求自己深刻理解「递归」。")])]),t._v(" "),i("p",[t._v("视频教程和文字教程中已经介绍得很详细了，因此本节不再过多讲述。")]),t._v(" "),i("div",{staticClass:"custom-block danger"},[i("p",{staticClass:"custom-block-title"},[t._v("温馨提示")]),t._v(" "),i("p",[t._v("一边做题，一边总结，「深度优先遍历」「回溯算法」「动态规划」都学完以后，题目做多了以后，「递归」就自然而然学会了。即：先模仿，再学习。")])]),t._v(" "),i("h2",{attrs:{id:"总结"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),i("ul",[i("li",[t._v("「递归」是一种先「自上而下」，再「自下而上」的求解问题的过程；")]),t._v(" "),i("li",[t._v("「递归」体现的算法思想是「分而治之」；")]),t._v(" "),i("li",[t._v("「递归」（「分治算法」）的两个过程：「拆分问题」与「组合子问题」的解；")]),t._v(" "),i("li",[t._v("「递归」的执行流程：深度优先遍历。")])])])}),[],!1,null,null,null);i.default=r.exports}}]);