(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{558:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("strong",[t._v("重点问题")]),t._v("：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("题号")]),t._v(" "),s("th",[t._v("链接")]),t._v(" "),s("th",[t._v("题解")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("3")]),t._v(" "),s("td",[s("a",{attrs:{href:"https://leetcode-cn.com/problems/longest-substring-without-repeating-characters",target:"_blank",rel:"noopener noreferrer"}},[t._v("无重复字符的最长子串"),s("OutboundLink")],1),t._v("（中等）")]),t._v(" "),s("td",[s("a",{attrs:{href:"https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/solution/ge-ban-fa-hua-dong-chuang-kou-dong-tai-gui-hua-pyt/",target:"_blank",rel:"noopener noreferrer"}},[t._v("文字题解"),s("OutboundLink")],1)])]),t._v(" "),s("tr",[s("td",[t._v("76")]),t._v(" "),s("td",[s("a",{attrs:{href:"https://leetcode-cn.com/problems/minimum-window-substring",target:"_blank",rel:"noopener noreferrer"}},[t._v("最小覆盖子串"),s("OutboundLink")],1),t._v("（困难）")]),t._v(" "),s("td",[s("a",{attrs:{href:""}},[t._v("【视频讲解】")])])]),t._v(" "),s("tr",[s("td",[t._v("209")]),t._v(" "),s("td",[s("a",{attrs:{href:"https://leetcode-cn.com/problems/minimum-size-subarray-sum",target:"_blank",rel:"noopener noreferrer"}},[t._v("长度最小的子数组"),s("OutboundLink")],1),t._v("（中等）")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("424")]),t._v(" "),s("td",[s("a",{attrs:{href:"https://leetcode-cn.com/problems/longest-repeating-character-replacement/",target:"_blank",rel:"noopener noreferrer"}},[t._v("替换后的最长重复字符"),s("OutboundLink")],1),t._v("（中等）")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("1493")]),t._v(" "),s("td",[s("a",{attrs:{href:"https://leetcode-cn.com/problems/longest-subarray-of-1s-after-deleting-one-element/",target:"_blank",rel:"noopener noreferrer"}},[t._v(" 删掉一个元素以后全为 1 的最长子数组"),s("OutboundLink")],1),t._v("（中等）")]),t._v(" "),s("td")])])]),t._v(" "),s("p",[s("strong",[t._v("友情提示")]),t._v("：第 3 题和第 76 题是必须要会做的基本问题。上面的问题理解透彻了，下面的问题就可以比较轻松地做出来。")]),t._v(" "),s("p",[s("strong",[t._v("说明")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("第 3 题：先暴力解法，再优化；")]),t._v(" "),s("li",[t._v("第 76 题：滑动窗口的典型问题，重点分析为什么可以使用滑动窗口。字符频数数组可以使用哈希表，也可以直接使用数组；使用 "),s("strong",[t._v("距离")]),t._v(" 的定义加速计算；")]),t._v(" "),s("li",[t._v("第 424 题：重点分析为什么可以使用滑动窗口。设计变量 "),s("code",[t._v("maxCount")]),t._v(" 的含义：在滑动的过程中，出现的字符频数最多的个数；收集结果的判断语句（"),s("code",[t._v("while (right - left > maxCount + k)")]),t._v("）比较难想到。第 424 题同类问题：「力扣」第 1493 题："),s("a",{attrs:{href:"https://leetcode-cn.com/problems/longest-subarray-of-1s-after-deleting-one-element/",target:"_blank",rel:"noopener noreferrer"}},[t._v("删掉一个元素以后全为 1 的最长子数组"),s("OutboundLink")],1),t._v(" 。")])]),t._v(" "),s("div",{staticClass:"language-Java [] line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Solution")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第 424 题代码：滑动窗口（暴力解法的优化）")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("longestSubarray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 连续的 1 的个数")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" ones "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除一个元素以后全为 1 的最长的子串的长度")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" maxCount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" len"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                ones"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            maxCount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Math")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("maxCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ones"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            right"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// maxCount + 1 里的 1 就表示删除的那个元素")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" maxCount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    ones"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                left"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Math")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意：这里返回 res 要减 1")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br")])]),s("p",[s("strong",[t._v("练习")]),t._v("：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("题号")]),t._v(" "),s("th",[t._v("题目")]),t._v(" "),s("th",[t._v("题解")]),t._v(" "),s("th",[t._v("知识点")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("438")]),t._v(" "),s("td",[s("a",{attrs:{href:"https://leetcode-cn.com/problems/find-all-anagrams-in-a-string/",target:"_blank",rel:"noopener noreferrer"}},[t._v("找到字符串中所有字母异位词"),s("OutboundLink")],1),t._v("（中等）")]),t._v(" "),s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("567")]),t._v(" "),s("td",[s("a",{attrs:{href:"https://leetcode-cn.com/problems/permutation-in-string",target:"_blank",rel:"noopener noreferrer"}},[t._v("字符串的排列"),s("OutboundLink")],1),t._v("（中等）")]),t._v(" "),s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("643")]),t._v(" "),s("td",[s("a",{attrs:{href:"https://leetcode-cn.com/problems/maximum-average-subarray-i",target:"_blank",rel:"noopener noreferrer"}},[t._v("子数组最大平均数 I"),s("OutboundLink")],1),t._v("（简单）")]),t._v(" "),s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("978")]),t._v(" "),s("td",[s("a",{attrs:{href:"https://leetcode-cn.com/problems/longest-turbulent-subarray",target:"_blank",rel:"noopener noreferrer"}},[t._v("最长湍流子数组"),s("OutboundLink")],1),t._v("（中等）")]),t._v(" "),s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("992")]),t._v(" "),s("td",[s("a",{attrs:{href:"https://leetcode-cn.com/problems/subarrays-with-k-different-integers",target:"_blank",rel:"noopener noreferrer"}},[t._v("K 个不同整数的子数组"),s("OutboundLink")],1),t._v("（困难）")]),t._v(" "),s("td"),t._v(" "),s("td")])])]),t._v(" "),s("p",[s("strong",[t._v("说明")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("第 209 题：题目中给出的关键信息："),s("strong",[t._v("数组里的元素全部是正整数")]),t._v("。一共有以下 3 种方法。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("方法一：暴力解法")])]),t._v(" "),s("li",[s("p",[t._v("方法二：滑动窗口（分析可以使用滑动窗口的原因）")])]),t._v(" "),s("li",[s("p",[t._v("方法三：构造前缀和数组，然后使用二分查找")])])])]),t._v(" "),s("li",[s("p",[t._v("第 438 题：同第 76 题；")])]),t._v(" "),s("li",[s("p",[t._v("第 567 题：同第 76 题，收集符合条件的语句不一样而已。")])])]),t._v(" "),s("hr"),t._v(" "),s("h1",{attrs:{id:"知识结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#知识结构"}},[t._v("#")]),t._v(" 知识结构")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://files.mdnice.com/user/5576/5acc6da0-7aac-42b6-8cb3-5fb1701511b5.png",alt:"",loading:"lazy"}})]),t._v(" "),s("h1",{attrs:{id:"入门问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#入门问题"}},[t._v("#")]),t._v(" 入门问题")]),t._v(" "),s("p",[t._v("这些问题用于入门「滑动窗口」问题，通过解决它们理解「滑动窗口」算法是暴力解法的优化。")]),t._v(" "),s("ul",[s("li",[t._v("「力扣」第 3 题：无重复字符的最长子串（中等）")]),t._v(" "),s("li",[t._v("「力扣」第 209 题：长度最小的子数组（中等）")])]),t._v(" "),s("h1",{attrs:{id:"经典问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#经典问题"}},[t._v("#")]),t._v(" 经典问题")]),t._v(" "),s("p",[t._v("这两道经典的「滑动窗口」问题问题包含了一些解决同类问题的技巧。可以把「力扣」第 76 题和第 424 题当作例题学习，然后完成对应的练习。")]),t._v(" "),s("p",[t._v("「力扣」第 76 题和第 424 题在「力扣」的官方题解都有视频题解，都是我讲的，准备了很长时间，相信会对大家有所帮助。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("「力扣」第 76 题：最小覆盖子串（困难）")]),t._v(" "),s("ul",[s("li",[t._v("练习 1：「力扣」第 438 题：找到字符串中所有字母异位词（中等）")]),t._v(" "),s("li",[t._v("练习 2：「力扣」第 567 题：字符串的排列（中等）")]),t._v(" "),s("li",[t._v("练习 3：「力扣」第 30 题：串联所有单词的子串（困难）")]),t._v(" "),s("li",[t._v("练习 4：「力扣」第 395 题：至少有 K 个重复字符的最长子串（中等）")]),t._v(" "),s("li",[t._v("练习 5：「力扣」第 632 题：最小区间（困难）")])])]),t._v(" "),s("li",[s("p",[t._v("「力扣」第 424 题：替换后的最长重复字符（中等）")]),t._v(" "),s("ul",[s("li",[t._v("练习 1：「力扣」第 1004 题：最大连续 1 的个数 III（中等）")]),t._v(" "),s("li",[t._v("练习 2：「力扣」第 1208 题：尽可能使字符串相等（中等）")]),t._v(" "),s("li",[t._v("练习 3：「力扣」第 1493 题：删掉一个元素以后全为 1 的最长子数组（中等）")])])])]),t._v(" "),s("h1",{attrs:{id:"其它练习"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其它练习"}},[t._v("#")]),t._v(" 其它练习")]),t._v(" "),s("p",[t._v("有了以上的解决问题的经验，下面的这些问题大家可以独立完成了。")]),t._v(" "),s("ul",[s("li",[t._v("「力扣」第 713 题：乘积小于 K 的子数组（中等）")]),t._v(" "),s("li",[t._v("「力扣」第 1838 题：最高频元素的频数（中等）")]),t._v(" "),s("li",[t._v("「力扣」第 1839 题：所有元音按顺序排布的最长子字符串（中等）")]),t._v(" "),s("li",[t._v("「力扣」第 904 题：水果成篮（中等）")]),t._v(" "),s("li",[t._v("「力扣」第 992 题：K 个不同整数的子数组（困难）")]),t._v(" "),s("li",[t._v("「力扣」第 995 题：K 连续位的最小翻转次数（困难）")])]),t._v(" "),s("h1",{attrs:{id:"固定长度的滑动窗口问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#固定长度的滑动窗口问题"}},[t._v("#")]),t._v(" 固定长度的滑动窗口问题")]),t._v(" "),s("p",[t._v("这些问题比较简单，大家可以尝试做一下。")]),t._v(" "),s("ul",[s("li",[t._v("「力扣」第 643 题：子数组最大平均数 I（简单）")]),t._v(" "),s("li",[t._v("「力扣」第 1052 题：爱生气的书店老板（中等）")]),t._v(" "),s("li",[t._v("「力扣」第 1423 题：可获得的最大点数（中等）")]),t._v(" "),s("li",[t._v("「力扣」第 1456 题：定长子串中元音的最大数目（中等）")]),t._v(" "),s("li",[t._v("「力扣」第 1658 题：将 x 减到 0 的最小操作数（中等）")])]),t._v(" "),s("h1",{attrs:{id:"名字叫做滑动窗口的问题-需要使用数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#名字叫做滑动窗口的问题-需要使用数据结构"}},[t._v("#")]),t._v(" 名字叫做滑动窗口的问题（需要使用数据结构）")]),t._v(" "),s("p",[t._v("这些问题需要用到一些数据结构，以掌握滑动窗口的性质，可以把它们当作例题学习。")]),t._v(" "),s("ul",[s("li",[t._v("「力扣」第 220 题：存在重复元素 III（中等）")]),t._v(" "),s("li",[t._v("「力扣」第 239 题：滑动窗口最大值（困难）")]),t._v(" "),s("li",[t._v("「力扣」第 480 题：滑动窗口中位数（困难）")]),t._v(" "),s("li",[t._v("「力扣」第 1438 题：绝对差不超过限制的最长连续子数组（中等）")])])])}),[],!1,null,null,null);s.default=e.exports}}]);