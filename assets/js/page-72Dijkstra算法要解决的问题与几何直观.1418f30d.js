(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{856:function(t,a,s){"use strict";s.r(a);var r=s(1),i=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"dijkstra-算法要解决的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dijkstra-算法要解决的问题"}},[t._v("#")]),t._v(" Dijkstra 算法要解决的问题")]),t._v(" "),a("ul",[a("li",[t._v("带权图的最短路径问题；")]),t._v(" "),a("li",[t._v("有向和无向均适用；")]),t._v(" "),a("li",[t._v("前提：没有负权边。")])]),t._v(" "),a("p",[t._v("解决没有负权边的单源最短路径问题：即从一个顶点出发到其它顶点的最短路径。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gxa95yub99j31ma0pcaca.jpg",alt:"",loading:"lazy"}})]),t._v(" "),a("p",[t._v("说明：这个例子来自于 liuyubobobo 老师在慕课网上开设的课程 "),a("a",{attrs:{href:"https://coding.imooc.com/class/71.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("算法与数据结构-综合提升 C++版"),a("OutboundLink")],1),t._v(" ，选择这个例子是因为它足够简单，能够把 Dijkstra 算法的思想说清楚。")]),t._v(" "),a("h2",{attrs:{id:"几何直观"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#几何直观"}},[t._v("#")]),t._v(" 几何直观")]),t._v(" "),a("ul",[a("li",[t._v("理解源点，我们这里讲解的例子都认为 "),a("code",[t._v("0")]),t._v(" 是源点；")]),t._v(" "),a("li",[t._v("把源点从水平平面上拉起来，形成下面的图形。")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gxa96485fuj30n40vgjsb.jpg"}}),t._v(" "),a("p",[t._v("说明：这些弯曲的边，都是被「松弛操作」淘汰的边。")])])}),[],!1,null,null,null);a.default=i.exports}}]);