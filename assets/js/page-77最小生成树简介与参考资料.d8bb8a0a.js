(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{862:function(t,a,s){"use strict";s.r(a);var n=s(1),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("最小生成树算法（Minimum Spanning Tree，MST）。")]),t._v(" "),a("h2",{attrs:{id:"最小生成树算法的应用场景与前提"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最小生成树算法的应用场景与前提"}},[t._v("#")]),t._v(" 最小生成树算法的应用场景与前提")]),t._v(" "),a("ul",[a("li",[t._v("连通图：在完全连通的情况下，拥有最小生成树；")]),t._v(" "),a("li",[t._v("无向图：最小生成树算法解决的是这样一类问题，从任意一个顶点能到达这个图的其它顶点，且耗费最少，故单向图不适用于这个场景；")]),t._v(" "),a("li",[t._v("带权图：如果无权，可以认为权值是 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mn",[t._v("1")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("1")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.6444em"}}),a("span",{staticClass:"mord"},[t._v("1")])])])]),t._v("，带权的情况应用范围更广。")])]),t._v(" "),a("p",[t._v("在不连通的情况下，每个极大连通子图拥有最小生成树，则形成最小生成森林。为了简化问题，我们这里只谈完全连通情况下的最小生成树。")]),t._v(" "),a("h2",{attrs:{id:"本章参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本章参考资料"}},[t._v("#")]),t._v(" 本章参考资料")]),t._v(" "),a("ul",[a("li",[t._v("《算法（第 4 版）》第 4.3 节 最小生成树（中文版在第 390 页）；")]),t._v(" "),a("li",[t._v("我以前学习的时候写在掘金的笔记："),a("a",{attrs:{href:"https://juejin.im/post/6858481283715039240",target:"_blank",rel:"noopener noreferrer"}},[t._v("最小生成树算法（Prim、Kruskal）"),a("OutboundLink")],1),t._v("；")])])])}),[],!1,null,null,null);a.default=r.exports}}]);