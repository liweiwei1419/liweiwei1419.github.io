(window.webpackJsonp=window.webpackJsonp||[]).push([[161],{941:function(s,e,t){"use strict";t.r(e);var i=t(1),n=Object(i.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("ul",[e("li",[s._v("题目链接："),e("a",{attrs:{href:"https://leetcode-cn.com/problems/design-skiplist/",target:"_blank",rel:"noopener noreferrer"}},[s._v("1206. 设计跳表"),e("OutboundLink")],1),s._v("。")])]),s._v(" "),e("h2",{attrs:{id:"题目描述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[s._v("#")]),s._v(" 题目描述")]),s._v(" "),e("p",[s._v("不使用任何库函数，设计一个跳表。")]),s._v(" "),e("p",[s._v("跳表是在 O(log(n)) 时间内完成增加、删除、搜索操作的数据结构。跳表相比于树堆与红黑树，其功能与性能相当，并且跳表的代码长度相较下更短，其设计思想与链表相似。")]),s._v(" "),e("p",[s._v("例如，一个跳表包含 [30, 40, 50, 60, 70, 90]，然后增加 80、45 到跳表中，以下图的方式操作：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://assets.leetcode.com/uploads/2019/09/27/1506_skiplist.gif",alt:"img",loading:"lazy"}})]),s._v(" "),e("p",[s._v("Artyom Kalinin [CC BY-SA 3.0], via "),e("a",{attrs:{href:"https://commons.wikimedia.org/wiki/File:Skip_list_add_element-en.gif",target:"_blank",rel:"noopener noreferrer"}},[s._v("Wikimedia Commons"),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("跳表中有很多层，每一层是一个短的链表。在第一层的作用下，增加、删除和搜索操作的时间复杂度不超过 O(n)。跳表的每一个操作的平均时间复杂度是 O(log(n))，空间复杂度是 O(n)。")]),s._v(" "),e("p",[s._v("在本题中，你的设计应该要包含这些函数：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("bool search(int target)")]),s._v(" : 返回 target 是否存在于跳表中。")]),s._v(" "),e("li",[e("code",[s._v("void add(int num)")]),s._v(": 插入一个元素到跳表。")]),s._v(" "),e("li",[e("code",[s._v("bool erase(int num)")]),s._v(": 在跳表中删除一个值，如果 "),e("code",[s._v("num")]),s._v(" 不存在，直接返回 false. 如果存在多个 "),e("code",[s._v("num")]),s._v(" ，删除其中任意一个即可。")])]),s._v(" "),e("p",[s._v("了解更多 : https://en.wikipedia.org/wiki/Skip_list")]),s._v(" "),e("p",[s._v("注意，跳表中可能存在多个相同的值，你的代码需要处理这种情况。")]),s._v(" "),e("p",[e("strong",[s._v("样例:")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("Skiplist skiplist = new Skiplist();\n\nskiplist.add(1);\nskiplist.add(2);\nskiplist.add(3);\nskiplist.search(0);   // 返回 false\nskiplist.add(4);\nskiplist.search(1);   // 返回 true\nskiplist.erase(0);    // 返回 false，0 不在跳表中\nskiplist.erase(1);    // 返回 true\nskiplist.search(1);   // 返回 false，1 已被擦除\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("约束条件:")])]),s._v(" "),e("ul",[e("li",[e("code",[s._v("0 <= num, target <= 20000")])]),s._v(" "),e("li",[s._v("最多调用 "),e("code",[s._v("50000")]),s._v(" 次 "),e("code",[s._v("search")]),s._v(", "),e("code",[s._v("add")]),s._v(", 以及 "),e("code",[s._v("erase")]),s._v("操作。")])]),s._v(" "),e("hr"),s._v(" "),e("p",[s._v("这是我见过的讲解最好的跳表 "),e("a",{attrs:{href:"https://www.bilibili.com/video/BV1tK4y1X7de/?spm_id_from=333.788.recommend_more_video.-1",target:"_blank",rel:"noopener noreferrer"}},[s._v("视频"),e("OutboundLink")],1),s._v("，大家可以观看完，理解了跳表的设计思想以后，到「力扣」的评论区，参考适合自己的代码完成这道问题。")])])}),[],!1,null,null,null);e.default=n.exports}}]);