(window.webpackJsonp=window.webpackJsonp||[]).push([[587],{762:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("div",{staticClass:"custom-block info"},[t("p",{staticClass:"custom-block-title"},[s._v("说明")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("while (left < right)")]),s._v(" 表示当 "),t("code",[s._v("left")]),s._v(" 与 "),t("code",[s._v("right")]),s._v(" 重合的时候停止搜索，这样我们就不用思考返回 "),t("code",[s._v("left")]),s._v(" 还是 "),t("code",[s._v("right")]),s._v("；")]),s._v(" "),t("li",[t("code",[s._v("while")]),s._v(" 里面只写两个分支，即只有 "),t("code",[s._v("if")]),s._v(" 和 "),t("code",[s._v("else")]),s._v("，表示：非此即彼，把其中一种情况考虑好，不满足这种情况的区间就是上一个区间的反面区间。")])])]),s._v(" "),t("p",[s._v("这一节只需要大家消化一个知识点：只有分成两个区间，退出循环以后，"),t("code",[s._v("left")]),s._v(" 和 "),t("code",[s._v("right")]),s._v(" 才会重合。")]),s._v(" "),t("p",[s._v("温馨提示：模板代码只是告诉我们所有的二分查找都可以写成以下两种形式。")]),s._v(" "),t("p",[t("strong",[s._v("代码 1")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 目标元素可能存在在区间 [left..right]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" mid "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("判别条件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 下一轮搜索区间 [mid + 1..right]")]),s._v("\n        left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" mid "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 下一轮搜索区间 [left..mid]")]),s._v("\n        right "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" mid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 退出循环以后 left == right 成立")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 视情况判断 nums[left] 是否是我们要找的")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[t("strong",[s._v("代码 2")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 目标元素可能存在在区间 [left..right]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" mid "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" right "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("判别条件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 下一轮搜索区间是 [left..mid - 1]")]),s._v("\n        right "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" mid "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 下一轮搜索区间是 [mid..right]")]),s._v("\n        left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" mid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 退出循环以后 left == right 成立")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 视情况判断 nums[left] 是否是我们要找的")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("div",{staticClass:"custom-block danger"},[t("p",{staticClass:"custom-block-title"},[s._v("模板代码没有告诉我们：")]),s._v(" "),t("ul",[t("li",[s._v("什么时候向左边找、什么时候向右边找；")]),s._v(" "),t("li",[s._v("看到的 "),t("code",[s._v("mid")]),s._v(" 位置的值是保留还是排除。")])]),s._v(" "),t("p",[s._v("这两个问题的答案需要从题目中获得，因此我们必须 "),t("strong",[s._v("认真审题")]),s._v("。")])]),s._v(" "),t("h2",{attrs:{id:"为什么二分查找分三种情况讨论的结果需要合并"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么二分查找分三种情况讨论的结果需要合并"}},[s._v("#")]),s._v(" 为什么二分查找分三种情况讨论的结果需要合并")]),s._v(" "),t("div",{staticClass:"custom-block danger"},[t("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),t("p",[s._v("这里和大家提及一下为什么二分查找虽然可以分三种情况讨论，但是写代码的时候需要合并成两种情况。")])]),s._v(" "),t("div",{staticClass:"custom-block info"},[t("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),t("p",[s._v("如何不合并的话，在最后一轮搜索区间只有两个数的时候，如果不合并有可能会造成 "),t("code",[s._v("left")]),s._v(" 和 "),t("code",[s._v("right")]),s._v(" 在退出以后不能重合。")])]),s._v(" "),t("blockquote",[t("p",[s._v("这一点是我 2021 年在「力扣」第 34 题题解区和网友朋友们的讨论得到的。\n经常和网友讨论问题，会有不少收获。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);