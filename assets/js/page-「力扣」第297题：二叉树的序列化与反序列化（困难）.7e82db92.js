(window.webpackJsonp=window.webpackJsonp||[]).push([[291],{1089:function(e,s,t){"use strict";t.r(s);var a=t(1),n=Object(a.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("ul",[s("li",[e._v("题目链接："),s("a",{attrs:{href:"https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/",target:"_blank",rel:"noopener noreferrer"}},[e._v("297. 二叉树的序列化与反序列化"),s("OutboundLink")],1),e._v("。")])]),e._v(" "),s("h2",{attrs:{id:"题目描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[e._v("#")]),e._v(" 题目描述")]),e._v(" "),s("p",[e._v("序列化是将一个数据结构或者对象转换为连续的比特位的操作，进而可以将转换后的数据存储在一个文件或者内存中，同时也可以通过网络传输到另一个计算机环境，采取相反方式重构得到原数据。")]),e._v(" "),s("p",[e._v("请设计一个算法来实现二叉树的序列化与反序列化。这里不限定你的序列 / 反序列化算法执行逻辑，你只需要保证一个二叉树可以被序列化为一个字符串并且将这个字符串反序列化为原始的树结构。")]),e._v(" "),s("p",[e._v("提示: 输入输出格式与 LeetCode 目前使用的方式一致，详情请参阅 LeetCode 序列化二叉树的格式。你并非必须采取这种方式，你也可以采用其他的方法解决这个问题。")]),e._v(" "),s("p",[s("strong",[e._v("提示:")]),e._v(" 输入输出格式与 LeetCode 目前使用的方式一致，详情请参阅 "),s("a",{attrs:{href:"https://leetcode-cn.com/faq/#binary-tree",target:"_blank",rel:"noopener noreferrer"}},[e._v("LeetCode 序列化二叉树的格式"),s("OutboundLink")],1),e._v("。你并非必须采取这种方式，你也可以采用其他的方法解决这个问题。")]),e._v(" "),s("p",[s("strong",[e._v("示例 1：")])]),e._v(" "),s("p",[s("img",{attrs:{src:"https://assets.leetcode.com/uploads/2020/09/15/serdeser.jpg",alt:"img",loading:"lazy"}})]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("输入：root = [1,2,3,null,null,4,5]\n输出：[1,2,3,null,null,4,5]\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[s("strong",[e._v("示例 2：")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("输入：root = []\n输出：[]\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[s("strong",[e._v("示例 3：")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("输入：root = [1]\n输出：[1]\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[s("strong",[e._v("示例 4：")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("输入：root = [1,2]\n输出：[1,2]\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[s("strong",[e._v("提示：")])]),e._v(" "),s("ul",[s("li",[e._v("树中结点数在范围 "),s("code",[e._v("[0, 10^4]")]),e._v(" 内")]),e._v(" "),s("li",[s("code",[e._v("-1000 <= Node.val <= 1000")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);